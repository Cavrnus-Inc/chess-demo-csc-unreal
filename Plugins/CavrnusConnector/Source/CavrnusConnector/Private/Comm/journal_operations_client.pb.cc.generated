// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: journal_operations_client.proto

#include "journal_operations_client.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace Journal {
PROTOBUF_CONSTEXPR Operation::Operation(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.operationbatch_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.operationexecutionmode_)*/0
  , /*decltype(_impl_.Op_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct OperationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OperationDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~OperationDefaultTypeInternal() {}
  union {
    Operation _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OperationDefaultTypeInternal _Operation_default_instance_;
PROTOBUF_CONSTEXPR OpCreateObject_V2::OpCreateObject_V2(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.newobjectid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.creatorid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.contentid_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct OpCreateObject_V2DefaultTypeInternal {
  PROTOBUF_CONSTEXPR OpCreateObject_V2DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~OpCreateObject_V2DefaultTypeInternal() {}
  union {
    OpCreateObject_V2 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OpCreateObject_V2DefaultTypeInternal _OpCreateObject_V2_default_instance_;
PROTOBUF_CONSTEXPR OpCreateObject_V3::OpCreateObject_V3(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.contextpath_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.creatorid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.contentid_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct OpCreateObject_V3DefaultTypeInternal {
  PROTOBUF_CONSTEXPR OpCreateObject_V3DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~OpCreateObject_V3DefaultTypeInternal() {}
  union {
    OpCreateObject_V3 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OpCreateObject_V3DefaultTypeInternal _OpCreateObject_V3_default_instance_;
PROTOBUF_CONSTEXPR OpCreateObject::OpCreateObject(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.V_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct OpCreateObjectDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OpCreateObjectDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~OpCreateObjectDefaultTypeInternal() {}
  union {
    OpCreateObject _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OpCreateObjectDefaultTypeInternal _OpCreateObject_default_instance_;
}  // namespace Journal
static ::_pb::Metadata file_level_metadata_journal_5foperations_5fclient_2eproto[4];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_journal_5foperations_5fclient_2eproto[1];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_journal_5foperations_5fclient_2eproto = nullptr;

const uint32_t TableStruct_journal_5foperations_5fclient_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::Journal::Operation, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::Journal::Operation, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::Journal::Operation, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Journal::Operation, _impl_.operationexecutionmode_),
  PROTOBUF_FIELD_OFFSET(::Journal::Operation, _impl_.operationbatch_),
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::Journal::Operation, _impl_.Op_),
  1,
  0,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Journal::OpCreateObject_V2, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Journal::OpCreateObject_V2, _impl_.newobjectid_),
  PROTOBUF_FIELD_OFFSET(::Journal::OpCreateObject_V2, _impl_.contentid_),
  PROTOBUF_FIELD_OFFSET(::Journal::OpCreateObject_V2, _impl_.creatorid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Journal::OpCreateObject_V3, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Journal::OpCreateObject_V3, _impl_.contextpath_),
  PROTOBUF_FIELD_OFFSET(::Journal::OpCreateObject_V3, _impl_.contentid_),
  PROTOBUF_FIELD_OFFSET(::Journal::OpCreateObject_V3, _impl_.creatorid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Journal::OpCreateObject, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::Journal::OpCreateObject, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::Journal::OpCreateObject, _impl_.V_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 24, -1, sizeof(::Journal::Operation)},
  { 41, -1, -1, sizeof(::Journal::OpCreateObject_V2)},
  { 50, -1, -1, sizeof(::Journal::OpCreateObject_V3)},
  { 59, -1, -1, sizeof(::Journal::OpCreateObject)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::Journal::_Operation_default_instance_._instance,
  &::Journal::_OpCreateObject_V2_default_instance_._instance,
  &::Journal::_OpCreateObject_V3_default_instance_._instance,
  &::Journal::_OpCreateObject_default_instance_._instance,
};

const char descriptor_table_protodef_journal_5foperations_5fclient_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\037journal_operations_client.proto\022\007Journ"
  "al\032\021journaldata.proto\032\037journal_operation"
  "s_common.proto\"\247\010\n\tOperation\022R\n\026Operatio"
  "nExecutionMode\030d \001(\0162-.Journal.Operation"
  ".OperationExecutionModeEnumH\001\210\001\001\022\033\n\016Oper"
  "ationBatch\030e \001(\tH\002\210\001\001\022)\n\tremoveOps\030\001 \001(\013"
  "2\024.Journal.OpRemoveOpsH\000\022#\n\006line2d\030\005 \001(\013"
  "2\021.Journal.OpLine2dH\000\022#\n\006text2d\030\006 \001(\0132\021."
  "Journal.OpText2dH\000\022/\n\014text2dModify\030[ \001(\013"
  "2\027.Journal.OpText2dModifyH\000\022%\n\007image2d\030\007"
  " \001(\0132\022.Journal.OpImage2dH\000\022#\n\006line3d\030\n \001"
  "(\0132\021.Journal.OpLine3dH\000\022#\n\006text3d\030\013 \001(\0132"
  "\021.Journal.OpText3dH\000\022/\n\014text3dModify\030\\ \001"
  "(\0132\027.Journal.OpText3dModifyH\000\022%\n\007image3d"
  "\030\014 \001(\0132\022.Journal.OpImage3dH\000\022/\n\014createOb"
  "ject\030\024 \001(\0132\027.Journal.OpCreateObjectH\000\0227\n"
  "\020setPartHighlight\030= \001(\0132\033.Journal.OpSetP"
  "artHighlightH\000\022=\n\023updatePropertyValue\030\r "
  "\001(\0132\036.Journal.OpUpdatePropertyValueH\000\0225\n"
  "\017declareProperty\030\016 \001(\0132\032.Journal.OpDecla"
  "rePropertyH\000\0229\n\021userAuthorityData\030\020 \001(\0132"
  "\034.Journal.OpUserAuthorityDataH\000\022)\n\007blind"
  "Op\030F \001(\0132\026.Journal.OpBlindDataOpH\000\"H\n\032Op"
  "erationExecutionModeEnum\022\014\n\010Standard\020\000\022\r"
  "\n\tBlockUndo\020\001\022\r\n\tAutomatic\020\002B\004\n\002OpB\031\n\027_O"
  "perationExecutionModeB\021\n\017_OperationBatch"
  "J\004\010\025\020\026J\004\010\026\020\027J\004\010(\020)J\004\010)\020*J\004\010*\020+J\004\010+\020,J\004\010,"
  "\020-J\004\0102\0203J\004\0103\0204J\004\0104\0205J\004\0105\0206J\004\0107\0208J\004\010U\020VJ\004"
  "\010\017\020\020J\004\010\021\020\022J\004\010]\020^J\004\010\036\020\037J\004\010\037\020 J\004\010<\020=J\004\010Z\020["
  "\"\243\002\n\016OpCreateObject\022(\n\002v2\030\002 \001(\0132\032.Journa"
  "l.OpCreateObject.V2H\000\022(\n\002v3\030\003 \001(\0132\032.Jour"
  "nal.OpCreateObject.V3H\000\032X\n\002V2\022\023\n\013newObje"
  "ctId\030\001 \001(\t\022*\n\tcontentId\030\002 \001(\0132\027.JournalD"
  "ata.ObjectType\022\021\n\tcreatorId\030\007 \001(\t\032X\n\002V3\022"
  "\023\n\013contextPath\030\001 \001(\t\022*\n\tcontentId\030\002 \001(\0132"
  "\027.JournalData.ObjectType\022\021\n\tcreatorId\030\007 "
  "\001(\tB\003\n\001VJ\004\010\001\020\002B\036\252\002\033Collab.Proxy.Comm.Liv"
  "eTypesb\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_journal_5foperations_5fclient_2eproto_deps[2] = {
  &::descriptor_table_journal_5foperations_5fcommon_2eproto,
  &::descriptor_table_journaldata_2eproto,
};
static ::_pbi::once_flag descriptor_table_journal_5foperations_5fclient_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_journal_5foperations_5fclient_2eproto = {
    false, false, 1494, descriptor_table_protodef_journal_5foperations_5fclient_2eproto,
    "journal_operations_client.proto",
    &descriptor_table_journal_5foperations_5fclient_2eproto_once, descriptor_table_journal_5foperations_5fclient_2eproto_deps, 2, 4,
    schemas, file_default_instances, TableStruct_journal_5foperations_5fclient_2eproto::offsets,
    file_level_metadata_journal_5foperations_5fclient_2eproto, file_level_enum_descriptors_journal_5foperations_5fclient_2eproto,
    file_level_service_descriptors_journal_5foperations_5fclient_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_journal_5foperations_5fclient_2eproto_getter() {
  return &descriptor_table_journal_5foperations_5fclient_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_journal_5foperations_5fclient_2eproto(&descriptor_table_journal_5foperations_5fclient_2eproto);
namespace Journal {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Operation_OperationExecutionModeEnum_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_journal_5foperations_5fclient_2eproto);
  return file_level_enum_descriptors_journal_5foperations_5fclient_2eproto[0];
}
bool Operation_OperationExecutionModeEnum_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr Operation_OperationExecutionModeEnum Operation::Standard;
constexpr Operation_OperationExecutionModeEnum Operation::BlockUndo;
constexpr Operation_OperationExecutionModeEnum Operation::Automatic;
constexpr Operation_OperationExecutionModeEnum Operation::OperationExecutionModeEnum_MIN;
constexpr Operation_OperationExecutionModeEnum Operation::OperationExecutionModeEnum_MAX;
constexpr int Operation::OperationExecutionModeEnum_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

// ===================================================================

class Operation::_Internal {
 public:
  using HasBits = decltype(std::declval<Operation>()._impl_._has_bits_);
  static void set_has_operationexecutionmode(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_operationbatch(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::Journal::OpRemoveOps& removeops(const Operation* msg);
  static const ::Journal::OpLine2d& line2d(const Operation* msg);
  static const ::Journal::OpText2d& text2d(const Operation* msg);
  static const ::Journal::OpText2dModify& text2dmodify(const Operation* msg);
  static const ::Journal::OpImage2d& image2d(const Operation* msg);
  static const ::Journal::OpLine3d& line3d(const Operation* msg);
  static const ::Journal::OpText3d& text3d(const Operation* msg);
  static const ::Journal::OpText3dModify& text3dmodify(const Operation* msg);
  static const ::Journal::OpImage3d& image3d(const Operation* msg);
  static const ::Journal::OpCreateObject& createobject(const Operation* msg);
  static const ::Journal::OpSetPartHighlight& setparthighlight(const Operation* msg);
  static const ::Journal::OpUpdatePropertyValue& updatepropertyvalue(const Operation* msg);
  static const ::Journal::OpDeclareProperty& declareproperty(const Operation* msg);
  static const ::Journal::OpUserAuthorityData& userauthoritydata(const Operation* msg);
  static const ::Journal::OpBlindDataOp& blindop(const Operation* msg);
};

const ::Journal::OpRemoveOps&
Operation::_Internal::removeops(const Operation* msg) {
  return *msg->_impl_.Op_.removeops_;
}
const ::Journal::OpLine2d&
Operation::_Internal::line2d(const Operation* msg) {
  return *msg->_impl_.Op_.line2d_;
}
const ::Journal::OpText2d&
Operation::_Internal::text2d(const Operation* msg) {
  return *msg->_impl_.Op_.text2d_;
}
const ::Journal::OpText2dModify&
Operation::_Internal::text2dmodify(const Operation* msg) {
  return *msg->_impl_.Op_.text2dmodify_;
}
const ::Journal::OpImage2d&
Operation::_Internal::image2d(const Operation* msg) {
  return *msg->_impl_.Op_.image2d_;
}
const ::Journal::OpLine3d&
Operation::_Internal::line3d(const Operation* msg) {
  return *msg->_impl_.Op_.line3d_;
}
const ::Journal::OpText3d&
Operation::_Internal::text3d(const Operation* msg) {
  return *msg->_impl_.Op_.text3d_;
}
const ::Journal::OpText3dModify&
Operation::_Internal::text3dmodify(const Operation* msg) {
  return *msg->_impl_.Op_.text3dmodify_;
}
const ::Journal::OpImage3d&
Operation::_Internal::image3d(const Operation* msg) {
  return *msg->_impl_.Op_.image3d_;
}
const ::Journal::OpCreateObject&
Operation::_Internal::createobject(const Operation* msg) {
  return *msg->_impl_.Op_.createobject_;
}
const ::Journal::OpSetPartHighlight&
Operation::_Internal::setparthighlight(const Operation* msg) {
  return *msg->_impl_.Op_.setparthighlight_;
}
const ::Journal::OpUpdatePropertyValue&
Operation::_Internal::updatepropertyvalue(const Operation* msg) {
  return *msg->_impl_.Op_.updatepropertyvalue_;
}
const ::Journal::OpDeclareProperty&
Operation::_Internal::declareproperty(const Operation* msg) {
  return *msg->_impl_.Op_.declareproperty_;
}
const ::Journal::OpUserAuthorityData&
Operation::_Internal::userauthoritydata(const Operation* msg) {
  return *msg->_impl_.Op_.userauthoritydata_;
}
const ::Journal::OpBlindDataOp&
Operation::_Internal::blindop(const Operation* msg) {
  return *msg->_impl_.Op_.blindop_;
}
void Operation::set_allocated_removeops(::Journal::OpRemoveOps* removeops) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Op();
  if (removeops) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(removeops));
    if (message_arena != submessage_arena) {
      removeops = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, removeops, submessage_arena);
    }
    set_has_removeops();
    _impl_.Op_.removeops_ = removeops;
  }
  // @@protoc_insertion_point(field_set_allocated:Journal.Operation.removeOps)
}
void Operation::clear_removeops() {
  if (_internal_has_removeops()) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.Op_.removeops_;
    }
    clear_has_Op();
  }
}
void Operation::set_allocated_line2d(::Journal::OpLine2d* line2d) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Op();
  if (line2d) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(line2d));
    if (message_arena != submessage_arena) {
      line2d = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, line2d, submessage_arena);
    }
    set_has_line2d();
    _impl_.Op_.line2d_ = line2d;
  }
  // @@protoc_insertion_point(field_set_allocated:Journal.Operation.line2d)
}
void Operation::clear_line2d() {
  if (_internal_has_line2d()) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.Op_.line2d_;
    }
    clear_has_Op();
  }
}
void Operation::set_allocated_text2d(::Journal::OpText2d* text2d) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Op();
  if (text2d) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(text2d));
    if (message_arena != submessage_arena) {
      text2d = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, text2d, submessage_arena);
    }
    set_has_text2d();
    _impl_.Op_.text2d_ = text2d;
  }
  // @@protoc_insertion_point(field_set_allocated:Journal.Operation.text2d)
}
void Operation::clear_text2d() {
  if (_internal_has_text2d()) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.Op_.text2d_;
    }
    clear_has_Op();
  }
}
void Operation::set_allocated_text2dmodify(::Journal::OpText2dModify* text2dmodify) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Op();
  if (text2dmodify) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(text2dmodify));
    if (message_arena != submessage_arena) {
      text2dmodify = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, text2dmodify, submessage_arena);
    }
    set_has_text2dmodify();
    _impl_.Op_.text2dmodify_ = text2dmodify;
  }
  // @@protoc_insertion_point(field_set_allocated:Journal.Operation.text2dModify)
}
void Operation::clear_text2dmodify() {
  if (_internal_has_text2dmodify()) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.Op_.text2dmodify_;
    }
    clear_has_Op();
  }
}
void Operation::set_allocated_image2d(::Journal::OpImage2d* image2d) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Op();
  if (image2d) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(image2d));
    if (message_arena != submessage_arena) {
      image2d = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, image2d, submessage_arena);
    }
    set_has_image2d();
    _impl_.Op_.image2d_ = image2d;
  }
  // @@protoc_insertion_point(field_set_allocated:Journal.Operation.image2d)
}
void Operation::clear_image2d() {
  if (_internal_has_image2d()) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.Op_.image2d_;
    }
    clear_has_Op();
  }
}
void Operation::set_allocated_line3d(::Journal::OpLine3d* line3d) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Op();
  if (line3d) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(line3d));
    if (message_arena != submessage_arena) {
      line3d = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, line3d, submessage_arena);
    }
    set_has_line3d();
    _impl_.Op_.line3d_ = line3d;
  }
  // @@protoc_insertion_point(field_set_allocated:Journal.Operation.line3d)
}
void Operation::clear_line3d() {
  if (_internal_has_line3d()) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.Op_.line3d_;
    }
    clear_has_Op();
  }
}
void Operation::set_allocated_text3d(::Journal::OpText3d* text3d) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Op();
  if (text3d) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(text3d));
    if (message_arena != submessage_arena) {
      text3d = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, text3d, submessage_arena);
    }
    set_has_text3d();
    _impl_.Op_.text3d_ = text3d;
  }
  // @@protoc_insertion_point(field_set_allocated:Journal.Operation.text3d)
}
void Operation::clear_text3d() {
  if (_internal_has_text3d()) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.Op_.text3d_;
    }
    clear_has_Op();
  }
}
void Operation::set_allocated_text3dmodify(::Journal::OpText3dModify* text3dmodify) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Op();
  if (text3dmodify) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(text3dmodify));
    if (message_arena != submessage_arena) {
      text3dmodify = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, text3dmodify, submessage_arena);
    }
    set_has_text3dmodify();
    _impl_.Op_.text3dmodify_ = text3dmodify;
  }
  // @@protoc_insertion_point(field_set_allocated:Journal.Operation.text3dModify)
}
void Operation::clear_text3dmodify() {
  if (_internal_has_text3dmodify()) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.Op_.text3dmodify_;
    }
    clear_has_Op();
  }
}
void Operation::set_allocated_image3d(::Journal::OpImage3d* image3d) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Op();
  if (image3d) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(image3d));
    if (message_arena != submessage_arena) {
      image3d = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, image3d, submessage_arena);
    }
    set_has_image3d();
    _impl_.Op_.image3d_ = image3d;
  }
  // @@protoc_insertion_point(field_set_allocated:Journal.Operation.image3d)
}
void Operation::clear_image3d() {
  if (_internal_has_image3d()) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.Op_.image3d_;
    }
    clear_has_Op();
  }
}
void Operation::set_allocated_createobject(::Journal::OpCreateObject* createobject) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Op();
  if (createobject) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(createobject);
    if (message_arena != submessage_arena) {
      createobject = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, createobject, submessage_arena);
    }
    set_has_createobject();
    _impl_.Op_.createobject_ = createobject;
  }
  // @@protoc_insertion_point(field_set_allocated:Journal.Operation.createObject)
}
void Operation::set_allocated_setparthighlight(::Journal::OpSetPartHighlight* setparthighlight) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Op();
  if (setparthighlight) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(setparthighlight));
    if (message_arena != submessage_arena) {
      setparthighlight = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, setparthighlight, submessage_arena);
    }
    set_has_setparthighlight();
    _impl_.Op_.setparthighlight_ = setparthighlight;
  }
  // @@protoc_insertion_point(field_set_allocated:Journal.Operation.setPartHighlight)
}
void Operation::clear_setparthighlight() {
  if (_internal_has_setparthighlight()) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.Op_.setparthighlight_;
    }
    clear_has_Op();
  }
}
void Operation::set_allocated_updatepropertyvalue(::Journal::OpUpdatePropertyValue* updatepropertyvalue) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Op();
  if (updatepropertyvalue) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(updatepropertyvalue));
    if (message_arena != submessage_arena) {
      updatepropertyvalue = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, updatepropertyvalue, submessage_arena);
    }
    set_has_updatepropertyvalue();
    _impl_.Op_.updatepropertyvalue_ = updatepropertyvalue;
  }
  // @@protoc_insertion_point(field_set_allocated:Journal.Operation.updatePropertyValue)
}
void Operation::clear_updatepropertyvalue() {
  if (_internal_has_updatepropertyvalue()) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.Op_.updatepropertyvalue_;
    }
    clear_has_Op();
  }
}
void Operation::set_allocated_declareproperty(::Journal::OpDeclareProperty* declareproperty) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Op();
  if (declareproperty) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(declareproperty));
    if (message_arena != submessage_arena) {
      declareproperty = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, declareproperty, submessage_arena);
    }
    set_has_declareproperty();
    _impl_.Op_.declareproperty_ = declareproperty;
  }
  // @@protoc_insertion_point(field_set_allocated:Journal.Operation.declareProperty)
}
void Operation::clear_declareproperty() {
  if (_internal_has_declareproperty()) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.Op_.declareproperty_;
    }
    clear_has_Op();
  }
}
void Operation::set_allocated_userauthoritydata(::Journal::OpUserAuthorityData* userauthoritydata) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Op();
  if (userauthoritydata) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(userauthoritydata));
    if (message_arena != submessage_arena) {
      userauthoritydata = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, userauthoritydata, submessage_arena);
    }
    set_has_userauthoritydata();
    _impl_.Op_.userauthoritydata_ = userauthoritydata;
  }
  // @@protoc_insertion_point(field_set_allocated:Journal.Operation.userAuthorityData)
}
void Operation::clear_userauthoritydata() {
  if (_internal_has_userauthoritydata()) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.Op_.userauthoritydata_;
    }
    clear_has_Op();
  }
}
void Operation::set_allocated_blindop(::Journal::OpBlindDataOp* blindop) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Op();
  if (blindop) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(blindop));
    if (message_arena != submessage_arena) {
      blindop = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, blindop, submessage_arena);
    }
    set_has_blindop();
    _impl_.Op_.blindop_ = blindop;
  }
  // @@protoc_insertion_point(field_set_allocated:Journal.Operation.blindOp)
}
void Operation::clear_blindop() {
  if (_internal_has_blindop()) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.Op_.blindop_;
    }
    clear_has_Op();
  }
}
Operation::Operation(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Journal.Operation)
}
Operation::Operation(const Operation& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Operation* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.operationbatch_){}
    , decltype(_impl_.operationexecutionmode_){}
    , decltype(_impl_.Op_){}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.operationbatch_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.operationbatch_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_operationbatch()) {
    _this->_impl_.operationbatch_.Set(from._internal_operationbatch(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.operationexecutionmode_ = from._impl_.operationexecutionmode_;
  clear_has_Op();
  switch (from.Op_case()) {
    case kRemoveOps: {
      _this->_internal_mutable_removeops()->::Journal::OpRemoveOps::MergeFrom(
          from._internal_removeops());
      break;
    }
    case kLine2D: {
      _this->_internal_mutable_line2d()->::Journal::OpLine2d::MergeFrom(
          from._internal_line2d());
      break;
    }
    case kText2D: {
      _this->_internal_mutable_text2d()->::Journal::OpText2d::MergeFrom(
          from._internal_text2d());
      break;
    }
    case kText2DModify: {
      _this->_internal_mutable_text2dmodify()->::Journal::OpText2dModify::MergeFrom(
          from._internal_text2dmodify());
      break;
    }
    case kImage2D: {
      _this->_internal_mutable_image2d()->::Journal::OpImage2d::MergeFrom(
          from._internal_image2d());
      break;
    }
    case kLine3D: {
      _this->_internal_mutable_line3d()->::Journal::OpLine3d::MergeFrom(
          from._internal_line3d());
      break;
    }
    case kText3D: {
      _this->_internal_mutable_text3d()->::Journal::OpText3d::MergeFrom(
          from._internal_text3d());
      break;
    }
    case kText3DModify: {
      _this->_internal_mutable_text3dmodify()->::Journal::OpText3dModify::MergeFrom(
          from._internal_text3dmodify());
      break;
    }
    case kImage3D: {
      _this->_internal_mutable_image3d()->::Journal::OpImage3d::MergeFrom(
          from._internal_image3d());
      break;
    }
    case kCreateObject: {
      _this->_internal_mutable_createobject()->::Journal::OpCreateObject::MergeFrom(
          from._internal_createobject());
      break;
    }
    case kSetPartHighlight: {
      _this->_internal_mutable_setparthighlight()->::Journal::OpSetPartHighlight::MergeFrom(
          from._internal_setparthighlight());
      break;
    }
    case kUpdatePropertyValue: {
      _this->_internal_mutable_updatepropertyvalue()->::Journal::OpUpdatePropertyValue::MergeFrom(
          from._internal_updatepropertyvalue());
      break;
    }
    case kDeclareProperty: {
      _this->_internal_mutable_declareproperty()->::Journal::OpDeclareProperty::MergeFrom(
          from._internal_declareproperty());
      break;
    }
    case kUserAuthorityData: {
      _this->_internal_mutable_userauthoritydata()->::Journal::OpUserAuthorityData::MergeFrom(
          from._internal_userauthoritydata());
      break;
    }
    case kBlindOp: {
      _this->_internal_mutable_blindop()->::Journal::OpBlindDataOp::MergeFrom(
          from._internal_blindop());
      break;
    }
    case OP_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:Journal.Operation)
}

inline void Operation::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.operationbatch_){}
    , decltype(_impl_.operationexecutionmode_){0}
    , decltype(_impl_.Op_){}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  _impl_.operationbatch_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.operationbatch_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  clear_has_Op();
}

Operation::~Operation() {
  // @@protoc_insertion_point(destructor:Journal.Operation)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Operation::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.operationbatch_.Destroy();
  if (has_Op()) {
    clear_Op();
  }
}

void Operation::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Operation::clear_Op() {
// @@protoc_insertion_point(one_of_clear_start:Journal.Operation)
  switch (Op_case()) {
    case kRemoveOps: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Op_.removeops_;
      }
      break;
    }
    case kLine2D: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Op_.line2d_;
      }
      break;
    }
    case kText2D: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Op_.text2d_;
      }
      break;
    }
    case kText2DModify: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Op_.text2dmodify_;
      }
      break;
    }
    case kImage2D: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Op_.image2d_;
      }
      break;
    }
    case kLine3D: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Op_.line3d_;
      }
      break;
    }
    case kText3D: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Op_.text3d_;
      }
      break;
    }
    case kText3DModify: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Op_.text3dmodify_;
      }
      break;
    }
    case kImage3D: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Op_.image3d_;
      }
      break;
    }
    case kCreateObject: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Op_.createobject_;
      }
      break;
    }
    case kSetPartHighlight: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Op_.setparthighlight_;
      }
      break;
    }
    case kUpdatePropertyValue: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Op_.updatepropertyvalue_;
      }
      break;
    }
    case kDeclareProperty: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Op_.declareproperty_;
      }
      break;
    }
    case kUserAuthorityData: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Op_.userauthoritydata_;
      }
      break;
    }
    case kBlindOp: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Op_.blindop_;
      }
      break;
    }
    case OP_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = OP_NOT_SET;
}


void Operation::Clear() {
// @@protoc_insertion_point(message_clear_start:Journal.Operation)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.operationbatch_.ClearNonDefaultToEmpty();
  }
  _impl_.operationexecutionmode_ = 0;
  clear_Op();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Operation::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Journal.OpRemoveOps removeOps = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_removeops(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Journal.OpLine2d line2d = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_line2d(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Journal.OpText2d text2d = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_text2d(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Journal.OpImage2d image2d = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_image2d(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Journal.OpLine3d line3d = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_line3d(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Journal.OpText3d text3d = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_text3d(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Journal.OpImage3d image3d = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 98)) {
          ptr = ctx->ParseMessage(_internal_mutable_image3d(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Journal.OpUpdatePropertyValue updatePropertyValue = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_updatepropertyvalue(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Journal.OpDeclareProperty declareProperty = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 114)) {
          ptr = ctx->ParseMessage(_internal_mutable_declareproperty(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Journal.OpUserAuthorityData userAuthorityData = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 130)) {
          ptr = ctx->ParseMessage(_internal_mutable_userauthoritydata(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Journal.OpCreateObject createObject = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 162)) {
          ptr = ctx->ParseMessage(_internal_mutable_createobject(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Journal.OpSetPartHighlight setPartHighlight = 61;
      case 61:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 234)) {
          ptr = ctx->ParseMessage(_internal_mutable_setparthighlight(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Journal.OpBlindDataOp blindOp = 70;
      case 70:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_blindop(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Journal.OpText2dModify text2dModify = 91;
      case 91:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 218)) {
          ptr = ctx->ParseMessage(_internal_mutable_text2dmodify(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Journal.OpText3dModify text3dModify = 92;
      case 92:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 226)) {
          ptr = ctx->ParseMessage(_internal_mutable_text3dmodify(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .Journal.Operation.OperationExecutionModeEnum OperationExecutionMode = 100;
      case 100:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_operationexecutionmode(static_cast<::Journal::Operation_OperationExecutionModeEnum>(val));
        } else
          goto handle_unusual;
        continue;
      // optional string OperationBatch = 101;
      case 101:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_operationbatch();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "Journal.Operation.OperationBatch"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Operation::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Journal.Operation)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Journal.OpRemoveOps removeOps = 1;
  if (_internal_has_removeops()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::removeops(this),
        _Internal::removeops(this).GetCachedSize(), target, stream);
  }

  // .Journal.OpLine2d line2d = 5;
  if (_internal_has_line2d()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::line2d(this),
        _Internal::line2d(this).GetCachedSize(), target, stream);
  }

  // .Journal.OpText2d text2d = 6;
  if (_internal_has_text2d()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::text2d(this),
        _Internal::text2d(this).GetCachedSize(), target, stream);
  }

  // .Journal.OpImage2d image2d = 7;
  if (_internal_has_image2d()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::image2d(this),
        _Internal::image2d(this).GetCachedSize(), target, stream);
  }

  // .Journal.OpLine3d line3d = 10;
  if (_internal_has_line3d()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(10, _Internal::line3d(this),
        _Internal::line3d(this).GetCachedSize(), target, stream);
  }

  // .Journal.OpText3d text3d = 11;
  if (_internal_has_text3d()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(11, _Internal::text3d(this),
        _Internal::text3d(this).GetCachedSize(), target, stream);
  }

  // .Journal.OpImage3d image3d = 12;
  if (_internal_has_image3d()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(12, _Internal::image3d(this),
        _Internal::image3d(this).GetCachedSize(), target, stream);
  }

  // .Journal.OpUpdatePropertyValue updatePropertyValue = 13;
  if (_internal_has_updatepropertyvalue()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(13, _Internal::updatepropertyvalue(this),
        _Internal::updatepropertyvalue(this).GetCachedSize(), target, stream);
  }

  // .Journal.OpDeclareProperty declareProperty = 14;
  if (_internal_has_declareproperty()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(14, _Internal::declareproperty(this),
        _Internal::declareproperty(this).GetCachedSize(), target, stream);
  }

  // .Journal.OpUserAuthorityData userAuthorityData = 16;
  if (_internal_has_userauthoritydata()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(16, _Internal::userauthoritydata(this),
        _Internal::userauthoritydata(this).GetCachedSize(), target, stream);
  }

  // .Journal.OpCreateObject createObject = 20;
  if (_internal_has_createobject()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(20, _Internal::createobject(this),
        _Internal::createobject(this).GetCachedSize(), target, stream);
  }

  // .Journal.OpSetPartHighlight setPartHighlight = 61;
  if (_internal_has_setparthighlight()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(61, _Internal::setparthighlight(this),
        _Internal::setparthighlight(this).GetCachedSize(), target, stream);
  }

  // .Journal.OpBlindDataOp blindOp = 70;
  if (_internal_has_blindop()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(70, _Internal::blindop(this),
        _Internal::blindop(this).GetCachedSize(), target, stream);
  }

  // .Journal.OpText2dModify text2dModify = 91;
  if (_internal_has_text2dmodify()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(91, _Internal::text2dmodify(this),
        _Internal::text2dmodify(this).GetCachedSize(), target, stream);
  }

  // .Journal.OpText3dModify text3dModify = 92;
  if (_internal_has_text3dmodify()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(92, _Internal::text3dmodify(this),
        _Internal::text3dmodify(this).GetCachedSize(), target, stream);
  }

  // optional .Journal.Operation.OperationExecutionModeEnum OperationExecutionMode = 100;
  if (_internal_has_operationexecutionmode()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      100, this->_internal_operationexecutionmode(), target);
  }

  // optional string OperationBatch = 101;
  if (_internal_has_operationbatch()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_operationbatch().data(), static_cast<int>(this->_internal_operationbatch().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Journal.Operation.OperationBatch");
    target = stream->WriteStringMaybeAliased(
        101, this->_internal_operationbatch(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Journal.Operation)
  return target;
}

size_t Operation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Journal.Operation)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string OperationBatch = 101;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_operationbatch());
    }

    // optional .Journal.Operation.OperationExecutionModeEnum OperationExecutionMode = 100;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_operationexecutionmode());
    }

  }
  switch (Op_case()) {
    // .Journal.OpRemoveOps removeOps = 1;
    case kRemoveOps: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Op_.removeops_);
      break;
    }
    // .Journal.OpLine2d line2d = 5;
    case kLine2D: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Op_.line2d_);
      break;
    }
    // .Journal.OpText2d text2d = 6;
    case kText2D: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Op_.text2d_);
      break;
    }
    // .Journal.OpText2dModify text2dModify = 91;
    case kText2DModify: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Op_.text2dmodify_);
      break;
    }
    // .Journal.OpImage2d image2d = 7;
    case kImage2D: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Op_.image2d_);
      break;
    }
    // .Journal.OpLine3d line3d = 10;
    case kLine3D: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Op_.line3d_);
      break;
    }
    // .Journal.OpText3d text3d = 11;
    case kText3D: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Op_.text3d_);
      break;
    }
    // .Journal.OpText3dModify text3dModify = 92;
    case kText3DModify: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Op_.text3dmodify_);
      break;
    }
    // .Journal.OpImage3d image3d = 12;
    case kImage3D: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Op_.image3d_);
      break;
    }
    // .Journal.OpCreateObject createObject = 20;
    case kCreateObject: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Op_.createobject_);
      break;
    }
    // .Journal.OpSetPartHighlight setPartHighlight = 61;
    case kSetPartHighlight: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Op_.setparthighlight_);
      break;
    }
    // .Journal.OpUpdatePropertyValue updatePropertyValue = 13;
    case kUpdatePropertyValue: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Op_.updatepropertyvalue_);
      break;
    }
    // .Journal.OpDeclareProperty declareProperty = 14;
    case kDeclareProperty: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Op_.declareproperty_);
      break;
    }
    // .Journal.OpUserAuthorityData userAuthorityData = 16;
    case kUserAuthorityData: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Op_.userauthoritydata_);
      break;
    }
    // .Journal.OpBlindDataOp blindOp = 70;
    case kBlindOp: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Op_.blindop_);
      break;
    }
    case OP_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Operation::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Operation::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Operation::GetClassData() const { return &_class_data_; }


void Operation::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Operation*>(&to_msg);
  auto& from = static_cast<const Operation&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Journal.Operation)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_operationbatch(from._internal_operationbatch());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.operationexecutionmode_ = from._impl_.operationexecutionmode_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  switch (from.Op_case()) {
    case kRemoveOps: {
      _this->_internal_mutable_removeops()->::Journal::OpRemoveOps::MergeFrom(
          from._internal_removeops());
      break;
    }
    case kLine2D: {
      _this->_internal_mutable_line2d()->::Journal::OpLine2d::MergeFrom(
          from._internal_line2d());
      break;
    }
    case kText2D: {
      _this->_internal_mutable_text2d()->::Journal::OpText2d::MergeFrom(
          from._internal_text2d());
      break;
    }
    case kText2DModify: {
      _this->_internal_mutable_text2dmodify()->::Journal::OpText2dModify::MergeFrom(
          from._internal_text2dmodify());
      break;
    }
    case kImage2D: {
      _this->_internal_mutable_image2d()->::Journal::OpImage2d::MergeFrom(
          from._internal_image2d());
      break;
    }
    case kLine3D: {
      _this->_internal_mutable_line3d()->::Journal::OpLine3d::MergeFrom(
          from._internal_line3d());
      break;
    }
    case kText3D: {
      _this->_internal_mutable_text3d()->::Journal::OpText3d::MergeFrom(
          from._internal_text3d());
      break;
    }
    case kText3DModify: {
      _this->_internal_mutable_text3dmodify()->::Journal::OpText3dModify::MergeFrom(
          from._internal_text3dmodify());
      break;
    }
    case kImage3D: {
      _this->_internal_mutable_image3d()->::Journal::OpImage3d::MergeFrom(
          from._internal_image3d());
      break;
    }
    case kCreateObject: {
      _this->_internal_mutable_createobject()->::Journal::OpCreateObject::MergeFrom(
          from._internal_createobject());
      break;
    }
    case kSetPartHighlight: {
      _this->_internal_mutable_setparthighlight()->::Journal::OpSetPartHighlight::MergeFrom(
          from._internal_setparthighlight());
      break;
    }
    case kUpdatePropertyValue: {
      _this->_internal_mutable_updatepropertyvalue()->::Journal::OpUpdatePropertyValue::MergeFrom(
          from._internal_updatepropertyvalue());
      break;
    }
    case kDeclareProperty: {
      _this->_internal_mutable_declareproperty()->::Journal::OpDeclareProperty::MergeFrom(
          from._internal_declareproperty());
      break;
    }
    case kUserAuthorityData: {
      _this->_internal_mutable_userauthoritydata()->::Journal::OpUserAuthorityData::MergeFrom(
          from._internal_userauthoritydata());
      break;
    }
    case kBlindOp: {
      _this->_internal_mutable_blindop()->::Journal::OpBlindDataOp::MergeFrom(
          from._internal_blindop());
      break;
    }
    case OP_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Operation::CopyFrom(const Operation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Journal.Operation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Operation::IsInitialized() const {
  return true;
}

void Operation::InternalSwap(Operation* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.operationbatch_, lhs_arena,
      &other->_impl_.operationbatch_, rhs_arena
  );
  swap(_impl_.operationexecutionmode_, other->_impl_.operationexecutionmode_);
  swap(_impl_.Op_, other->_impl_.Op_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata Operation::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_journal_5foperations_5fclient_2eproto_getter, &descriptor_table_journal_5foperations_5fclient_2eproto_once,
      file_level_metadata_journal_5foperations_5fclient_2eproto[0]);
}

// ===================================================================

class OpCreateObject_V2::_Internal {
 public:
  static const ::JournalData::ObjectType& contentid(const OpCreateObject_V2* msg);
};

const ::JournalData::ObjectType&
OpCreateObject_V2::_Internal::contentid(const OpCreateObject_V2* msg) {
  return *msg->_impl_.contentid_;
}
void OpCreateObject_V2::clear_contentid() {
  if (GetArenaForAllocation() == nullptr && _impl_.contentid_ != nullptr) {
    delete _impl_.contentid_;
  }
  _impl_.contentid_ = nullptr;
}
OpCreateObject_V2::OpCreateObject_V2(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Journal.OpCreateObject.V2)
}
OpCreateObject_V2::OpCreateObject_V2(const OpCreateObject_V2& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  OpCreateObject_V2* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.newobjectid_){}
    , decltype(_impl_.creatorid_){}
    , decltype(_impl_.contentid_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.newobjectid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.newobjectid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_newobjectid().empty()) {
    _this->_impl_.newobjectid_.Set(from._internal_newobjectid(), 
      _this->GetArenaForAllocation());
  }
  _impl_.creatorid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.creatorid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_creatorid().empty()) {
    _this->_impl_.creatorid_.Set(from._internal_creatorid(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_contentid()) {
    _this->_impl_.contentid_ = new ::JournalData::ObjectType(*from._impl_.contentid_);
  }
  // @@protoc_insertion_point(copy_constructor:Journal.OpCreateObject.V2)
}

inline void OpCreateObject_V2::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.newobjectid_){}
    , decltype(_impl_.creatorid_){}
    , decltype(_impl_.contentid_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.newobjectid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.newobjectid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.creatorid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.creatorid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

OpCreateObject_V2::~OpCreateObject_V2() {
  // @@protoc_insertion_point(destructor:Journal.OpCreateObject.V2)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void OpCreateObject_V2::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.newobjectid_.Destroy();
  _impl_.creatorid_.Destroy();
  if (this != internal_default_instance()) delete _impl_.contentid_;
}

void OpCreateObject_V2::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void OpCreateObject_V2::Clear() {
// @@protoc_insertion_point(message_clear_start:Journal.OpCreateObject.V2)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.newobjectid_.ClearToEmpty();
  _impl_.creatorid_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.contentid_ != nullptr) {
    delete _impl_.contentid_;
  }
  _impl_.contentid_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OpCreateObject_V2::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string newObjectId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_newobjectid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "Journal.OpCreateObject.V2.newObjectId"));
        } else
          goto handle_unusual;
        continue;
      // .JournalData.ObjectType contentId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_contentid(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string creatorId = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_creatorid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "Journal.OpCreateObject.V2.creatorId"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* OpCreateObject_V2::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Journal.OpCreateObject.V2)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string newObjectId = 1;
  if (!this->_internal_newobjectid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_newobjectid().data(), static_cast<int>(this->_internal_newobjectid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Journal.OpCreateObject.V2.newObjectId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_newobjectid(), target);
  }

  // .JournalData.ObjectType contentId = 2;
  if (this->_internal_has_contentid()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::contentid(this),
        _Internal::contentid(this).GetCachedSize(), target, stream);
  }

  // string creatorId = 7;
  if (!this->_internal_creatorid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_creatorid().data(), static_cast<int>(this->_internal_creatorid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Journal.OpCreateObject.V2.creatorId");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_creatorid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Journal.OpCreateObject.V2)
  return target;
}

size_t OpCreateObject_V2::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Journal.OpCreateObject.V2)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string newObjectId = 1;
  if (!this->_internal_newobjectid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_newobjectid());
  }

  // string creatorId = 7;
  if (!this->_internal_creatorid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_creatorid());
  }

  // .JournalData.ObjectType contentId = 2;
  if (this->_internal_has_contentid()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.contentid_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData OpCreateObject_V2::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    OpCreateObject_V2::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*OpCreateObject_V2::GetClassData() const { return &_class_data_; }


void OpCreateObject_V2::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<OpCreateObject_V2*>(&to_msg);
  auto& from = static_cast<const OpCreateObject_V2&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Journal.OpCreateObject.V2)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_newobjectid().empty()) {
    _this->_internal_set_newobjectid(from._internal_newobjectid());
  }
  if (!from._internal_creatorid().empty()) {
    _this->_internal_set_creatorid(from._internal_creatorid());
  }
  if (from._internal_has_contentid()) {
    _this->_internal_mutable_contentid()->::JournalData::ObjectType::MergeFrom(
        from._internal_contentid());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void OpCreateObject_V2::CopyFrom(const OpCreateObject_V2& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Journal.OpCreateObject.V2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpCreateObject_V2::IsInitialized() const {
  return true;
}

void OpCreateObject_V2::InternalSwap(OpCreateObject_V2* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.newobjectid_, lhs_arena,
      &other->_impl_.newobjectid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.creatorid_, lhs_arena,
      &other->_impl_.creatorid_, rhs_arena
  );
  swap(_impl_.contentid_, other->_impl_.contentid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata OpCreateObject_V2::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_journal_5foperations_5fclient_2eproto_getter, &descriptor_table_journal_5foperations_5fclient_2eproto_once,
      file_level_metadata_journal_5foperations_5fclient_2eproto[1]);
}

// ===================================================================

class OpCreateObject_V3::_Internal {
 public:
  static const ::JournalData::ObjectType& contentid(const OpCreateObject_V3* msg);
};

const ::JournalData::ObjectType&
OpCreateObject_V3::_Internal::contentid(const OpCreateObject_V3* msg) {
  return *msg->_impl_.contentid_;
}
void OpCreateObject_V3::clear_contentid() {
  if (GetArenaForAllocation() == nullptr && _impl_.contentid_ != nullptr) {
    delete _impl_.contentid_;
  }
  _impl_.contentid_ = nullptr;
}
OpCreateObject_V3::OpCreateObject_V3(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Journal.OpCreateObject.V3)
}
OpCreateObject_V3::OpCreateObject_V3(const OpCreateObject_V3& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  OpCreateObject_V3* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.contextpath_){}
    , decltype(_impl_.creatorid_){}
    , decltype(_impl_.contentid_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.contextpath_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.contextpath_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_contextpath().empty()) {
    _this->_impl_.contextpath_.Set(from._internal_contextpath(), 
      _this->GetArenaForAllocation());
  }
  _impl_.creatorid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.creatorid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_creatorid().empty()) {
    _this->_impl_.creatorid_.Set(from._internal_creatorid(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_contentid()) {
    _this->_impl_.contentid_ = new ::JournalData::ObjectType(*from._impl_.contentid_);
  }
  // @@protoc_insertion_point(copy_constructor:Journal.OpCreateObject.V3)
}

inline void OpCreateObject_V3::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.contextpath_){}
    , decltype(_impl_.creatorid_){}
    , decltype(_impl_.contentid_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.contextpath_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.contextpath_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.creatorid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.creatorid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

OpCreateObject_V3::~OpCreateObject_V3() {
  // @@protoc_insertion_point(destructor:Journal.OpCreateObject.V3)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void OpCreateObject_V3::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.contextpath_.Destroy();
  _impl_.creatorid_.Destroy();
  if (this != internal_default_instance()) delete _impl_.contentid_;
}

void OpCreateObject_V3::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void OpCreateObject_V3::Clear() {
// @@protoc_insertion_point(message_clear_start:Journal.OpCreateObject.V3)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.contextpath_.ClearToEmpty();
  _impl_.creatorid_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.contentid_ != nullptr) {
    delete _impl_.contentid_;
  }
  _impl_.contentid_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OpCreateObject_V3::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string contextPath = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_contextpath();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "Journal.OpCreateObject.V3.contextPath"));
        } else
          goto handle_unusual;
        continue;
      // .JournalData.ObjectType contentId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_contentid(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string creatorId = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_creatorid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "Journal.OpCreateObject.V3.creatorId"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* OpCreateObject_V3::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Journal.OpCreateObject.V3)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string contextPath = 1;
  if (!this->_internal_contextpath().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_contextpath().data(), static_cast<int>(this->_internal_contextpath().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Journal.OpCreateObject.V3.contextPath");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_contextpath(), target);
  }

  // .JournalData.ObjectType contentId = 2;
  if (this->_internal_has_contentid()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::contentid(this),
        _Internal::contentid(this).GetCachedSize(), target, stream);
  }

  // string creatorId = 7;
  if (!this->_internal_creatorid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_creatorid().data(), static_cast<int>(this->_internal_creatorid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Journal.OpCreateObject.V3.creatorId");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_creatorid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Journal.OpCreateObject.V3)
  return target;
}

size_t OpCreateObject_V3::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Journal.OpCreateObject.V3)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string contextPath = 1;
  if (!this->_internal_contextpath().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_contextpath());
  }

  // string creatorId = 7;
  if (!this->_internal_creatorid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_creatorid());
  }

  // .JournalData.ObjectType contentId = 2;
  if (this->_internal_has_contentid()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.contentid_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData OpCreateObject_V3::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    OpCreateObject_V3::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*OpCreateObject_V3::GetClassData() const { return &_class_data_; }


void OpCreateObject_V3::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<OpCreateObject_V3*>(&to_msg);
  auto& from = static_cast<const OpCreateObject_V3&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Journal.OpCreateObject.V3)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_contextpath().empty()) {
    _this->_internal_set_contextpath(from._internal_contextpath());
  }
  if (!from._internal_creatorid().empty()) {
    _this->_internal_set_creatorid(from._internal_creatorid());
  }
  if (from._internal_has_contentid()) {
    _this->_internal_mutable_contentid()->::JournalData::ObjectType::MergeFrom(
        from._internal_contentid());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void OpCreateObject_V3::CopyFrom(const OpCreateObject_V3& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Journal.OpCreateObject.V3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpCreateObject_V3::IsInitialized() const {
  return true;
}

void OpCreateObject_V3::InternalSwap(OpCreateObject_V3* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.contextpath_, lhs_arena,
      &other->_impl_.contextpath_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.creatorid_, lhs_arena,
      &other->_impl_.creatorid_, rhs_arena
  );
  swap(_impl_.contentid_, other->_impl_.contentid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata OpCreateObject_V3::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_journal_5foperations_5fclient_2eproto_getter, &descriptor_table_journal_5foperations_5fclient_2eproto_once,
      file_level_metadata_journal_5foperations_5fclient_2eproto[2]);
}

// ===================================================================

class OpCreateObject::_Internal {
 public:
  static const ::Journal::OpCreateObject_V2& v2(const OpCreateObject* msg);
  static const ::Journal::OpCreateObject_V3& v3(const OpCreateObject* msg);
};

const ::Journal::OpCreateObject_V2&
OpCreateObject::_Internal::v2(const OpCreateObject* msg) {
  return *msg->_impl_.V_.v2_;
}
const ::Journal::OpCreateObject_V3&
OpCreateObject::_Internal::v3(const OpCreateObject* msg) {
  return *msg->_impl_.V_.v3_;
}
void OpCreateObject::set_allocated_v2(::Journal::OpCreateObject_V2* v2) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_V();
  if (v2) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(v2);
    if (message_arena != submessage_arena) {
      v2 = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, v2, submessage_arena);
    }
    set_has_v2();
    _impl_.V_.v2_ = v2;
  }
  // @@protoc_insertion_point(field_set_allocated:Journal.OpCreateObject.v2)
}
void OpCreateObject::set_allocated_v3(::Journal::OpCreateObject_V3* v3) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_V();
  if (v3) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(v3);
    if (message_arena != submessage_arena) {
      v3 = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, v3, submessage_arena);
    }
    set_has_v3();
    _impl_.V_.v3_ = v3;
  }
  // @@protoc_insertion_point(field_set_allocated:Journal.OpCreateObject.v3)
}
OpCreateObject::OpCreateObject(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Journal.OpCreateObject)
}
OpCreateObject::OpCreateObject(const OpCreateObject& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  OpCreateObject* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.V_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_V();
  switch (from.V_case()) {
    case kV2: {
      _this->_internal_mutable_v2()->::Journal::OpCreateObject_V2::MergeFrom(
          from._internal_v2());
      break;
    }
    case kV3: {
      _this->_internal_mutable_v3()->::Journal::OpCreateObject_V3::MergeFrom(
          from._internal_v3());
      break;
    }
    case V_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:Journal.OpCreateObject)
}

inline void OpCreateObject::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.V_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  clear_has_V();
}

OpCreateObject::~OpCreateObject() {
  // @@protoc_insertion_point(destructor:Journal.OpCreateObject)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void OpCreateObject::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_V()) {
    clear_V();
  }
}

void OpCreateObject::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void OpCreateObject::clear_V() {
// @@protoc_insertion_point(one_of_clear_start:Journal.OpCreateObject)
  switch (V_case()) {
    case kV2: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.V_.v2_;
      }
      break;
    }
    case kV3: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.V_.v3_;
      }
      break;
    }
    case V_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = V_NOT_SET;
}


void OpCreateObject::Clear() {
// @@protoc_insertion_point(message_clear_start:Journal.OpCreateObject)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_V();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OpCreateObject::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Journal.OpCreateObject.V2 v2 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_v2(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Journal.OpCreateObject.V3 v3 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_v3(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* OpCreateObject::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Journal.OpCreateObject)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Journal.OpCreateObject.V2 v2 = 2;
  if (_internal_has_v2()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::v2(this),
        _Internal::v2(this).GetCachedSize(), target, stream);
  }

  // .Journal.OpCreateObject.V3 v3 = 3;
  if (_internal_has_v3()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::v3(this),
        _Internal::v3(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Journal.OpCreateObject)
  return target;
}

size_t OpCreateObject::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Journal.OpCreateObject)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (V_case()) {
    // .Journal.OpCreateObject.V2 v2 = 2;
    case kV2: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.V_.v2_);
      break;
    }
    // .Journal.OpCreateObject.V3 v3 = 3;
    case kV3: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.V_.v3_);
      break;
    }
    case V_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData OpCreateObject::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    OpCreateObject::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*OpCreateObject::GetClassData() const { return &_class_data_; }


void OpCreateObject::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<OpCreateObject*>(&to_msg);
  auto& from = static_cast<const OpCreateObject&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Journal.OpCreateObject)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.V_case()) {
    case kV2: {
      _this->_internal_mutable_v2()->::Journal::OpCreateObject_V2::MergeFrom(
          from._internal_v2());
      break;
    }
    case kV3: {
      _this->_internal_mutable_v3()->::Journal::OpCreateObject_V3::MergeFrom(
          from._internal_v3());
      break;
    }
    case V_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void OpCreateObject::CopyFrom(const OpCreateObject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Journal.OpCreateObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpCreateObject::IsInitialized() const {
  return true;
}

void OpCreateObject::InternalSwap(OpCreateObject* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.V_, other->_impl_.V_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata OpCreateObject::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_journal_5foperations_5fclient_2eproto_getter, &descriptor_table_journal_5foperations_5fclient_2eproto_once,
      file_level_metadata_journal_5foperations_5fclient_2eproto[3]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace Journal
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::Journal::Operation*
Arena::CreateMaybeMessage< ::Journal::Operation >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Journal::Operation >(arena);
}
template<> PROTOBUF_NOINLINE ::Journal::OpCreateObject_V2*
Arena::CreateMaybeMessage< ::Journal::OpCreateObject_V2 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Journal::OpCreateObject_V2 >(arena);
}
template<> PROTOBUF_NOINLINE ::Journal::OpCreateObject_V3*
Arena::CreateMaybeMessage< ::Journal::OpCreateObject_V3 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Journal::OpCreateObject_V3 >(arena);
}
template<> PROTOBUF_NOINLINE ::Journal::OpCreateObject*
Arena::CreateMaybeMessage< ::Journal::OpCreateObject >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Journal::OpCreateObject >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>

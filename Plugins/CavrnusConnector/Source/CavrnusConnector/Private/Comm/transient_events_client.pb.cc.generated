// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: transient_events_client.proto

#include "transient_events_client.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace Transient {
PROTOBUF_CONSTEXPR EvTransientJournalUpdate_V1::EvTransientJournalUpdate_V1(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.uniqueid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.Op_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct EvTransientJournalUpdate_V1DefaultTypeInternal {
  PROTOBUF_CONSTEXPR EvTransientJournalUpdate_V1DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~EvTransientJournalUpdate_V1DefaultTypeInternal() {}
  union {
    EvTransientJournalUpdate_V1 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EvTransientJournalUpdate_V1DefaultTypeInternal _EvTransientJournalUpdate_V1_default_instance_;
PROTOBUF_CONSTEXPR EvTransientJournalUpdate::EvTransientJournalUpdate(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.V_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct EvTransientJournalUpdateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EvTransientJournalUpdateDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~EvTransientJournalUpdateDefaultTypeInternal() {}
  union {
    EvTransientJournalUpdate _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EvTransientJournalUpdateDefaultTypeInternal _EvTransientJournalUpdate_default_instance_;
PROTOBUF_CONSTEXPR EvCopresence_V3::EvCopresence_V3(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.fromconnectionid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.followingconnectionid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.root_)*/nullptr
  , /*decltype(_impl_.leftcontroller_)*/nullptr
  , /*decltype(_impl_.rightcontroller_)*/nullptr
  , /*decltype(_impl_.view_)*/nullptr
  , /*decltype(_impl_.head_)*/nullptr
  , /*decltype(_impl_.scale_)*/0} {}
struct EvCopresence_V3DefaultTypeInternal {
  PROTOBUF_CONSTEXPR EvCopresence_V3DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~EvCopresence_V3DefaultTypeInternal() {}
  union {
    EvCopresence_V3 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EvCopresence_V3DefaultTypeInternal _EvCopresence_V3_default_instance_;
PROTOBUF_CONSTEXPR EvCopresence::EvCopresence(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.V_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct EvCopresenceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EvCopresenceDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~EvCopresenceDefaultTypeInternal() {}
  union {
    EvCopresence _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EvCopresenceDefaultTypeInternal _EvCopresence_default_instance_;
PROTOBUF_CONSTEXPR AvatarPositionV3::AvatarPositionV3(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.position_)*/nullptr
  , /*decltype(_impl_.rotation_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AvatarPositionV3DefaultTypeInternal {
  PROTOBUF_CONSTEXPR AvatarPositionV3DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AvatarPositionV3DefaultTypeInternal() {}
  union {
    AvatarPositionV3 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AvatarPositionV3DefaultTypeInternal _AvatarPositionV3_default_instance_;
PROTOBUF_CONSTEXPR AvatarControllerV3::AvatarControllerV3(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.location_)*/nullptr
  , /*decltype(_impl_.beamtarget_)*/nullptr} {}
struct AvatarControllerV3DefaultTypeInternal {
  PROTOBUF_CONSTEXPR AvatarControllerV3DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AvatarControllerV3DefaultTypeInternal() {}
  union {
    AvatarControllerV3 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AvatarControllerV3DefaultTypeInternal _AvatarControllerV3_default_instance_;
PROTOBUF_CONSTEXPR AvatarRootV3::AvatarRootV3(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.animationstatecustom_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.location_)*/nullptr
  , /*decltype(_impl_.animationstate_)*/0} {}
struct AvatarRootV3DefaultTypeInternal {
  PROTOBUF_CONSTEXPR AvatarRootV3DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AvatarRootV3DefaultTypeInternal() {}
  union {
    AvatarRootV3 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AvatarRootV3DefaultTypeInternal _AvatarRootV3_default_instance_;
}  // namespace Transient
static ::_pb::Metadata file_level_metadata_transient_5fevents_5fclient_2eproto[7];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_transient_5fevents_5fclient_2eproto[1];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_transient_5fevents_5fclient_2eproto = nullptr;

const uint32_t TableStruct_transient_5fevents_5fclient_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Transient::EvTransientJournalUpdate_V1, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::Transient::EvTransientJournalUpdate_V1, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Transient::EvTransientJournalUpdate_V1, _impl_.uniqueid_),
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::Transient::EvTransientJournalUpdate_V1, _impl_.Op_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Transient::EvTransientJournalUpdate, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::Transient::EvTransientJournalUpdate, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::Transient::EvTransientJournalUpdate, _impl_.V_),
  PROTOBUF_FIELD_OFFSET(::Transient::EvCopresence_V3, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::Transient::EvCopresence_V3, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Transient::EvCopresence_V3, _impl_.fromconnectionid_),
  PROTOBUF_FIELD_OFFSET(::Transient::EvCopresence_V3, _impl_.followingconnectionid_),
  PROTOBUF_FIELD_OFFSET(::Transient::EvCopresence_V3, _impl_.scale_),
  PROTOBUF_FIELD_OFFSET(::Transient::EvCopresence_V3, _impl_.root_),
  PROTOBUF_FIELD_OFFSET(::Transient::EvCopresence_V3, _impl_.leftcontroller_),
  PROTOBUF_FIELD_OFFSET(::Transient::EvCopresence_V3, _impl_.rightcontroller_),
  PROTOBUF_FIELD_OFFSET(::Transient::EvCopresence_V3, _impl_.view_),
  PROTOBUF_FIELD_OFFSET(::Transient::EvCopresence_V3, _impl_.head_),
  ~0u,
  0,
  6,
  1,
  2,
  3,
  4,
  5,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Transient::EvCopresence, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::Transient::EvCopresence, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::Transient::EvCopresence, _impl_.V_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Transient::AvatarPositionV3, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Transient::AvatarPositionV3, _impl_.position_),
  PROTOBUF_FIELD_OFFSET(::Transient::AvatarPositionV3, _impl_.rotation_),
  PROTOBUF_FIELD_OFFSET(::Transient::AvatarControllerV3, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::Transient::AvatarControllerV3, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Transient::AvatarControllerV3, _impl_.location_),
  PROTOBUF_FIELD_OFFSET(::Transient::AvatarControllerV3, _impl_.beamtarget_),
  ~0u,
  0,
  PROTOBUF_FIELD_OFFSET(::Transient::AvatarRootV3, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::Transient::AvatarRootV3, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Transient::AvatarRootV3, _impl_.location_),
  PROTOBUF_FIELD_OFFSET(::Transient::AvatarRootV3, _impl_.animationstate_),
  PROTOBUF_FIELD_OFFSET(::Transient::AvatarRootV3, _impl_.animationstatecustom_),
  ~0u,
  1,
  0,
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::Transient::EvTransientJournalUpdate_V1)},
  { 19, -1, -1, sizeof(::Transient::EvTransientJournalUpdate)},
  { 27, 41, -1, sizeof(::Transient::EvCopresence_V3)},
  { 49, -1, -1, sizeof(::Transient::EvCopresence)},
  { 57, -1, -1, sizeof(::Transient::AvatarPositionV3)},
  { 65, 73, -1, sizeof(::Transient::AvatarControllerV3)},
  { 75, 84, -1, sizeof(::Transient::AvatarRootV3)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::Transient::_EvTransientJournalUpdate_V1_default_instance_._instance,
  &::Transient::_EvTransientJournalUpdate_default_instance_._instance,
  &::Transient::_EvCopresence_V3_default_instance_._instance,
  &::Transient::_EvCopresence_default_instance_._instance,
  &::Transient::_AvatarPositionV3_default_instance_._instance,
  &::Transient::_AvatarControllerV3_default_instance_._instance,
  &::Transient::_AvatarRootV3_default_instance_._instance,
};

const char descriptor_table_protodef_transient_5fevents_5fclient_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\035transient_events_client.proto\022\tTransie"
  "nt\032\037journal_operations_client.proto\032\037jou"
  "rnal_operations_common.proto\032\014common.pro"
  "to\"\247\005\n\030EvTransientJournalUpdate\0224\n\002v1\030\001 "
  "\001(\0132&.Transient.EvTransientJournalUpdate"
  ".V1H\000\032\231\004\n\002V1\022\020\n\010uniqueId\030\003 \001(\t\022#\n\006line2d"
  "\030\n \001(\0132\021.Journal.OpLine2dH\000\022#\n\006text2d\030\013 "
  "\001(\0132\021.Journal.OpText2dH\000\022%\n\007image2d\030\014 \001("
  "\0132\022.Journal.OpImage2dH\000\022#\n\006line3d\030\024 \001(\0132"
  "\021.Journal.OpLine3dH\000\022#\n\006text3d\030\025 \001(\0132\021.J"
  "ournal.OpText3dH\000\022%\n\007image3d\030\026 \001(\0132\022.Jou"
  "rnal.OpImage3dH\000\022/\n\014createObject\030  \001(\0132\027"
  ".Journal.OpCreateObjectH\000\0227\n\020setPartHigh"
  "light\030= \001(\0132\033.Journal.OpSetPartHighlight"
  "H\000\022=\n\023updatePropertyValue\030\r \001(\0132\036.Journa"
  "l.OpUpdatePropertyValueH\000\0225\n\017declareProp"
  "erty\030\016 \001(\0132\032.Journal.OpDeclarePropertyH\000"
  "\0229\n\021userAuthorityData\030\020 \001(\0132\034.Journal.Op"
  "UserAuthorityDataH\000B\004\n\002OpB\003\n\001VJ\004\010\036\020\037J\004\010\037"
  "\020 J\004\010!\020\"J\004\010\"\020#J\004\010#\020$J\004\010$\020%J\004\0103\0204J\004\0102\0203J\004"
  "\010>\020\?\"\215\004\n\014EvCopresence\022(\n\002v3\030\003 \001(\0132\032.Tran"
  "sient.EvCopresence.V3H\000\032\301\003\n\002V3\022\030\n\020fromCo"
  "nnectionId\030\001 \001(\t\022\"\n\025followingConnectionI"
  "d\030\002 \001(\tH\000\210\001\001\022\022\n\005scale\030\003 \001(\002H\001\210\001\001\022*\n\004root"
  "\030\010 \001(\0132\027.Transient.AvatarRootV3H\002\210\001\001\022:\n\016"
  "leftController\030\t \001(\0132\035.Transient.AvatarC"
  "ontrollerV3H\003\210\001\001\022;\n\017rightController\030\n \001("
  "\0132\035.Transient.AvatarControllerV3H\004\210\001\001\022.\n"
  "\004view\030\013 \001(\0132\033.Transient.AvatarPositionV3"
  "H\005\210\001\001\022.\n\004head\030\014 \001(\0132\033.Transient.AvatarPo"
  "sitionV3H\006\210\001\001B\030\n\026_followingConnectionIdB"
  "\010\n\006_scaleB\007\n\005_rootB\021\n\017_leftControllerB\022\n"
  "\020_rightControllerB\007\n\005_viewB\007\n\005_headB\003\n\001V"
  "J\004\010\001\020\002J\004\010\002\020\003\"V\n\020AvatarPositionV3\022 \n\010posi"
  "tion\030\001 \001(\0132\016.Common.Float3\022 \n\010rotation\030\002"
  " \001(\0132\016.Common.Float3\"{\n\022AvatarController"
  "V3\022-\n\010location\030\001 \001(\0132\033.Transient.AvatarP"
  "ositionV3\022\'\n\nbeamTarget\030\002 \001(\0132\016.Common.F"
  "loat3H\000\210\001\001B\r\n\013_beamTarget\"\252\002\n\014AvatarRoot"
  "V3\022-\n\010location\030\001 \001(\0132\033.Transient.AvatarP"
  "ositionV3\022L\n\016animationState\030\002 \001(\0162/.Tran"
  "sient.AvatarRootV3.AvatarMovementStateEn"
  "umH\000\210\001\001\022!\n\024animationStateCustom\030\003 \001(\tH\001\210"
  "\001\001\"N\n\027AvatarMovementStateEnum\022\010\n\004None\020\000\022"
  "\010\n\004Jump\020\001\022\n\n\006Crouch\020\002\022\007\n\003Fly\020\003\022\n\n\006Custom"
  "\020\004B\021\n\017_animationStateB\027\n\025_animationState"
  "CustomB\036\252\002\033Collab.Proxy.Comm.LiveTypesb\006"
  "proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_transient_5fevents_5fclient_2eproto_deps[3] = {
  &::descriptor_table_common_2eproto,
  &::descriptor_table_journal_5foperations_5fclient_2eproto,
  &::descriptor_table_journal_5foperations_5fcommon_2eproto,
};
static ::_pbi::once_flag descriptor_table_transient_5fevents_5fclient_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_transient_5fevents_5fclient_2eproto = {
    false, false, 1886, descriptor_table_protodef_transient_5fevents_5fclient_2eproto,
    "transient_events_client.proto",
    &descriptor_table_transient_5fevents_5fclient_2eproto_once, descriptor_table_transient_5fevents_5fclient_2eproto_deps, 3, 7,
    schemas, file_default_instances, TableStruct_transient_5fevents_5fclient_2eproto::offsets,
    file_level_metadata_transient_5fevents_5fclient_2eproto, file_level_enum_descriptors_transient_5fevents_5fclient_2eproto,
    file_level_service_descriptors_transient_5fevents_5fclient_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_transient_5fevents_5fclient_2eproto_getter() {
  return &descriptor_table_transient_5fevents_5fclient_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_transient_5fevents_5fclient_2eproto(&descriptor_table_transient_5fevents_5fclient_2eproto);
namespace Transient {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* AvatarRootV3_AvatarMovementStateEnum_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_transient_5fevents_5fclient_2eproto);
  return file_level_enum_descriptors_transient_5fevents_5fclient_2eproto[0];
}
bool AvatarRootV3_AvatarMovementStateEnum_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr AvatarRootV3_AvatarMovementStateEnum AvatarRootV3::None;
constexpr AvatarRootV3_AvatarMovementStateEnum AvatarRootV3::Jump;
constexpr AvatarRootV3_AvatarMovementStateEnum AvatarRootV3::Crouch;
constexpr AvatarRootV3_AvatarMovementStateEnum AvatarRootV3::Fly;
constexpr AvatarRootV3_AvatarMovementStateEnum AvatarRootV3::Custom;
constexpr AvatarRootV3_AvatarMovementStateEnum AvatarRootV3::AvatarMovementStateEnum_MIN;
constexpr AvatarRootV3_AvatarMovementStateEnum AvatarRootV3::AvatarMovementStateEnum_MAX;
constexpr int AvatarRootV3::AvatarMovementStateEnum_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

// ===================================================================

class EvTransientJournalUpdate_V1::_Internal {
 public:
  static const ::Journal::OpLine2d& line2d(const EvTransientJournalUpdate_V1* msg);
  static const ::Journal::OpText2d& text2d(const EvTransientJournalUpdate_V1* msg);
  static const ::Journal::OpImage2d& image2d(const EvTransientJournalUpdate_V1* msg);
  static const ::Journal::OpLine3d& line3d(const EvTransientJournalUpdate_V1* msg);
  static const ::Journal::OpText3d& text3d(const EvTransientJournalUpdate_V1* msg);
  static const ::Journal::OpImage3d& image3d(const EvTransientJournalUpdate_V1* msg);
  static const ::Journal::OpCreateObject& createobject(const EvTransientJournalUpdate_V1* msg);
  static const ::Journal::OpSetPartHighlight& setparthighlight(const EvTransientJournalUpdate_V1* msg);
  static const ::Journal::OpUpdatePropertyValue& updatepropertyvalue(const EvTransientJournalUpdate_V1* msg);
  static const ::Journal::OpDeclareProperty& declareproperty(const EvTransientJournalUpdate_V1* msg);
  static const ::Journal::OpUserAuthorityData& userauthoritydata(const EvTransientJournalUpdate_V1* msg);
};

const ::Journal::OpLine2d&
EvTransientJournalUpdate_V1::_Internal::line2d(const EvTransientJournalUpdate_V1* msg) {
  return *msg->_impl_.Op_.line2d_;
}
const ::Journal::OpText2d&
EvTransientJournalUpdate_V1::_Internal::text2d(const EvTransientJournalUpdate_V1* msg) {
  return *msg->_impl_.Op_.text2d_;
}
const ::Journal::OpImage2d&
EvTransientJournalUpdate_V1::_Internal::image2d(const EvTransientJournalUpdate_V1* msg) {
  return *msg->_impl_.Op_.image2d_;
}
const ::Journal::OpLine3d&
EvTransientJournalUpdate_V1::_Internal::line3d(const EvTransientJournalUpdate_V1* msg) {
  return *msg->_impl_.Op_.line3d_;
}
const ::Journal::OpText3d&
EvTransientJournalUpdate_V1::_Internal::text3d(const EvTransientJournalUpdate_V1* msg) {
  return *msg->_impl_.Op_.text3d_;
}
const ::Journal::OpImage3d&
EvTransientJournalUpdate_V1::_Internal::image3d(const EvTransientJournalUpdate_V1* msg) {
  return *msg->_impl_.Op_.image3d_;
}
const ::Journal::OpCreateObject&
EvTransientJournalUpdate_V1::_Internal::createobject(const EvTransientJournalUpdate_V1* msg) {
  return *msg->_impl_.Op_.createobject_;
}
const ::Journal::OpSetPartHighlight&
EvTransientJournalUpdate_V1::_Internal::setparthighlight(const EvTransientJournalUpdate_V1* msg) {
  return *msg->_impl_.Op_.setparthighlight_;
}
const ::Journal::OpUpdatePropertyValue&
EvTransientJournalUpdate_V1::_Internal::updatepropertyvalue(const EvTransientJournalUpdate_V1* msg) {
  return *msg->_impl_.Op_.updatepropertyvalue_;
}
const ::Journal::OpDeclareProperty&
EvTransientJournalUpdate_V1::_Internal::declareproperty(const EvTransientJournalUpdate_V1* msg) {
  return *msg->_impl_.Op_.declareproperty_;
}
const ::Journal::OpUserAuthorityData&
EvTransientJournalUpdate_V1::_Internal::userauthoritydata(const EvTransientJournalUpdate_V1* msg) {
  return *msg->_impl_.Op_.userauthoritydata_;
}
void EvTransientJournalUpdate_V1::set_allocated_line2d(::Journal::OpLine2d* line2d) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Op();
  if (line2d) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(line2d));
    if (message_arena != submessage_arena) {
      line2d = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, line2d, submessage_arena);
    }
    set_has_line2d();
    _impl_.Op_.line2d_ = line2d;
  }
  // @@protoc_insertion_point(field_set_allocated:Transient.EvTransientJournalUpdate.V1.line2d)
}
void EvTransientJournalUpdate_V1::clear_line2d() {
  if (_internal_has_line2d()) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.Op_.line2d_;
    }
    clear_has_Op();
  }
}
void EvTransientJournalUpdate_V1::set_allocated_text2d(::Journal::OpText2d* text2d) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Op();
  if (text2d) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(text2d));
    if (message_arena != submessage_arena) {
      text2d = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, text2d, submessage_arena);
    }
    set_has_text2d();
    _impl_.Op_.text2d_ = text2d;
  }
  // @@protoc_insertion_point(field_set_allocated:Transient.EvTransientJournalUpdate.V1.text2d)
}
void EvTransientJournalUpdate_V1::clear_text2d() {
  if (_internal_has_text2d()) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.Op_.text2d_;
    }
    clear_has_Op();
  }
}
void EvTransientJournalUpdate_V1::set_allocated_image2d(::Journal::OpImage2d* image2d) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Op();
  if (image2d) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(image2d));
    if (message_arena != submessage_arena) {
      image2d = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, image2d, submessage_arena);
    }
    set_has_image2d();
    _impl_.Op_.image2d_ = image2d;
  }
  // @@protoc_insertion_point(field_set_allocated:Transient.EvTransientJournalUpdate.V1.image2d)
}
void EvTransientJournalUpdate_V1::clear_image2d() {
  if (_internal_has_image2d()) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.Op_.image2d_;
    }
    clear_has_Op();
  }
}
void EvTransientJournalUpdate_V1::set_allocated_line3d(::Journal::OpLine3d* line3d) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Op();
  if (line3d) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(line3d));
    if (message_arena != submessage_arena) {
      line3d = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, line3d, submessage_arena);
    }
    set_has_line3d();
    _impl_.Op_.line3d_ = line3d;
  }
  // @@protoc_insertion_point(field_set_allocated:Transient.EvTransientJournalUpdate.V1.line3d)
}
void EvTransientJournalUpdate_V1::clear_line3d() {
  if (_internal_has_line3d()) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.Op_.line3d_;
    }
    clear_has_Op();
  }
}
void EvTransientJournalUpdate_V1::set_allocated_text3d(::Journal::OpText3d* text3d) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Op();
  if (text3d) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(text3d));
    if (message_arena != submessage_arena) {
      text3d = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, text3d, submessage_arena);
    }
    set_has_text3d();
    _impl_.Op_.text3d_ = text3d;
  }
  // @@protoc_insertion_point(field_set_allocated:Transient.EvTransientJournalUpdate.V1.text3d)
}
void EvTransientJournalUpdate_V1::clear_text3d() {
  if (_internal_has_text3d()) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.Op_.text3d_;
    }
    clear_has_Op();
  }
}
void EvTransientJournalUpdate_V1::set_allocated_image3d(::Journal::OpImage3d* image3d) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Op();
  if (image3d) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(image3d));
    if (message_arena != submessage_arena) {
      image3d = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, image3d, submessage_arena);
    }
    set_has_image3d();
    _impl_.Op_.image3d_ = image3d;
  }
  // @@protoc_insertion_point(field_set_allocated:Transient.EvTransientJournalUpdate.V1.image3d)
}
void EvTransientJournalUpdate_V1::clear_image3d() {
  if (_internal_has_image3d()) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.Op_.image3d_;
    }
    clear_has_Op();
  }
}
void EvTransientJournalUpdate_V1::set_allocated_createobject(::Journal::OpCreateObject* createobject) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Op();
  if (createobject) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(createobject));
    if (message_arena != submessage_arena) {
      createobject = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, createobject, submessage_arena);
    }
    set_has_createobject();
    _impl_.Op_.createobject_ = createobject;
  }
  // @@protoc_insertion_point(field_set_allocated:Transient.EvTransientJournalUpdate.V1.createObject)
}
void EvTransientJournalUpdate_V1::clear_createobject() {
  if (_internal_has_createobject()) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.Op_.createobject_;
    }
    clear_has_Op();
  }
}
void EvTransientJournalUpdate_V1::set_allocated_setparthighlight(::Journal::OpSetPartHighlight* setparthighlight) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Op();
  if (setparthighlight) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(setparthighlight));
    if (message_arena != submessage_arena) {
      setparthighlight = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, setparthighlight, submessage_arena);
    }
    set_has_setparthighlight();
    _impl_.Op_.setparthighlight_ = setparthighlight;
  }
  // @@protoc_insertion_point(field_set_allocated:Transient.EvTransientJournalUpdate.V1.setPartHighlight)
}
void EvTransientJournalUpdate_V1::clear_setparthighlight() {
  if (_internal_has_setparthighlight()) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.Op_.setparthighlight_;
    }
    clear_has_Op();
  }
}
void EvTransientJournalUpdate_V1::set_allocated_updatepropertyvalue(::Journal::OpUpdatePropertyValue* updatepropertyvalue) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Op();
  if (updatepropertyvalue) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(updatepropertyvalue));
    if (message_arena != submessage_arena) {
      updatepropertyvalue = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, updatepropertyvalue, submessage_arena);
    }
    set_has_updatepropertyvalue();
    _impl_.Op_.updatepropertyvalue_ = updatepropertyvalue;
  }
  // @@protoc_insertion_point(field_set_allocated:Transient.EvTransientJournalUpdate.V1.updatePropertyValue)
}
void EvTransientJournalUpdate_V1::clear_updatepropertyvalue() {
  if (_internal_has_updatepropertyvalue()) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.Op_.updatepropertyvalue_;
    }
    clear_has_Op();
  }
}
void EvTransientJournalUpdate_V1::set_allocated_declareproperty(::Journal::OpDeclareProperty* declareproperty) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Op();
  if (declareproperty) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(declareproperty));
    if (message_arena != submessage_arena) {
      declareproperty = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, declareproperty, submessage_arena);
    }
    set_has_declareproperty();
    _impl_.Op_.declareproperty_ = declareproperty;
  }
  // @@protoc_insertion_point(field_set_allocated:Transient.EvTransientJournalUpdate.V1.declareProperty)
}
void EvTransientJournalUpdate_V1::clear_declareproperty() {
  if (_internal_has_declareproperty()) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.Op_.declareproperty_;
    }
    clear_has_Op();
  }
}
void EvTransientJournalUpdate_V1::set_allocated_userauthoritydata(::Journal::OpUserAuthorityData* userauthoritydata) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Op();
  if (userauthoritydata) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(userauthoritydata));
    if (message_arena != submessage_arena) {
      userauthoritydata = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, userauthoritydata, submessage_arena);
    }
    set_has_userauthoritydata();
    _impl_.Op_.userauthoritydata_ = userauthoritydata;
  }
  // @@protoc_insertion_point(field_set_allocated:Transient.EvTransientJournalUpdate.V1.userAuthorityData)
}
void EvTransientJournalUpdate_V1::clear_userauthoritydata() {
  if (_internal_has_userauthoritydata()) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.Op_.userauthoritydata_;
    }
    clear_has_Op();
  }
}
EvTransientJournalUpdate_V1::EvTransientJournalUpdate_V1(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Transient.EvTransientJournalUpdate.V1)
}
EvTransientJournalUpdate_V1::EvTransientJournalUpdate_V1(const EvTransientJournalUpdate_V1& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  EvTransientJournalUpdate_V1* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.uniqueid_){}
    , decltype(_impl_.Op_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.uniqueid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.uniqueid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_uniqueid().empty()) {
    _this->_impl_.uniqueid_.Set(from._internal_uniqueid(), 
      _this->GetArenaForAllocation());
  }
  clear_has_Op();
  switch (from.Op_case()) {
    case kLine2D: {
      _this->_internal_mutable_line2d()->::Journal::OpLine2d::MergeFrom(
          from._internal_line2d());
      break;
    }
    case kText2D: {
      _this->_internal_mutable_text2d()->::Journal::OpText2d::MergeFrom(
          from._internal_text2d());
      break;
    }
    case kImage2D: {
      _this->_internal_mutable_image2d()->::Journal::OpImage2d::MergeFrom(
          from._internal_image2d());
      break;
    }
    case kLine3D: {
      _this->_internal_mutable_line3d()->::Journal::OpLine3d::MergeFrom(
          from._internal_line3d());
      break;
    }
    case kText3D: {
      _this->_internal_mutable_text3d()->::Journal::OpText3d::MergeFrom(
          from._internal_text3d());
      break;
    }
    case kImage3D: {
      _this->_internal_mutable_image3d()->::Journal::OpImage3d::MergeFrom(
          from._internal_image3d());
      break;
    }
    case kCreateObject: {
      _this->_internal_mutable_createobject()->::Journal::OpCreateObject::MergeFrom(
          from._internal_createobject());
      break;
    }
    case kSetPartHighlight: {
      _this->_internal_mutable_setparthighlight()->::Journal::OpSetPartHighlight::MergeFrom(
          from._internal_setparthighlight());
      break;
    }
    case kUpdatePropertyValue: {
      _this->_internal_mutable_updatepropertyvalue()->::Journal::OpUpdatePropertyValue::MergeFrom(
          from._internal_updatepropertyvalue());
      break;
    }
    case kDeclareProperty: {
      _this->_internal_mutable_declareproperty()->::Journal::OpDeclareProperty::MergeFrom(
          from._internal_declareproperty());
      break;
    }
    case kUserAuthorityData: {
      _this->_internal_mutable_userauthoritydata()->::Journal::OpUserAuthorityData::MergeFrom(
          from._internal_userauthoritydata());
      break;
    }
    case OP_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:Transient.EvTransientJournalUpdate.V1)
}

inline void EvTransientJournalUpdate_V1::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.uniqueid_){}
    , decltype(_impl_.Op_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  _impl_.uniqueid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.uniqueid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  clear_has_Op();
}

EvTransientJournalUpdate_V1::~EvTransientJournalUpdate_V1() {
  // @@protoc_insertion_point(destructor:Transient.EvTransientJournalUpdate.V1)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void EvTransientJournalUpdate_V1::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.uniqueid_.Destroy();
  if (has_Op()) {
    clear_Op();
  }
}

void EvTransientJournalUpdate_V1::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void EvTransientJournalUpdate_V1::clear_Op() {
// @@protoc_insertion_point(one_of_clear_start:Transient.EvTransientJournalUpdate.V1)
  switch (Op_case()) {
    case kLine2D: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Op_.line2d_;
      }
      break;
    }
    case kText2D: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Op_.text2d_;
      }
      break;
    }
    case kImage2D: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Op_.image2d_;
      }
      break;
    }
    case kLine3D: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Op_.line3d_;
      }
      break;
    }
    case kText3D: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Op_.text3d_;
      }
      break;
    }
    case kImage3D: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Op_.image3d_;
      }
      break;
    }
    case kCreateObject: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Op_.createobject_;
      }
      break;
    }
    case kSetPartHighlight: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Op_.setparthighlight_;
      }
      break;
    }
    case kUpdatePropertyValue: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Op_.updatepropertyvalue_;
      }
      break;
    }
    case kDeclareProperty: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Op_.declareproperty_;
      }
      break;
    }
    case kUserAuthorityData: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Op_.userauthoritydata_;
      }
      break;
    }
    case OP_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = OP_NOT_SET;
}


void EvTransientJournalUpdate_V1::Clear() {
// @@protoc_insertion_point(message_clear_start:Transient.EvTransientJournalUpdate.V1)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.uniqueid_.ClearToEmpty();
  clear_Op();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EvTransientJournalUpdate_V1::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string uniqueId = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_uniqueid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "Transient.EvTransientJournalUpdate.V1.uniqueId"));
        } else
          goto handle_unusual;
        continue;
      // .Journal.OpLine2d line2d = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_line2d(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Journal.OpText2d text2d = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_text2d(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Journal.OpImage2d image2d = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 98)) {
          ptr = ctx->ParseMessage(_internal_mutable_image2d(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Journal.OpUpdatePropertyValue updatePropertyValue = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_updatepropertyvalue(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Journal.OpDeclareProperty declareProperty = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 114)) {
          ptr = ctx->ParseMessage(_internal_mutable_declareproperty(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Journal.OpUserAuthorityData userAuthorityData = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 130)) {
          ptr = ctx->ParseMessage(_internal_mutable_userauthoritydata(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Journal.OpLine3d line3d = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 162)) {
          ptr = ctx->ParseMessage(_internal_mutable_line3d(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Journal.OpText3d text3d = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 170)) {
          ptr = ctx->ParseMessage(_internal_mutable_text3d(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Journal.OpImage3d image3d = 22;
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 178)) {
          ptr = ctx->ParseMessage(_internal_mutable_image3d(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Journal.OpCreateObject createObject = 32;
      case 32:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 2)) {
          ptr = ctx->ParseMessage(_internal_mutable_createobject(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Journal.OpSetPartHighlight setPartHighlight = 61;
      case 61:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 234)) {
          ptr = ctx->ParseMessage(_internal_mutable_setparthighlight(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* EvTransientJournalUpdate_V1::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Transient.EvTransientJournalUpdate.V1)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string uniqueId = 3;
  if (!this->_internal_uniqueid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_uniqueid().data(), static_cast<int>(this->_internal_uniqueid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Transient.EvTransientJournalUpdate.V1.uniqueId");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_uniqueid(), target);
  }

  // .Journal.OpLine2d line2d = 10;
  if (_internal_has_line2d()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(10, _Internal::line2d(this),
        _Internal::line2d(this).GetCachedSize(), target, stream);
  }

  // .Journal.OpText2d text2d = 11;
  if (_internal_has_text2d()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(11, _Internal::text2d(this),
        _Internal::text2d(this).GetCachedSize(), target, stream);
  }

  // .Journal.OpImage2d image2d = 12;
  if (_internal_has_image2d()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(12, _Internal::image2d(this),
        _Internal::image2d(this).GetCachedSize(), target, stream);
  }

  // .Journal.OpUpdatePropertyValue updatePropertyValue = 13;
  if (_internal_has_updatepropertyvalue()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(13, _Internal::updatepropertyvalue(this),
        _Internal::updatepropertyvalue(this).GetCachedSize(), target, stream);
  }

  // .Journal.OpDeclareProperty declareProperty = 14;
  if (_internal_has_declareproperty()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(14, _Internal::declareproperty(this),
        _Internal::declareproperty(this).GetCachedSize(), target, stream);
  }

  // .Journal.OpUserAuthorityData userAuthorityData = 16;
  if (_internal_has_userauthoritydata()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(16, _Internal::userauthoritydata(this),
        _Internal::userauthoritydata(this).GetCachedSize(), target, stream);
  }

  // .Journal.OpLine3d line3d = 20;
  if (_internal_has_line3d()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(20, _Internal::line3d(this),
        _Internal::line3d(this).GetCachedSize(), target, stream);
  }

  // .Journal.OpText3d text3d = 21;
  if (_internal_has_text3d()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(21, _Internal::text3d(this),
        _Internal::text3d(this).GetCachedSize(), target, stream);
  }

  // .Journal.OpImage3d image3d = 22;
  if (_internal_has_image3d()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(22, _Internal::image3d(this),
        _Internal::image3d(this).GetCachedSize(), target, stream);
  }

  // .Journal.OpCreateObject createObject = 32;
  if (_internal_has_createobject()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(32, _Internal::createobject(this),
        _Internal::createobject(this).GetCachedSize(), target, stream);
  }

  // .Journal.OpSetPartHighlight setPartHighlight = 61;
  if (_internal_has_setparthighlight()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(61, _Internal::setparthighlight(this),
        _Internal::setparthighlight(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Transient.EvTransientJournalUpdate.V1)
  return target;
}

size_t EvTransientJournalUpdate_V1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Transient.EvTransientJournalUpdate.V1)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string uniqueId = 3;
  if (!this->_internal_uniqueid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_uniqueid());
  }

  switch (Op_case()) {
    // .Journal.OpLine2d line2d = 10;
    case kLine2D: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Op_.line2d_);
      break;
    }
    // .Journal.OpText2d text2d = 11;
    case kText2D: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Op_.text2d_);
      break;
    }
    // .Journal.OpImage2d image2d = 12;
    case kImage2D: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Op_.image2d_);
      break;
    }
    // .Journal.OpLine3d line3d = 20;
    case kLine3D: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Op_.line3d_);
      break;
    }
    // .Journal.OpText3d text3d = 21;
    case kText3D: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Op_.text3d_);
      break;
    }
    // .Journal.OpImage3d image3d = 22;
    case kImage3D: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Op_.image3d_);
      break;
    }
    // .Journal.OpCreateObject createObject = 32;
    case kCreateObject: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Op_.createobject_);
      break;
    }
    // .Journal.OpSetPartHighlight setPartHighlight = 61;
    case kSetPartHighlight: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Op_.setparthighlight_);
      break;
    }
    // .Journal.OpUpdatePropertyValue updatePropertyValue = 13;
    case kUpdatePropertyValue: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Op_.updatepropertyvalue_);
      break;
    }
    // .Journal.OpDeclareProperty declareProperty = 14;
    case kDeclareProperty: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Op_.declareproperty_);
      break;
    }
    // .Journal.OpUserAuthorityData userAuthorityData = 16;
    case kUserAuthorityData: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Op_.userauthoritydata_);
      break;
    }
    case OP_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData EvTransientJournalUpdate_V1::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    EvTransientJournalUpdate_V1::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*EvTransientJournalUpdate_V1::GetClassData() const { return &_class_data_; }


void EvTransientJournalUpdate_V1::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<EvTransientJournalUpdate_V1*>(&to_msg);
  auto& from = static_cast<const EvTransientJournalUpdate_V1&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Transient.EvTransientJournalUpdate.V1)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_uniqueid().empty()) {
    _this->_internal_set_uniqueid(from._internal_uniqueid());
  }
  switch (from.Op_case()) {
    case kLine2D: {
      _this->_internal_mutable_line2d()->::Journal::OpLine2d::MergeFrom(
          from._internal_line2d());
      break;
    }
    case kText2D: {
      _this->_internal_mutable_text2d()->::Journal::OpText2d::MergeFrom(
          from._internal_text2d());
      break;
    }
    case kImage2D: {
      _this->_internal_mutable_image2d()->::Journal::OpImage2d::MergeFrom(
          from._internal_image2d());
      break;
    }
    case kLine3D: {
      _this->_internal_mutable_line3d()->::Journal::OpLine3d::MergeFrom(
          from._internal_line3d());
      break;
    }
    case kText3D: {
      _this->_internal_mutable_text3d()->::Journal::OpText3d::MergeFrom(
          from._internal_text3d());
      break;
    }
    case kImage3D: {
      _this->_internal_mutable_image3d()->::Journal::OpImage3d::MergeFrom(
          from._internal_image3d());
      break;
    }
    case kCreateObject: {
      _this->_internal_mutable_createobject()->::Journal::OpCreateObject::MergeFrom(
          from._internal_createobject());
      break;
    }
    case kSetPartHighlight: {
      _this->_internal_mutable_setparthighlight()->::Journal::OpSetPartHighlight::MergeFrom(
          from._internal_setparthighlight());
      break;
    }
    case kUpdatePropertyValue: {
      _this->_internal_mutable_updatepropertyvalue()->::Journal::OpUpdatePropertyValue::MergeFrom(
          from._internal_updatepropertyvalue());
      break;
    }
    case kDeclareProperty: {
      _this->_internal_mutable_declareproperty()->::Journal::OpDeclareProperty::MergeFrom(
          from._internal_declareproperty());
      break;
    }
    case kUserAuthorityData: {
      _this->_internal_mutable_userauthoritydata()->::Journal::OpUserAuthorityData::MergeFrom(
          from._internal_userauthoritydata());
      break;
    }
    case OP_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void EvTransientJournalUpdate_V1::CopyFrom(const EvTransientJournalUpdate_V1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Transient.EvTransientJournalUpdate.V1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EvTransientJournalUpdate_V1::IsInitialized() const {
  return true;
}

void EvTransientJournalUpdate_V1::InternalSwap(EvTransientJournalUpdate_V1* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.uniqueid_, lhs_arena,
      &other->_impl_.uniqueid_, rhs_arena
  );
  swap(_impl_.Op_, other->_impl_.Op_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata EvTransientJournalUpdate_V1::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_transient_5fevents_5fclient_2eproto_getter, &descriptor_table_transient_5fevents_5fclient_2eproto_once,
      file_level_metadata_transient_5fevents_5fclient_2eproto[0]);
}

// ===================================================================

class EvTransientJournalUpdate::_Internal {
 public:
  static const ::Transient::EvTransientJournalUpdate_V1& v1(const EvTransientJournalUpdate* msg);
};

const ::Transient::EvTransientJournalUpdate_V1&
EvTransientJournalUpdate::_Internal::v1(const EvTransientJournalUpdate* msg) {
  return *msg->_impl_.V_.v1_;
}
void EvTransientJournalUpdate::set_allocated_v1(::Transient::EvTransientJournalUpdate_V1* v1) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_V();
  if (v1) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(v1);
    if (message_arena != submessage_arena) {
      v1 = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, v1, submessage_arena);
    }
    set_has_v1();
    _impl_.V_.v1_ = v1;
  }
  // @@protoc_insertion_point(field_set_allocated:Transient.EvTransientJournalUpdate.v1)
}
EvTransientJournalUpdate::EvTransientJournalUpdate(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Transient.EvTransientJournalUpdate)
}
EvTransientJournalUpdate::EvTransientJournalUpdate(const EvTransientJournalUpdate& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  EvTransientJournalUpdate* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.V_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_V();
  switch (from.V_case()) {
    case kV1: {
      _this->_internal_mutable_v1()->::Transient::EvTransientJournalUpdate_V1::MergeFrom(
          from._internal_v1());
      break;
    }
    case V_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:Transient.EvTransientJournalUpdate)
}

inline void EvTransientJournalUpdate::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.V_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  clear_has_V();
}

EvTransientJournalUpdate::~EvTransientJournalUpdate() {
  // @@protoc_insertion_point(destructor:Transient.EvTransientJournalUpdate)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void EvTransientJournalUpdate::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_V()) {
    clear_V();
  }
}

void EvTransientJournalUpdate::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void EvTransientJournalUpdate::clear_V() {
// @@protoc_insertion_point(one_of_clear_start:Transient.EvTransientJournalUpdate)
  switch (V_case()) {
    case kV1: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.V_.v1_;
      }
      break;
    }
    case V_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = V_NOT_SET;
}


void EvTransientJournalUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:Transient.EvTransientJournalUpdate)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_V();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EvTransientJournalUpdate::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Transient.EvTransientJournalUpdate.V1 v1 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_v1(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* EvTransientJournalUpdate::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Transient.EvTransientJournalUpdate)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Transient.EvTransientJournalUpdate.V1 v1 = 1;
  if (_internal_has_v1()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::v1(this),
        _Internal::v1(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Transient.EvTransientJournalUpdate)
  return target;
}

size_t EvTransientJournalUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Transient.EvTransientJournalUpdate)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (V_case()) {
    // .Transient.EvTransientJournalUpdate.V1 v1 = 1;
    case kV1: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.V_.v1_);
      break;
    }
    case V_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData EvTransientJournalUpdate::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    EvTransientJournalUpdate::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*EvTransientJournalUpdate::GetClassData() const { return &_class_data_; }


void EvTransientJournalUpdate::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<EvTransientJournalUpdate*>(&to_msg);
  auto& from = static_cast<const EvTransientJournalUpdate&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Transient.EvTransientJournalUpdate)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.V_case()) {
    case kV1: {
      _this->_internal_mutable_v1()->::Transient::EvTransientJournalUpdate_V1::MergeFrom(
          from._internal_v1());
      break;
    }
    case V_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void EvTransientJournalUpdate::CopyFrom(const EvTransientJournalUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Transient.EvTransientJournalUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EvTransientJournalUpdate::IsInitialized() const {
  return true;
}

void EvTransientJournalUpdate::InternalSwap(EvTransientJournalUpdate* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.V_, other->_impl_.V_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata EvTransientJournalUpdate::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_transient_5fevents_5fclient_2eproto_getter, &descriptor_table_transient_5fevents_5fclient_2eproto_once,
      file_level_metadata_transient_5fevents_5fclient_2eproto[1]);
}

// ===================================================================

class EvCopresence_V3::_Internal {
 public:
  using HasBits = decltype(std::declval<EvCopresence_V3>()._impl_._has_bits_);
  static void set_has_followingconnectionid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_scale(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static const ::Transient::AvatarRootV3& root(const EvCopresence_V3* msg);
  static void set_has_root(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::Transient::AvatarControllerV3& leftcontroller(const EvCopresence_V3* msg);
  static void set_has_leftcontroller(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::Transient::AvatarControllerV3& rightcontroller(const EvCopresence_V3* msg);
  static void set_has_rightcontroller(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::Transient::AvatarPositionV3& view(const EvCopresence_V3* msg);
  static void set_has_view(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::Transient::AvatarPositionV3& head(const EvCopresence_V3* msg);
  static void set_has_head(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
};

const ::Transient::AvatarRootV3&
EvCopresence_V3::_Internal::root(const EvCopresence_V3* msg) {
  return *msg->_impl_.root_;
}
const ::Transient::AvatarControllerV3&
EvCopresence_V3::_Internal::leftcontroller(const EvCopresence_V3* msg) {
  return *msg->_impl_.leftcontroller_;
}
const ::Transient::AvatarControllerV3&
EvCopresence_V3::_Internal::rightcontroller(const EvCopresence_V3* msg) {
  return *msg->_impl_.rightcontroller_;
}
const ::Transient::AvatarPositionV3&
EvCopresence_V3::_Internal::view(const EvCopresence_V3* msg) {
  return *msg->_impl_.view_;
}
const ::Transient::AvatarPositionV3&
EvCopresence_V3::_Internal::head(const EvCopresence_V3* msg) {
  return *msg->_impl_.head_;
}
EvCopresence_V3::EvCopresence_V3(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Transient.EvCopresence.V3)
}
EvCopresence_V3::EvCopresence_V3(const EvCopresence_V3& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  EvCopresence_V3* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.fromconnectionid_){}
    , decltype(_impl_.followingconnectionid_){}
    , decltype(_impl_.root_){nullptr}
    , decltype(_impl_.leftcontroller_){nullptr}
    , decltype(_impl_.rightcontroller_){nullptr}
    , decltype(_impl_.view_){nullptr}
    , decltype(_impl_.head_){nullptr}
    , decltype(_impl_.scale_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.fromconnectionid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.fromconnectionid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_fromconnectionid().empty()) {
    _this->_impl_.fromconnectionid_.Set(from._internal_fromconnectionid(), 
      _this->GetArenaForAllocation());
  }
  _impl_.followingconnectionid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.followingconnectionid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_followingconnectionid()) {
    _this->_impl_.followingconnectionid_.Set(from._internal_followingconnectionid(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_root()) {
    _this->_impl_.root_ = new ::Transient::AvatarRootV3(*from._impl_.root_);
  }
  if (from._internal_has_leftcontroller()) {
    _this->_impl_.leftcontroller_ = new ::Transient::AvatarControllerV3(*from._impl_.leftcontroller_);
  }
  if (from._internal_has_rightcontroller()) {
    _this->_impl_.rightcontroller_ = new ::Transient::AvatarControllerV3(*from._impl_.rightcontroller_);
  }
  if (from._internal_has_view()) {
    _this->_impl_.view_ = new ::Transient::AvatarPositionV3(*from._impl_.view_);
  }
  if (from._internal_has_head()) {
    _this->_impl_.head_ = new ::Transient::AvatarPositionV3(*from._impl_.head_);
  }
  _this->_impl_.scale_ = from._impl_.scale_;
  // @@protoc_insertion_point(copy_constructor:Transient.EvCopresence.V3)
}

inline void EvCopresence_V3::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.fromconnectionid_){}
    , decltype(_impl_.followingconnectionid_){}
    , decltype(_impl_.root_){nullptr}
    , decltype(_impl_.leftcontroller_){nullptr}
    , decltype(_impl_.rightcontroller_){nullptr}
    , decltype(_impl_.view_){nullptr}
    , decltype(_impl_.head_){nullptr}
    , decltype(_impl_.scale_){0}
  };
  _impl_.fromconnectionid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.fromconnectionid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.followingconnectionid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.followingconnectionid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

EvCopresence_V3::~EvCopresence_V3() {
  // @@protoc_insertion_point(destructor:Transient.EvCopresence.V3)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void EvCopresence_V3::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.fromconnectionid_.Destroy();
  _impl_.followingconnectionid_.Destroy();
  if (this != internal_default_instance()) delete _impl_.root_;
  if (this != internal_default_instance()) delete _impl_.leftcontroller_;
  if (this != internal_default_instance()) delete _impl_.rightcontroller_;
  if (this != internal_default_instance()) delete _impl_.view_;
  if (this != internal_default_instance()) delete _impl_.head_;
}

void EvCopresence_V3::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void EvCopresence_V3::Clear() {
// @@protoc_insertion_point(message_clear_start:Transient.EvCopresence.V3)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.fromconnectionid_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.followingconnectionid_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.root_ != nullptr);
      _impl_.root_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(_impl_.leftcontroller_ != nullptr);
      _impl_.leftcontroller_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(_impl_.rightcontroller_ != nullptr);
      _impl_.rightcontroller_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(_impl_.view_ != nullptr);
      _impl_.view_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(_impl_.head_ != nullptr);
      _impl_.head_->Clear();
    }
  }
  _impl_.scale_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EvCopresence_V3::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string fromConnectionId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_fromconnectionid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "Transient.EvCopresence.V3.fromConnectionId"));
        } else
          goto handle_unusual;
        continue;
      // optional string followingConnectionId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_followingconnectionid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "Transient.EvCopresence.V3.followingConnectionId"));
        } else
          goto handle_unusual;
        continue;
      // optional float scale = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 29)) {
          _Internal::set_has_scale(&has_bits);
          _impl_.scale_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // optional .Transient.AvatarRootV3 root = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_root(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .Transient.AvatarControllerV3 leftController = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_leftcontroller(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .Transient.AvatarControllerV3 rightController = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_rightcontroller(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .Transient.AvatarPositionV3 view = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_view(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .Transient.AvatarPositionV3 head = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 98)) {
          ptr = ctx->ParseMessage(_internal_mutable_head(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* EvCopresence_V3::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Transient.EvCopresence.V3)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string fromConnectionId = 1;
  if (!this->_internal_fromconnectionid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_fromconnectionid().data(), static_cast<int>(this->_internal_fromconnectionid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Transient.EvCopresence.V3.fromConnectionId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_fromconnectionid(), target);
  }

  // optional string followingConnectionId = 2;
  if (_internal_has_followingconnectionid()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_followingconnectionid().data(), static_cast<int>(this->_internal_followingconnectionid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Transient.EvCopresence.V3.followingConnectionId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_followingconnectionid(), target);
  }

  // optional float scale = 3;
  if (_internal_has_scale()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(3, this->_internal_scale(), target);
  }

  // optional .Transient.AvatarRootV3 root = 8;
  if (_internal_has_root()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(8, _Internal::root(this),
        _Internal::root(this).GetCachedSize(), target, stream);
  }

  // optional .Transient.AvatarControllerV3 leftController = 9;
  if (_internal_has_leftcontroller()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(9, _Internal::leftcontroller(this),
        _Internal::leftcontroller(this).GetCachedSize(), target, stream);
  }

  // optional .Transient.AvatarControllerV3 rightController = 10;
  if (_internal_has_rightcontroller()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(10, _Internal::rightcontroller(this),
        _Internal::rightcontroller(this).GetCachedSize(), target, stream);
  }

  // optional .Transient.AvatarPositionV3 view = 11;
  if (_internal_has_view()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(11, _Internal::view(this),
        _Internal::view(this).GetCachedSize(), target, stream);
  }

  // optional .Transient.AvatarPositionV3 head = 12;
  if (_internal_has_head()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(12, _Internal::head(this),
        _Internal::head(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Transient.EvCopresence.V3)
  return target;
}

size_t EvCopresence_V3::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Transient.EvCopresence.V3)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string fromConnectionId = 1;
  if (!this->_internal_fromconnectionid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_fromconnectionid());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    // optional string followingConnectionId = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_followingconnectionid());
    }

    // optional .Transient.AvatarRootV3 root = 8;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.root_);
    }

    // optional .Transient.AvatarControllerV3 leftController = 9;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.leftcontroller_);
    }

    // optional .Transient.AvatarControllerV3 rightController = 10;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.rightcontroller_);
    }

    // optional .Transient.AvatarPositionV3 view = 11;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.view_);
    }

    // optional .Transient.AvatarPositionV3 head = 12;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.head_);
    }

    // optional float scale = 3;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 + 4;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData EvCopresence_V3::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    EvCopresence_V3::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*EvCopresence_V3::GetClassData() const { return &_class_data_; }


void EvCopresence_V3::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<EvCopresence_V3*>(&to_msg);
  auto& from = static_cast<const EvCopresence_V3&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Transient.EvCopresence.V3)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_fromconnectionid().empty()) {
    _this->_internal_set_fromconnectionid(from._internal_fromconnectionid());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_followingconnectionid(from._internal_followingconnectionid());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_root()->::Transient::AvatarRootV3::MergeFrom(
          from._internal_root());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_leftcontroller()->::Transient::AvatarControllerV3::MergeFrom(
          from._internal_leftcontroller());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_rightcontroller()->::Transient::AvatarControllerV3::MergeFrom(
          from._internal_rightcontroller());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_mutable_view()->::Transient::AvatarPositionV3::MergeFrom(
          from._internal_view());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_internal_mutable_head()->::Transient::AvatarPositionV3::MergeFrom(
          from._internal_head());
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.scale_ = from._impl_.scale_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void EvCopresence_V3::CopyFrom(const EvCopresence_V3& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Transient.EvCopresence.V3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EvCopresence_V3::IsInitialized() const {
  return true;
}

void EvCopresence_V3::InternalSwap(EvCopresence_V3* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.fromconnectionid_, lhs_arena,
      &other->_impl_.fromconnectionid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.followingconnectionid_, lhs_arena,
      &other->_impl_.followingconnectionid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EvCopresence_V3, _impl_.scale_)
      + sizeof(EvCopresence_V3::_impl_.scale_)
      - PROTOBUF_FIELD_OFFSET(EvCopresence_V3, _impl_.root_)>(
          reinterpret_cast<char*>(&_impl_.root_),
          reinterpret_cast<char*>(&other->_impl_.root_));
}

::PROTOBUF_NAMESPACE_ID::Metadata EvCopresence_V3::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_transient_5fevents_5fclient_2eproto_getter, &descriptor_table_transient_5fevents_5fclient_2eproto_once,
      file_level_metadata_transient_5fevents_5fclient_2eproto[2]);
}

// ===================================================================

class EvCopresence::_Internal {
 public:
  static const ::Transient::EvCopresence_V3& v3(const EvCopresence* msg);
};

const ::Transient::EvCopresence_V3&
EvCopresence::_Internal::v3(const EvCopresence* msg) {
  return *msg->_impl_.V_.v3_;
}
void EvCopresence::set_allocated_v3(::Transient::EvCopresence_V3* v3) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_V();
  if (v3) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(v3);
    if (message_arena != submessage_arena) {
      v3 = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, v3, submessage_arena);
    }
    set_has_v3();
    _impl_.V_.v3_ = v3;
  }
  // @@protoc_insertion_point(field_set_allocated:Transient.EvCopresence.v3)
}
EvCopresence::EvCopresence(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Transient.EvCopresence)
}
EvCopresence::EvCopresence(const EvCopresence& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  EvCopresence* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.V_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_V();
  switch (from.V_case()) {
    case kV3: {
      _this->_internal_mutable_v3()->::Transient::EvCopresence_V3::MergeFrom(
          from._internal_v3());
      break;
    }
    case V_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:Transient.EvCopresence)
}

inline void EvCopresence::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.V_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  clear_has_V();
}

EvCopresence::~EvCopresence() {
  // @@protoc_insertion_point(destructor:Transient.EvCopresence)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void EvCopresence::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_V()) {
    clear_V();
  }
}

void EvCopresence::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void EvCopresence::clear_V() {
// @@protoc_insertion_point(one_of_clear_start:Transient.EvCopresence)
  switch (V_case()) {
    case kV3: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.V_.v3_;
      }
      break;
    }
    case V_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = V_NOT_SET;
}


void EvCopresence::Clear() {
// @@protoc_insertion_point(message_clear_start:Transient.EvCopresence)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_V();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EvCopresence::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Transient.EvCopresence.V3 v3 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_v3(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* EvCopresence::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Transient.EvCopresence)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Transient.EvCopresence.V3 v3 = 3;
  if (_internal_has_v3()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::v3(this),
        _Internal::v3(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Transient.EvCopresence)
  return target;
}

size_t EvCopresence::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Transient.EvCopresence)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (V_case()) {
    // .Transient.EvCopresence.V3 v3 = 3;
    case kV3: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.V_.v3_);
      break;
    }
    case V_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData EvCopresence::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    EvCopresence::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*EvCopresence::GetClassData() const { return &_class_data_; }


void EvCopresence::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<EvCopresence*>(&to_msg);
  auto& from = static_cast<const EvCopresence&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Transient.EvCopresence)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.V_case()) {
    case kV3: {
      _this->_internal_mutable_v3()->::Transient::EvCopresence_V3::MergeFrom(
          from._internal_v3());
      break;
    }
    case V_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void EvCopresence::CopyFrom(const EvCopresence& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Transient.EvCopresence)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EvCopresence::IsInitialized() const {
  return true;
}

void EvCopresence::InternalSwap(EvCopresence* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.V_, other->_impl_.V_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata EvCopresence::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_transient_5fevents_5fclient_2eproto_getter, &descriptor_table_transient_5fevents_5fclient_2eproto_once,
      file_level_metadata_transient_5fevents_5fclient_2eproto[3]);
}

// ===================================================================

class AvatarPositionV3::_Internal {
 public:
  static const ::Common::Float3& position(const AvatarPositionV3* msg);
  static const ::Common::Float3& rotation(const AvatarPositionV3* msg);
};

const ::Common::Float3&
AvatarPositionV3::_Internal::position(const AvatarPositionV3* msg) {
  return *msg->_impl_.position_;
}
const ::Common::Float3&
AvatarPositionV3::_Internal::rotation(const AvatarPositionV3* msg) {
  return *msg->_impl_.rotation_;
}
void AvatarPositionV3::clear_position() {
  if (GetArenaForAllocation() == nullptr && _impl_.position_ != nullptr) {
    delete _impl_.position_;
  }
  _impl_.position_ = nullptr;
}
void AvatarPositionV3::clear_rotation() {
  if (GetArenaForAllocation() == nullptr && _impl_.rotation_ != nullptr) {
    delete _impl_.rotation_;
  }
  _impl_.rotation_ = nullptr;
}
AvatarPositionV3::AvatarPositionV3(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Transient.AvatarPositionV3)
}
AvatarPositionV3::AvatarPositionV3(const AvatarPositionV3& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AvatarPositionV3* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.position_){nullptr}
    , decltype(_impl_.rotation_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_position()) {
    _this->_impl_.position_ = new ::Common::Float3(*from._impl_.position_);
  }
  if (from._internal_has_rotation()) {
    _this->_impl_.rotation_ = new ::Common::Float3(*from._impl_.rotation_);
  }
  // @@protoc_insertion_point(copy_constructor:Transient.AvatarPositionV3)
}

inline void AvatarPositionV3::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.position_){nullptr}
    , decltype(_impl_.rotation_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

AvatarPositionV3::~AvatarPositionV3() {
  // @@protoc_insertion_point(destructor:Transient.AvatarPositionV3)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AvatarPositionV3::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.position_;
  if (this != internal_default_instance()) delete _impl_.rotation_;
}

void AvatarPositionV3::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AvatarPositionV3::Clear() {
// @@protoc_insertion_point(message_clear_start:Transient.AvatarPositionV3)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.position_ != nullptr) {
    delete _impl_.position_;
  }
  _impl_.position_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.rotation_ != nullptr) {
    delete _impl_.rotation_;
  }
  _impl_.rotation_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AvatarPositionV3::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Common.Float3 position = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_position(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Common.Float3 rotation = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_rotation(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AvatarPositionV3::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Transient.AvatarPositionV3)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Common.Float3 position = 1;
  if (this->_internal_has_position()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::position(this),
        _Internal::position(this).GetCachedSize(), target, stream);
  }

  // .Common.Float3 rotation = 2;
  if (this->_internal_has_rotation()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::rotation(this),
        _Internal::rotation(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Transient.AvatarPositionV3)
  return target;
}

size_t AvatarPositionV3::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Transient.AvatarPositionV3)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Common.Float3 position = 1;
  if (this->_internal_has_position()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.position_);
  }

  // .Common.Float3 rotation = 2;
  if (this->_internal_has_rotation()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.rotation_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AvatarPositionV3::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AvatarPositionV3::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AvatarPositionV3::GetClassData() const { return &_class_data_; }


void AvatarPositionV3::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AvatarPositionV3*>(&to_msg);
  auto& from = static_cast<const AvatarPositionV3&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Transient.AvatarPositionV3)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_position()) {
    _this->_internal_mutable_position()->::Common::Float3::MergeFrom(
        from._internal_position());
  }
  if (from._internal_has_rotation()) {
    _this->_internal_mutable_rotation()->::Common::Float3::MergeFrom(
        from._internal_rotation());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AvatarPositionV3::CopyFrom(const AvatarPositionV3& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Transient.AvatarPositionV3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AvatarPositionV3::IsInitialized() const {
  return true;
}

void AvatarPositionV3::InternalSwap(AvatarPositionV3* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AvatarPositionV3, _impl_.rotation_)
      + sizeof(AvatarPositionV3::_impl_.rotation_)
      - PROTOBUF_FIELD_OFFSET(AvatarPositionV3, _impl_.position_)>(
          reinterpret_cast<char*>(&_impl_.position_),
          reinterpret_cast<char*>(&other->_impl_.position_));
}

::PROTOBUF_NAMESPACE_ID::Metadata AvatarPositionV3::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_transient_5fevents_5fclient_2eproto_getter, &descriptor_table_transient_5fevents_5fclient_2eproto_once,
      file_level_metadata_transient_5fevents_5fclient_2eproto[4]);
}

// ===================================================================

class AvatarControllerV3::_Internal {
 public:
  using HasBits = decltype(std::declval<AvatarControllerV3>()._impl_._has_bits_);
  static const ::Transient::AvatarPositionV3& location(const AvatarControllerV3* msg);
  static const ::Common::Float3& beamtarget(const AvatarControllerV3* msg);
  static void set_has_beamtarget(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::Transient::AvatarPositionV3&
AvatarControllerV3::_Internal::location(const AvatarControllerV3* msg) {
  return *msg->_impl_.location_;
}
const ::Common::Float3&
AvatarControllerV3::_Internal::beamtarget(const AvatarControllerV3* msg) {
  return *msg->_impl_.beamtarget_;
}
void AvatarControllerV3::clear_beamtarget() {
  if (_impl_.beamtarget_ != nullptr) _impl_.beamtarget_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
AvatarControllerV3::AvatarControllerV3(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Transient.AvatarControllerV3)
}
AvatarControllerV3::AvatarControllerV3(const AvatarControllerV3& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AvatarControllerV3* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.location_){nullptr}
    , decltype(_impl_.beamtarget_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_location()) {
    _this->_impl_.location_ = new ::Transient::AvatarPositionV3(*from._impl_.location_);
  }
  if (from._internal_has_beamtarget()) {
    _this->_impl_.beamtarget_ = new ::Common::Float3(*from._impl_.beamtarget_);
  }
  // @@protoc_insertion_point(copy_constructor:Transient.AvatarControllerV3)
}

inline void AvatarControllerV3::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.location_){nullptr}
    , decltype(_impl_.beamtarget_){nullptr}
  };
}

AvatarControllerV3::~AvatarControllerV3() {
  // @@protoc_insertion_point(destructor:Transient.AvatarControllerV3)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AvatarControllerV3::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.location_;
  if (this != internal_default_instance()) delete _impl_.beamtarget_;
}

void AvatarControllerV3::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AvatarControllerV3::Clear() {
// @@protoc_insertion_point(message_clear_start:Transient.AvatarControllerV3)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.location_ != nullptr) {
    delete _impl_.location_;
  }
  _impl_.location_ = nullptr;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.beamtarget_ != nullptr);
    _impl_.beamtarget_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AvatarControllerV3::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Transient.AvatarPositionV3 location = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_location(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .Common.Float3 beamTarget = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_beamtarget(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AvatarControllerV3::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Transient.AvatarControllerV3)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Transient.AvatarPositionV3 location = 1;
  if (this->_internal_has_location()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::location(this),
        _Internal::location(this).GetCachedSize(), target, stream);
  }

  // optional .Common.Float3 beamTarget = 2;
  if (_internal_has_beamtarget()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::beamtarget(this),
        _Internal::beamtarget(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Transient.AvatarControllerV3)
  return target;
}

size_t AvatarControllerV3::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Transient.AvatarControllerV3)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Transient.AvatarPositionV3 location = 1;
  if (this->_internal_has_location()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.location_);
  }

  // optional .Common.Float3 beamTarget = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.beamtarget_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AvatarControllerV3::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AvatarControllerV3::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AvatarControllerV3::GetClassData() const { return &_class_data_; }


void AvatarControllerV3::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AvatarControllerV3*>(&to_msg);
  auto& from = static_cast<const AvatarControllerV3&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Transient.AvatarControllerV3)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_location()) {
    _this->_internal_mutable_location()->::Transient::AvatarPositionV3::MergeFrom(
        from._internal_location());
  }
  if (from._internal_has_beamtarget()) {
    _this->_internal_mutable_beamtarget()->::Common::Float3::MergeFrom(
        from._internal_beamtarget());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AvatarControllerV3::CopyFrom(const AvatarControllerV3& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Transient.AvatarControllerV3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AvatarControllerV3::IsInitialized() const {
  return true;
}

void AvatarControllerV3::InternalSwap(AvatarControllerV3* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AvatarControllerV3, _impl_.beamtarget_)
      + sizeof(AvatarControllerV3::_impl_.beamtarget_)
      - PROTOBUF_FIELD_OFFSET(AvatarControllerV3, _impl_.location_)>(
          reinterpret_cast<char*>(&_impl_.location_),
          reinterpret_cast<char*>(&other->_impl_.location_));
}

::PROTOBUF_NAMESPACE_ID::Metadata AvatarControllerV3::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_transient_5fevents_5fclient_2eproto_getter, &descriptor_table_transient_5fevents_5fclient_2eproto_once,
      file_level_metadata_transient_5fevents_5fclient_2eproto[5]);
}

// ===================================================================

class AvatarRootV3::_Internal {
 public:
  using HasBits = decltype(std::declval<AvatarRootV3>()._impl_._has_bits_);
  static const ::Transient::AvatarPositionV3& location(const AvatarRootV3* msg);
  static void set_has_animationstate(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_animationstatecustom(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::Transient::AvatarPositionV3&
AvatarRootV3::_Internal::location(const AvatarRootV3* msg) {
  return *msg->_impl_.location_;
}
AvatarRootV3::AvatarRootV3(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Transient.AvatarRootV3)
}
AvatarRootV3::AvatarRootV3(const AvatarRootV3& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AvatarRootV3* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.animationstatecustom_){}
    , decltype(_impl_.location_){nullptr}
    , decltype(_impl_.animationstate_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.animationstatecustom_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.animationstatecustom_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_animationstatecustom()) {
    _this->_impl_.animationstatecustom_.Set(from._internal_animationstatecustom(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_location()) {
    _this->_impl_.location_ = new ::Transient::AvatarPositionV3(*from._impl_.location_);
  }
  _this->_impl_.animationstate_ = from._impl_.animationstate_;
  // @@protoc_insertion_point(copy_constructor:Transient.AvatarRootV3)
}

inline void AvatarRootV3::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.animationstatecustom_){}
    , decltype(_impl_.location_){nullptr}
    , decltype(_impl_.animationstate_){0}
  };
  _impl_.animationstatecustom_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.animationstatecustom_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

AvatarRootV3::~AvatarRootV3() {
  // @@protoc_insertion_point(destructor:Transient.AvatarRootV3)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AvatarRootV3::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.animationstatecustom_.Destroy();
  if (this != internal_default_instance()) delete _impl_.location_;
}

void AvatarRootV3::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AvatarRootV3::Clear() {
// @@protoc_insertion_point(message_clear_start:Transient.AvatarRootV3)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.animationstatecustom_.ClearNonDefaultToEmpty();
  }
  if (GetArenaForAllocation() == nullptr && _impl_.location_ != nullptr) {
    delete _impl_.location_;
  }
  _impl_.location_ = nullptr;
  _impl_.animationstate_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AvatarRootV3::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Transient.AvatarPositionV3 location = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_location(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .Transient.AvatarRootV3.AvatarMovementStateEnum animationState = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_animationstate(static_cast<::Transient::AvatarRootV3_AvatarMovementStateEnum>(val));
        } else
          goto handle_unusual;
        continue;
      // optional string animationStateCustom = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_animationstatecustom();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "Transient.AvatarRootV3.animationStateCustom"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AvatarRootV3::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Transient.AvatarRootV3)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Transient.AvatarPositionV3 location = 1;
  if (this->_internal_has_location()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::location(this),
        _Internal::location(this).GetCachedSize(), target, stream);
  }

  // optional .Transient.AvatarRootV3.AvatarMovementStateEnum animationState = 2;
  if (_internal_has_animationstate()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_animationstate(), target);
  }

  // optional string animationStateCustom = 3;
  if (_internal_has_animationstatecustom()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_animationstatecustom().data(), static_cast<int>(this->_internal_animationstatecustom().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Transient.AvatarRootV3.animationStateCustom");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_animationstatecustom(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Transient.AvatarRootV3)
  return target;
}

size_t AvatarRootV3::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Transient.AvatarRootV3)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string animationStateCustom = 3;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_animationstatecustom());
  }

  // .Transient.AvatarPositionV3 location = 1;
  if (this->_internal_has_location()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.location_);
  }

  // optional .Transient.AvatarRootV3.AvatarMovementStateEnum animationState = 2;
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_animationstate());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AvatarRootV3::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AvatarRootV3::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AvatarRootV3::GetClassData() const { return &_class_data_; }


void AvatarRootV3::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AvatarRootV3*>(&to_msg);
  auto& from = static_cast<const AvatarRootV3&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Transient.AvatarRootV3)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_animationstatecustom()) {
    _this->_internal_set_animationstatecustom(from._internal_animationstatecustom());
  }
  if (from._internal_has_location()) {
    _this->_internal_mutable_location()->::Transient::AvatarPositionV3::MergeFrom(
        from._internal_location());
  }
  if (from._internal_has_animationstate()) {
    _this->_internal_set_animationstate(from._internal_animationstate());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AvatarRootV3::CopyFrom(const AvatarRootV3& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Transient.AvatarRootV3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AvatarRootV3::IsInitialized() const {
  return true;
}

void AvatarRootV3::InternalSwap(AvatarRootV3* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.animationstatecustom_, lhs_arena,
      &other->_impl_.animationstatecustom_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AvatarRootV3, _impl_.animationstate_)
      + sizeof(AvatarRootV3::_impl_.animationstate_)
      - PROTOBUF_FIELD_OFFSET(AvatarRootV3, _impl_.location_)>(
          reinterpret_cast<char*>(&_impl_.location_),
          reinterpret_cast<char*>(&other->_impl_.location_));
}

::PROTOBUF_NAMESPACE_ID::Metadata AvatarRootV3::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_transient_5fevents_5fclient_2eproto_getter, &descriptor_table_transient_5fevents_5fclient_2eproto_once,
      file_level_metadata_transient_5fevents_5fclient_2eproto[6]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace Transient
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::Transient::EvTransientJournalUpdate_V1*
Arena::CreateMaybeMessage< ::Transient::EvTransientJournalUpdate_V1 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Transient::EvTransientJournalUpdate_V1 >(arena);
}
template<> PROTOBUF_NOINLINE ::Transient::EvTransientJournalUpdate*
Arena::CreateMaybeMessage< ::Transient::EvTransientJournalUpdate >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Transient::EvTransientJournalUpdate >(arena);
}
template<> PROTOBUF_NOINLINE ::Transient::EvCopresence_V3*
Arena::CreateMaybeMessage< ::Transient::EvCopresence_V3 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Transient::EvCopresence_V3 >(arena);
}
template<> PROTOBUF_NOINLINE ::Transient::EvCopresence*
Arena::CreateMaybeMessage< ::Transient::EvCopresence >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Transient::EvCopresence >(arena);
}
template<> PROTOBUF_NOINLINE ::Transient::AvatarPositionV3*
Arena::CreateMaybeMessage< ::Transient::AvatarPositionV3 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Transient::AvatarPositionV3 >(arena);
}
template<> PROTOBUF_NOINLINE ::Transient::AvatarControllerV3*
Arena::CreateMaybeMessage< ::Transient::AvatarControllerV3 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Transient::AvatarControllerV3 >(arena);
}
template<> PROTOBUF_NOINLINE ::Transient::AvatarRootV3*
Arena::CreateMaybeMessage< ::Transient::AvatarRootV3 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Transient::AvatarRootV3 >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>

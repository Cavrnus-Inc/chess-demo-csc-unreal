// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: relay.proto

#include "relay.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace ServerData {
PROTOBUF_CONSTEXPR RelayClientMessageBatch::RelayClientMessageBatch(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.messages_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RelayClientMessageBatchDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RelayClientMessageBatchDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RelayClientMessageBatchDefaultTypeInternal() {}
  union {
    RelayClientMessageBatch _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RelayClientMessageBatchDefaultTypeInternal _RelayClientMessageBatch_default_instance_;
PROTOBUF_CONSTEXPR RelayClientMessage::RelayClientMessage(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.Msg_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct RelayClientMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RelayClientMessageDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RelayClientMessageDefaultTypeInternal() {}
  union {
    RelayClientMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RelayClientMessageDefaultTypeInternal _RelayClientMessage_default_instance_;
PROTOBUF_CONSTEXPR RelayRemoteMessageBatch::RelayRemoteMessageBatch(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.messages_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RelayRemoteMessageBatchDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RelayRemoteMessageBatchDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RelayRemoteMessageBatchDefaultTypeInternal() {}
  union {
    RelayRemoteMessageBatch _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RelayRemoteMessageBatchDefaultTypeInternal _RelayRemoteMessageBatch_default_instance_;
PROTOBUF_CONSTEXPR RelayRemoteMessage::RelayRemoteMessage(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.Msg_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct RelayRemoteMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RelayRemoteMessageDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RelayRemoteMessageDefaultTypeInternal() {}
  union {
    RelayRemoteMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RelayRemoteMessageDefaultTypeInternal _RelayRemoteMessage_default_instance_;
PROTOBUF_CONSTEXPR KeepAlive::KeepAlive(
    ::_pbi::ConstantInitialized) {}
struct KeepAliveDefaultTypeInternal {
  PROTOBUF_CONSTEXPR KeepAliveDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~KeepAliveDefaultTypeInternal() {}
  union {
    KeepAlive _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 KeepAliveDefaultTypeInternal _KeepAlive_default_instance_;
PROTOBUF_CONSTEXPR UpdateTime::UpdateTime(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.time_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UpdateTimeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateTimeDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateTimeDefaultTypeInternal() {}
  union {
    UpdateTime _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateTimeDefaultTypeInternal _UpdateTime_default_instance_;
PROTOBUF_CONSTEXPR StatusMessage::StatusMessage(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.Message_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct StatusMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StatusMessageDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StatusMessageDefaultTypeInternal() {}
  union {
    StatusMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StatusMessageDefaultTypeInternal _StatusMessage_default_instance_;
PROTOBUF_CONSTEXPR AuthenticateReq::AuthenticateReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.server_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.email_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.password_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.reqid_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AuthenticateReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AuthenticateReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AuthenticateReqDefaultTypeInternal() {}
  union {
    AuthenticateReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AuthenticateReqDefaultTypeInternal _AuthenticateReq_default_instance_;
PROTOBUF_CONSTEXPR AuthenticateGuestReq::AuthenticateGuestReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.server_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.screenname_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.reqid_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AuthenticateGuestReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AuthenticateGuestReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AuthenticateGuestReqDefaultTypeInternal() {}
  union {
    AuthenticateGuestReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AuthenticateGuestReqDefaultTypeInternal _AuthenticateGuestReq_default_instance_;
PROTOBUF_CONSTEXPR AuthenticateResp::AuthenticateResp(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.reqid_)*/0
  , /*decltype(_impl_.Resp_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct AuthenticateRespDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AuthenticateRespDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AuthenticateRespDefaultTypeInternal() {}
  union {
    AuthenticateResp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AuthenticateRespDefaultTypeInternal _AuthenticateResp_default_instance_;
PROTOBUF_CONSTEXPR AuthenticateGuestResp::AuthenticateGuestResp(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.reqid_)*/0
  , /*decltype(_impl_.Resp_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct AuthenticateGuestRespDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AuthenticateGuestRespDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AuthenticateGuestRespDefaultTypeInternal() {}
  union {
    AuthenticateGuestResp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AuthenticateGuestRespDefaultTypeInternal _AuthenticateGuestResp_default_instance_;
PROTOBUF_CONSTEXPR AuthenticateWithLinkReq::AuthenticateWithLinkReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.link_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.reqid_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AuthenticateWithLinkReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AuthenticateWithLinkReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AuthenticateWithLinkReqDefaultTypeInternal() {}
  union {
    AuthenticateWithLinkReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AuthenticateWithLinkReqDefaultTypeInternal _AuthenticateWithLinkReq_default_instance_;
PROTOBUF_CONSTEXPR AuthenticateWithLinkResp::AuthenticateWithLinkResp(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.reqid_)*/0
  , /*decltype(_impl_.Resp_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct AuthenticateWithLinkRespDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AuthenticateWithLinkRespDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AuthenticateWithLinkRespDefaultTypeInternal() {}
  union {
    AuthenticateWithLinkResp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AuthenticateWithLinkRespDefaultTypeInternal _AuthenticateWithLinkResp_default_instance_;
PROTOBUF_CONSTEXPR ExitAllSpacesAndLogoutReq::ExitAllSpacesAndLogoutReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.reqid_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ExitAllSpacesAndLogoutReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ExitAllSpacesAndLogoutReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ExitAllSpacesAndLogoutReqDefaultTypeInternal() {}
  union {
    ExitAllSpacesAndLogoutReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ExitAllSpacesAndLogoutReqDefaultTypeInternal _ExitAllSpacesAndLogoutReq_default_instance_;
PROTOBUF_CONSTEXPR ExitAllSpacesAndLogoutResp::ExitAllSpacesAndLogoutResp(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.spacesexited_)*/{}
  , /*decltype(_impl_._spacesexited_cached_byte_size_)*/{0}
  , /*decltype(_impl_.reqid_)*/0
  , /*decltype(_impl_.Resp_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct ExitAllSpacesAndLogoutRespDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ExitAllSpacesAndLogoutRespDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ExitAllSpacesAndLogoutRespDefaultTypeInternal() {}
  union {
    ExitAllSpacesAndLogoutResp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ExitAllSpacesAndLogoutRespDefaultTypeInternal _ExitAllSpacesAndLogoutResp_default_instance_;
PROTOBUF_CONSTEXPR JoinSpaceFromIdReq::JoinSpaceFromIdReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.spaceid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.reqid_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct JoinSpaceFromIdReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR JoinSpaceFromIdReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~JoinSpaceFromIdReqDefaultTypeInternal() {}
  union {
    JoinSpaceFromIdReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 JoinSpaceFromIdReqDefaultTypeInternal _JoinSpaceFromIdReq_default_instance_;
PROTOBUF_CONSTEXPR JoinSpaceFromIdResp::JoinSpaceFromIdResp(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.reqid_)*/0
  , /*decltype(_impl_.Resp_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct JoinSpaceFromIdRespDefaultTypeInternal {
  PROTOBUF_CONSTEXPR JoinSpaceFromIdRespDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~JoinSpaceFromIdRespDefaultTypeInternal() {}
  union {
    JoinSpaceFromIdResp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 JoinSpaceFromIdRespDefaultTypeInternal _JoinSpaceFromIdResp_default_instance_;
PROTOBUF_CONSTEXPR ShutdownSpaceConnectionReq::ShutdownSpaceConnectionReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.spaceconnection_)*/nullptr
  , /*decltype(_impl_.reqid_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ShutdownSpaceConnectionReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ShutdownSpaceConnectionReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ShutdownSpaceConnectionReqDefaultTypeInternal() {}
  union {
    ShutdownSpaceConnectionReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ShutdownSpaceConnectionReqDefaultTypeInternal _ShutdownSpaceConnectionReq_default_instance_;
PROTOBUF_CONSTEXPR ShutdownSpaceConnectionResp::ShutdownSpaceConnectionResp(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.reqid_)*/0
  , /*decltype(_impl_.Resp_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct ShutdownSpaceConnectionRespDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ShutdownSpaceConnectionRespDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ShutdownSpaceConnectionRespDefaultTypeInternal() {}
  union {
    ShutdownSpaceConnectionResp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ShutdownSpaceConnectionRespDefaultTypeInternal _ShutdownSpaceConnectionResp_default_instance_;
PROTOBUF_CONSTEXPR PropertyValue::PropertyValue(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.Value_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct PropertyValueDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PropertyValueDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PropertyValueDefaultTypeInternal() {}
  union {
    PropertyValue _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PropertyValueDefaultTypeInternal _PropertyValue_default_instance_;
PROTOBUF_CONSTEXPR DefinePropertyDefaultValue::DefinePropertyDefaultValue(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.propertyid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.spaceconn_)*/nullptr
  , /*decltype(_impl_.propertyvalue_)*/nullptr
  , /*decltype(_impl_.localchangeid_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DefinePropertyDefaultValueDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DefinePropertyDefaultValueDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DefinePropertyDefaultValueDefaultTypeInternal() {}
  union {
    DefinePropertyDefaultValue _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DefinePropertyDefaultValueDefaultTypeInternal _DefinePropertyDefaultValue_default_instance_;
PROTOBUF_CONSTEXPR PostPropertyUpdate::PostPropertyUpdate(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.propertyid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.spaceconn_)*/nullptr
  , /*decltype(_impl_.propertyvalue_)*/nullptr
  , /*decltype(_impl_.localchangeid_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct PostPropertyUpdateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PostPropertyUpdateDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PostPropertyUpdateDefaultTypeInternal() {}
  union {
    PostPropertyUpdate _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PostPropertyUpdateDefaultTypeInternal _PostPropertyUpdate_default_instance_;
PROTOBUF_CONSTEXPR BeginTransientPropertyUpdate::BeginTransientPropertyUpdate(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.liveupdaterid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.propertyid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.spaceconn_)*/nullptr
  , /*decltype(_impl_.propertyvalue_)*/nullptr
  , /*decltype(_impl_.localchangeid_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct BeginTransientPropertyUpdateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BeginTransientPropertyUpdateDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~BeginTransientPropertyUpdateDefaultTypeInternal() {}
  union {
    BeginTransientPropertyUpdate _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BeginTransientPropertyUpdateDefaultTypeInternal _BeginTransientPropertyUpdate_default_instance_;
PROTOBUF_CONSTEXPR ContinueTransientPropertyUpdate::ContinueTransientPropertyUpdate(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.liveupdaterid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.propertyid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.spaceconn_)*/nullptr
  , /*decltype(_impl_.propertyvalue_)*/nullptr
  , /*decltype(_impl_.localchangeid_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ContinueTransientPropertyUpdateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ContinueTransientPropertyUpdateDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ContinueTransientPropertyUpdateDefaultTypeInternal() {}
  union {
    ContinueTransientPropertyUpdate _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ContinueTransientPropertyUpdateDefaultTypeInternal _ContinueTransientPropertyUpdate_default_instance_;
PROTOBUF_CONSTEXPR FinalizeTransientPropertyUpdate::FinalizeTransientPropertyUpdate(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.liveupdaterid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.propertyid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.spaceconn_)*/nullptr
  , /*decltype(_impl_.propertyvalue_)*/nullptr
  , /*decltype(_impl_.localchangeid_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct FinalizeTransientPropertyUpdateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FinalizeTransientPropertyUpdateDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FinalizeTransientPropertyUpdateDefaultTypeInternal() {}
  union {
    FinalizeTransientPropertyUpdate _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FinalizeTransientPropertyUpdateDefaultTypeInternal _FinalizeTransientPropertyUpdate_default_instance_;
PROTOBUF_CONSTEXPR CancelTransientPropertyUpdate::CancelTransientPropertyUpdate(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.liveupdaterid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.spaceconn_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CancelTransientPropertyUpdateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CancelTransientPropertyUpdateDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CancelTransientPropertyUpdateDefaultTypeInternal() {}
  union {
    CancelTransientPropertyUpdate _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CancelTransientPropertyUpdateDefaultTypeInternal _CancelTransientPropertyUpdate_default_instance_;
PROTOBUF_CONSTEXPR TransformPropertyValue::TransformPropertyValue(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.pos_)*/nullptr
  , /*decltype(_impl_.rot_)*/nullptr
  , /*decltype(_impl_.scl_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct TransformPropertyValueDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TransformPropertyValueDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TransformPropertyValueDefaultTypeInternal() {}
  union {
    TransformPropertyValue _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TransformPropertyValueDefaultTypeInternal _TransformPropertyValue_default_instance_;
PROTOBUF_CONSTEXPR GetAudioInputDevicesReq::GetAudioInputDevicesReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.reqid_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetAudioInputDevicesReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetAudioInputDevicesReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetAudioInputDevicesReqDefaultTypeInternal() {}
  union {
    GetAudioInputDevicesReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetAudioInputDevicesReqDefaultTypeInternal _GetAudioInputDevicesReq_default_instance_;
PROTOBUF_CONSTEXPR GetAudioOutputDevicesReq::GetAudioOutputDevicesReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.reqid_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetAudioOutputDevicesReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetAudioOutputDevicesReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetAudioOutputDevicesReqDefaultTypeInternal() {}
  union {
    GetAudioOutputDevicesReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetAudioOutputDevicesReqDefaultTypeInternal _GetAudioOutputDevicesReq_default_instance_;
PROTOBUF_CONSTEXPR GetVideoInputDevicesReq::GetVideoInputDevicesReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.reqid_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetVideoInputDevicesReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetVideoInputDevicesReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetVideoInputDevicesReqDefaultTypeInternal() {}
  union {
    GetVideoInputDevicesReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetVideoInputDevicesReqDefaultTypeInternal _GetVideoInputDevicesReq_default_instance_;
PROTOBUF_CONSTEXPR GetAudioInputDevicesResp::GetAudioInputDevicesResp(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.reqid_)*/0
  , /*decltype(_impl_.Resp_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct GetAudioInputDevicesRespDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetAudioInputDevicesRespDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetAudioInputDevicesRespDefaultTypeInternal() {}
  union {
    GetAudioInputDevicesResp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetAudioInputDevicesRespDefaultTypeInternal _GetAudioInputDevicesResp_default_instance_;
PROTOBUF_CONSTEXPR GetAudioOutputDevicesResp::GetAudioOutputDevicesResp(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.reqid_)*/0
  , /*decltype(_impl_.Resp_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct GetAudioOutputDevicesRespDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetAudioOutputDevicesRespDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetAudioOutputDevicesRespDefaultTypeInternal() {}
  union {
    GetAudioOutputDevicesResp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetAudioOutputDevicesRespDefaultTypeInternal _GetAudioOutputDevicesResp_default_instance_;
PROTOBUF_CONSTEXPR GetVideoInputDevicesResp::GetVideoInputDevicesResp(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.reqid_)*/0
  , /*decltype(_impl_.Resp_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct GetVideoInputDevicesRespDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetVideoInputDevicesRespDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetVideoInputDevicesRespDefaultTypeInternal() {}
  union {
    GetVideoInputDevicesResp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetVideoInputDevicesRespDefaultTypeInternal _GetVideoInputDevicesResp_default_instance_;
PROTOBUF_CONSTEXPR SetAudioInputDeviceReq::SetAudioInputDeviceReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.device_)*/nullptr
  , /*decltype(_impl_.reqid_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SetAudioInputDeviceReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetAudioInputDeviceReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetAudioInputDeviceReqDefaultTypeInternal() {}
  union {
    SetAudioInputDeviceReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetAudioInputDeviceReqDefaultTypeInternal _SetAudioInputDeviceReq_default_instance_;
PROTOBUF_CONSTEXPR SetAudioOutputDeviceReq::SetAudioOutputDeviceReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.device_)*/nullptr
  , /*decltype(_impl_.reqid_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SetAudioOutputDeviceReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetAudioOutputDeviceReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetAudioOutputDeviceReqDefaultTypeInternal() {}
  union {
    SetAudioOutputDeviceReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetAudioOutputDeviceReqDefaultTypeInternal _SetAudioOutputDeviceReq_default_instance_;
PROTOBUF_CONSTEXPR SetVideoInputDeviceReq::SetVideoInputDeviceReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.device_)*/nullptr
  , /*decltype(_impl_.reqid_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SetVideoInputDeviceReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetVideoInputDeviceReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetVideoInputDeviceReqDefaultTypeInternal() {}
  union {
    SetVideoInputDeviceReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetVideoInputDeviceReqDefaultTypeInternal _SetVideoInputDeviceReq_default_instance_;
PROTOBUF_CONSTEXPR SetAudioInputDeviceResp::SetAudioInputDeviceResp(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.reqid_)*/0
  , /*decltype(_impl_.Resp_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct SetAudioInputDeviceRespDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetAudioInputDeviceRespDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetAudioInputDeviceRespDefaultTypeInternal() {}
  union {
    SetAudioInputDeviceResp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetAudioInputDeviceRespDefaultTypeInternal _SetAudioInputDeviceResp_default_instance_;
PROTOBUF_CONSTEXPR SetAudioOutputDeviceResp::SetAudioOutputDeviceResp(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.reqid_)*/0
  , /*decltype(_impl_.Resp_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct SetAudioOutputDeviceRespDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetAudioOutputDeviceRespDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetAudioOutputDeviceRespDefaultTypeInternal() {}
  union {
    SetAudioOutputDeviceResp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetAudioOutputDeviceRespDefaultTypeInternal _SetAudioOutputDeviceResp_default_instance_;
PROTOBUF_CONSTEXPR SetVideoInputDeviceResp::SetVideoInputDeviceResp(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.reqid_)*/0
  , /*decltype(_impl_.Resp_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct SetVideoInputDeviceRespDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetVideoInputDeviceRespDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetVideoInputDeviceRespDefaultTypeInternal() {}
  union {
    SetVideoInputDeviceResp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetVideoInputDeviceRespDefaultTypeInternal _SetVideoInputDeviceResp_default_instance_;
PROTOBUF_CONSTEXPR PostCreateObject::PostCreateObject(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.newinstanceid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.uniqueobjectident_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.spaceconn_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct PostCreateObjectDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PostCreateObjectDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PostCreateObjectDefaultTypeInternal() {}
  union {
    PostCreateObject _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PostCreateObjectDefaultTypeInternal _PostCreateObject_default_instance_;
PROTOBUF_CONSTEXPR PostRemoveObject::PostRemoveObject(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.opid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.spaceconn_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct PostRemoveObjectDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PostRemoveObjectDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PostRemoveObjectDefaultTypeInternal() {}
  union {
    PostRemoveObject _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PostRemoveObjectDefaultTypeInternal _PostRemoveObject_default_instance_;
PROTOBUF_CONSTEXPR PropMetadataStatus::PropMetadataStatus(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.spaceconn_)*/nullptr
  , /*decltype(_impl_.propertypath_)*/nullptr
  , /*decltype(_impl_.isreadonly_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct PropMetadataStatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PropMetadataStatusDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PropMetadataStatusDefaultTypeInternal() {}
  union {
    PropMetadataStatus _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PropMetadataStatusDefaultTypeInternal _PropMetadataStatus_default_instance_;
PROTOBUF_CONSTEXPR PropertyValueStatus::PropertyValueStatus(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.spaceconn_)*/nullptr
  , /*decltype(_impl_.propertypath_)*/nullptr
  , /*decltype(_impl_.propertyvalue_)*/nullptr
  , /*decltype(_impl_.priority_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct PropertyValueStatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PropertyValueStatusDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PropertyValueStatusDefaultTypeInternal() {}
  union {
    PropertyValueStatus _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PropertyValueStatusDefaultTypeInternal _PropertyValueStatus_default_instance_;
PROTOBUF_CONSTEXPR LocalPropertyHandledResp::LocalPropertyHandledResp(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.spaceconn_)*/nullptr
  , /*decltype(_impl_.propertypath_)*/nullptr
  , /*decltype(_impl_.localpropchangeid_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct LocalPropertyHandledRespDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LocalPropertyHandledRespDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LocalPropertyHandledRespDefaultTypeInternal() {}
  union {
    LocalPropertyHandledResp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LocalPropertyHandledRespDefaultTypeInternal _LocalPropertyHandledResp_default_instance_;
PROTOBUF_CONSTEXPR UserAdded::UserAdded(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.spaceconn_)*/nullptr
  , /*decltype(_impl_.user_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UserAddedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserAddedDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserAddedDefaultTypeInternal() {}
  union {
    UserAdded _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserAddedDefaultTypeInternal _UserAdded_default_instance_;
PROTOBUF_CONSTEXPR UserRemoved::UserRemoved(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.userid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.spaceconn_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UserRemovedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserRemovedDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserRemovedDefaultTypeInternal() {}
  union {
    UserRemoved _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserRemovedDefaultTypeInternal _UserRemoved_default_instance_;
PROTOBUF_CONSTEXPR UserVideoFrame::UserVideoFrame(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.userid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.stream_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.spaceconn_)*/nullptr
  , /*decltype(_impl_.resx_)*/0
  , /*decltype(_impl_.resy_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UserVideoFrameDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserVideoFrameDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserVideoFrameDefaultTypeInternal() {}
  union {
    UserVideoFrame _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserVideoFrameDefaultTypeInternal _UserVideoFrame_default_instance_;
PROTOBUF_CONSTEXPR SpaceInfo::SpaceInfo(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.spaceid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.spacename_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.spacethumbnailurl_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.archived_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SpaceInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SpaceInfoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SpaceInfoDefaultTypeInternal() {}
  union {
    SpaceInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SpaceInfoDefaultTypeInternal _SpaceInfo_default_instance_;
PROTOBUF_CONSTEXPR ObjectAdded::ObjectAdded(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.creationopid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.propertiescontainer_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.objectcreated_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.spaceconn_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ObjectAddedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ObjectAddedDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ObjectAddedDefaultTypeInternal() {}
  union {
    ObjectAdded _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ObjectAddedDefaultTypeInternal _ObjectAdded_default_instance_;
PROTOBUF_CONSTEXPR ObjectRemoved::ObjectRemoved(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.propertiescontainer_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.spaceconn_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ObjectRemovedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ObjectRemovedDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ObjectRemovedDefaultTypeInternal() {}
  union {
    ObjectRemoved _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ObjectRemovedDefaultTypeInternal _ObjectRemoved_default_instance_;
PROTOBUF_CONSTEXPR UpdateLocalUserMuted::UpdateLocalUserMuted(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.spaceconn_)*/nullptr
  , /*decltype(_impl_.muted_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UpdateLocalUserMutedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateLocalUserMutedDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateLocalUserMutedDefaultTypeInternal() {}
  union {
    UpdateLocalUserMuted _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateLocalUserMutedDefaultTypeInternal _UpdateLocalUserMuted_default_instance_;
PROTOBUF_CONSTEXPR UpdateLocalUserCoPresence::UpdateLocalUserCoPresence(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.spaceconn_)*/nullptr
  , /*decltype(_impl_.localuserroottransform_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UpdateLocalUserCoPresenceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateLocalUserCoPresenceDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateLocalUserCoPresenceDefaultTypeInternal() {}
  union {
    UpdateLocalUserCoPresence _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateLocalUserCoPresenceDefaultTypeInternal _UpdateLocalUserCoPresence_default_instance_;
PROTOBUF_CONSTEXPR UpdateLocalUserStreamState::UpdateLocalUserStreamState(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.spaceconn_)*/nullptr
  , /*decltype(_impl_.streaming_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UpdateLocalUserStreamStateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateLocalUserStreamStateDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateLocalUserStreamStateDefaultTypeInternal() {}
  union {
    UpdateLocalUserStreamState _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateLocalUserStreamStateDefaultTypeInternal _UpdateLocalUserStreamState_default_instance_;
PROTOBUF_CONSTEXPR PermissionStatusReq::PermissionStatusReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.permission_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.spaceconn_)*/nullptr} {}
struct PermissionStatusReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PermissionStatusReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PermissionStatusReqDefaultTypeInternal() {}
  union {
    PermissionStatusReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PermissionStatusReqDefaultTypeInternal _PermissionStatusReq_default_instance_;
PROTOBUF_CONSTEXPR PermissionStatus::PermissionStatus(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.permission_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.spaceconn_)*/nullptr
  , /*decltype(_impl_.value_)*/false} {}
struct PermissionStatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PermissionStatusDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PermissionStatusDefaultTypeInternal() {}
  union {
    PermissionStatus _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PermissionStatusDefaultTypeInternal _PermissionStatus_default_instance_;
PROTOBUF_CONSTEXPR AllJoinableSpacesReq::AllJoinableSpacesReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.reqid_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AllJoinableSpacesReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AllJoinableSpacesReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AllJoinableSpacesReqDefaultTypeInternal() {}
  union {
    AllJoinableSpacesReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AllJoinableSpacesReqDefaultTypeInternal _AllJoinableSpacesReq_default_instance_;
PROTOBUF_CONSTEXPR AllJoinableSpacesResp::AllJoinableSpacesResp(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.availablespaces_)*/{}
  , /*decltype(_impl_.reqid_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AllJoinableSpacesRespDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AllJoinableSpacesRespDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AllJoinableSpacesRespDefaultTypeInternal() {}
  union {
    AllJoinableSpacesResp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AllJoinableSpacesRespDefaultTypeInternal _AllJoinableSpacesResp_default_instance_;
}  // namespace ServerData
static ::_pb::Metadata file_level_metadata_relay_2eproto[57];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_relay_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_relay_2eproto = nullptr;

const uint32_t TableStruct_relay_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ServerData::RelayClientMessageBatch, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ServerData::RelayClientMessageBatch, _impl_.messages_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ServerData::RelayClientMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::ServerData::RelayClientMessage, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::ServerData::RelayClientMessage, _impl_.Msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ServerData::RelayRemoteMessageBatch, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ServerData::RelayRemoteMessageBatch, _impl_.messages_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ServerData::RelayRemoteMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::ServerData::RelayRemoteMessage, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::ServerData::RelayRemoteMessage, _impl_.Msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ServerData::KeepAlive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ServerData::UpdateTime, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ServerData::UpdateTime, _impl_.time_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ServerData::StatusMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::ServerData::StatusMessage, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::ServerData::StatusMessage, _impl_.Message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ServerData::AuthenticateReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ServerData::AuthenticateReq, _impl_.reqid_),
  PROTOBUF_FIELD_OFFSET(::ServerData::AuthenticateReq, _impl_.server_),
  PROTOBUF_FIELD_OFFSET(::ServerData::AuthenticateReq, _impl_.email_),
  PROTOBUF_FIELD_OFFSET(::ServerData::AuthenticateReq, _impl_.password_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ServerData::AuthenticateGuestReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ServerData::AuthenticateGuestReq, _impl_.reqid_),
  PROTOBUF_FIELD_OFFSET(::ServerData::AuthenticateGuestReq, _impl_.server_),
  PROTOBUF_FIELD_OFFSET(::ServerData::AuthenticateGuestReq, _impl_.screenname_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ServerData::AuthenticateResp, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::ServerData::AuthenticateResp, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ServerData::AuthenticateResp, _impl_.reqid_),
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::ServerData::AuthenticateResp, _impl_.Resp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ServerData::AuthenticateGuestResp, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::ServerData::AuthenticateGuestResp, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ServerData::AuthenticateGuestResp, _impl_.reqid_),
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::ServerData::AuthenticateGuestResp, _impl_.Resp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ServerData::AuthenticateWithLinkReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ServerData::AuthenticateWithLinkReq, _impl_.reqid_),
  PROTOBUF_FIELD_OFFSET(::ServerData::AuthenticateWithLinkReq, _impl_.link_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ServerData::AuthenticateWithLinkResp, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::ServerData::AuthenticateWithLinkResp, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ServerData::AuthenticateWithLinkResp, _impl_.reqid_),
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::ServerData::AuthenticateWithLinkResp, _impl_.Resp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ServerData::ExitAllSpacesAndLogoutReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ServerData::ExitAllSpacesAndLogoutReq, _impl_.reqid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ServerData::ExitAllSpacesAndLogoutResp, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::ServerData::ExitAllSpacesAndLogoutResp, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ServerData::ExitAllSpacesAndLogoutResp, _impl_.reqid_),
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::ServerData::ExitAllSpacesAndLogoutResp, _impl_.spacesexited_),
  PROTOBUF_FIELD_OFFSET(::ServerData::ExitAllSpacesAndLogoutResp, _impl_.Resp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ServerData::JoinSpaceFromIdReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ServerData::JoinSpaceFromIdReq, _impl_.reqid_),
  PROTOBUF_FIELD_OFFSET(::ServerData::JoinSpaceFromIdReq, _impl_.spaceid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ServerData::JoinSpaceFromIdResp, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::ServerData::JoinSpaceFromIdResp, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ServerData::JoinSpaceFromIdResp, _impl_.reqid_),
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::ServerData::JoinSpaceFromIdResp, _impl_.Resp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ServerData::ShutdownSpaceConnectionReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ServerData::ShutdownSpaceConnectionReq, _impl_.reqid_),
  PROTOBUF_FIELD_OFFSET(::ServerData::ShutdownSpaceConnectionReq, _impl_.spaceconnection_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ServerData::ShutdownSpaceConnectionResp, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::ServerData::ShutdownSpaceConnectionResp, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ServerData::ShutdownSpaceConnectionResp, _impl_.reqid_),
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::ServerData::ShutdownSpaceConnectionResp, _impl_.Resp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ServerData::PropertyValue, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::ServerData::PropertyValue, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::ServerData::PropertyValue, _impl_.Value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ServerData::DefinePropertyDefaultValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ServerData::DefinePropertyDefaultValue, _impl_.spaceconn_),
  PROTOBUF_FIELD_OFFSET(::ServerData::DefinePropertyDefaultValue, _impl_.propertyid_),
  PROTOBUF_FIELD_OFFSET(::ServerData::DefinePropertyDefaultValue, _impl_.localchangeid_),
  PROTOBUF_FIELD_OFFSET(::ServerData::DefinePropertyDefaultValue, _impl_.propertyvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ServerData::PostPropertyUpdate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ServerData::PostPropertyUpdate, _impl_.spaceconn_),
  PROTOBUF_FIELD_OFFSET(::ServerData::PostPropertyUpdate, _impl_.propertyid_),
  PROTOBUF_FIELD_OFFSET(::ServerData::PostPropertyUpdate, _impl_.localchangeid_),
  PROTOBUF_FIELD_OFFSET(::ServerData::PostPropertyUpdate, _impl_.propertyvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ServerData::BeginTransientPropertyUpdate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ServerData::BeginTransientPropertyUpdate, _impl_.spaceconn_),
  PROTOBUF_FIELD_OFFSET(::ServerData::BeginTransientPropertyUpdate, _impl_.liveupdaterid_),
  PROTOBUF_FIELD_OFFSET(::ServerData::BeginTransientPropertyUpdate, _impl_.propertyid_),
  PROTOBUF_FIELD_OFFSET(::ServerData::BeginTransientPropertyUpdate, _impl_.localchangeid_),
  PROTOBUF_FIELD_OFFSET(::ServerData::BeginTransientPropertyUpdate, _impl_.propertyvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ServerData::ContinueTransientPropertyUpdate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ServerData::ContinueTransientPropertyUpdate, _impl_.spaceconn_),
  PROTOBUF_FIELD_OFFSET(::ServerData::ContinueTransientPropertyUpdate, _impl_.liveupdaterid_),
  PROTOBUF_FIELD_OFFSET(::ServerData::ContinueTransientPropertyUpdate, _impl_.propertyid_),
  PROTOBUF_FIELD_OFFSET(::ServerData::ContinueTransientPropertyUpdate, _impl_.localchangeid_),
  PROTOBUF_FIELD_OFFSET(::ServerData::ContinueTransientPropertyUpdate, _impl_.propertyvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ServerData::FinalizeTransientPropertyUpdate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ServerData::FinalizeTransientPropertyUpdate, _impl_.spaceconn_),
  PROTOBUF_FIELD_OFFSET(::ServerData::FinalizeTransientPropertyUpdate, _impl_.liveupdaterid_),
  PROTOBUF_FIELD_OFFSET(::ServerData::FinalizeTransientPropertyUpdate, _impl_.propertyid_),
  PROTOBUF_FIELD_OFFSET(::ServerData::FinalizeTransientPropertyUpdate, _impl_.localchangeid_),
  PROTOBUF_FIELD_OFFSET(::ServerData::FinalizeTransientPropertyUpdate, _impl_.propertyvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ServerData::CancelTransientPropertyUpdate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ServerData::CancelTransientPropertyUpdate, _impl_.spaceconn_),
  PROTOBUF_FIELD_OFFSET(::ServerData::CancelTransientPropertyUpdate, _impl_.liveupdaterid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ServerData::TransformPropertyValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ServerData::TransformPropertyValue, _impl_.pos_),
  PROTOBUF_FIELD_OFFSET(::ServerData::TransformPropertyValue, _impl_.rot_),
  PROTOBUF_FIELD_OFFSET(::ServerData::TransformPropertyValue, _impl_.scl_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ServerData::GetAudioInputDevicesReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ServerData::GetAudioInputDevicesReq, _impl_.reqid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ServerData::GetAudioOutputDevicesReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ServerData::GetAudioOutputDevicesReq, _impl_.reqid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ServerData::GetVideoInputDevicesReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ServerData::GetVideoInputDevicesReq, _impl_.reqid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ServerData::GetAudioInputDevicesResp, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::ServerData::GetAudioInputDevicesResp, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ServerData::GetAudioInputDevicesResp, _impl_.reqid_),
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::ServerData::GetAudioInputDevicesResp, _impl_.Resp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ServerData::GetAudioOutputDevicesResp, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::ServerData::GetAudioOutputDevicesResp, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ServerData::GetAudioOutputDevicesResp, _impl_.reqid_),
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::ServerData::GetAudioOutputDevicesResp, _impl_.Resp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ServerData::GetVideoInputDevicesResp, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::ServerData::GetVideoInputDevicesResp, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ServerData::GetVideoInputDevicesResp, _impl_.reqid_),
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::ServerData::GetVideoInputDevicesResp, _impl_.Resp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ServerData::SetAudioInputDeviceReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ServerData::SetAudioInputDeviceReq, _impl_.reqid_),
  PROTOBUF_FIELD_OFFSET(::ServerData::SetAudioInputDeviceReq, _impl_.device_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ServerData::SetAudioOutputDeviceReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ServerData::SetAudioOutputDeviceReq, _impl_.reqid_),
  PROTOBUF_FIELD_OFFSET(::ServerData::SetAudioOutputDeviceReq, _impl_.device_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ServerData::SetVideoInputDeviceReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ServerData::SetVideoInputDeviceReq, _impl_.reqid_),
  PROTOBUF_FIELD_OFFSET(::ServerData::SetVideoInputDeviceReq, _impl_.device_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ServerData::SetAudioInputDeviceResp, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::ServerData::SetAudioInputDeviceResp, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ServerData::SetAudioInputDeviceResp, _impl_.reqid_),
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::ServerData::SetAudioInputDeviceResp, _impl_.Resp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ServerData::SetAudioOutputDeviceResp, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::ServerData::SetAudioOutputDeviceResp, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ServerData::SetAudioOutputDeviceResp, _impl_.reqid_),
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::ServerData::SetAudioOutputDeviceResp, _impl_.Resp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ServerData::SetVideoInputDeviceResp, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::ServerData::SetVideoInputDeviceResp, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ServerData::SetVideoInputDeviceResp, _impl_.reqid_),
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::ServerData::SetVideoInputDeviceResp, _impl_.Resp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ServerData::PostCreateObject, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ServerData::PostCreateObject, _impl_.spaceconn_),
  PROTOBUF_FIELD_OFFSET(::ServerData::PostCreateObject, _impl_.newinstanceid_),
  PROTOBUF_FIELD_OFFSET(::ServerData::PostCreateObject, _impl_.uniqueobjectident_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ServerData::PostRemoveObject, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ServerData::PostRemoveObject, _impl_.spaceconn_),
  PROTOBUF_FIELD_OFFSET(::ServerData::PostRemoveObject, _impl_.opid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ServerData::PropMetadataStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ServerData::PropMetadataStatus, _impl_.spaceconn_),
  PROTOBUF_FIELD_OFFSET(::ServerData::PropMetadataStatus, _impl_.propertypath_),
  PROTOBUF_FIELD_OFFSET(::ServerData::PropMetadataStatus, _impl_.isreadonly_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ServerData::PropertyValueStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ServerData::PropertyValueStatus, _impl_.spaceconn_),
  PROTOBUF_FIELD_OFFSET(::ServerData::PropertyValueStatus, _impl_.propertypath_),
  PROTOBUF_FIELD_OFFSET(::ServerData::PropertyValueStatus, _impl_.propertyvalue_),
  PROTOBUF_FIELD_OFFSET(::ServerData::PropertyValueStatus, _impl_.priority_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ServerData::LocalPropertyHandledResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ServerData::LocalPropertyHandledResp, _impl_.spaceconn_),
  PROTOBUF_FIELD_OFFSET(::ServerData::LocalPropertyHandledResp, _impl_.propertypath_),
  PROTOBUF_FIELD_OFFSET(::ServerData::LocalPropertyHandledResp, _impl_.localpropchangeid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ServerData::UserAdded, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ServerData::UserAdded, _impl_.spaceconn_),
  PROTOBUF_FIELD_OFFSET(::ServerData::UserAdded, _impl_.user_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ServerData::UserRemoved, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ServerData::UserRemoved, _impl_.spaceconn_),
  PROTOBUF_FIELD_OFFSET(::ServerData::UserRemoved, _impl_.userid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ServerData::UserVideoFrame, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ServerData::UserVideoFrame, _impl_.spaceconn_),
  PROTOBUF_FIELD_OFFSET(::ServerData::UserVideoFrame, _impl_.userid_),
  PROTOBUF_FIELD_OFFSET(::ServerData::UserVideoFrame, _impl_.resx_),
  PROTOBUF_FIELD_OFFSET(::ServerData::UserVideoFrame, _impl_.resy_),
  PROTOBUF_FIELD_OFFSET(::ServerData::UserVideoFrame, _impl_.stream_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ServerData::SpaceInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ServerData::SpaceInfo, _impl_.spaceid_),
  PROTOBUF_FIELD_OFFSET(::ServerData::SpaceInfo, _impl_.spacename_),
  PROTOBUF_FIELD_OFFSET(::ServerData::SpaceInfo, _impl_.spacethumbnailurl_),
  PROTOBUF_FIELD_OFFSET(::ServerData::SpaceInfo, _impl_.archived_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ServerData::ObjectAdded, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ServerData::ObjectAdded, _impl_.spaceconn_),
  PROTOBUF_FIELD_OFFSET(::ServerData::ObjectAdded, _impl_.creationopid_),
  PROTOBUF_FIELD_OFFSET(::ServerData::ObjectAdded, _impl_.propertiescontainer_),
  PROTOBUF_FIELD_OFFSET(::ServerData::ObjectAdded, _impl_.objectcreated_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ServerData::ObjectRemoved, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ServerData::ObjectRemoved, _impl_.spaceconn_),
  PROTOBUF_FIELD_OFFSET(::ServerData::ObjectRemoved, _impl_.propertiescontainer_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ServerData::UpdateLocalUserMuted, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ServerData::UpdateLocalUserMuted, _impl_.spaceconn_),
  PROTOBUF_FIELD_OFFSET(::ServerData::UpdateLocalUserMuted, _impl_.muted_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ServerData::UpdateLocalUserCoPresence, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ServerData::UpdateLocalUserCoPresence, _impl_.spaceconn_),
  PROTOBUF_FIELD_OFFSET(::ServerData::UpdateLocalUserCoPresence, _impl_.localuserroottransform_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ServerData::UpdateLocalUserStreamState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ServerData::UpdateLocalUserStreamState, _impl_.spaceconn_),
  PROTOBUF_FIELD_OFFSET(::ServerData::UpdateLocalUserStreamState, _impl_.streaming_),
  PROTOBUF_FIELD_OFFSET(::ServerData::PermissionStatusReq, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::ServerData::PermissionStatusReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ServerData::PermissionStatusReq, _impl_.spaceconn_),
  PROTOBUF_FIELD_OFFSET(::ServerData::PermissionStatusReq, _impl_.permission_),
  0,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::ServerData::PermissionStatus, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::ServerData::PermissionStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ServerData::PermissionStatus, _impl_.spaceconn_),
  PROTOBUF_FIELD_OFFSET(::ServerData::PermissionStatus, _impl_.permission_),
  PROTOBUF_FIELD_OFFSET(::ServerData::PermissionStatus, _impl_.value_),
  0,
  ~0u,
  ~0u,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ServerData::AllJoinableSpacesReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ServerData::AllJoinableSpacesReq, _impl_.reqid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ServerData::AllJoinableSpacesResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ServerData::AllJoinableSpacesResp, _impl_.reqid_),
  PROTOBUF_FIELD_OFFSET(::ServerData::AllJoinableSpacesResp, _impl_.availablespaces_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::ServerData::RelayClientMessageBatch)},
  { 7, -1, -1, sizeof(::ServerData::RelayClientMessage)},
  { 40, -1, -1, sizeof(::ServerData::RelayRemoteMessageBatch)},
  { 47, -1, -1, sizeof(::ServerData::RelayRemoteMessage)},
  { 79, -1, -1, sizeof(::ServerData::KeepAlive)},
  { 85, -1, -1, sizeof(::ServerData::UpdateTime)},
  { 92, -1, -1, sizeof(::ServerData::StatusMessage)},
  { 102, -1, -1, sizeof(::ServerData::AuthenticateReq)},
  { 112, -1, -1, sizeof(::ServerData::AuthenticateGuestReq)},
  { 121, -1, -1, sizeof(::ServerData::AuthenticateResp)},
  { 131, -1, -1, sizeof(::ServerData::AuthenticateGuestResp)},
  { 141, -1, -1, sizeof(::ServerData::AuthenticateWithLinkReq)},
  { 149, -1, -1, sizeof(::ServerData::AuthenticateWithLinkResp)},
  { 159, -1, -1, sizeof(::ServerData::ExitAllSpacesAndLogoutReq)},
  { 166, -1, -1, sizeof(::ServerData::ExitAllSpacesAndLogoutResp)},
  { 177, -1, -1, sizeof(::ServerData::JoinSpaceFromIdReq)},
  { 185, -1, -1, sizeof(::ServerData::JoinSpaceFromIdResp)},
  { 195, -1, -1, sizeof(::ServerData::ShutdownSpaceConnectionReq)},
  { 203, -1, -1, sizeof(::ServerData::ShutdownSpaceConnectionResp)},
  { 213, -1, -1, sizeof(::ServerData::PropertyValue)},
  { 227, -1, -1, sizeof(::ServerData::DefinePropertyDefaultValue)},
  { 237, -1, -1, sizeof(::ServerData::PostPropertyUpdate)},
  { 247, -1, -1, sizeof(::ServerData::BeginTransientPropertyUpdate)},
  { 258, -1, -1, sizeof(::ServerData::ContinueTransientPropertyUpdate)},
  { 269, -1, -1, sizeof(::ServerData::FinalizeTransientPropertyUpdate)},
  { 280, -1, -1, sizeof(::ServerData::CancelTransientPropertyUpdate)},
  { 288, -1, -1, sizeof(::ServerData::TransformPropertyValue)},
  { 297, -1, -1, sizeof(::ServerData::GetAudioInputDevicesReq)},
  { 304, -1, -1, sizeof(::ServerData::GetAudioOutputDevicesReq)},
  { 311, -1, -1, sizeof(::ServerData::GetVideoInputDevicesReq)},
  { 318, -1, -1, sizeof(::ServerData::GetAudioInputDevicesResp)},
  { 328, -1, -1, sizeof(::ServerData::GetAudioOutputDevicesResp)},
  { 338, -1, -1, sizeof(::ServerData::GetVideoInputDevicesResp)},
  { 348, -1, -1, sizeof(::ServerData::SetAudioInputDeviceReq)},
  { 356, -1, -1, sizeof(::ServerData::SetAudioOutputDeviceReq)},
  { 364, -1, -1, sizeof(::ServerData::SetVideoInputDeviceReq)},
  { 372, -1, -1, sizeof(::ServerData::SetAudioInputDeviceResp)},
  { 382, -1, -1, sizeof(::ServerData::SetAudioOutputDeviceResp)},
  { 392, -1, -1, sizeof(::ServerData::SetVideoInputDeviceResp)},
  { 402, -1, -1, sizeof(::ServerData::PostCreateObject)},
  { 411, -1, -1, sizeof(::ServerData::PostRemoveObject)},
  { 419, -1, -1, sizeof(::ServerData::PropMetadataStatus)},
  { 428, -1, -1, sizeof(::ServerData::PropertyValueStatus)},
  { 438, -1, -1, sizeof(::ServerData::LocalPropertyHandledResp)},
  { 447, -1, -1, sizeof(::ServerData::UserAdded)},
  { 455, -1, -1, sizeof(::ServerData::UserRemoved)},
  { 463, -1, -1, sizeof(::ServerData::UserVideoFrame)},
  { 474, -1, -1, sizeof(::ServerData::SpaceInfo)},
  { 484, -1, -1, sizeof(::ServerData::ObjectAdded)},
  { 494, -1, -1, sizeof(::ServerData::ObjectRemoved)},
  { 502, -1, -1, sizeof(::ServerData::UpdateLocalUserMuted)},
  { 510, -1, -1, sizeof(::ServerData::UpdateLocalUserCoPresence)},
  { 518, -1, -1, sizeof(::ServerData::UpdateLocalUserStreamState)},
  { 526, 534, -1, sizeof(::ServerData::PermissionStatusReq)},
  { 536, 545, -1, sizeof(::ServerData::PermissionStatus)},
  { 548, -1, -1, sizeof(::ServerData::AllJoinableSpacesReq)},
  { 555, -1, -1, sizeof(::ServerData::AllJoinableSpacesResp)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::ServerData::_RelayClientMessageBatch_default_instance_._instance,
  &::ServerData::_RelayClientMessage_default_instance_._instance,
  &::ServerData::_RelayRemoteMessageBatch_default_instance_._instance,
  &::ServerData::_RelayRemoteMessage_default_instance_._instance,
  &::ServerData::_KeepAlive_default_instance_._instance,
  &::ServerData::_UpdateTime_default_instance_._instance,
  &::ServerData::_StatusMessage_default_instance_._instance,
  &::ServerData::_AuthenticateReq_default_instance_._instance,
  &::ServerData::_AuthenticateGuestReq_default_instance_._instance,
  &::ServerData::_AuthenticateResp_default_instance_._instance,
  &::ServerData::_AuthenticateGuestResp_default_instance_._instance,
  &::ServerData::_AuthenticateWithLinkReq_default_instance_._instance,
  &::ServerData::_AuthenticateWithLinkResp_default_instance_._instance,
  &::ServerData::_ExitAllSpacesAndLogoutReq_default_instance_._instance,
  &::ServerData::_ExitAllSpacesAndLogoutResp_default_instance_._instance,
  &::ServerData::_JoinSpaceFromIdReq_default_instance_._instance,
  &::ServerData::_JoinSpaceFromIdResp_default_instance_._instance,
  &::ServerData::_ShutdownSpaceConnectionReq_default_instance_._instance,
  &::ServerData::_ShutdownSpaceConnectionResp_default_instance_._instance,
  &::ServerData::_PropertyValue_default_instance_._instance,
  &::ServerData::_DefinePropertyDefaultValue_default_instance_._instance,
  &::ServerData::_PostPropertyUpdate_default_instance_._instance,
  &::ServerData::_BeginTransientPropertyUpdate_default_instance_._instance,
  &::ServerData::_ContinueTransientPropertyUpdate_default_instance_._instance,
  &::ServerData::_FinalizeTransientPropertyUpdate_default_instance_._instance,
  &::ServerData::_CancelTransientPropertyUpdate_default_instance_._instance,
  &::ServerData::_TransformPropertyValue_default_instance_._instance,
  &::ServerData::_GetAudioInputDevicesReq_default_instance_._instance,
  &::ServerData::_GetAudioOutputDevicesReq_default_instance_._instance,
  &::ServerData::_GetVideoInputDevicesReq_default_instance_._instance,
  &::ServerData::_GetAudioInputDevicesResp_default_instance_._instance,
  &::ServerData::_GetAudioOutputDevicesResp_default_instance_._instance,
  &::ServerData::_GetVideoInputDevicesResp_default_instance_._instance,
  &::ServerData::_SetAudioInputDeviceReq_default_instance_._instance,
  &::ServerData::_SetAudioOutputDeviceReq_default_instance_._instance,
  &::ServerData::_SetVideoInputDeviceReq_default_instance_._instance,
  &::ServerData::_SetAudioInputDeviceResp_default_instance_._instance,
  &::ServerData::_SetAudioOutputDeviceResp_default_instance_._instance,
  &::ServerData::_SetVideoInputDeviceResp_default_instance_._instance,
  &::ServerData::_PostCreateObject_default_instance_._instance,
  &::ServerData::_PostRemoveObject_default_instance_._instance,
  &::ServerData::_PropMetadataStatus_default_instance_._instance,
  &::ServerData::_PropertyValueStatus_default_instance_._instance,
  &::ServerData::_LocalPropertyHandledResp_default_instance_._instance,
  &::ServerData::_UserAdded_default_instance_._instance,
  &::ServerData::_UserRemoved_default_instance_._instance,
  &::ServerData::_UserVideoFrame_default_instance_._instance,
  &::ServerData::_SpaceInfo_default_instance_._instance,
  &::ServerData::_ObjectAdded_default_instance_._instance,
  &::ServerData::_ObjectRemoved_default_instance_._instance,
  &::ServerData::_UpdateLocalUserMuted_default_instance_._instance,
  &::ServerData::_UpdateLocalUserCoPresence_default_instance_._instance,
  &::ServerData::_UpdateLocalUserStreamState_default_instance_._instance,
  &::ServerData::_PermissionStatusReq_default_instance_._instance,
  &::ServerData::_PermissionStatus_default_instance_._instance,
  &::ServerData::_AllJoinableSpacesReq_default_instance_._instance,
  &::ServerData::_AllJoinableSpacesResp_default_instance_._instance,
};

const char descriptor_table_protodef_relay_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\013relay.proto\022\nServerData\032\021relay_types.p"
  "roto\032\020properties.proto\032\014common.proto\"K\n\027"
  "RelayClientMessageBatch\0220\n\010Messages\030\001 \003("
  "\0132\036.ServerData.RelayClientMessage\"\251\016\n\022Re"
  "layClientMessage\022*\n\tKeepAlive\030\001 \001(\0132\025.Se"
  "rverData.KeepAliveH\000\022,\n\nUpdateTime\030\002 \001(\013"
  "2\026.ServerData.UpdateTimeH\000\0226\n\017Authentica"
  "teReq\030\n \001(\0132\033.ServerData.AuthenticateReq"
  "H\000\022@\n\024AuthenticateGuestReq\030\013 \001(\0132 .Serve"
  "rData.AuthenticateGuestReqH\000\022J\n\031ExitAllS"
  "pacesAndLogoutReq\030\014 \001(\0132%.ServerData.Exi"
  "tAllSpacesAndLogoutReqH\000\022<\n\022JoinSpaceFro"
  "mIdReq\030\024 \001(\0132\036.ServerData.JoinSpaceFromI"
  "dReqH\000\022L\n\032ShutdownSpaceConnectionReq\030\025 \001"
  "(\0132&.ServerData.ShutdownSpaceConnectionR"
  "eqH\000\022F\n\027GetAudioInputDevicesReq\030\036 \001(\0132#."
  "ServerData.GetAudioInputDevicesReqH\000\022H\n\030"
  "GetAudioOutputDevicesReq\030\037 \001(\0132$.ServerD"
  "ata.GetAudioOutputDevicesReqH\000\022F\n\027GetVid"
  "eoInputDevicesReq\030  \001(\0132#.ServerData.Get"
  "VideoInputDevicesReqH\000\022D\n\026SetAudioInputD"
  "eviceReq\030! \001(\0132\".ServerData.SetAudioInpu"
  "tDeviceReqH\000\022F\n\027SetAudioOutputDeviceReq\030"
  "\" \001(\0132#.ServerData.SetAudioOutputDeviceR"
  "eqH\000\022D\n\026SetVideoInputDeviceReq\030# \001(\0132\".S"
  "erverData.SetVideoInputDeviceReqH\000\022L\n\032De"
  "finePropertyDefaultValue\0302 \001(\0132&.ServerD"
  "ata.DefinePropertyDefaultValueH\000\022<\n\022Post"
  "PropertyUpdate\0305 \001(\0132\036.ServerData.PostPr"
  "opertyUpdateH\000\022P\n\034BeginTransientProperty"
  "Update\0306 \001(\0132(.ServerData.BeginTransient"
  "PropertyUpdateH\000\022V\n\037ContinueTransientPro"
  "pertyUpdate\0307 \001(\0132+.ServerData.ContinueT"
  "ransientPropertyUpdateH\000\022V\n\037FinalizeTran"
  "sientPropertyUpdate\0308 \001(\0132+.ServerData.F"
  "inalizeTransientPropertyUpdateH\000\022R\n\035Canc"
  "elTransientPropertyUpdate\0309 \001(\0132).Server"
  "Data.CancelTransientPropertyUpdateH\000\022@\n\024"
  "UpdateLocalUserMuted\030< \001(\0132 .ServerData."
  "UpdateLocalUserMutedH\000\022J\n\031UpdateLocalUse"
  "rCoPresence\030= \001(\0132%.ServerData.UpdateLoc"
  "alUserCoPresenceH\000\022L\n\032UpdateLocalUserStr"
  "eamState\030> \001(\0132&.ServerData.UpdateLocalU"
  "serStreamStateH\000\0228\n\020PostCreateObject\030F \001"
  "(\0132\034.ServerData.PostCreateObjectH\000\0228\n\020Po"
  "stRemoveObject\030G \001(\0132\034.ServerData.PostRe"
  "moveObjectH\000\022>\n\023PermissionStatusReq\030Z \001("
  "\0132\037.ServerData.PermissionStatusReqH\000\022@\n\024"
  "AllJoinableSpacesReq\030d \001(\0132 .ServerData."
  "AllJoinableSpacesReqH\000B\005\n\003Msg\"K\n\027RelayRe"
  "moteMessageBatch\0220\n\010Messages\030\001 \003(\0132\036.Ser"
  "verData.RelayRemoteMessage\"\246\014\n\022RelayRemo"
  "teMessage\022,\n\007Message\030\001 \001(\0132\031.ServerData."
  "StatusMessageH\000\0228\n\020AuthenticateResp\030\002 \001("
  "\0132\034.ServerData.AuthenticateRespH\000\022B\n\025Aut"
  "henticateGuestResp\030\003 \001(\0132!.ServerData.Au"
  "thenticateGuestRespH\000\022L\n\032ExitAllSpacesAn"
  "dLogoutResp\030\004 \001(\0132&.ServerData.ExitAllSp"
  "acesAndLogoutRespH\000\022>\n\023JoinSpaceFromIdRe"
  "sp\030\n \001(\0132\037.ServerData.JoinSpaceFromIdRes"
  "pH\000\022N\n\033ShutdownSpaceConnectionResp\030\013 \001(\013"
  "2\'.ServerData.ShutdownSpaceConnectionRes"
  "pH\000\022H\n\030GetAudioInputDevicesResp\030\024 \001(\0132$."
  "ServerData.GetAudioInputDevicesRespH\000\022J\n"
  "\031GetAudioOutputDevicesResp\030\025 \001(\0132%.Serve"
  "rData.GetAudioOutputDevicesRespH\000\022H\n\030Get"
  "VideoInputDevicesResp\030\026 \001(\0132$.ServerData"
  ".GetVideoInputDevicesRespH\000\022F\n\027SetAudioI"
  "nputDeviceResp\030\027 \001(\0132#.ServerData.SetAud"
  "ioInputDeviceRespH\000\022H\n\030SetAudioOutputDev"
  "iceResp\030\030 \001(\0132$.ServerData.SetAudioOutpu"
  "tDeviceRespH\000\022F\n\027SetVideoInputDeviceResp"
  "\030\031 \001(\0132#.ServerData.SetVideoInputDeviceR"
  "espH\000\022>\n\023PropertyValueStatus\0302 \001(\0132\037.Ser"
  "verData.PropertyValueStatusH\000\022H\n\030LocalPr"
  "opertyHandledResp\0303 \001(\0132$.ServerData.Loc"
  "alPropertyHandledRespH\000\022<\n\022PropMetadataS"
  "tatus\0304 \001(\0132\036.ServerData.PropMetadataSta"
  "tusH\000\022*\n\tUserAdded\030< \001(\0132\025.ServerData.Us"
  "erAddedH\000\022.\n\013UserRemoved\030= \001(\0132\027.ServerD"
  "ata.UserRemovedH\000\0224\n\016UserVideoFrame\030A \001("
  "\0132\032.ServerData.UserVideoFrameH\000\022+\n\nSpace"
  "Added\030F \001(\0132\025.ServerData.SpaceInfoH\000\022-\n\014"
  "SpaceUpdated\030G \001(\0132\025.ServerData.SpaceInf"
  "oH\000\022-\n\014SpaceRemoved\030H \001(\0132\025.ServerData.S"
  "paceInfoH\000\022.\n\013ObjectAdded\030P \001(\0132\027.Server"
  "Data.ObjectAddedH\000\0222\n\rObjectRemoved\030Q \001("
  "\0132\031.ServerData.ObjectRemovedH\000\0228\n\020Permis"
  "sionStatus\030Z \001(\0132\034.ServerData.Permission"
  "StatusH\000\022B\n\025AllJoinableSpacesResp\030d \001(\0132"
  "!.ServerData.AllJoinableSpacesRespH\000B\005\n\003"
  "Msg\"\013\n\tKeepAlive\"\032\n\nUpdateTime\022\014\n\004time\030\001"
  " \001(\002\"M\n\rStatusMessage\022\017\n\005error\030\001 \001(\tH\000\022\021"
  "\n\007warning\030\002 \001(\tH\000\022\r\n\003log\030\003 \001(\tH\000B\t\n\007Mess"
  "age\"Q\n\017AuthenticateReq\022\r\n\005reqId\030\001 \001(\005\022\016\n"
  "\006server\030\n \001(\t\022\r\n\005email\030\013 \001(\t\022\020\n\010password"
  "\030\014 \001(\t\"I\n\024AuthenticateGuestReq\022\r\n\005reqId\030"
  "\001 \001(\005\022\016\n\006server\030\n \001(\t\022\022\n\nscreenName\030\013 \001("
  "\t\"c\n\020AuthenticateResp\022\r\n\005reqId\030\001 \001(\005\022\'\n\004"
  "auth\030\n \001(\0132\027.ServerData.CavrnusAuthH\000\022\017\n"
  "\005error\030\013 \001(\tH\000B\006\n\004Resp\"h\n\025AuthenticateGu"
  "estResp\022\r\n\005reqId\030\001 \001(\005\022\'\n\004auth\030\n \001(\0132\027.S"
  "erverData.CavrnusAuthH\000\022\017\n\005error\030\013 \001(\tH\000"
  "B\006\n\004Resp\"6\n\027AuthenticateWithLinkReq\022\r\n\005r"
  "eqId\030\001 \001(\005\022\014\n\004link\030\n \001(\t\"{\n\030Authenticate"
  "WithLinkResp\022\r\n\005reqId\030\001 \001(\005\0227\n\010linkAuth\030"
  "\n \001(\0132#.ServerData.CavrnusAuthLinkRespon"
  "seH\000\022\017\n\005error\030\013 \001(\tH\000B\006\n\004Resp\"*\n\031ExitAll"
  "SpacesAndLogoutReq\022\r\n\005reqId\030\001 \001(\005\"s\n\032Exi"
  "tAllSpacesAndLogoutResp\022\r\n\005reqId\030\001 \001(\005\022\027"
  "\n\rlogoutSuccess\030\n \001(\010H\000\022\017\n\005error\030\013 \001(\tH\000"
  "\022\024\n\014spacesExited\030\024 \003(\005B\006\n\004Resp\"4\n\022JoinSp"
  "aceFromIdReq\022\r\n\005reqId\030\001 \001(\005\022\017\n\007spaceId\030\n"
  " \001(\t\"v\n\023JoinSpaceFromIdResp\022\r\n\005reqId\030\001 \001"
  "(\005\0227\n\tspaceConn\030\n \001(\0132\".ServerData.Cavrn"
  "usSpaceConnectionH\000\022\017\n\005error\030\013 \001(\tH\000B\006\n\004"
  "Resp\"h\n\032ShutdownSpaceConnectionReq\022\r\n\005re"
  "qId\030\001 \001(\005\022;\n\017SpaceConnection\030\n \001(\0132\".Ser"
  "verData.CavrnusSpaceConnection\"~\n\033Shutdo"
  "wnSpaceConnectionResp\022\r\n\005reqId\030\001 \001(\005\0227\n\t"
  "spaceConn\030\n \001(\0132\".ServerData.CavrnusSpac"
  "eConnectionH\000\022\017\n\005error\030\013 \001(\tH\000B\006\n\004Resp\"\213"
  "\002\n\rPropertyValue\022\021\n\007boolVal\030\n \001(\010H\000\022\023\n\ts"
  "tringVal\030\013 \001(\tH\000\022\023\n\tscalarVal\030\014 \001(\002H\000\022#\n"
  "\tvectorVal\030\r \001(\0132\016.Common.Float4H\000\022\"\n\010co"
  "lorVal\030\016 \001(\0132\016.Common.Color4H\000\022:\n\014transf"
  "ormVal\030\021 \001(\0132\".ServerData.TransformPrope"
  "rtyValueH\000\022/\n\007linkVal\030\017 \001(\0132\034.Property.P"
  "ropertyIdentifierH\000B\007\n\005Value\"\260\001\n\032DefineP"
  "ropertyDefaultValue\0225\n\tSpaceConn\030\001 \001(\0132\""
  ".ServerData.CavrnusSpaceConnection\022\022\n\nPr"
  "opertyId\030\002 \001(\t\022\025\n\rlocalChangeId\030\003 \001(\005\0220\n"
  "\rPropertyValue\030\n \001(\0132\031.ServerData.Proper"
  "tyValue\"\250\001\n\022PostPropertyUpdate\0225\n\tSpaceC"
  "onn\030\001 \001(\0132\".ServerData.CavrnusSpaceConne"
  "ction\022\022\n\nPropertyId\030\003 \001(\t\022\025\n\rlocalChange"
  "Id\030\004 \001(\005\0220\n\rPropertyValue\030\n \001(\0132\031.Server"
  "Data.PropertyValue\"\311\001\n\034BeginTransientPro"
  "pertyUpdate\0225\n\tSpaceConn\030\001 \001(\0132\".ServerD"
  "ata.CavrnusSpaceConnection\022\025\n\rLiveUpdate"
  "rId\030\002 \001(\t\022\022\n\nPropertyId\030\003 \001(\t\022\025\n\rlocalCh"
  "angeId\030\004 \001(\005\0220\n\rPropertyValue\030\n \001(\0132\031.Se"
  "rverData.PropertyValue\"\314\001\n\037ContinueTrans"
  "ientPropertyUpdate\0225\n\tSpaceConn\030\001 \001(\0132\"."
  "ServerData.CavrnusSpaceConnection\022\025\n\rLiv"
  "eUpdaterId\030\002 \001(\t\022\022\n\nPropertyId\030\003 \001(\t\022\025\n\r"
  "localChangeId\030\004 \001(\005\0220\n\rPropertyValue\030\n \001"
  "(\0132\031.ServerData.PropertyValue\"\314\001\n\037Finali"
  "zeTransientPropertyUpdate\0225\n\tSpaceConn\030\001"
  " \001(\0132\".ServerData.CavrnusSpaceConnection"
  "\022\025\n\rLiveUpdaterId\030\002 \001(\t\022\022\n\nPropertyId\030\003 "
  "\001(\t\022\025\n\rlocalChangeId\030\004 \001(\005\0220\n\rPropertyVa"
  "lue\030\n \001(\0132\031.ServerData.PropertyValue\"m\n\035"
  "CancelTransientPropertyUpdate\0225\n\tSpaceCo"
  "nn\030\001 \001(\0132\".ServerData.CavrnusSpaceConnec"
  "tion\022\025\n\rLiveUpdaterId\030\002 \001(\t\"o\n\026Transform"
  "PropertyValue\022\033\n\003pos\030\001 \001(\0132\016.Common.Floa"
  "t3\022\033\n\003rot\030\002 \001(\0132\016.Common.Float3\022\033\n\003scl\030\003"
  " \001(\0132\016.Common.Float3\"(\n\027GetAudioInputDev"
  "icesReq\022\r\n\005reqId\030\001 \001(\005\")\n\030GetAudioOutput"
  "DevicesReq\022\r\n\005reqId\030\001 \001(\005\"(\n\027GetVideoInp"
  "utDevicesReq\022\r\n\005reqId\030\001 \001(\005\"z\n\030GetAudioI"
  "nputDevicesResp\022\r\n\005reqId\030\001 \001(\005\0226\n\007Device"
  "s\030\n \001(\0132#.ServerData.RtcAudioInputDevice"
  "ListH\000\022\017\n\005error\030\013 \001(\tH\000B\006\n\004Resp\"|\n\031GetAu"
  "dioOutputDevicesResp\022\r\n\005reqId\030\001 \001(\005\0227\n\007D"
  "evices\030\n \001(\0132$.ServerData.RtcAudioOutput"
  "DeviceListH\000\022\017\n\005error\030\013 \001(\tH\000B\006\n\004Resp\"z\n"
  "\030GetVideoInputDevicesResp\022\r\n\005reqId\030\001 \001(\005"
  "\0226\n\007Devices\030\n \001(\0132#.ServerData.RtcVideoI"
  "nputDeviceListH\000\022\017\n\005error\030\013 \001(\tH\000B\006\n\004Res"
  "p\"X\n\026SetAudioInputDeviceReq\022\r\n\005reqId\030\001 \001"
  "(\005\022/\n\006Device\030\002 \001(\0132\037.ServerData.RtcAudio"
  "InputDevice\"Z\n\027SetAudioOutputDeviceReq\022\r"
  "\n\005reqId\030\001 \001(\005\0220\n\006Device\030\002 \001(\0132 .ServerDa"
  "ta.RtcAudioOutputDevice\"X\n\026SetVideoInput"
  "DeviceReq\022\r\n\005reqId\030\001 \001(\005\022/\n\006Device\030\002 \001(\013"
  "2\037.ServerData.RtcVideoInputDevice\"t\n\027Set"
  "AudioInputDeviceResp\022\r\n\005reqId\030\001 \001(\005\0221\n\006D"
  "evice\030\n \001(\0132\037.ServerData.RtcAudioInputDe"
  "viceH\000\022\017\n\005error\030\013 \001(\tH\000B\006\n\004Resp\"v\n\030SetAu"
  "dioOutputDeviceResp\022\r\n\005reqId\030\001 \001(\005\0222\n\006De"
  "vice\030\n \001(\0132 .ServerData.RtcAudioOutputDe"
  "viceH\000\022\017\n\005error\030\013 \001(\tH\000B\006\n\004Resp\"t\n\027SetVi"
  "deoInputDeviceResp\022\r\n\005reqId\030\001 \001(\005\0221\n\006Dev"
  "ice\030\n \001(\0132\037.ServerData.RtcVideoInputDevi"
  "ceH\000\022\017\n\005error\030\013 \001(\tH\000B\006\n\004Resp\"{\n\020PostCre"
  "ateObject\0225\n\tspaceConn\030\001 \001(\0132\".ServerDat"
  "a.CavrnusSpaceConnection\022\025\n\rnewInstanceI"
  "d\030\002 \001(\t\022\031\n\021uniqueObjectIdent\030\n \001(\t\"W\n\020Po"
  "stRemoveObject\0225\n\tspaceConn\030\001 \001(\0132\".Serv"
  "erData.CavrnusSpaceConnection\022\014\n\004opId\030\002 "
  "\001(\t\"\223\001\n\022PropMetadataStatus\0225\n\tspaceConn\030"
  "\001 \001(\0132\".ServerData.CavrnusSpaceConnectio"
  "n\0222\n\014propertyPath\030\002 \001(\0132\034.Property.Prope"
  "rtyIdentifier\022\022\n\nisReadonly\030\n \001(\010\"\304\001\n\023Pr"
  "opertyValueStatus\0225\n\tspaceConn\030\001 \001(\0132\".S"
  "erverData.CavrnusSpaceConnection\0222\n\014prop"
  "ertyPath\030\002 \001(\0132\034.Property.PropertyIdenti"
  "fier\0220\n\rPropertyValue\030\n \001(\0132\031.ServerData"
  ".PropertyValue\022\020\n\010priority\030\013 \001(\005\"\240\001\n\030Loc"
  "alPropertyHandledResp\0225\n\tspaceConn\030\001 \001(\013"
  "2\".ServerData.CavrnusSpaceConnection\0222\n\014"
  "propertyPath\030\002 \001(\0132\034.Property.PropertyId"
  "entifier\022\031\n\021localPropChangeId\030\n \001(\005\"i\n\tU"
  "serAdded\0225\n\tspaceConn\030\001 \001(\0132\".ServerData"
  ".CavrnusSpaceConnection\022%\n\004user\030\002 \001(\0132\027."
  "ServerData.CavrnusUser\"T\n\013UserRemoved\0225\n"
  "\tspaceConn\030\001 \001(\0132\".ServerData.CavrnusSpa"
  "ceConnection\022\016\n\006userId\030\002 \001(\t\"\203\001\n\016UserVid"
  "eoFrame\0225\n\tspaceConn\030\001 \001(\0132\".ServerData."
  "CavrnusSpaceConnection\022\016\n\006userId\030\002 \001(\t\022\014"
  "\n\004resX\030\n \001(\005\022\014\n\004resY\030\013 \001(\005\022\016\n\006stream\030\024 \001"
  "(\014\"\\\n\tSpaceInfo\022\017\n\007spaceId\030\001 \001(\t\022\021\n\tspac"
  "eName\030\002 \001(\t\022\031\n\021spaceThumbnailUrl\030\003 \001(\t\022\020"
  "\n\010archived\030\004 \001(\010\"\216\001\n\013ObjectAdded\0225\n\tspac"
  "eConn\030\001 \001(\0132\".ServerData.CavrnusSpaceCon"
  "nection\022\024\n\014creationOpId\030\002 \001(\t\022\033\n\023propert"
  "iesContainer\030\003 \001(\t\022\025\n\robjectCreated\030\004 \001("
  "\t\"c\n\rObjectRemoved\0225\n\tspaceConn\030\001 \001(\0132\"."
  "ServerData.CavrnusSpaceConnection\022\033\n\023pro"
  "pertiesContainer\030\003 \001(\t\"\\\n\024UpdateLocalUse"
  "rMuted\0225\n\tspaceConn\030\001 \001(\0132\".ServerData.C"
  "avrnusSpaceConnection\022\r\n\005muted\030\002 \001(\010\"\226\001\n"
  "\031UpdateLocalUserCoPresence\0225\n\tspaceConn\030"
  "\001 \001(\0132\".ServerData.CavrnusSpaceConnectio"
  "n\022B\n\026localUserRootTransform\030\n \001(\0132\".Serv"
  "erData.TransformPropertyValue\"f\n\032UpdateL"
  "ocalUserStreamState\0225\n\tspaceConn\030\001 \001(\0132\""
  ".ServerData.CavrnusSpaceConnection\022\021\n\tst"
  "reaming\030\002 \001(\010\"s\n\023PermissionStatusReq\022:\n\t"
  "spaceConn\030\001 \001(\0132\".ServerData.CavrnusSpac"
  "eConnectionH\000\210\001\001\022\022\n\npermission\030\002 \001(\tB\014\n\n"
  "_spaceConn\"\177\n\020PermissionStatus\022:\n\tspaceC"
  "onn\030\001 \001(\0132\".ServerData.CavrnusSpaceConne"
  "ctionH\000\210\001\001\022\022\n\npermission\030\002 \001(\t\022\r\n\005value\030"
  "\003 \001(\010B\014\n\n_spaceConn\"%\n\024AllJoinableSpaces"
  "Req\022\r\n\005reqId\030\001 \001(\005\"V\n\025AllJoinableSpacesR"
  "esp\022\r\n\005reqId\030\001 \001(\005\022.\n\017availableSpaces\030\n "
  "\003(\0132\025.ServerData.SpaceInfoB\024\252\002\021CavrnusRe"
  "layTypesb\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_relay_2eproto_deps[3] = {
  &::descriptor_table_common_2eproto,
  &::descriptor_table_properties_2eproto,
  &::descriptor_table_relay_5ftypes_2eproto,
};
static ::_pbi::once_flag descriptor_table_relay_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_relay_2eproto = {
    false, false, 9616, descriptor_table_protodef_relay_2eproto,
    "relay.proto",
    &descriptor_table_relay_2eproto_once, descriptor_table_relay_2eproto_deps, 3, 57,
    schemas, file_default_instances, TableStruct_relay_2eproto::offsets,
    file_level_metadata_relay_2eproto, file_level_enum_descriptors_relay_2eproto,
    file_level_service_descriptors_relay_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_relay_2eproto_getter() {
  return &descriptor_table_relay_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_relay_2eproto(&descriptor_table_relay_2eproto);
namespace ServerData {

// ===================================================================

class RelayClientMessageBatch::_Internal {
 public:
};

RelayClientMessageBatch::RelayClientMessageBatch(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ServerData.RelayClientMessageBatch)
}
RelayClientMessageBatch::RelayClientMessageBatch(const RelayClientMessageBatch& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RelayClientMessageBatch* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.messages_){from._impl_.messages_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ServerData.RelayClientMessageBatch)
}

inline void RelayClientMessageBatch::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.messages_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RelayClientMessageBatch::~RelayClientMessageBatch() {
  // @@protoc_insertion_point(destructor:ServerData.RelayClientMessageBatch)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RelayClientMessageBatch::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.messages_.~RepeatedPtrField();
}

void RelayClientMessageBatch::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RelayClientMessageBatch::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerData.RelayClientMessageBatch)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.messages_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RelayClientMessageBatch::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .ServerData.RelayClientMessage Messages = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_messages(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RelayClientMessageBatch::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ServerData.RelayClientMessageBatch)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ServerData.RelayClientMessage Messages = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_messages_size()); i < n; i++) {
    const auto& repfield = this->_internal_messages(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerData.RelayClientMessageBatch)
  return target;
}

size_t RelayClientMessageBatch::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerData.RelayClientMessageBatch)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ServerData.RelayClientMessage Messages = 1;
  total_size += 1UL * this->_internal_messages_size();
  for (const auto& msg : this->_impl_.messages_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RelayClientMessageBatch::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RelayClientMessageBatch::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RelayClientMessageBatch::GetClassData() const { return &_class_data_; }


void RelayClientMessageBatch::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RelayClientMessageBatch*>(&to_msg);
  auto& from = static_cast<const RelayClientMessageBatch&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ServerData.RelayClientMessageBatch)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.messages_.MergeFrom(from._impl_.messages_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RelayClientMessageBatch::CopyFrom(const RelayClientMessageBatch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerData.RelayClientMessageBatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RelayClientMessageBatch::IsInitialized() const {
  return true;
}

void RelayClientMessageBatch::InternalSwap(RelayClientMessageBatch* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.messages_.InternalSwap(&other->_impl_.messages_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RelayClientMessageBatch::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_relay_2eproto_getter, &descriptor_table_relay_2eproto_once,
      file_level_metadata_relay_2eproto[0]);
}

// ===================================================================

class RelayClientMessage::_Internal {
 public:
  static const ::ServerData::KeepAlive& keepalive(const RelayClientMessage* msg);
  static const ::ServerData::UpdateTime& updatetime(const RelayClientMessage* msg);
  static const ::ServerData::AuthenticateReq& authenticatereq(const RelayClientMessage* msg);
  static const ::ServerData::AuthenticateGuestReq& authenticateguestreq(const RelayClientMessage* msg);
  static const ::ServerData::ExitAllSpacesAndLogoutReq& exitallspacesandlogoutreq(const RelayClientMessage* msg);
  static const ::ServerData::JoinSpaceFromIdReq& joinspacefromidreq(const RelayClientMessage* msg);
  static const ::ServerData::ShutdownSpaceConnectionReq& shutdownspaceconnectionreq(const RelayClientMessage* msg);
  static const ::ServerData::GetAudioInputDevicesReq& getaudioinputdevicesreq(const RelayClientMessage* msg);
  static const ::ServerData::GetAudioOutputDevicesReq& getaudiooutputdevicesreq(const RelayClientMessage* msg);
  static const ::ServerData::GetVideoInputDevicesReq& getvideoinputdevicesreq(const RelayClientMessage* msg);
  static const ::ServerData::SetAudioInputDeviceReq& setaudioinputdevicereq(const RelayClientMessage* msg);
  static const ::ServerData::SetAudioOutputDeviceReq& setaudiooutputdevicereq(const RelayClientMessage* msg);
  static const ::ServerData::SetVideoInputDeviceReq& setvideoinputdevicereq(const RelayClientMessage* msg);
  static const ::ServerData::DefinePropertyDefaultValue& definepropertydefaultvalue(const RelayClientMessage* msg);
  static const ::ServerData::PostPropertyUpdate& postpropertyupdate(const RelayClientMessage* msg);
  static const ::ServerData::BeginTransientPropertyUpdate& begintransientpropertyupdate(const RelayClientMessage* msg);
  static const ::ServerData::ContinueTransientPropertyUpdate& continuetransientpropertyupdate(const RelayClientMessage* msg);
  static const ::ServerData::FinalizeTransientPropertyUpdate& finalizetransientpropertyupdate(const RelayClientMessage* msg);
  static const ::ServerData::CancelTransientPropertyUpdate& canceltransientpropertyupdate(const RelayClientMessage* msg);
  static const ::ServerData::UpdateLocalUserMuted& updatelocalusermuted(const RelayClientMessage* msg);
  static const ::ServerData::UpdateLocalUserCoPresence& updatelocalusercopresence(const RelayClientMessage* msg);
  static const ::ServerData::UpdateLocalUserStreamState& updatelocaluserstreamstate(const RelayClientMessage* msg);
  static const ::ServerData::PostCreateObject& postcreateobject(const RelayClientMessage* msg);
  static const ::ServerData::PostRemoveObject& postremoveobject(const RelayClientMessage* msg);
  static const ::ServerData::PermissionStatusReq& permissionstatusreq(const RelayClientMessage* msg);
  static const ::ServerData::AllJoinableSpacesReq& alljoinablespacesreq(const RelayClientMessage* msg);
};

const ::ServerData::KeepAlive&
RelayClientMessage::_Internal::keepalive(const RelayClientMessage* msg) {
  return *msg->_impl_.Msg_.keepalive_;
}
const ::ServerData::UpdateTime&
RelayClientMessage::_Internal::updatetime(const RelayClientMessage* msg) {
  return *msg->_impl_.Msg_.updatetime_;
}
const ::ServerData::AuthenticateReq&
RelayClientMessage::_Internal::authenticatereq(const RelayClientMessage* msg) {
  return *msg->_impl_.Msg_.authenticatereq_;
}
const ::ServerData::AuthenticateGuestReq&
RelayClientMessage::_Internal::authenticateguestreq(const RelayClientMessage* msg) {
  return *msg->_impl_.Msg_.authenticateguestreq_;
}
const ::ServerData::ExitAllSpacesAndLogoutReq&
RelayClientMessage::_Internal::exitallspacesandlogoutreq(const RelayClientMessage* msg) {
  return *msg->_impl_.Msg_.exitallspacesandlogoutreq_;
}
const ::ServerData::JoinSpaceFromIdReq&
RelayClientMessage::_Internal::joinspacefromidreq(const RelayClientMessage* msg) {
  return *msg->_impl_.Msg_.joinspacefromidreq_;
}
const ::ServerData::ShutdownSpaceConnectionReq&
RelayClientMessage::_Internal::shutdownspaceconnectionreq(const RelayClientMessage* msg) {
  return *msg->_impl_.Msg_.shutdownspaceconnectionreq_;
}
const ::ServerData::GetAudioInputDevicesReq&
RelayClientMessage::_Internal::getaudioinputdevicesreq(const RelayClientMessage* msg) {
  return *msg->_impl_.Msg_.getaudioinputdevicesreq_;
}
const ::ServerData::GetAudioOutputDevicesReq&
RelayClientMessage::_Internal::getaudiooutputdevicesreq(const RelayClientMessage* msg) {
  return *msg->_impl_.Msg_.getaudiooutputdevicesreq_;
}
const ::ServerData::GetVideoInputDevicesReq&
RelayClientMessage::_Internal::getvideoinputdevicesreq(const RelayClientMessage* msg) {
  return *msg->_impl_.Msg_.getvideoinputdevicesreq_;
}
const ::ServerData::SetAudioInputDeviceReq&
RelayClientMessage::_Internal::setaudioinputdevicereq(const RelayClientMessage* msg) {
  return *msg->_impl_.Msg_.setaudioinputdevicereq_;
}
const ::ServerData::SetAudioOutputDeviceReq&
RelayClientMessage::_Internal::setaudiooutputdevicereq(const RelayClientMessage* msg) {
  return *msg->_impl_.Msg_.setaudiooutputdevicereq_;
}
const ::ServerData::SetVideoInputDeviceReq&
RelayClientMessage::_Internal::setvideoinputdevicereq(const RelayClientMessage* msg) {
  return *msg->_impl_.Msg_.setvideoinputdevicereq_;
}
const ::ServerData::DefinePropertyDefaultValue&
RelayClientMessage::_Internal::definepropertydefaultvalue(const RelayClientMessage* msg) {
  return *msg->_impl_.Msg_.definepropertydefaultvalue_;
}
const ::ServerData::PostPropertyUpdate&
RelayClientMessage::_Internal::postpropertyupdate(const RelayClientMessage* msg) {
  return *msg->_impl_.Msg_.postpropertyupdate_;
}
const ::ServerData::BeginTransientPropertyUpdate&
RelayClientMessage::_Internal::begintransientpropertyupdate(const RelayClientMessage* msg) {
  return *msg->_impl_.Msg_.begintransientpropertyupdate_;
}
const ::ServerData::ContinueTransientPropertyUpdate&
RelayClientMessage::_Internal::continuetransientpropertyupdate(const RelayClientMessage* msg) {
  return *msg->_impl_.Msg_.continuetransientpropertyupdate_;
}
const ::ServerData::FinalizeTransientPropertyUpdate&
RelayClientMessage::_Internal::finalizetransientpropertyupdate(const RelayClientMessage* msg) {
  return *msg->_impl_.Msg_.finalizetransientpropertyupdate_;
}
const ::ServerData::CancelTransientPropertyUpdate&
RelayClientMessage::_Internal::canceltransientpropertyupdate(const RelayClientMessage* msg) {
  return *msg->_impl_.Msg_.canceltransientpropertyupdate_;
}
const ::ServerData::UpdateLocalUserMuted&
RelayClientMessage::_Internal::updatelocalusermuted(const RelayClientMessage* msg) {
  return *msg->_impl_.Msg_.updatelocalusermuted_;
}
const ::ServerData::UpdateLocalUserCoPresence&
RelayClientMessage::_Internal::updatelocalusercopresence(const RelayClientMessage* msg) {
  return *msg->_impl_.Msg_.updatelocalusercopresence_;
}
const ::ServerData::UpdateLocalUserStreamState&
RelayClientMessage::_Internal::updatelocaluserstreamstate(const RelayClientMessage* msg) {
  return *msg->_impl_.Msg_.updatelocaluserstreamstate_;
}
const ::ServerData::PostCreateObject&
RelayClientMessage::_Internal::postcreateobject(const RelayClientMessage* msg) {
  return *msg->_impl_.Msg_.postcreateobject_;
}
const ::ServerData::PostRemoveObject&
RelayClientMessage::_Internal::postremoveobject(const RelayClientMessage* msg) {
  return *msg->_impl_.Msg_.postremoveobject_;
}
const ::ServerData::PermissionStatusReq&
RelayClientMessage::_Internal::permissionstatusreq(const RelayClientMessage* msg) {
  return *msg->_impl_.Msg_.permissionstatusreq_;
}
const ::ServerData::AllJoinableSpacesReq&
RelayClientMessage::_Internal::alljoinablespacesreq(const RelayClientMessage* msg) {
  return *msg->_impl_.Msg_.alljoinablespacesreq_;
}
void RelayClientMessage::set_allocated_keepalive(::ServerData::KeepAlive* keepalive) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Msg();
  if (keepalive) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(keepalive);
    if (message_arena != submessage_arena) {
      keepalive = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, keepalive, submessage_arena);
    }
    set_has_keepalive();
    _impl_.Msg_.keepalive_ = keepalive;
  }
  // @@protoc_insertion_point(field_set_allocated:ServerData.RelayClientMessage.KeepAlive)
}
void RelayClientMessage::set_allocated_updatetime(::ServerData::UpdateTime* updatetime) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Msg();
  if (updatetime) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(updatetime);
    if (message_arena != submessage_arena) {
      updatetime = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, updatetime, submessage_arena);
    }
    set_has_updatetime();
    _impl_.Msg_.updatetime_ = updatetime;
  }
  // @@protoc_insertion_point(field_set_allocated:ServerData.RelayClientMessage.UpdateTime)
}
void RelayClientMessage::set_allocated_authenticatereq(::ServerData::AuthenticateReq* authenticatereq) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Msg();
  if (authenticatereq) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(authenticatereq);
    if (message_arena != submessage_arena) {
      authenticatereq = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, authenticatereq, submessage_arena);
    }
    set_has_authenticatereq();
    _impl_.Msg_.authenticatereq_ = authenticatereq;
  }
  // @@protoc_insertion_point(field_set_allocated:ServerData.RelayClientMessage.AuthenticateReq)
}
void RelayClientMessage::set_allocated_authenticateguestreq(::ServerData::AuthenticateGuestReq* authenticateguestreq) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Msg();
  if (authenticateguestreq) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(authenticateguestreq);
    if (message_arena != submessage_arena) {
      authenticateguestreq = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, authenticateguestreq, submessage_arena);
    }
    set_has_authenticateguestreq();
    _impl_.Msg_.authenticateguestreq_ = authenticateguestreq;
  }
  // @@protoc_insertion_point(field_set_allocated:ServerData.RelayClientMessage.AuthenticateGuestReq)
}
void RelayClientMessage::set_allocated_exitallspacesandlogoutreq(::ServerData::ExitAllSpacesAndLogoutReq* exitallspacesandlogoutreq) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Msg();
  if (exitallspacesandlogoutreq) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(exitallspacesandlogoutreq);
    if (message_arena != submessage_arena) {
      exitallspacesandlogoutreq = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, exitallspacesandlogoutreq, submessage_arena);
    }
    set_has_exitallspacesandlogoutreq();
    _impl_.Msg_.exitallspacesandlogoutreq_ = exitallspacesandlogoutreq;
  }
  // @@protoc_insertion_point(field_set_allocated:ServerData.RelayClientMessage.ExitAllSpacesAndLogoutReq)
}
void RelayClientMessage::set_allocated_joinspacefromidreq(::ServerData::JoinSpaceFromIdReq* joinspacefromidreq) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Msg();
  if (joinspacefromidreq) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(joinspacefromidreq);
    if (message_arena != submessage_arena) {
      joinspacefromidreq = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, joinspacefromidreq, submessage_arena);
    }
    set_has_joinspacefromidreq();
    _impl_.Msg_.joinspacefromidreq_ = joinspacefromidreq;
  }
  // @@protoc_insertion_point(field_set_allocated:ServerData.RelayClientMessage.JoinSpaceFromIdReq)
}
void RelayClientMessage::set_allocated_shutdownspaceconnectionreq(::ServerData::ShutdownSpaceConnectionReq* shutdownspaceconnectionreq) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Msg();
  if (shutdownspaceconnectionreq) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(shutdownspaceconnectionreq);
    if (message_arena != submessage_arena) {
      shutdownspaceconnectionreq = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, shutdownspaceconnectionreq, submessage_arena);
    }
    set_has_shutdownspaceconnectionreq();
    _impl_.Msg_.shutdownspaceconnectionreq_ = shutdownspaceconnectionreq;
  }
  // @@protoc_insertion_point(field_set_allocated:ServerData.RelayClientMessage.ShutdownSpaceConnectionReq)
}
void RelayClientMessage::set_allocated_getaudioinputdevicesreq(::ServerData::GetAudioInputDevicesReq* getaudioinputdevicesreq) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Msg();
  if (getaudioinputdevicesreq) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(getaudioinputdevicesreq);
    if (message_arena != submessage_arena) {
      getaudioinputdevicesreq = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, getaudioinputdevicesreq, submessage_arena);
    }
    set_has_getaudioinputdevicesreq();
    _impl_.Msg_.getaudioinputdevicesreq_ = getaudioinputdevicesreq;
  }
  // @@protoc_insertion_point(field_set_allocated:ServerData.RelayClientMessage.GetAudioInputDevicesReq)
}
void RelayClientMessage::set_allocated_getaudiooutputdevicesreq(::ServerData::GetAudioOutputDevicesReq* getaudiooutputdevicesreq) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Msg();
  if (getaudiooutputdevicesreq) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(getaudiooutputdevicesreq);
    if (message_arena != submessage_arena) {
      getaudiooutputdevicesreq = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, getaudiooutputdevicesreq, submessage_arena);
    }
    set_has_getaudiooutputdevicesreq();
    _impl_.Msg_.getaudiooutputdevicesreq_ = getaudiooutputdevicesreq;
  }
  // @@protoc_insertion_point(field_set_allocated:ServerData.RelayClientMessage.GetAudioOutputDevicesReq)
}
void RelayClientMessage::set_allocated_getvideoinputdevicesreq(::ServerData::GetVideoInputDevicesReq* getvideoinputdevicesreq) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Msg();
  if (getvideoinputdevicesreq) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(getvideoinputdevicesreq);
    if (message_arena != submessage_arena) {
      getvideoinputdevicesreq = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, getvideoinputdevicesreq, submessage_arena);
    }
    set_has_getvideoinputdevicesreq();
    _impl_.Msg_.getvideoinputdevicesreq_ = getvideoinputdevicesreq;
  }
  // @@protoc_insertion_point(field_set_allocated:ServerData.RelayClientMessage.GetVideoInputDevicesReq)
}
void RelayClientMessage::set_allocated_setaudioinputdevicereq(::ServerData::SetAudioInputDeviceReq* setaudioinputdevicereq) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Msg();
  if (setaudioinputdevicereq) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(setaudioinputdevicereq);
    if (message_arena != submessage_arena) {
      setaudioinputdevicereq = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, setaudioinputdevicereq, submessage_arena);
    }
    set_has_setaudioinputdevicereq();
    _impl_.Msg_.setaudioinputdevicereq_ = setaudioinputdevicereq;
  }
  // @@protoc_insertion_point(field_set_allocated:ServerData.RelayClientMessage.SetAudioInputDeviceReq)
}
void RelayClientMessage::set_allocated_setaudiooutputdevicereq(::ServerData::SetAudioOutputDeviceReq* setaudiooutputdevicereq) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Msg();
  if (setaudiooutputdevicereq) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(setaudiooutputdevicereq);
    if (message_arena != submessage_arena) {
      setaudiooutputdevicereq = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, setaudiooutputdevicereq, submessage_arena);
    }
    set_has_setaudiooutputdevicereq();
    _impl_.Msg_.setaudiooutputdevicereq_ = setaudiooutputdevicereq;
  }
  // @@protoc_insertion_point(field_set_allocated:ServerData.RelayClientMessage.SetAudioOutputDeviceReq)
}
void RelayClientMessage::set_allocated_setvideoinputdevicereq(::ServerData::SetVideoInputDeviceReq* setvideoinputdevicereq) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Msg();
  if (setvideoinputdevicereq) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(setvideoinputdevicereq);
    if (message_arena != submessage_arena) {
      setvideoinputdevicereq = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, setvideoinputdevicereq, submessage_arena);
    }
    set_has_setvideoinputdevicereq();
    _impl_.Msg_.setvideoinputdevicereq_ = setvideoinputdevicereq;
  }
  // @@protoc_insertion_point(field_set_allocated:ServerData.RelayClientMessage.SetVideoInputDeviceReq)
}
void RelayClientMessage::set_allocated_definepropertydefaultvalue(::ServerData::DefinePropertyDefaultValue* definepropertydefaultvalue) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Msg();
  if (definepropertydefaultvalue) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(definepropertydefaultvalue);
    if (message_arena != submessage_arena) {
      definepropertydefaultvalue = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, definepropertydefaultvalue, submessage_arena);
    }
    set_has_definepropertydefaultvalue();
    _impl_.Msg_.definepropertydefaultvalue_ = definepropertydefaultvalue;
  }
  // @@protoc_insertion_point(field_set_allocated:ServerData.RelayClientMessage.DefinePropertyDefaultValue)
}
void RelayClientMessage::set_allocated_postpropertyupdate(::ServerData::PostPropertyUpdate* postpropertyupdate) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Msg();
  if (postpropertyupdate) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(postpropertyupdate);
    if (message_arena != submessage_arena) {
      postpropertyupdate = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, postpropertyupdate, submessage_arena);
    }
    set_has_postpropertyupdate();
    _impl_.Msg_.postpropertyupdate_ = postpropertyupdate;
  }
  // @@protoc_insertion_point(field_set_allocated:ServerData.RelayClientMessage.PostPropertyUpdate)
}
void RelayClientMessage::set_allocated_begintransientpropertyupdate(::ServerData::BeginTransientPropertyUpdate* begintransientpropertyupdate) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Msg();
  if (begintransientpropertyupdate) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(begintransientpropertyupdate);
    if (message_arena != submessage_arena) {
      begintransientpropertyupdate = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, begintransientpropertyupdate, submessage_arena);
    }
    set_has_begintransientpropertyupdate();
    _impl_.Msg_.begintransientpropertyupdate_ = begintransientpropertyupdate;
  }
  // @@protoc_insertion_point(field_set_allocated:ServerData.RelayClientMessage.BeginTransientPropertyUpdate)
}
void RelayClientMessage::set_allocated_continuetransientpropertyupdate(::ServerData::ContinueTransientPropertyUpdate* continuetransientpropertyupdate) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Msg();
  if (continuetransientpropertyupdate) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(continuetransientpropertyupdate);
    if (message_arena != submessage_arena) {
      continuetransientpropertyupdate = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, continuetransientpropertyupdate, submessage_arena);
    }
    set_has_continuetransientpropertyupdate();
    _impl_.Msg_.continuetransientpropertyupdate_ = continuetransientpropertyupdate;
  }
  // @@protoc_insertion_point(field_set_allocated:ServerData.RelayClientMessage.ContinueTransientPropertyUpdate)
}
void RelayClientMessage::set_allocated_finalizetransientpropertyupdate(::ServerData::FinalizeTransientPropertyUpdate* finalizetransientpropertyupdate) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Msg();
  if (finalizetransientpropertyupdate) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(finalizetransientpropertyupdate);
    if (message_arena != submessage_arena) {
      finalizetransientpropertyupdate = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, finalizetransientpropertyupdate, submessage_arena);
    }
    set_has_finalizetransientpropertyupdate();
    _impl_.Msg_.finalizetransientpropertyupdate_ = finalizetransientpropertyupdate;
  }
  // @@protoc_insertion_point(field_set_allocated:ServerData.RelayClientMessage.FinalizeTransientPropertyUpdate)
}
void RelayClientMessage::set_allocated_canceltransientpropertyupdate(::ServerData::CancelTransientPropertyUpdate* canceltransientpropertyupdate) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Msg();
  if (canceltransientpropertyupdate) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(canceltransientpropertyupdate);
    if (message_arena != submessage_arena) {
      canceltransientpropertyupdate = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, canceltransientpropertyupdate, submessage_arena);
    }
    set_has_canceltransientpropertyupdate();
    _impl_.Msg_.canceltransientpropertyupdate_ = canceltransientpropertyupdate;
  }
  // @@protoc_insertion_point(field_set_allocated:ServerData.RelayClientMessage.CancelTransientPropertyUpdate)
}
void RelayClientMessage::set_allocated_updatelocalusermuted(::ServerData::UpdateLocalUserMuted* updatelocalusermuted) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Msg();
  if (updatelocalusermuted) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(updatelocalusermuted);
    if (message_arena != submessage_arena) {
      updatelocalusermuted = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, updatelocalusermuted, submessage_arena);
    }
    set_has_updatelocalusermuted();
    _impl_.Msg_.updatelocalusermuted_ = updatelocalusermuted;
  }
  // @@protoc_insertion_point(field_set_allocated:ServerData.RelayClientMessage.UpdateLocalUserMuted)
}
void RelayClientMessage::set_allocated_updatelocalusercopresence(::ServerData::UpdateLocalUserCoPresence* updatelocalusercopresence) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Msg();
  if (updatelocalusercopresence) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(updatelocalusercopresence);
    if (message_arena != submessage_arena) {
      updatelocalusercopresence = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, updatelocalusercopresence, submessage_arena);
    }
    set_has_updatelocalusercopresence();
    _impl_.Msg_.updatelocalusercopresence_ = updatelocalusercopresence;
  }
  // @@protoc_insertion_point(field_set_allocated:ServerData.RelayClientMessage.UpdateLocalUserCoPresence)
}
void RelayClientMessage::set_allocated_updatelocaluserstreamstate(::ServerData::UpdateLocalUserStreamState* updatelocaluserstreamstate) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Msg();
  if (updatelocaluserstreamstate) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(updatelocaluserstreamstate);
    if (message_arena != submessage_arena) {
      updatelocaluserstreamstate = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, updatelocaluserstreamstate, submessage_arena);
    }
    set_has_updatelocaluserstreamstate();
    _impl_.Msg_.updatelocaluserstreamstate_ = updatelocaluserstreamstate;
  }
  // @@protoc_insertion_point(field_set_allocated:ServerData.RelayClientMessage.UpdateLocalUserStreamState)
}
void RelayClientMessage::set_allocated_postcreateobject(::ServerData::PostCreateObject* postcreateobject) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Msg();
  if (postcreateobject) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(postcreateobject);
    if (message_arena != submessage_arena) {
      postcreateobject = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, postcreateobject, submessage_arena);
    }
    set_has_postcreateobject();
    _impl_.Msg_.postcreateobject_ = postcreateobject;
  }
  // @@protoc_insertion_point(field_set_allocated:ServerData.RelayClientMessage.PostCreateObject)
}
void RelayClientMessage::set_allocated_postremoveobject(::ServerData::PostRemoveObject* postremoveobject) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Msg();
  if (postremoveobject) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(postremoveobject);
    if (message_arena != submessage_arena) {
      postremoveobject = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, postremoveobject, submessage_arena);
    }
    set_has_postremoveobject();
    _impl_.Msg_.postremoveobject_ = postremoveobject;
  }
  // @@protoc_insertion_point(field_set_allocated:ServerData.RelayClientMessage.PostRemoveObject)
}
void RelayClientMessage::set_allocated_permissionstatusreq(::ServerData::PermissionStatusReq* permissionstatusreq) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Msg();
  if (permissionstatusreq) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(permissionstatusreq);
    if (message_arena != submessage_arena) {
      permissionstatusreq = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, permissionstatusreq, submessage_arena);
    }
    set_has_permissionstatusreq();
    _impl_.Msg_.permissionstatusreq_ = permissionstatusreq;
  }
  // @@protoc_insertion_point(field_set_allocated:ServerData.RelayClientMessage.PermissionStatusReq)
}
void RelayClientMessage::set_allocated_alljoinablespacesreq(::ServerData::AllJoinableSpacesReq* alljoinablespacesreq) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Msg();
  if (alljoinablespacesreq) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(alljoinablespacesreq);
    if (message_arena != submessage_arena) {
      alljoinablespacesreq = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, alljoinablespacesreq, submessage_arena);
    }
    set_has_alljoinablespacesreq();
    _impl_.Msg_.alljoinablespacesreq_ = alljoinablespacesreq;
  }
  // @@protoc_insertion_point(field_set_allocated:ServerData.RelayClientMessage.AllJoinableSpacesReq)
}
RelayClientMessage::RelayClientMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ServerData.RelayClientMessage)
}
RelayClientMessage::RelayClientMessage(const RelayClientMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RelayClientMessage* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.Msg_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_Msg();
  switch (from.Msg_case()) {
    case kKeepAlive: {
      _this->_internal_mutable_keepalive()->::ServerData::KeepAlive::MergeFrom(
          from._internal_keepalive());
      break;
    }
    case kUpdateTime: {
      _this->_internal_mutable_updatetime()->::ServerData::UpdateTime::MergeFrom(
          from._internal_updatetime());
      break;
    }
    case kAuthenticateReq: {
      _this->_internal_mutable_authenticatereq()->::ServerData::AuthenticateReq::MergeFrom(
          from._internal_authenticatereq());
      break;
    }
    case kAuthenticateGuestReq: {
      _this->_internal_mutable_authenticateguestreq()->::ServerData::AuthenticateGuestReq::MergeFrom(
          from._internal_authenticateguestreq());
      break;
    }
    case kExitAllSpacesAndLogoutReq: {
      _this->_internal_mutable_exitallspacesandlogoutreq()->::ServerData::ExitAllSpacesAndLogoutReq::MergeFrom(
          from._internal_exitallspacesandlogoutreq());
      break;
    }
    case kJoinSpaceFromIdReq: {
      _this->_internal_mutable_joinspacefromidreq()->::ServerData::JoinSpaceFromIdReq::MergeFrom(
          from._internal_joinspacefromidreq());
      break;
    }
    case kShutdownSpaceConnectionReq: {
      _this->_internal_mutable_shutdownspaceconnectionreq()->::ServerData::ShutdownSpaceConnectionReq::MergeFrom(
          from._internal_shutdownspaceconnectionreq());
      break;
    }
    case kGetAudioInputDevicesReq: {
      _this->_internal_mutable_getaudioinputdevicesreq()->::ServerData::GetAudioInputDevicesReq::MergeFrom(
          from._internal_getaudioinputdevicesreq());
      break;
    }
    case kGetAudioOutputDevicesReq: {
      _this->_internal_mutable_getaudiooutputdevicesreq()->::ServerData::GetAudioOutputDevicesReq::MergeFrom(
          from._internal_getaudiooutputdevicesreq());
      break;
    }
    case kGetVideoInputDevicesReq: {
      _this->_internal_mutable_getvideoinputdevicesreq()->::ServerData::GetVideoInputDevicesReq::MergeFrom(
          from._internal_getvideoinputdevicesreq());
      break;
    }
    case kSetAudioInputDeviceReq: {
      _this->_internal_mutable_setaudioinputdevicereq()->::ServerData::SetAudioInputDeviceReq::MergeFrom(
          from._internal_setaudioinputdevicereq());
      break;
    }
    case kSetAudioOutputDeviceReq: {
      _this->_internal_mutable_setaudiooutputdevicereq()->::ServerData::SetAudioOutputDeviceReq::MergeFrom(
          from._internal_setaudiooutputdevicereq());
      break;
    }
    case kSetVideoInputDeviceReq: {
      _this->_internal_mutable_setvideoinputdevicereq()->::ServerData::SetVideoInputDeviceReq::MergeFrom(
          from._internal_setvideoinputdevicereq());
      break;
    }
    case kDefinePropertyDefaultValue: {
      _this->_internal_mutable_definepropertydefaultvalue()->::ServerData::DefinePropertyDefaultValue::MergeFrom(
          from._internal_definepropertydefaultvalue());
      break;
    }
    case kPostPropertyUpdate: {
      _this->_internal_mutable_postpropertyupdate()->::ServerData::PostPropertyUpdate::MergeFrom(
          from._internal_postpropertyupdate());
      break;
    }
    case kBeginTransientPropertyUpdate: {
      _this->_internal_mutable_begintransientpropertyupdate()->::ServerData::BeginTransientPropertyUpdate::MergeFrom(
          from._internal_begintransientpropertyupdate());
      break;
    }
    case kContinueTransientPropertyUpdate: {
      _this->_internal_mutable_continuetransientpropertyupdate()->::ServerData::ContinueTransientPropertyUpdate::MergeFrom(
          from._internal_continuetransientpropertyupdate());
      break;
    }
    case kFinalizeTransientPropertyUpdate: {
      _this->_internal_mutable_finalizetransientpropertyupdate()->::ServerData::FinalizeTransientPropertyUpdate::MergeFrom(
          from._internal_finalizetransientpropertyupdate());
      break;
    }
    case kCancelTransientPropertyUpdate: {
      _this->_internal_mutable_canceltransientpropertyupdate()->::ServerData::CancelTransientPropertyUpdate::MergeFrom(
          from._internal_canceltransientpropertyupdate());
      break;
    }
    case kUpdateLocalUserMuted: {
      _this->_internal_mutable_updatelocalusermuted()->::ServerData::UpdateLocalUserMuted::MergeFrom(
          from._internal_updatelocalusermuted());
      break;
    }
    case kUpdateLocalUserCoPresence: {
      _this->_internal_mutable_updatelocalusercopresence()->::ServerData::UpdateLocalUserCoPresence::MergeFrom(
          from._internal_updatelocalusercopresence());
      break;
    }
    case kUpdateLocalUserStreamState: {
      _this->_internal_mutable_updatelocaluserstreamstate()->::ServerData::UpdateLocalUserStreamState::MergeFrom(
          from._internal_updatelocaluserstreamstate());
      break;
    }
    case kPostCreateObject: {
      _this->_internal_mutable_postcreateobject()->::ServerData::PostCreateObject::MergeFrom(
          from._internal_postcreateobject());
      break;
    }
    case kPostRemoveObject: {
      _this->_internal_mutable_postremoveobject()->::ServerData::PostRemoveObject::MergeFrom(
          from._internal_postremoveobject());
      break;
    }
    case kPermissionStatusReq: {
      _this->_internal_mutable_permissionstatusreq()->::ServerData::PermissionStatusReq::MergeFrom(
          from._internal_permissionstatusreq());
      break;
    }
    case kAllJoinableSpacesReq: {
      _this->_internal_mutable_alljoinablespacesreq()->::ServerData::AllJoinableSpacesReq::MergeFrom(
          from._internal_alljoinablespacesreq());
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:ServerData.RelayClientMessage)
}

inline void RelayClientMessage::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.Msg_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  clear_has_Msg();
}

RelayClientMessage::~RelayClientMessage() {
  // @@protoc_insertion_point(destructor:ServerData.RelayClientMessage)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RelayClientMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_Msg()) {
    clear_Msg();
  }
}

void RelayClientMessage::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RelayClientMessage::clear_Msg() {
// @@protoc_insertion_point(one_of_clear_start:ServerData.RelayClientMessage)
  switch (Msg_case()) {
    case kKeepAlive: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Msg_.keepalive_;
      }
      break;
    }
    case kUpdateTime: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Msg_.updatetime_;
      }
      break;
    }
    case kAuthenticateReq: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Msg_.authenticatereq_;
      }
      break;
    }
    case kAuthenticateGuestReq: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Msg_.authenticateguestreq_;
      }
      break;
    }
    case kExitAllSpacesAndLogoutReq: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Msg_.exitallspacesandlogoutreq_;
      }
      break;
    }
    case kJoinSpaceFromIdReq: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Msg_.joinspacefromidreq_;
      }
      break;
    }
    case kShutdownSpaceConnectionReq: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Msg_.shutdownspaceconnectionreq_;
      }
      break;
    }
    case kGetAudioInputDevicesReq: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Msg_.getaudioinputdevicesreq_;
      }
      break;
    }
    case kGetAudioOutputDevicesReq: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Msg_.getaudiooutputdevicesreq_;
      }
      break;
    }
    case kGetVideoInputDevicesReq: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Msg_.getvideoinputdevicesreq_;
      }
      break;
    }
    case kSetAudioInputDeviceReq: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Msg_.setaudioinputdevicereq_;
      }
      break;
    }
    case kSetAudioOutputDeviceReq: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Msg_.setaudiooutputdevicereq_;
      }
      break;
    }
    case kSetVideoInputDeviceReq: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Msg_.setvideoinputdevicereq_;
      }
      break;
    }
    case kDefinePropertyDefaultValue: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Msg_.definepropertydefaultvalue_;
      }
      break;
    }
    case kPostPropertyUpdate: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Msg_.postpropertyupdate_;
      }
      break;
    }
    case kBeginTransientPropertyUpdate: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Msg_.begintransientpropertyupdate_;
      }
      break;
    }
    case kContinueTransientPropertyUpdate: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Msg_.continuetransientpropertyupdate_;
      }
      break;
    }
    case kFinalizeTransientPropertyUpdate: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Msg_.finalizetransientpropertyupdate_;
      }
      break;
    }
    case kCancelTransientPropertyUpdate: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Msg_.canceltransientpropertyupdate_;
      }
      break;
    }
    case kUpdateLocalUserMuted: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Msg_.updatelocalusermuted_;
      }
      break;
    }
    case kUpdateLocalUserCoPresence: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Msg_.updatelocalusercopresence_;
      }
      break;
    }
    case kUpdateLocalUserStreamState: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Msg_.updatelocaluserstreamstate_;
      }
      break;
    }
    case kPostCreateObject: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Msg_.postcreateobject_;
      }
      break;
    }
    case kPostRemoveObject: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Msg_.postremoveobject_;
      }
      break;
    }
    case kPermissionStatusReq: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Msg_.permissionstatusreq_;
      }
      break;
    }
    case kAllJoinableSpacesReq: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Msg_.alljoinablespacesreq_;
      }
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = MSG_NOT_SET;
}


void RelayClientMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerData.RelayClientMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_Msg();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RelayClientMessage::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .ServerData.KeepAlive KeepAlive = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_keepalive(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ServerData.UpdateTime UpdateTime = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_updatetime(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ServerData.AuthenticateReq AuthenticateReq = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_authenticatereq(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ServerData.AuthenticateGuestReq AuthenticateGuestReq = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_authenticateguestreq(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ServerData.ExitAllSpacesAndLogoutReq ExitAllSpacesAndLogoutReq = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 98)) {
          ptr = ctx->ParseMessage(_internal_mutable_exitallspacesandlogoutreq(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ServerData.JoinSpaceFromIdReq JoinSpaceFromIdReq = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 162)) {
          ptr = ctx->ParseMessage(_internal_mutable_joinspacefromidreq(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ServerData.ShutdownSpaceConnectionReq ShutdownSpaceConnectionReq = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 170)) {
          ptr = ctx->ParseMessage(_internal_mutable_shutdownspaceconnectionreq(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ServerData.GetAudioInputDevicesReq GetAudioInputDevicesReq = 30;
      case 30:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 242)) {
          ptr = ctx->ParseMessage(_internal_mutable_getaudioinputdevicesreq(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ServerData.GetAudioOutputDevicesReq GetAudioOutputDevicesReq = 31;
      case 31:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 250)) {
          ptr = ctx->ParseMessage(_internal_mutable_getaudiooutputdevicesreq(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ServerData.GetVideoInputDevicesReq GetVideoInputDevicesReq = 32;
      case 32:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 2)) {
          ptr = ctx->ParseMessage(_internal_mutable_getvideoinputdevicesreq(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ServerData.SetAudioInputDeviceReq SetAudioInputDeviceReq = 33;
      case 33:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_setaudioinputdevicereq(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ServerData.SetAudioOutputDeviceReq SetAudioOutputDeviceReq = 34;
      case 34:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_setaudiooutputdevicereq(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ServerData.SetVideoInputDeviceReq SetVideoInputDeviceReq = 35;
      case 35:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_setvideoinputdevicereq(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ServerData.DefinePropertyDefaultValue DefinePropertyDefaultValue = 50;
      case 50:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 146)) {
          ptr = ctx->ParseMessage(_internal_mutable_definepropertydefaultvalue(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ServerData.PostPropertyUpdate PostPropertyUpdate = 53;
      case 53:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 170)) {
          ptr = ctx->ParseMessage(_internal_mutable_postpropertyupdate(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ServerData.BeginTransientPropertyUpdate BeginTransientPropertyUpdate = 54;
      case 54:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 178)) {
          ptr = ctx->ParseMessage(_internal_mutable_begintransientpropertyupdate(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ServerData.ContinueTransientPropertyUpdate ContinueTransientPropertyUpdate = 55;
      case 55:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 186)) {
          ptr = ctx->ParseMessage(_internal_mutable_continuetransientpropertyupdate(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ServerData.FinalizeTransientPropertyUpdate FinalizeTransientPropertyUpdate = 56;
      case 56:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 194)) {
          ptr = ctx->ParseMessage(_internal_mutable_finalizetransientpropertyupdate(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ServerData.CancelTransientPropertyUpdate CancelTransientPropertyUpdate = 57;
      case 57:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 202)) {
          ptr = ctx->ParseMessage(_internal_mutable_canceltransientpropertyupdate(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ServerData.UpdateLocalUserMuted UpdateLocalUserMuted = 60;
      case 60:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 226)) {
          ptr = ctx->ParseMessage(_internal_mutable_updatelocalusermuted(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ServerData.UpdateLocalUserCoPresence UpdateLocalUserCoPresence = 61;
      case 61:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 234)) {
          ptr = ctx->ParseMessage(_internal_mutable_updatelocalusercopresence(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ServerData.UpdateLocalUserStreamState UpdateLocalUserStreamState = 62;
      case 62:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 242)) {
          ptr = ctx->ParseMessage(_internal_mutable_updatelocaluserstreamstate(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ServerData.PostCreateObject PostCreateObject = 70;
      case 70:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_postcreateobject(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ServerData.PostRemoveObject PostRemoveObject = 71;
      case 71:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_postremoveobject(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ServerData.PermissionStatusReq PermissionStatusReq = 90;
      case 90:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 210)) {
          ptr = ctx->ParseMessage(_internal_mutable_permissionstatusreq(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ServerData.AllJoinableSpacesReq AllJoinableSpacesReq = 100;
      case 100:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_alljoinablespacesreq(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RelayClientMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ServerData.RelayClientMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .ServerData.KeepAlive KeepAlive = 1;
  if (_internal_has_keepalive()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::keepalive(this),
        _Internal::keepalive(this).GetCachedSize(), target, stream);
  }

  // .ServerData.UpdateTime UpdateTime = 2;
  if (_internal_has_updatetime()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::updatetime(this),
        _Internal::updatetime(this).GetCachedSize(), target, stream);
  }

  // .ServerData.AuthenticateReq AuthenticateReq = 10;
  if (_internal_has_authenticatereq()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(10, _Internal::authenticatereq(this),
        _Internal::authenticatereq(this).GetCachedSize(), target, stream);
  }

  // .ServerData.AuthenticateGuestReq AuthenticateGuestReq = 11;
  if (_internal_has_authenticateguestreq()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(11, _Internal::authenticateguestreq(this),
        _Internal::authenticateguestreq(this).GetCachedSize(), target, stream);
  }

  // .ServerData.ExitAllSpacesAndLogoutReq ExitAllSpacesAndLogoutReq = 12;
  if (_internal_has_exitallspacesandlogoutreq()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(12, _Internal::exitallspacesandlogoutreq(this),
        _Internal::exitallspacesandlogoutreq(this).GetCachedSize(), target, stream);
  }

  // .ServerData.JoinSpaceFromIdReq JoinSpaceFromIdReq = 20;
  if (_internal_has_joinspacefromidreq()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(20, _Internal::joinspacefromidreq(this),
        _Internal::joinspacefromidreq(this).GetCachedSize(), target, stream);
  }

  // .ServerData.ShutdownSpaceConnectionReq ShutdownSpaceConnectionReq = 21;
  if (_internal_has_shutdownspaceconnectionreq()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(21, _Internal::shutdownspaceconnectionreq(this),
        _Internal::shutdownspaceconnectionreq(this).GetCachedSize(), target, stream);
  }

  // .ServerData.GetAudioInputDevicesReq GetAudioInputDevicesReq = 30;
  if (_internal_has_getaudioinputdevicesreq()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(30, _Internal::getaudioinputdevicesreq(this),
        _Internal::getaudioinputdevicesreq(this).GetCachedSize(), target, stream);
  }

  // .ServerData.GetAudioOutputDevicesReq GetAudioOutputDevicesReq = 31;
  if (_internal_has_getaudiooutputdevicesreq()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(31, _Internal::getaudiooutputdevicesreq(this),
        _Internal::getaudiooutputdevicesreq(this).GetCachedSize(), target, stream);
  }

  // .ServerData.GetVideoInputDevicesReq GetVideoInputDevicesReq = 32;
  if (_internal_has_getvideoinputdevicesreq()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(32, _Internal::getvideoinputdevicesreq(this),
        _Internal::getvideoinputdevicesreq(this).GetCachedSize(), target, stream);
  }

  // .ServerData.SetAudioInputDeviceReq SetAudioInputDeviceReq = 33;
  if (_internal_has_setaudioinputdevicereq()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(33, _Internal::setaudioinputdevicereq(this),
        _Internal::setaudioinputdevicereq(this).GetCachedSize(), target, stream);
  }

  // .ServerData.SetAudioOutputDeviceReq SetAudioOutputDeviceReq = 34;
  if (_internal_has_setaudiooutputdevicereq()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(34, _Internal::setaudiooutputdevicereq(this),
        _Internal::setaudiooutputdevicereq(this).GetCachedSize(), target, stream);
  }

  // .ServerData.SetVideoInputDeviceReq SetVideoInputDeviceReq = 35;
  if (_internal_has_setvideoinputdevicereq()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(35, _Internal::setvideoinputdevicereq(this),
        _Internal::setvideoinputdevicereq(this).GetCachedSize(), target, stream);
  }

  // .ServerData.DefinePropertyDefaultValue DefinePropertyDefaultValue = 50;
  if (_internal_has_definepropertydefaultvalue()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(50, _Internal::definepropertydefaultvalue(this),
        _Internal::definepropertydefaultvalue(this).GetCachedSize(), target, stream);
  }

  // .ServerData.PostPropertyUpdate PostPropertyUpdate = 53;
  if (_internal_has_postpropertyupdate()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(53, _Internal::postpropertyupdate(this),
        _Internal::postpropertyupdate(this).GetCachedSize(), target, stream);
  }

  // .ServerData.BeginTransientPropertyUpdate BeginTransientPropertyUpdate = 54;
  if (_internal_has_begintransientpropertyupdate()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(54, _Internal::begintransientpropertyupdate(this),
        _Internal::begintransientpropertyupdate(this).GetCachedSize(), target, stream);
  }

  // .ServerData.ContinueTransientPropertyUpdate ContinueTransientPropertyUpdate = 55;
  if (_internal_has_continuetransientpropertyupdate()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(55, _Internal::continuetransientpropertyupdate(this),
        _Internal::continuetransientpropertyupdate(this).GetCachedSize(), target, stream);
  }

  // .ServerData.FinalizeTransientPropertyUpdate FinalizeTransientPropertyUpdate = 56;
  if (_internal_has_finalizetransientpropertyupdate()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(56, _Internal::finalizetransientpropertyupdate(this),
        _Internal::finalizetransientpropertyupdate(this).GetCachedSize(), target, stream);
  }

  // .ServerData.CancelTransientPropertyUpdate CancelTransientPropertyUpdate = 57;
  if (_internal_has_canceltransientpropertyupdate()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(57, _Internal::canceltransientpropertyupdate(this),
        _Internal::canceltransientpropertyupdate(this).GetCachedSize(), target, stream);
  }

  // .ServerData.UpdateLocalUserMuted UpdateLocalUserMuted = 60;
  if (_internal_has_updatelocalusermuted()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(60, _Internal::updatelocalusermuted(this),
        _Internal::updatelocalusermuted(this).GetCachedSize(), target, stream);
  }

  // .ServerData.UpdateLocalUserCoPresence UpdateLocalUserCoPresence = 61;
  if (_internal_has_updatelocalusercopresence()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(61, _Internal::updatelocalusercopresence(this),
        _Internal::updatelocalusercopresence(this).GetCachedSize(), target, stream);
  }

  // .ServerData.UpdateLocalUserStreamState UpdateLocalUserStreamState = 62;
  if (_internal_has_updatelocaluserstreamstate()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(62, _Internal::updatelocaluserstreamstate(this),
        _Internal::updatelocaluserstreamstate(this).GetCachedSize(), target, stream);
  }

  // .ServerData.PostCreateObject PostCreateObject = 70;
  if (_internal_has_postcreateobject()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(70, _Internal::postcreateobject(this),
        _Internal::postcreateobject(this).GetCachedSize(), target, stream);
  }

  // .ServerData.PostRemoveObject PostRemoveObject = 71;
  if (_internal_has_postremoveobject()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(71, _Internal::postremoveobject(this),
        _Internal::postremoveobject(this).GetCachedSize(), target, stream);
  }

  // .ServerData.PermissionStatusReq PermissionStatusReq = 90;
  if (_internal_has_permissionstatusreq()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(90, _Internal::permissionstatusreq(this),
        _Internal::permissionstatusreq(this).GetCachedSize(), target, stream);
  }

  // .ServerData.AllJoinableSpacesReq AllJoinableSpacesReq = 100;
  if (_internal_has_alljoinablespacesreq()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(100, _Internal::alljoinablespacesreq(this),
        _Internal::alljoinablespacesreq(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerData.RelayClientMessage)
  return target;
}

size_t RelayClientMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerData.RelayClientMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (Msg_case()) {
    // .ServerData.KeepAlive KeepAlive = 1;
    case kKeepAlive: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Msg_.keepalive_);
      break;
    }
    // .ServerData.UpdateTime UpdateTime = 2;
    case kUpdateTime: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Msg_.updatetime_);
      break;
    }
    // .ServerData.AuthenticateReq AuthenticateReq = 10;
    case kAuthenticateReq: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Msg_.authenticatereq_);
      break;
    }
    // .ServerData.AuthenticateGuestReq AuthenticateGuestReq = 11;
    case kAuthenticateGuestReq: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Msg_.authenticateguestreq_);
      break;
    }
    // .ServerData.ExitAllSpacesAndLogoutReq ExitAllSpacesAndLogoutReq = 12;
    case kExitAllSpacesAndLogoutReq: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Msg_.exitallspacesandlogoutreq_);
      break;
    }
    // .ServerData.JoinSpaceFromIdReq JoinSpaceFromIdReq = 20;
    case kJoinSpaceFromIdReq: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Msg_.joinspacefromidreq_);
      break;
    }
    // .ServerData.ShutdownSpaceConnectionReq ShutdownSpaceConnectionReq = 21;
    case kShutdownSpaceConnectionReq: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Msg_.shutdownspaceconnectionreq_);
      break;
    }
    // .ServerData.GetAudioInputDevicesReq GetAudioInputDevicesReq = 30;
    case kGetAudioInputDevicesReq: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Msg_.getaudioinputdevicesreq_);
      break;
    }
    // .ServerData.GetAudioOutputDevicesReq GetAudioOutputDevicesReq = 31;
    case kGetAudioOutputDevicesReq: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Msg_.getaudiooutputdevicesreq_);
      break;
    }
    // .ServerData.GetVideoInputDevicesReq GetVideoInputDevicesReq = 32;
    case kGetVideoInputDevicesReq: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Msg_.getvideoinputdevicesreq_);
      break;
    }
    // .ServerData.SetAudioInputDeviceReq SetAudioInputDeviceReq = 33;
    case kSetAudioInputDeviceReq: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Msg_.setaudioinputdevicereq_);
      break;
    }
    // .ServerData.SetAudioOutputDeviceReq SetAudioOutputDeviceReq = 34;
    case kSetAudioOutputDeviceReq: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Msg_.setaudiooutputdevicereq_);
      break;
    }
    // .ServerData.SetVideoInputDeviceReq SetVideoInputDeviceReq = 35;
    case kSetVideoInputDeviceReq: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Msg_.setvideoinputdevicereq_);
      break;
    }
    // .ServerData.DefinePropertyDefaultValue DefinePropertyDefaultValue = 50;
    case kDefinePropertyDefaultValue: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Msg_.definepropertydefaultvalue_);
      break;
    }
    // .ServerData.PostPropertyUpdate PostPropertyUpdate = 53;
    case kPostPropertyUpdate: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Msg_.postpropertyupdate_);
      break;
    }
    // .ServerData.BeginTransientPropertyUpdate BeginTransientPropertyUpdate = 54;
    case kBeginTransientPropertyUpdate: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Msg_.begintransientpropertyupdate_);
      break;
    }
    // .ServerData.ContinueTransientPropertyUpdate ContinueTransientPropertyUpdate = 55;
    case kContinueTransientPropertyUpdate: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Msg_.continuetransientpropertyupdate_);
      break;
    }
    // .ServerData.FinalizeTransientPropertyUpdate FinalizeTransientPropertyUpdate = 56;
    case kFinalizeTransientPropertyUpdate: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Msg_.finalizetransientpropertyupdate_);
      break;
    }
    // .ServerData.CancelTransientPropertyUpdate CancelTransientPropertyUpdate = 57;
    case kCancelTransientPropertyUpdate: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Msg_.canceltransientpropertyupdate_);
      break;
    }
    // .ServerData.UpdateLocalUserMuted UpdateLocalUserMuted = 60;
    case kUpdateLocalUserMuted: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Msg_.updatelocalusermuted_);
      break;
    }
    // .ServerData.UpdateLocalUserCoPresence UpdateLocalUserCoPresence = 61;
    case kUpdateLocalUserCoPresence: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Msg_.updatelocalusercopresence_);
      break;
    }
    // .ServerData.UpdateLocalUserStreamState UpdateLocalUserStreamState = 62;
    case kUpdateLocalUserStreamState: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Msg_.updatelocaluserstreamstate_);
      break;
    }
    // .ServerData.PostCreateObject PostCreateObject = 70;
    case kPostCreateObject: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Msg_.postcreateobject_);
      break;
    }
    // .ServerData.PostRemoveObject PostRemoveObject = 71;
    case kPostRemoveObject: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Msg_.postremoveobject_);
      break;
    }
    // .ServerData.PermissionStatusReq PermissionStatusReq = 90;
    case kPermissionStatusReq: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Msg_.permissionstatusreq_);
      break;
    }
    // .ServerData.AllJoinableSpacesReq AllJoinableSpacesReq = 100;
    case kAllJoinableSpacesReq: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Msg_.alljoinablespacesreq_);
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RelayClientMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RelayClientMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RelayClientMessage::GetClassData() const { return &_class_data_; }


void RelayClientMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RelayClientMessage*>(&to_msg);
  auto& from = static_cast<const RelayClientMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ServerData.RelayClientMessage)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.Msg_case()) {
    case kKeepAlive: {
      _this->_internal_mutable_keepalive()->::ServerData::KeepAlive::MergeFrom(
          from._internal_keepalive());
      break;
    }
    case kUpdateTime: {
      _this->_internal_mutable_updatetime()->::ServerData::UpdateTime::MergeFrom(
          from._internal_updatetime());
      break;
    }
    case kAuthenticateReq: {
      _this->_internal_mutable_authenticatereq()->::ServerData::AuthenticateReq::MergeFrom(
          from._internal_authenticatereq());
      break;
    }
    case kAuthenticateGuestReq: {
      _this->_internal_mutable_authenticateguestreq()->::ServerData::AuthenticateGuestReq::MergeFrom(
          from._internal_authenticateguestreq());
      break;
    }
    case kExitAllSpacesAndLogoutReq: {
      _this->_internal_mutable_exitallspacesandlogoutreq()->::ServerData::ExitAllSpacesAndLogoutReq::MergeFrom(
          from._internal_exitallspacesandlogoutreq());
      break;
    }
    case kJoinSpaceFromIdReq: {
      _this->_internal_mutable_joinspacefromidreq()->::ServerData::JoinSpaceFromIdReq::MergeFrom(
          from._internal_joinspacefromidreq());
      break;
    }
    case kShutdownSpaceConnectionReq: {
      _this->_internal_mutable_shutdownspaceconnectionreq()->::ServerData::ShutdownSpaceConnectionReq::MergeFrom(
          from._internal_shutdownspaceconnectionreq());
      break;
    }
    case kGetAudioInputDevicesReq: {
      _this->_internal_mutable_getaudioinputdevicesreq()->::ServerData::GetAudioInputDevicesReq::MergeFrom(
          from._internal_getaudioinputdevicesreq());
      break;
    }
    case kGetAudioOutputDevicesReq: {
      _this->_internal_mutable_getaudiooutputdevicesreq()->::ServerData::GetAudioOutputDevicesReq::MergeFrom(
          from._internal_getaudiooutputdevicesreq());
      break;
    }
    case kGetVideoInputDevicesReq: {
      _this->_internal_mutable_getvideoinputdevicesreq()->::ServerData::GetVideoInputDevicesReq::MergeFrom(
          from._internal_getvideoinputdevicesreq());
      break;
    }
    case kSetAudioInputDeviceReq: {
      _this->_internal_mutable_setaudioinputdevicereq()->::ServerData::SetAudioInputDeviceReq::MergeFrom(
          from._internal_setaudioinputdevicereq());
      break;
    }
    case kSetAudioOutputDeviceReq: {
      _this->_internal_mutable_setaudiooutputdevicereq()->::ServerData::SetAudioOutputDeviceReq::MergeFrom(
          from._internal_setaudiooutputdevicereq());
      break;
    }
    case kSetVideoInputDeviceReq: {
      _this->_internal_mutable_setvideoinputdevicereq()->::ServerData::SetVideoInputDeviceReq::MergeFrom(
          from._internal_setvideoinputdevicereq());
      break;
    }
    case kDefinePropertyDefaultValue: {
      _this->_internal_mutable_definepropertydefaultvalue()->::ServerData::DefinePropertyDefaultValue::MergeFrom(
          from._internal_definepropertydefaultvalue());
      break;
    }
    case kPostPropertyUpdate: {
      _this->_internal_mutable_postpropertyupdate()->::ServerData::PostPropertyUpdate::MergeFrom(
          from._internal_postpropertyupdate());
      break;
    }
    case kBeginTransientPropertyUpdate: {
      _this->_internal_mutable_begintransientpropertyupdate()->::ServerData::BeginTransientPropertyUpdate::MergeFrom(
          from._internal_begintransientpropertyupdate());
      break;
    }
    case kContinueTransientPropertyUpdate: {
      _this->_internal_mutable_continuetransientpropertyupdate()->::ServerData::ContinueTransientPropertyUpdate::MergeFrom(
          from._internal_continuetransientpropertyupdate());
      break;
    }
    case kFinalizeTransientPropertyUpdate: {
      _this->_internal_mutable_finalizetransientpropertyupdate()->::ServerData::FinalizeTransientPropertyUpdate::MergeFrom(
          from._internal_finalizetransientpropertyupdate());
      break;
    }
    case kCancelTransientPropertyUpdate: {
      _this->_internal_mutable_canceltransientpropertyupdate()->::ServerData::CancelTransientPropertyUpdate::MergeFrom(
          from._internal_canceltransientpropertyupdate());
      break;
    }
    case kUpdateLocalUserMuted: {
      _this->_internal_mutable_updatelocalusermuted()->::ServerData::UpdateLocalUserMuted::MergeFrom(
          from._internal_updatelocalusermuted());
      break;
    }
    case kUpdateLocalUserCoPresence: {
      _this->_internal_mutable_updatelocalusercopresence()->::ServerData::UpdateLocalUserCoPresence::MergeFrom(
          from._internal_updatelocalusercopresence());
      break;
    }
    case kUpdateLocalUserStreamState: {
      _this->_internal_mutable_updatelocaluserstreamstate()->::ServerData::UpdateLocalUserStreamState::MergeFrom(
          from._internal_updatelocaluserstreamstate());
      break;
    }
    case kPostCreateObject: {
      _this->_internal_mutable_postcreateobject()->::ServerData::PostCreateObject::MergeFrom(
          from._internal_postcreateobject());
      break;
    }
    case kPostRemoveObject: {
      _this->_internal_mutable_postremoveobject()->::ServerData::PostRemoveObject::MergeFrom(
          from._internal_postremoveobject());
      break;
    }
    case kPermissionStatusReq: {
      _this->_internal_mutable_permissionstatusreq()->::ServerData::PermissionStatusReq::MergeFrom(
          from._internal_permissionstatusreq());
      break;
    }
    case kAllJoinableSpacesReq: {
      _this->_internal_mutable_alljoinablespacesreq()->::ServerData::AllJoinableSpacesReq::MergeFrom(
          from._internal_alljoinablespacesreq());
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RelayClientMessage::CopyFrom(const RelayClientMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerData.RelayClientMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RelayClientMessage::IsInitialized() const {
  return true;
}

void RelayClientMessage::InternalSwap(RelayClientMessage* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.Msg_, other->_impl_.Msg_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata RelayClientMessage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_relay_2eproto_getter, &descriptor_table_relay_2eproto_once,
      file_level_metadata_relay_2eproto[1]);
}

// ===================================================================

class RelayRemoteMessageBatch::_Internal {
 public:
};

RelayRemoteMessageBatch::RelayRemoteMessageBatch(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ServerData.RelayRemoteMessageBatch)
}
RelayRemoteMessageBatch::RelayRemoteMessageBatch(const RelayRemoteMessageBatch& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RelayRemoteMessageBatch* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.messages_){from._impl_.messages_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ServerData.RelayRemoteMessageBatch)
}

inline void RelayRemoteMessageBatch::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.messages_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RelayRemoteMessageBatch::~RelayRemoteMessageBatch() {
  // @@protoc_insertion_point(destructor:ServerData.RelayRemoteMessageBatch)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RelayRemoteMessageBatch::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.messages_.~RepeatedPtrField();
}

void RelayRemoteMessageBatch::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RelayRemoteMessageBatch::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerData.RelayRemoteMessageBatch)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.messages_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RelayRemoteMessageBatch::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .ServerData.RelayRemoteMessage Messages = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_messages(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RelayRemoteMessageBatch::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ServerData.RelayRemoteMessageBatch)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ServerData.RelayRemoteMessage Messages = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_messages_size()); i < n; i++) {
    const auto& repfield = this->_internal_messages(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerData.RelayRemoteMessageBatch)
  return target;
}

size_t RelayRemoteMessageBatch::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerData.RelayRemoteMessageBatch)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ServerData.RelayRemoteMessage Messages = 1;
  total_size += 1UL * this->_internal_messages_size();
  for (const auto& msg : this->_impl_.messages_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RelayRemoteMessageBatch::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RelayRemoteMessageBatch::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RelayRemoteMessageBatch::GetClassData() const { return &_class_data_; }


void RelayRemoteMessageBatch::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RelayRemoteMessageBatch*>(&to_msg);
  auto& from = static_cast<const RelayRemoteMessageBatch&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ServerData.RelayRemoteMessageBatch)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.messages_.MergeFrom(from._impl_.messages_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RelayRemoteMessageBatch::CopyFrom(const RelayRemoteMessageBatch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerData.RelayRemoteMessageBatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RelayRemoteMessageBatch::IsInitialized() const {
  return true;
}

void RelayRemoteMessageBatch::InternalSwap(RelayRemoteMessageBatch* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.messages_.InternalSwap(&other->_impl_.messages_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RelayRemoteMessageBatch::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_relay_2eproto_getter, &descriptor_table_relay_2eproto_once,
      file_level_metadata_relay_2eproto[2]);
}

// ===================================================================

class RelayRemoteMessage::_Internal {
 public:
  static const ::ServerData::StatusMessage& message(const RelayRemoteMessage* msg);
  static const ::ServerData::AuthenticateResp& authenticateresp(const RelayRemoteMessage* msg);
  static const ::ServerData::AuthenticateGuestResp& authenticateguestresp(const RelayRemoteMessage* msg);
  static const ::ServerData::ExitAllSpacesAndLogoutResp& exitallspacesandlogoutresp(const RelayRemoteMessage* msg);
  static const ::ServerData::JoinSpaceFromIdResp& joinspacefromidresp(const RelayRemoteMessage* msg);
  static const ::ServerData::ShutdownSpaceConnectionResp& shutdownspaceconnectionresp(const RelayRemoteMessage* msg);
  static const ::ServerData::GetAudioInputDevicesResp& getaudioinputdevicesresp(const RelayRemoteMessage* msg);
  static const ::ServerData::GetAudioOutputDevicesResp& getaudiooutputdevicesresp(const RelayRemoteMessage* msg);
  static const ::ServerData::GetVideoInputDevicesResp& getvideoinputdevicesresp(const RelayRemoteMessage* msg);
  static const ::ServerData::SetAudioInputDeviceResp& setaudioinputdeviceresp(const RelayRemoteMessage* msg);
  static const ::ServerData::SetAudioOutputDeviceResp& setaudiooutputdeviceresp(const RelayRemoteMessage* msg);
  static const ::ServerData::SetVideoInputDeviceResp& setvideoinputdeviceresp(const RelayRemoteMessage* msg);
  static const ::ServerData::PropertyValueStatus& propertyvaluestatus(const RelayRemoteMessage* msg);
  static const ::ServerData::LocalPropertyHandledResp& localpropertyhandledresp(const RelayRemoteMessage* msg);
  static const ::ServerData::PropMetadataStatus& propmetadatastatus(const RelayRemoteMessage* msg);
  static const ::ServerData::UserAdded& useradded(const RelayRemoteMessage* msg);
  static const ::ServerData::UserRemoved& userremoved(const RelayRemoteMessage* msg);
  static const ::ServerData::UserVideoFrame& uservideoframe(const RelayRemoteMessage* msg);
  static const ::ServerData::SpaceInfo& spaceadded(const RelayRemoteMessage* msg);
  static const ::ServerData::SpaceInfo& spaceupdated(const RelayRemoteMessage* msg);
  static const ::ServerData::SpaceInfo& spaceremoved(const RelayRemoteMessage* msg);
  static const ::ServerData::ObjectAdded& objectadded(const RelayRemoteMessage* msg);
  static const ::ServerData::ObjectRemoved& objectremoved(const RelayRemoteMessage* msg);
  static const ::ServerData::PermissionStatus& permissionstatus(const RelayRemoteMessage* msg);
  static const ::ServerData::AllJoinableSpacesResp& alljoinablespacesresp(const RelayRemoteMessage* msg);
};

const ::ServerData::StatusMessage&
RelayRemoteMessage::_Internal::message(const RelayRemoteMessage* msg) {
  return *msg->_impl_.Msg_.message_;
}
const ::ServerData::AuthenticateResp&
RelayRemoteMessage::_Internal::authenticateresp(const RelayRemoteMessage* msg) {
  return *msg->_impl_.Msg_.authenticateresp_;
}
const ::ServerData::AuthenticateGuestResp&
RelayRemoteMessage::_Internal::authenticateguestresp(const RelayRemoteMessage* msg) {
  return *msg->_impl_.Msg_.authenticateguestresp_;
}
const ::ServerData::ExitAllSpacesAndLogoutResp&
RelayRemoteMessage::_Internal::exitallspacesandlogoutresp(const RelayRemoteMessage* msg) {
  return *msg->_impl_.Msg_.exitallspacesandlogoutresp_;
}
const ::ServerData::JoinSpaceFromIdResp&
RelayRemoteMessage::_Internal::joinspacefromidresp(const RelayRemoteMessage* msg) {
  return *msg->_impl_.Msg_.joinspacefromidresp_;
}
const ::ServerData::ShutdownSpaceConnectionResp&
RelayRemoteMessage::_Internal::shutdownspaceconnectionresp(const RelayRemoteMessage* msg) {
  return *msg->_impl_.Msg_.shutdownspaceconnectionresp_;
}
const ::ServerData::GetAudioInputDevicesResp&
RelayRemoteMessage::_Internal::getaudioinputdevicesresp(const RelayRemoteMessage* msg) {
  return *msg->_impl_.Msg_.getaudioinputdevicesresp_;
}
const ::ServerData::GetAudioOutputDevicesResp&
RelayRemoteMessage::_Internal::getaudiooutputdevicesresp(const RelayRemoteMessage* msg) {
  return *msg->_impl_.Msg_.getaudiooutputdevicesresp_;
}
const ::ServerData::GetVideoInputDevicesResp&
RelayRemoteMessage::_Internal::getvideoinputdevicesresp(const RelayRemoteMessage* msg) {
  return *msg->_impl_.Msg_.getvideoinputdevicesresp_;
}
const ::ServerData::SetAudioInputDeviceResp&
RelayRemoteMessage::_Internal::setaudioinputdeviceresp(const RelayRemoteMessage* msg) {
  return *msg->_impl_.Msg_.setaudioinputdeviceresp_;
}
const ::ServerData::SetAudioOutputDeviceResp&
RelayRemoteMessage::_Internal::setaudiooutputdeviceresp(const RelayRemoteMessage* msg) {
  return *msg->_impl_.Msg_.setaudiooutputdeviceresp_;
}
const ::ServerData::SetVideoInputDeviceResp&
RelayRemoteMessage::_Internal::setvideoinputdeviceresp(const RelayRemoteMessage* msg) {
  return *msg->_impl_.Msg_.setvideoinputdeviceresp_;
}
const ::ServerData::PropertyValueStatus&
RelayRemoteMessage::_Internal::propertyvaluestatus(const RelayRemoteMessage* msg) {
  return *msg->_impl_.Msg_.propertyvaluestatus_;
}
const ::ServerData::LocalPropertyHandledResp&
RelayRemoteMessage::_Internal::localpropertyhandledresp(const RelayRemoteMessage* msg) {
  return *msg->_impl_.Msg_.localpropertyhandledresp_;
}
const ::ServerData::PropMetadataStatus&
RelayRemoteMessage::_Internal::propmetadatastatus(const RelayRemoteMessage* msg) {
  return *msg->_impl_.Msg_.propmetadatastatus_;
}
const ::ServerData::UserAdded&
RelayRemoteMessage::_Internal::useradded(const RelayRemoteMessage* msg) {
  return *msg->_impl_.Msg_.useradded_;
}
const ::ServerData::UserRemoved&
RelayRemoteMessage::_Internal::userremoved(const RelayRemoteMessage* msg) {
  return *msg->_impl_.Msg_.userremoved_;
}
const ::ServerData::UserVideoFrame&
RelayRemoteMessage::_Internal::uservideoframe(const RelayRemoteMessage* msg) {
  return *msg->_impl_.Msg_.uservideoframe_;
}
const ::ServerData::SpaceInfo&
RelayRemoteMessage::_Internal::spaceadded(const RelayRemoteMessage* msg) {
  return *msg->_impl_.Msg_.spaceadded_;
}
const ::ServerData::SpaceInfo&
RelayRemoteMessage::_Internal::spaceupdated(const RelayRemoteMessage* msg) {
  return *msg->_impl_.Msg_.spaceupdated_;
}
const ::ServerData::SpaceInfo&
RelayRemoteMessage::_Internal::spaceremoved(const RelayRemoteMessage* msg) {
  return *msg->_impl_.Msg_.spaceremoved_;
}
const ::ServerData::ObjectAdded&
RelayRemoteMessage::_Internal::objectadded(const RelayRemoteMessage* msg) {
  return *msg->_impl_.Msg_.objectadded_;
}
const ::ServerData::ObjectRemoved&
RelayRemoteMessage::_Internal::objectremoved(const RelayRemoteMessage* msg) {
  return *msg->_impl_.Msg_.objectremoved_;
}
const ::ServerData::PermissionStatus&
RelayRemoteMessage::_Internal::permissionstatus(const RelayRemoteMessage* msg) {
  return *msg->_impl_.Msg_.permissionstatus_;
}
const ::ServerData::AllJoinableSpacesResp&
RelayRemoteMessage::_Internal::alljoinablespacesresp(const RelayRemoteMessage* msg) {
  return *msg->_impl_.Msg_.alljoinablespacesresp_;
}
void RelayRemoteMessage::set_allocated_message(::ServerData::StatusMessage* message) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Msg();
  if (message) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(message);
    if (message_arena != submessage_arena) {
      message = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, message, submessage_arena);
    }
    set_has_message();
    _impl_.Msg_.message_ = message;
  }
  // @@protoc_insertion_point(field_set_allocated:ServerData.RelayRemoteMessage.Message)
}
void RelayRemoteMessage::set_allocated_authenticateresp(::ServerData::AuthenticateResp* authenticateresp) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Msg();
  if (authenticateresp) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(authenticateresp);
    if (message_arena != submessage_arena) {
      authenticateresp = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, authenticateresp, submessage_arena);
    }
    set_has_authenticateresp();
    _impl_.Msg_.authenticateresp_ = authenticateresp;
  }
  // @@protoc_insertion_point(field_set_allocated:ServerData.RelayRemoteMessage.AuthenticateResp)
}
void RelayRemoteMessage::set_allocated_authenticateguestresp(::ServerData::AuthenticateGuestResp* authenticateguestresp) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Msg();
  if (authenticateguestresp) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(authenticateguestresp);
    if (message_arena != submessage_arena) {
      authenticateguestresp = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, authenticateguestresp, submessage_arena);
    }
    set_has_authenticateguestresp();
    _impl_.Msg_.authenticateguestresp_ = authenticateguestresp;
  }
  // @@protoc_insertion_point(field_set_allocated:ServerData.RelayRemoteMessage.AuthenticateGuestResp)
}
void RelayRemoteMessage::set_allocated_exitallspacesandlogoutresp(::ServerData::ExitAllSpacesAndLogoutResp* exitallspacesandlogoutresp) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Msg();
  if (exitallspacesandlogoutresp) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(exitallspacesandlogoutresp);
    if (message_arena != submessage_arena) {
      exitallspacesandlogoutresp = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, exitallspacesandlogoutresp, submessage_arena);
    }
    set_has_exitallspacesandlogoutresp();
    _impl_.Msg_.exitallspacesandlogoutresp_ = exitallspacesandlogoutresp;
  }
  // @@protoc_insertion_point(field_set_allocated:ServerData.RelayRemoteMessage.ExitAllSpacesAndLogoutResp)
}
void RelayRemoteMessage::set_allocated_joinspacefromidresp(::ServerData::JoinSpaceFromIdResp* joinspacefromidresp) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Msg();
  if (joinspacefromidresp) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(joinspacefromidresp);
    if (message_arena != submessage_arena) {
      joinspacefromidresp = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, joinspacefromidresp, submessage_arena);
    }
    set_has_joinspacefromidresp();
    _impl_.Msg_.joinspacefromidresp_ = joinspacefromidresp;
  }
  // @@protoc_insertion_point(field_set_allocated:ServerData.RelayRemoteMessage.JoinSpaceFromIdResp)
}
void RelayRemoteMessage::set_allocated_shutdownspaceconnectionresp(::ServerData::ShutdownSpaceConnectionResp* shutdownspaceconnectionresp) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Msg();
  if (shutdownspaceconnectionresp) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(shutdownspaceconnectionresp);
    if (message_arena != submessage_arena) {
      shutdownspaceconnectionresp = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, shutdownspaceconnectionresp, submessage_arena);
    }
    set_has_shutdownspaceconnectionresp();
    _impl_.Msg_.shutdownspaceconnectionresp_ = shutdownspaceconnectionresp;
  }
  // @@protoc_insertion_point(field_set_allocated:ServerData.RelayRemoteMessage.ShutdownSpaceConnectionResp)
}
void RelayRemoteMessage::set_allocated_getaudioinputdevicesresp(::ServerData::GetAudioInputDevicesResp* getaudioinputdevicesresp) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Msg();
  if (getaudioinputdevicesresp) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(getaudioinputdevicesresp);
    if (message_arena != submessage_arena) {
      getaudioinputdevicesresp = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, getaudioinputdevicesresp, submessage_arena);
    }
    set_has_getaudioinputdevicesresp();
    _impl_.Msg_.getaudioinputdevicesresp_ = getaudioinputdevicesresp;
  }
  // @@protoc_insertion_point(field_set_allocated:ServerData.RelayRemoteMessage.GetAudioInputDevicesResp)
}
void RelayRemoteMessage::set_allocated_getaudiooutputdevicesresp(::ServerData::GetAudioOutputDevicesResp* getaudiooutputdevicesresp) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Msg();
  if (getaudiooutputdevicesresp) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(getaudiooutputdevicesresp);
    if (message_arena != submessage_arena) {
      getaudiooutputdevicesresp = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, getaudiooutputdevicesresp, submessage_arena);
    }
    set_has_getaudiooutputdevicesresp();
    _impl_.Msg_.getaudiooutputdevicesresp_ = getaudiooutputdevicesresp;
  }
  // @@protoc_insertion_point(field_set_allocated:ServerData.RelayRemoteMessage.GetAudioOutputDevicesResp)
}
void RelayRemoteMessage::set_allocated_getvideoinputdevicesresp(::ServerData::GetVideoInputDevicesResp* getvideoinputdevicesresp) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Msg();
  if (getvideoinputdevicesresp) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(getvideoinputdevicesresp);
    if (message_arena != submessage_arena) {
      getvideoinputdevicesresp = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, getvideoinputdevicesresp, submessage_arena);
    }
    set_has_getvideoinputdevicesresp();
    _impl_.Msg_.getvideoinputdevicesresp_ = getvideoinputdevicesresp;
  }
  // @@protoc_insertion_point(field_set_allocated:ServerData.RelayRemoteMessage.GetVideoInputDevicesResp)
}
void RelayRemoteMessage::set_allocated_setaudioinputdeviceresp(::ServerData::SetAudioInputDeviceResp* setaudioinputdeviceresp) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Msg();
  if (setaudioinputdeviceresp) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(setaudioinputdeviceresp);
    if (message_arena != submessage_arena) {
      setaudioinputdeviceresp = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, setaudioinputdeviceresp, submessage_arena);
    }
    set_has_setaudioinputdeviceresp();
    _impl_.Msg_.setaudioinputdeviceresp_ = setaudioinputdeviceresp;
  }
  // @@protoc_insertion_point(field_set_allocated:ServerData.RelayRemoteMessage.SetAudioInputDeviceResp)
}
void RelayRemoteMessage::set_allocated_setaudiooutputdeviceresp(::ServerData::SetAudioOutputDeviceResp* setaudiooutputdeviceresp) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Msg();
  if (setaudiooutputdeviceresp) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(setaudiooutputdeviceresp);
    if (message_arena != submessage_arena) {
      setaudiooutputdeviceresp = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, setaudiooutputdeviceresp, submessage_arena);
    }
    set_has_setaudiooutputdeviceresp();
    _impl_.Msg_.setaudiooutputdeviceresp_ = setaudiooutputdeviceresp;
  }
  // @@protoc_insertion_point(field_set_allocated:ServerData.RelayRemoteMessage.SetAudioOutputDeviceResp)
}
void RelayRemoteMessage::set_allocated_setvideoinputdeviceresp(::ServerData::SetVideoInputDeviceResp* setvideoinputdeviceresp) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Msg();
  if (setvideoinputdeviceresp) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(setvideoinputdeviceresp);
    if (message_arena != submessage_arena) {
      setvideoinputdeviceresp = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, setvideoinputdeviceresp, submessage_arena);
    }
    set_has_setvideoinputdeviceresp();
    _impl_.Msg_.setvideoinputdeviceresp_ = setvideoinputdeviceresp;
  }
  // @@protoc_insertion_point(field_set_allocated:ServerData.RelayRemoteMessage.SetVideoInputDeviceResp)
}
void RelayRemoteMessage::set_allocated_propertyvaluestatus(::ServerData::PropertyValueStatus* propertyvaluestatus) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Msg();
  if (propertyvaluestatus) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(propertyvaluestatus);
    if (message_arena != submessage_arena) {
      propertyvaluestatus = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, propertyvaluestatus, submessage_arena);
    }
    set_has_propertyvaluestatus();
    _impl_.Msg_.propertyvaluestatus_ = propertyvaluestatus;
  }
  // @@protoc_insertion_point(field_set_allocated:ServerData.RelayRemoteMessage.PropertyValueStatus)
}
void RelayRemoteMessage::set_allocated_localpropertyhandledresp(::ServerData::LocalPropertyHandledResp* localpropertyhandledresp) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Msg();
  if (localpropertyhandledresp) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(localpropertyhandledresp);
    if (message_arena != submessage_arena) {
      localpropertyhandledresp = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, localpropertyhandledresp, submessage_arena);
    }
    set_has_localpropertyhandledresp();
    _impl_.Msg_.localpropertyhandledresp_ = localpropertyhandledresp;
  }
  // @@protoc_insertion_point(field_set_allocated:ServerData.RelayRemoteMessage.LocalPropertyHandledResp)
}
void RelayRemoteMessage::set_allocated_propmetadatastatus(::ServerData::PropMetadataStatus* propmetadatastatus) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Msg();
  if (propmetadatastatus) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(propmetadatastatus);
    if (message_arena != submessage_arena) {
      propmetadatastatus = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, propmetadatastatus, submessage_arena);
    }
    set_has_propmetadatastatus();
    _impl_.Msg_.propmetadatastatus_ = propmetadatastatus;
  }
  // @@protoc_insertion_point(field_set_allocated:ServerData.RelayRemoteMessage.PropMetadataStatus)
}
void RelayRemoteMessage::set_allocated_useradded(::ServerData::UserAdded* useradded) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Msg();
  if (useradded) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(useradded);
    if (message_arena != submessage_arena) {
      useradded = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, useradded, submessage_arena);
    }
    set_has_useradded();
    _impl_.Msg_.useradded_ = useradded;
  }
  // @@protoc_insertion_point(field_set_allocated:ServerData.RelayRemoteMessage.UserAdded)
}
void RelayRemoteMessage::set_allocated_userremoved(::ServerData::UserRemoved* userremoved) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Msg();
  if (userremoved) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(userremoved);
    if (message_arena != submessage_arena) {
      userremoved = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, userremoved, submessage_arena);
    }
    set_has_userremoved();
    _impl_.Msg_.userremoved_ = userremoved;
  }
  // @@protoc_insertion_point(field_set_allocated:ServerData.RelayRemoteMessage.UserRemoved)
}
void RelayRemoteMessage::set_allocated_uservideoframe(::ServerData::UserVideoFrame* uservideoframe) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Msg();
  if (uservideoframe) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(uservideoframe);
    if (message_arena != submessage_arena) {
      uservideoframe = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, uservideoframe, submessage_arena);
    }
    set_has_uservideoframe();
    _impl_.Msg_.uservideoframe_ = uservideoframe;
  }
  // @@protoc_insertion_point(field_set_allocated:ServerData.RelayRemoteMessage.UserVideoFrame)
}
void RelayRemoteMessage::set_allocated_spaceadded(::ServerData::SpaceInfo* spaceadded) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Msg();
  if (spaceadded) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(spaceadded);
    if (message_arena != submessage_arena) {
      spaceadded = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, spaceadded, submessage_arena);
    }
    set_has_spaceadded();
    _impl_.Msg_.spaceadded_ = spaceadded;
  }
  // @@protoc_insertion_point(field_set_allocated:ServerData.RelayRemoteMessage.SpaceAdded)
}
void RelayRemoteMessage::set_allocated_spaceupdated(::ServerData::SpaceInfo* spaceupdated) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Msg();
  if (spaceupdated) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(spaceupdated);
    if (message_arena != submessage_arena) {
      spaceupdated = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, spaceupdated, submessage_arena);
    }
    set_has_spaceupdated();
    _impl_.Msg_.spaceupdated_ = spaceupdated;
  }
  // @@protoc_insertion_point(field_set_allocated:ServerData.RelayRemoteMessage.SpaceUpdated)
}
void RelayRemoteMessage::set_allocated_spaceremoved(::ServerData::SpaceInfo* spaceremoved) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Msg();
  if (spaceremoved) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(spaceremoved);
    if (message_arena != submessage_arena) {
      spaceremoved = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, spaceremoved, submessage_arena);
    }
    set_has_spaceremoved();
    _impl_.Msg_.spaceremoved_ = spaceremoved;
  }
  // @@protoc_insertion_point(field_set_allocated:ServerData.RelayRemoteMessage.SpaceRemoved)
}
void RelayRemoteMessage::set_allocated_objectadded(::ServerData::ObjectAdded* objectadded) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Msg();
  if (objectadded) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(objectadded);
    if (message_arena != submessage_arena) {
      objectadded = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, objectadded, submessage_arena);
    }
    set_has_objectadded();
    _impl_.Msg_.objectadded_ = objectadded;
  }
  // @@protoc_insertion_point(field_set_allocated:ServerData.RelayRemoteMessage.ObjectAdded)
}
void RelayRemoteMessage::set_allocated_objectremoved(::ServerData::ObjectRemoved* objectremoved) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Msg();
  if (objectremoved) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(objectremoved);
    if (message_arena != submessage_arena) {
      objectremoved = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, objectremoved, submessage_arena);
    }
    set_has_objectremoved();
    _impl_.Msg_.objectremoved_ = objectremoved;
  }
  // @@protoc_insertion_point(field_set_allocated:ServerData.RelayRemoteMessage.ObjectRemoved)
}
void RelayRemoteMessage::set_allocated_permissionstatus(::ServerData::PermissionStatus* permissionstatus) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Msg();
  if (permissionstatus) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(permissionstatus);
    if (message_arena != submessage_arena) {
      permissionstatus = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, permissionstatus, submessage_arena);
    }
    set_has_permissionstatus();
    _impl_.Msg_.permissionstatus_ = permissionstatus;
  }
  // @@protoc_insertion_point(field_set_allocated:ServerData.RelayRemoteMessage.PermissionStatus)
}
void RelayRemoteMessage::set_allocated_alljoinablespacesresp(::ServerData::AllJoinableSpacesResp* alljoinablespacesresp) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Msg();
  if (alljoinablespacesresp) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(alljoinablespacesresp);
    if (message_arena != submessage_arena) {
      alljoinablespacesresp = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, alljoinablespacesresp, submessage_arena);
    }
    set_has_alljoinablespacesresp();
    _impl_.Msg_.alljoinablespacesresp_ = alljoinablespacesresp;
  }
  // @@protoc_insertion_point(field_set_allocated:ServerData.RelayRemoteMessage.AllJoinableSpacesResp)
}
RelayRemoteMessage::RelayRemoteMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ServerData.RelayRemoteMessage)
}
RelayRemoteMessage::RelayRemoteMessage(const RelayRemoteMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RelayRemoteMessage* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.Msg_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_Msg();
  switch (from.Msg_case()) {
    case kMessage: {
      _this->_internal_mutable_message()->::ServerData::StatusMessage::MergeFrom(
          from._internal_message());
      break;
    }
    case kAuthenticateResp: {
      _this->_internal_mutable_authenticateresp()->::ServerData::AuthenticateResp::MergeFrom(
          from._internal_authenticateresp());
      break;
    }
    case kAuthenticateGuestResp: {
      _this->_internal_mutable_authenticateguestresp()->::ServerData::AuthenticateGuestResp::MergeFrom(
          from._internal_authenticateguestresp());
      break;
    }
    case kExitAllSpacesAndLogoutResp: {
      _this->_internal_mutable_exitallspacesandlogoutresp()->::ServerData::ExitAllSpacesAndLogoutResp::MergeFrom(
          from._internal_exitallspacesandlogoutresp());
      break;
    }
    case kJoinSpaceFromIdResp: {
      _this->_internal_mutable_joinspacefromidresp()->::ServerData::JoinSpaceFromIdResp::MergeFrom(
          from._internal_joinspacefromidresp());
      break;
    }
    case kShutdownSpaceConnectionResp: {
      _this->_internal_mutable_shutdownspaceconnectionresp()->::ServerData::ShutdownSpaceConnectionResp::MergeFrom(
          from._internal_shutdownspaceconnectionresp());
      break;
    }
    case kGetAudioInputDevicesResp: {
      _this->_internal_mutable_getaudioinputdevicesresp()->::ServerData::GetAudioInputDevicesResp::MergeFrom(
          from._internal_getaudioinputdevicesresp());
      break;
    }
    case kGetAudioOutputDevicesResp: {
      _this->_internal_mutable_getaudiooutputdevicesresp()->::ServerData::GetAudioOutputDevicesResp::MergeFrom(
          from._internal_getaudiooutputdevicesresp());
      break;
    }
    case kGetVideoInputDevicesResp: {
      _this->_internal_mutable_getvideoinputdevicesresp()->::ServerData::GetVideoInputDevicesResp::MergeFrom(
          from._internal_getvideoinputdevicesresp());
      break;
    }
    case kSetAudioInputDeviceResp: {
      _this->_internal_mutable_setaudioinputdeviceresp()->::ServerData::SetAudioInputDeviceResp::MergeFrom(
          from._internal_setaudioinputdeviceresp());
      break;
    }
    case kSetAudioOutputDeviceResp: {
      _this->_internal_mutable_setaudiooutputdeviceresp()->::ServerData::SetAudioOutputDeviceResp::MergeFrom(
          from._internal_setaudiooutputdeviceresp());
      break;
    }
    case kSetVideoInputDeviceResp: {
      _this->_internal_mutable_setvideoinputdeviceresp()->::ServerData::SetVideoInputDeviceResp::MergeFrom(
          from._internal_setvideoinputdeviceresp());
      break;
    }
    case kPropertyValueStatus: {
      _this->_internal_mutable_propertyvaluestatus()->::ServerData::PropertyValueStatus::MergeFrom(
          from._internal_propertyvaluestatus());
      break;
    }
    case kLocalPropertyHandledResp: {
      _this->_internal_mutable_localpropertyhandledresp()->::ServerData::LocalPropertyHandledResp::MergeFrom(
          from._internal_localpropertyhandledresp());
      break;
    }
    case kPropMetadataStatus: {
      _this->_internal_mutable_propmetadatastatus()->::ServerData::PropMetadataStatus::MergeFrom(
          from._internal_propmetadatastatus());
      break;
    }
    case kUserAdded: {
      _this->_internal_mutable_useradded()->::ServerData::UserAdded::MergeFrom(
          from._internal_useradded());
      break;
    }
    case kUserRemoved: {
      _this->_internal_mutable_userremoved()->::ServerData::UserRemoved::MergeFrom(
          from._internal_userremoved());
      break;
    }
    case kUserVideoFrame: {
      _this->_internal_mutable_uservideoframe()->::ServerData::UserVideoFrame::MergeFrom(
          from._internal_uservideoframe());
      break;
    }
    case kSpaceAdded: {
      _this->_internal_mutable_spaceadded()->::ServerData::SpaceInfo::MergeFrom(
          from._internal_spaceadded());
      break;
    }
    case kSpaceUpdated: {
      _this->_internal_mutable_spaceupdated()->::ServerData::SpaceInfo::MergeFrom(
          from._internal_spaceupdated());
      break;
    }
    case kSpaceRemoved: {
      _this->_internal_mutable_spaceremoved()->::ServerData::SpaceInfo::MergeFrom(
          from._internal_spaceremoved());
      break;
    }
    case kObjectAdded: {
      _this->_internal_mutable_objectadded()->::ServerData::ObjectAdded::MergeFrom(
          from._internal_objectadded());
      break;
    }
    case kObjectRemoved: {
      _this->_internal_mutable_objectremoved()->::ServerData::ObjectRemoved::MergeFrom(
          from._internal_objectremoved());
      break;
    }
    case kPermissionStatus: {
      _this->_internal_mutable_permissionstatus()->::ServerData::PermissionStatus::MergeFrom(
          from._internal_permissionstatus());
      break;
    }
    case kAllJoinableSpacesResp: {
      _this->_internal_mutable_alljoinablespacesresp()->::ServerData::AllJoinableSpacesResp::MergeFrom(
          from._internal_alljoinablespacesresp());
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:ServerData.RelayRemoteMessage)
}

inline void RelayRemoteMessage::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.Msg_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  clear_has_Msg();
}

RelayRemoteMessage::~RelayRemoteMessage() {
  // @@protoc_insertion_point(destructor:ServerData.RelayRemoteMessage)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RelayRemoteMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_Msg()) {
    clear_Msg();
  }
}

void RelayRemoteMessage::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RelayRemoteMessage::clear_Msg() {
// @@protoc_insertion_point(one_of_clear_start:ServerData.RelayRemoteMessage)
  switch (Msg_case()) {
    case kMessage: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Msg_.message_;
      }
      break;
    }
    case kAuthenticateResp: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Msg_.authenticateresp_;
      }
      break;
    }
    case kAuthenticateGuestResp: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Msg_.authenticateguestresp_;
      }
      break;
    }
    case kExitAllSpacesAndLogoutResp: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Msg_.exitallspacesandlogoutresp_;
      }
      break;
    }
    case kJoinSpaceFromIdResp: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Msg_.joinspacefromidresp_;
      }
      break;
    }
    case kShutdownSpaceConnectionResp: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Msg_.shutdownspaceconnectionresp_;
      }
      break;
    }
    case kGetAudioInputDevicesResp: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Msg_.getaudioinputdevicesresp_;
      }
      break;
    }
    case kGetAudioOutputDevicesResp: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Msg_.getaudiooutputdevicesresp_;
      }
      break;
    }
    case kGetVideoInputDevicesResp: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Msg_.getvideoinputdevicesresp_;
      }
      break;
    }
    case kSetAudioInputDeviceResp: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Msg_.setaudioinputdeviceresp_;
      }
      break;
    }
    case kSetAudioOutputDeviceResp: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Msg_.setaudiooutputdeviceresp_;
      }
      break;
    }
    case kSetVideoInputDeviceResp: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Msg_.setvideoinputdeviceresp_;
      }
      break;
    }
    case kPropertyValueStatus: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Msg_.propertyvaluestatus_;
      }
      break;
    }
    case kLocalPropertyHandledResp: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Msg_.localpropertyhandledresp_;
      }
      break;
    }
    case kPropMetadataStatus: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Msg_.propmetadatastatus_;
      }
      break;
    }
    case kUserAdded: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Msg_.useradded_;
      }
      break;
    }
    case kUserRemoved: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Msg_.userremoved_;
      }
      break;
    }
    case kUserVideoFrame: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Msg_.uservideoframe_;
      }
      break;
    }
    case kSpaceAdded: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Msg_.spaceadded_;
      }
      break;
    }
    case kSpaceUpdated: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Msg_.spaceupdated_;
      }
      break;
    }
    case kSpaceRemoved: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Msg_.spaceremoved_;
      }
      break;
    }
    case kObjectAdded: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Msg_.objectadded_;
      }
      break;
    }
    case kObjectRemoved: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Msg_.objectremoved_;
      }
      break;
    }
    case kPermissionStatus: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Msg_.permissionstatus_;
      }
      break;
    }
    case kAllJoinableSpacesResp: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Msg_.alljoinablespacesresp_;
      }
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = MSG_NOT_SET;
}


void RelayRemoteMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerData.RelayRemoteMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_Msg();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RelayRemoteMessage::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .ServerData.StatusMessage Message = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_message(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ServerData.AuthenticateResp AuthenticateResp = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_authenticateresp(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ServerData.AuthenticateGuestResp AuthenticateGuestResp = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_authenticateguestresp(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ServerData.ExitAllSpacesAndLogoutResp ExitAllSpacesAndLogoutResp = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_exitallspacesandlogoutresp(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ServerData.JoinSpaceFromIdResp JoinSpaceFromIdResp = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_joinspacefromidresp(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ServerData.ShutdownSpaceConnectionResp ShutdownSpaceConnectionResp = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_shutdownspaceconnectionresp(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ServerData.GetAudioInputDevicesResp GetAudioInputDevicesResp = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 162)) {
          ptr = ctx->ParseMessage(_internal_mutable_getaudioinputdevicesresp(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ServerData.GetAudioOutputDevicesResp GetAudioOutputDevicesResp = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 170)) {
          ptr = ctx->ParseMessage(_internal_mutable_getaudiooutputdevicesresp(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ServerData.GetVideoInputDevicesResp GetVideoInputDevicesResp = 22;
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 178)) {
          ptr = ctx->ParseMessage(_internal_mutable_getvideoinputdevicesresp(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ServerData.SetAudioInputDeviceResp SetAudioInputDeviceResp = 23;
      case 23:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 186)) {
          ptr = ctx->ParseMessage(_internal_mutable_setaudioinputdeviceresp(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ServerData.SetAudioOutputDeviceResp SetAudioOutputDeviceResp = 24;
      case 24:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 194)) {
          ptr = ctx->ParseMessage(_internal_mutable_setaudiooutputdeviceresp(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ServerData.SetVideoInputDeviceResp SetVideoInputDeviceResp = 25;
      case 25:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 202)) {
          ptr = ctx->ParseMessage(_internal_mutable_setvideoinputdeviceresp(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ServerData.PropertyValueStatus PropertyValueStatus = 50;
      case 50:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 146)) {
          ptr = ctx->ParseMessage(_internal_mutable_propertyvaluestatus(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ServerData.LocalPropertyHandledResp LocalPropertyHandledResp = 51;
      case 51:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 154)) {
          ptr = ctx->ParseMessage(_internal_mutable_localpropertyhandledresp(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ServerData.PropMetadataStatus PropMetadataStatus = 52;
      case 52:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 162)) {
          ptr = ctx->ParseMessage(_internal_mutable_propmetadatastatus(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ServerData.UserAdded UserAdded = 60;
      case 60:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 226)) {
          ptr = ctx->ParseMessage(_internal_mutable_useradded(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ServerData.UserRemoved UserRemoved = 61;
      case 61:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 234)) {
          ptr = ctx->ParseMessage(_internal_mutable_userremoved(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ServerData.UserVideoFrame UserVideoFrame = 65;
      case 65:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_uservideoframe(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ServerData.SpaceInfo SpaceAdded = 70;
      case 70:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_spaceadded(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ServerData.SpaceInfo SpaceUpdated = 71;
      case 71:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_spaceupdated(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ServerData.SpaceInfo SpaceRemoved = 72;
      case 72:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_spaceremoved(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ServerData.ObjectAdded ObjectAdded = 80;
      case 80:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 130)) {
          ptr = ctx->ParseMessage(_internal_mutable_objectadded(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ServerData.ObjectRemoved ObjectRemoved = 81;
      case 81:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 138)) {
          ptr = ctx->ParseMessage(_internal_mutable_objectremoved(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ServerData.PermissionStatus PermissionStatus = 90;
      case 90:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 210)) {
          ptr = ctx->ParseMessage(_internal_mutable_permissionstatus(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ServerData.AllJoinableSpacesResp AllJoinableSpacesResp = 100;
      case 100:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_alljoinablespacesresp(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RelayRemoteMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ServerData.RelayRemoteMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .ServerData.StatusMessage Message = 1;
  if (_internal_has_message()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::message(this),
        _Internal::message(this).GetCachedSize(), target, stream);
  }

  // .ServerData.AuthenticateResp AuthenticateResp = 2;
  if (_internal_has_authenticateresp()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::authenticateresp(this),
        _Internal::authenticateresp(this).GetCachedSize(), target, stream);
  }

  // .ServerData.AuthenticateGuestResp AuthenticateGuestResp = 3;
  if (_internal_has_authenticateguestresp()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::authenticateguestresp(this),
        _Internal::authenticateguestresp(this).GetCachedSize(), target, stream);
  }

  // .ServerData.ExitAllSpacesAndLogoutResp ExitAllSpacesAndLogoutResp = 4;
  if (_internal_has_exitallspacesandlogoutresp()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::exitallspacesandlogoutresp(this),
        _Internal::exitallspacesandlogoutresp(this).GetCachedSize(), target, stream);
  }

  // .ServerData.JoinSpaceFromIdResp JoinSpaceFromIdResp = 10;
  if (_internal_has_joinspacefromidresp()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(10, _Internal::joinspacefromidresp(this),
        _Internal::joinspacefromidresp(this).GetCachedSize(), target, stream);
  }

  // .ServerData.ShutdownSpaceConnectionResp ShutdownSpaceConnectionResp = 11;
  if (_internal_has_shutdownspaceconnectionresp()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(11, _Internal::shutdownspaceconnectionresp(this),
        _Internal::shutdownspaceconnectionresp(this).GetCachedSize(), target, stream);
  }

  // .ServerData.GetAudioInputDevicesResp GetAudioInputDevicesResp = 20;
  if (_internal_has_getaudioinputdevicesresp()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(20, _Internal::getaudioinputdevicesresp(this),
        _Internal::getaudioinputdevicesresp(this).GetCachedSize(), target, stream);
  }

  // .ServerData.GetAudioOutputDevicesResp GetAudioOutputDevicesResp = 21;
  if (_internal_has_getaudiooutputdevicesresp()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(21, _Internal::getaudiooutputdevicesresp(this),
        _Internal::getaudiooutputdevicesresp(this).GetCachedSize(), target, stream);
  }

  // .ServerData.GetVideoInputDevicesResp GetVideoInputDevicesResp = 22;
  if (_internal_has_getvideoinputdevicesresp()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(22, _Internal::getvideoinputdevicesresp(this),
        _Internal::getvideoinputdevicesresp(this).GetCachedSize(), target, stream);
  }

  // .ServerData.SetAudioInputDeviceResp SetAudioInputDeviceResp = 23;
  if (_internal_has_setaudioinputdeviceresp()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(23, _Internal::setaudioinputdeviceresp(this),
        _Internal::setaudioinputdeviceresp(this).GetCachedSize(), target, stream);
  }

  // .ServerData.SetAudioOutputDeviceResp SetAudioOutputDeviceResp = 24;
  if (_internal_has_setaudiooutputdeviceresp()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(24, _Internal::setaudiooutputdeviceresp(this),
        _Internal::setaudiooutputdeviceresp(this).GetCachedSize(), target, stream);
  }

  // .ServerData.SetVideoInputDeviceResp SetVideoInputDeviceResp = 25;
  if (_internal_has_setvideoinputdeviceresp()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(25, _Internal::setvideoinputdeviceresp(this),
        _Internal::setvideoinputdeviceresp(this).GetCachedSize(), target, stream);
  }

  // .ServerData.PropertyValueStatus PropertyValueStatus = 50;
  if (_internal_has_propertyvaluestatus()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(50, _Internal::propertyvaluestatus(this),
        _Internal::propertyvaluestatus(this).GetCachedSize(), target, stream);
  }

  // .ServerData.LocalPropertyHandledResp LocalPropertyHandledResp = 51;
  if (_internal_has_localpropertyhandledresp()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(51, _Internal::localpropertyhandledresp(this),
        _Internal::localpropertyhandledresp(this).GetCachedSize(), target, stream);
  }

  // .ServerData.PropMetadataStatus PropMetadataStatus = 52;
  if (_internal_has_propmetadatastatus()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(52, _Internal::propmetadatastatus(this),
        _Internal::propmetadatastatus(this).GetCachedSize(), target, stream);
  }

  // .ServerData.UserAdded UserAdded = 60;
  if (_internal_has_useradded()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(60, _Internal::useradded(this),
        _Internal::useradded(this).GetCachedSize(), target, stream);
  }

  // .ServerData.UserRemoved UserRemoved = 61;
  if (_internal_has_userremoved()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(61, _Internal::userremoved(this),
        _Internal::userremoved(this).GetCachedSize(), target, stream);
  }

  // .ServerData.UserVideoFrame UserVideoFrame = 65;
  if (_internal_has_uservideoframe()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(65, _Internal::uservideoframe(this),
        _Internal::uservideoframe(this).GetCachedSize(), target, stream);
  }

  // .ServerData.SpaceInfo SpaceAdded = 70;
  if (_internal_has_spaceadded()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(70, _Internal::spaceadded(this),
        _Internal::spaceadded(this).GetCachedSize(), target, stream);
  }

  // .ServerData.SpaceInfo SpaceUpdated = 71;
  if (_internal_has_spaceupdated()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(71, _Internal::spaceupdated(this),
        _Internal::spaceupdated(this).GetCachedSize(), target, stream);
  }

  // .ServerData.SpaceInfo SpaceRemoved = 72;
  if (_internal_has_spaceremoved()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(72, _Internal::spaceremoved(this),
        _Internal::spaceremoved(this).GetCachedSize(), target, stream);
  }

  // .ServerData.ObjectAdded ObjectAdded = 80;
  if (_internal_has_objectadded()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(80, _Internal::objectadded(this),
        _Internal::objectadded(this).GetCachedSize(), target, stream);
  }

  // .ServerData.ObjectRemoved ObjectRemoved = 81;
  if (_internal_has_objectremoved()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(81, _Internal::objectremoved(this),
        _Internal::objectremoved(this).GetCachedSize(), target, stream);
  }

  // .ServerData.PermissionStatus PermissionStatus = 90;
  if (_internal_has_permissionstatus()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(90, _Internal::permissionstatus(this),
        _Internal::permissionstatus(this).GetCachedSize(), target, stream);
  }

  // .ServerData.AllJoinableSpacesResp AllJoinableSpacesResp = 100;
  if (_internal_has_alljoinablespacesresp()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(100, _Internal::alljoinablespacesresp(this),
        _Internal::alljoinablespacesresp(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerData.RelayRemoteMessage)
  return target;
}

size_t RelayRemoteMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerData.RelayRemoteMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (Msg_case()) {
    // .ServerData.StatusMessage Message = 1;
    case kMessage: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Msg_.message_);
      break;
    }
    // .ServerData.AuthenticateResp AuthenticateResp = 2;
    case kAuthenticateResp: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Msg_.authenticateresp_);
      break;
    }
    // .ServerData.AuthenticateGuestResp AuthenticateGuestResp = 3;
    case kAuthenticateGuestResp: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Msg_.authenticateguestresp_);
      break;
    }
    // .ServerData.ExitAllSpacesAndLogoutResp ExitAllSpacesAndLogoutResp = 4;
    case kExitAllSpacesAndLogoutResp: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Msg_.exitallspacesandlogoutresp_);
      break;
    }
    // .ServerData.JoinSpaceFromIdResp JoinSpaceFromIdResp = 10;
    case kJoinSpaceFromIdResp: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Msg_.joinspacefromidresp_);
      break;
    }
    // .ServerData.ShutdownSpaceConnectionResp ShutdownSpaceConnectionResp = 11;
    case kShutdownSpaceConnectionResp: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Msg_.shutdownspaceconnectionresp_);
      break;
    }
    // .ServerData.GetAudioInputDevicesResp GetAudioInputDevicesResp = 20;
    case kGetAudioInputDevicesResp: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Msg_.getaudioinputdevicesresp_);
      break;
    }
    // .ServerData.GetAudioOutputDevicesResp GetAudioOutputDevicesResp = 21;
    case kGetAudioOutputDevicesResp: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Msg_.getaudiooutputdevicesresp_);
      break;
    }
    // .ServerData.GetVideoInputDevicesResp GetVideoInputDevicesResp = 22;
    case kGetVideoInputDevicesResp: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Msg_.getvideoinputdevicesresp_);
      break;
    }
    // .ServerData.SetAudioInputDeviceResp SetAudioInputDeviceResp = 23;
    case kSetAudioInputDeviceResp: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Msg_.setaudioinputdeviceresp_);
      break;
    }
    // .ServerData.SetAudioOutputDeviceResp SetAudioOutputDeviceResp = 24;
    case kSetAudioOutputDeviceResp: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Msg_.setaudiooutputdeviceresp_);
      break;
    }
    // .ServerData.SetVideoInputDeviceResp SetVideoInputDeviceResp = 25;
    case kSetVideoInputDeviceResp: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Msg_.setvideoinputdeviceresp_);
      break;
    }
    // .ServerData.PropertyValueStatus PropertyValueStatus = 50;
    case kPropertyValueStatus: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Msg_.propertyvaluestatus_);
      break;
    }
    // .ServerData.LocalPropertyHandledResp LocalPropertyHandledResp = 51;
    case kLocalPropertyHandledResp: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Msg_.localpropertyhandledresp_);
      break;
    }
    // .ServerData.PropMetadataStatus PropMetadataStatus = 52;
    case kPropMetadataStatus: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Msg_.propmetadatastatus_);
      break;
    }
    // .ServerData.UserAdded UserAdded = 60;
    case kUserAdded: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Msg_.useradded_);
      break;
    }
    // .ServerData.UserRemoved UserRemoved = 61;
    case kUserRemoved: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Msg_.userremoved_);
      break;
    }
    // .ServerData.UserVideoFrame UserVideoFrame = 65;
    case kUserVideoFrame: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Msg_.uservideoframe_);
      break;
    }
    // .ServerData.SpaceInfo SpaceAdded = 70;
    case kSpaceAdded: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Msg_.spaceadded_);
      break;
    }
    // .ServerData.SpaceInfo SpaceUpdated = 71;
    case kSpaceUpdated: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Msg_.spaceupdated_);
      break;
    }
    // .ServerData.SpaceInfo SpaceRemoved = 72;
    case kSpaceRemoved: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Msg_.spaceremoved_);
      break;
    }
    // .ServerData.ObjectAdded ObjectAdded = 80;
    case kObjectAdded: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Msg_.objectadded_);
      break;
    }
    // .ServerData.ObjectRemoved ObjectRemoved = 81;
    case kObjectRemoved: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Msg_.objectremoved_);
      break;
    }
    // .ServerData.PermissionStatus PermissionStatus = 90;
    case kPermissionStatus: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Msg_.permissionstatus_);
      break;
    }
    // .ServerData.AllJoinableSpacesResp AllJoinableSpacesResp = 100;
    case kAllJoinableSpacesResp: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Msg_.alljoinablespacesresp_);
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RelayRemoteMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RelayRemoteMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RelayRemoteMessage::GetClassData() const { return &_class_data_; }


void RelayRemoteMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RelayRemoteMessage*>(&to_msg);
  auto& from = static_cast<const RelayRemoteMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ServerData.RelayRemoteMessage)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.Msg_case()) {
    case kMessage: {
      _this->_internal_mutable_message()->::ServerData::StatusMessage::MergeFrom(
          from._internal_message());
      break;
    }
    case kAuthenticateResp: {
      _this->_internal_mutable_authenticateresp()->::ServerData::AuthenticateResp::MergeFrom(
          from._internal_authenticateresp());
      break;
    }
    case kAuthenticateGuestResp: {
      _this->_internal_mutable_authenticateguestresp()->::ServerData::AuthenticateGuestResp::MergeFrom(
          from._internal_authenticateguestresp());
      break;
    }
    case kExitAllSpacesAndLogoutResp: {
      _this->_internal_mutable_exitallspacesandlogoutresp()->::ServerData::ExitAllSpacesAndLogoutResp::MergeFrom(
          from._internal_exitallspacesandlogoutresp());
      break;
    }
    case kJoinSpaceFromIdResp: {
      _this->_internal_mutable_joinspacefromidresp()->::ServerData::JoinSpaceFromIdResp::MergeFrom(
          from._internal_joinspacefromidresp());
      break;
    }
    case kShutdownSpaceConnectionResp: {
      _this->_internal_mutable_shutdownspaceconnectionresp()->::ServerData::ShutdownSpaceConnectionResp::MergeFrom(
          from._internal_shutdownspaceconnectionresp());
      break;
    }
    case kGetAudioInputDevicesResp: {
      _this->_internal_mutable_getaudioinputdevicesresp()->::ServerData::GetAudioInputDevicesResp::MergeFrom(
          from._internal_getaudioinputdevicesresp());
      break;
    }
    case kGetAudioOutputDevicesResp: {
      _this->_internal_mutable_getaudiooutputdevicesresp()->::ServerData::GetAudioOutputDevicesResp::MergeFrom(
          from._internal_getaudiooutputdevicesresp());
      break;
    }
    case kGetVideoInputDevicesResp: {
      _this->_internal_mutable_getvideoinputdevicesresp()->::ServerData::GetVideoInputDevicesResp::MergeFrom(
          from._internal_getvideoinputdevicesresp());
      break;
    }
    case kSetAudioInputDeviceResp: {
      _this->_internal_mutable_setaudioinputdeviceresp()->::ServerData::SetAudioInputDeviceResp::MergeFrom(
          from._internal_setaudioinputdeviceresp());
      break;
    }
    case kSetAudioOutputDeviceResp: {
      _this->_internal_mutable_setaudiooutputdeviceresp()->::ServerData::SetAudioOutputDeviceResp::MergeFrom(
          from._internal_setaudiooutputdeviceresp());
      break;
    }
    case kSetVideoInputDeviceResp: {
      _this->_internal_mutable_setvideoinputdeviceresp()->::ServerData::SetVideoInputDeviceResp::MergeFrom(
          from._internal_setvideoinputdeviceresp());
      break;
    }
    case kPropertyValueStatus: {
      _this->_internal_mutable_propertyvaluestatus()->::ServerData::PropertyValueStatus::MergeFrom(
          from._internal_propertyvaluestatus());
      break;
    }
    case kLocalPropertyHandledResp: {
      _this->_internal_mutable_localpropertyhandledresp()->::ServerData::LocalPropertyHandledResp::MergeFrom(
          from._internal_localpropertyhandledresp());
      break;
    }
    case kPropMetadataStatus: {
      _this->_internal_mutable_propmetadatastatus()->::ServerData::PropMetadataStatus::MergeFrom(
          from._internal_propmetadatastatus());
      break;
    }
    case kUserAdded: {
      _this->_internal_mutable_useradded()->::ServerData::UserAdded::MergeFrom(
          from._internal_useradded());
      break;
    }
    case kUserRemoved: {
      _this->_internal_mutable_userremoved()->::ServerData::UserRemoved::MergeFrom(
          from._internal_userremoved());
      break;
    }
    case kUserVideoFrame: {
      _this->_internal_mutable_uservideoframe()->::ServerData::UserVideoFrame::MergeFrom(
          from._internal_uservideoframe());
      break;
    }
    case kSpaceAdded: {
      _this->_internal_mutable_spaceadded()->::ServerData::SpaceInfo::MergeFrom(
          from._internal_spaceadded());
      break;
    }
    case kSpaceUpdated: {
      _this->_internal_mutable_spaceupdated()->::ServerData::SpaceInfo::MergeFrom(
          from._internal_spaceupdated());
      break;
    }
    case kSpaceRemoved: {
      _this->_internal_mutable_spaceremoved()->::ServerData::SpaceInfo::MergeFrom(
          from._internal_spaceremoved());
      break;
    }
    case kObjectAdded: {
      _this->_internal_mutable_objectadded()->::ServerData::ObjectAdded::MergeFrom(
          from._internal_objectadded());
      break;
    }
    case kObjectRemoved: {
      _this->_internal_mutable_objectremoved()->::ServerData::ObjectRemoved::MergeFrom(
          from._internal_objectremoved());
      break;
    }
    case kPermissionStatus: {
      _this->_internal_mutable_permissionstatus()->::ServerData::PermissionStatus::MergeFrom(
          from._internal_permissionstatus());
      break;
    }
    case kAllJoinableSpacesResp: {
      _this->_internal_mutable_alljoinablespacesresp()->::ServerData::AllJoinableSpacesResp::MergeFrom(
          from._internal_alljoinablespacesresp());
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RelayRemoteMessage::CopyFrom(const RelayRemoteMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerData.RelayRemoteMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RelayRemoteMessage::IsInitialized() const {
  return true;
}

void RelayRemoteMessage::InternalSwap(RelayRemoteMessage* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.Msg_, other->_impl_.Msg_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata RelayRemoteMessage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_relay_2eproto_getter, &descriptor_table_relay_2eproto_once,
      file_level_metadata_relay_2eproto[3]);
}

// ===================================================================

class KeepAlive::_Internal {
 public:
};

KeepAlive::KeepAlive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:ServerData.KeepAlive)
}
KeepAlive::KeepAlive(const KeepAlive& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  KeepAlive* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ServerData.KeepAlive)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData KeepAlive::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*KeepAlive::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata KeepAlive::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_relay_2eproto_getter, &descriptor_table_relay_2eproto_once,
      file_level_metadata_relay_2eproto[4]);
}

// ===================================================================

class UpdateTime::_Internal {
 public:
};

UpdateTime::UpdateTime(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ServerData.UpdateTime)
}
UpdateTime::UpdateTime(const UpdateTime& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UpdateTime* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.time_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.time_ = from._impl_.time_;
  // @@protoc_insertion_point(copy_constructor:ServerData.UpdateTime)
}

inline void UpdateTime::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.time_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

UpdateTime::~UpdateTime() {
  // @@protoc_insertion_point(destructor:ServerData.UpdateTime)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UpdateTime::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void UpdateTime::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UpdateTime::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerData.UpdateTime)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.time_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateTime::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // float time = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 13)) {
          _impl_.time_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateTime::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ServerData.UpdateTime)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // float time = 1;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_time = this->_internal_time();
  uint32_t raw_time;
  memcpy(&raw_time, &tmp_time, sizeof(tmp_time));
  if (raw_time != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(1, this->_internal_time(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerData.UpdateTime)
  return target;
}

size_t UpdateTime::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerData.UpdateTime)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float time = 1;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_time = this->_internal_time();
  uint32_t raw_time;
  memcpy(&raw_time, &tmp_time, sizeof(tmp_time));
  if (raw_time != 0) {
    total_size += 1 + 4;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateTime::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UpdateTime::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateTime::GetClassData() const { return &_class_data_; }


void UpdateTime::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UpdateTime*>(&to_msg);
  auto& from = static_cast<const UpdateTime&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ServerData.UpdateTime)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_time = from._internal_time();
  uint32_t raw_time;
  memcpy(&raw_time, &tmp_time, sizeof(tmp_time));
  if (raw_time != 0) {
    _this->_internal_set_time(from._internal_time());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateTime::CopyFrom(const UpdateTime& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerData.UpdateTime)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateTime::IsInitialized() const {
  return true;
}

void UpdateTime::InternalSwap(UpdateTime* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.time_, other->_impl_.time_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateTime::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_relay_2eproto_getter, &descriptor_table_relay_2eproto_once,
      file_level_metadata_relay_2eproto[5]);
}

// ===================================================================

class StatusMessage::_Internal {
 public:
};

StatusMessage::StatusMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ServerData.StatusMessage)
}
StatusMessage::StatusMessage(const StatusMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  StatusMessage* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.Message_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_Message();
  switch (from.Message_case()) {
    case kError: {
      _this->_internal_set_error(from._internal_error());
      break;
    }
    case kWarning: {
      _this->_internal_set_warning(from._internal_warning());
      break;
    }
    case kLog: {
      _this->_internal_set_log(from._internal_log());
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:ServerData.StatusMessage)
}

inline void StatusMessage::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.Message_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  clear_has_Message();
}

StatusMessage::~StatusMessage() {
  // @@protoc_insertion_point(destructor:ServerData.StatusMessage)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void StatusMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_Message()) {
    clear_Message();
  }
}

void StatusMessage::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void StatusMessage::clear_Message() {
// @@protoc_insertion_point(one_of_clear_start:ServerData.StatusMessage)
  switch (Message_case()) {
    case kError: {
      _impl_.Message_.error_.Destroy();
      break;
    }
    case kWarning: {
      _impl_.Message_.warning_.Destroy();
      break;
    }
    case kLog: {
      _impl_.Message_.log_.Destroy();
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = MESSAGE_NOT_SET;
}


void StatusMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerData.StatusMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_Message();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StatusMessage::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string error = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_error();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ServerData.StatusMessage.error"));
        } else
          goto handle_unusual;
        continue;
      // string warning = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_warning();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ServerData.StatusMessage.warning"));
        } else
          goto handle_unusual;
        continue;
      // string log = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_log();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ServerData.StatusMessage.log"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StatusMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ServerData.StatusMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string error = 1;
  if (_internal_has_error()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error().data(), static_cast<int>(this->_internal_error().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ServerData.StatusMessage.error");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_error(), target);
  }

  // string warning = 2;
  if (_internal_has_warning()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_warning().data(), static_cast<int>(this->_internal_warning().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ServerData.StatusMessage.warning");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_warning(), target);
  }

  // string log = 3;
  if (_internal_has_log()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_log().data(), static_cast<int>(this->_internal_log().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ServerData.StatusMessage.log");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_log(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerData.StatusMessage)
  return target;
}

size_t StatusMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerData.StatusMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (Message_case()) {
    // string error = 1;
    case kError: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_error());
      break;
    }
    // string warning = 2;
    case kWarning: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_warning());
      break;
    }
    // string log = 3;
    case kLog: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_log());
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StatusMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    StatusMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StatusMessage::GetClassData() const { return &_class_data_; }


void StatusMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<StatusMessage*>(&to_msg);
  auto& from = static_cast<const StatusMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ServerData.StatusMessage)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.Message_case()) {
    case kError: {
      _this->_internal_set_error(from._internal_error());
      break;
    }
    case kWarning: {
      _this->_internal_set_warning(from._internal_warning());
      break;
    }
    case kLog: {
      _this->_internal_set_log(from._internal_log());
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StatusMessage::CopyFrom(const StatusMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerData.StatusMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StatusMessage::IsInitialized() const {
  return true;
}

void StatusMessage::InternalSwap(StatusMessage* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.Message_, other->_impl_.Message_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata StatusMessage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_relay_2eproto_getter, &descriptor_table_relay_2eproto_once,
      file_level_metadata_relay_2eproto[6]);
}

// ===================================================================

class AuthenticateReq::_Internal {
 public:
};

AuthenticateReq::AuthenticateReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ServerData.AuthenticateReq)
}
AuthenticateReq::AuthenticateReq(const AuthenticateReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AuthenticateReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.server_){}
    , decltype(_impl_.email_){}
    , decltype(_impl_.password_){}
    , decltype(_impl_.reqid_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.server_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.server_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_server().empty()) {
    _this->_impl_.server_.Set(from._internal_server(), 
      _this->GetArenaForAllocation());
  }
  _impl_.email_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.email_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_email().empty()) {
    _this->_impl_.email_.Set(from._internal_email(), 
      _this->GetArenaForAllocation());
  }
  _impl_.password_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.password_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_password().empty()) {
    _this->_impl_.password_.Set(from._internal_password(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.reqid_ = from._impl_.reqid_;
  // @@protoc_insertion_point(copy_constructor:ServerData.AuthenticateReq)
}

inline void AuthenticateReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.server_){}
    , decltype(_impl_.email_){}
    , decltype(_impl_.password_){}
    , decltype(_impl_.reqid_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.server_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.server_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.email_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.email_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.password_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.password_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

AuthenticateReq::~AuthenticateReq() {
  // @@protoc_insertion_point(destructor:ServerData.AuthenticateReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AuthenticateReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.server_.Destroy();
  _impl_.email_.Destroy();
  _impl_.password_.Destroy();
}

void AuthenticateReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AuthenticateReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerData.AuthenticateReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.server_.ClearToEmpty();
  _impl_.email_.ClearToEmpty();
  _impl_.password_.ClearToEmpty();
  _impl_.reqid_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AuthenticateReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 reqId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.reqid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string server = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          auto str = _internal_mutable_server();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ServerData.AuthenticateReq.server"));
        } else
          goto handle_unusual;
        continue;
      // string email = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          auto str = _internal_mutable_email();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ServerData.AuthenticateReq.email"));
        } else
          goto handle_unusual;
        continue;
      // string password = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 98)) {
          auto str = _internal_mutable_password();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ServerData.AuthenticateReq.password"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AuthenticateReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ServerData.AuthenticateReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 reqId = 1;
  if (this->_internal_reqid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_reqid(), target);
  }

  // string server = 10;
  if (!this->_internal_server().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_server().data(), static_cast<int>(this->_internal_server().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ServerData.AuthenticateReq.server");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_server(), target);
  }

  // string email = 11;
  if (!this->_internal_email().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_email().data(), static_cast<int>(this->_internal_email().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ServerData.AuthenticateReq.email");
    target = stream->WriteStringMaybeAliased(
        11, this->_internal_email(), target);
  }

  // string password = 12;
  if (!this->_internal_password().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_password().data(), static_cast<int>(this->_internal_password().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ServerData.AuthenticateReq.password");
    target = stream->WriteStringMaybeAliased(
        12, this->_internal_password(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerData.AuthenticateReq)
  return target;
}

size_t AuthenticateReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerData.AuthenticateReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string server = 10;
  if (!this->_internal_server().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_server());
  }

  // string email = 11;
  if (!this->_internal_email().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_email());
  }

  // string password = 12;
  if (!this->_internal_password().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_password());
  }

  // int32 reqId = 1;
  if (this->_internal_reqid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_reqid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AuthenticateReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AuthenticateReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AuthenticateReq::GetClassData() const { return &_class_data_; }


void AuthenticateReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AuthenticateReq*>(&to_msg);
  auto& from = static_cast<const AuthenticateReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ServerData.AuthenticateReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_server().empty()) {
    _this->_internal_set_server(from._internal_server());
  }
  if (!from._internal_email().empty()) {
    _this->_internal_set_email(from._internal_email());
  }
  if (!from._internal_password().empty()) {
    _this->_internal_set_password(from._internal_password());
  }
  if (from._internal_reqid() != 0) {
    _this->_internal_set_reqid(from._internal_reqid());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AuthenticateReq::CopyFrom(const AuthenticateReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerData.AuthenticateReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthenticateReq::IsInitialized() const {
  return true;
}

void AuthenticateReq::InternalSwap(AuthenticateReq* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.server_, lhs_arena,
      &other->_impl_.server_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.email_, lhs_arena,
      &other->_impl_.email_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.password_, lhs_arena,
      &other->_impl_.password_, rhs_arena
  );
  swap(_impl_.reqid_, other->_impl_.reqid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AuthenticateReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_relay_2eproto_getter, &descriptor_table_relay_2eproto_once,
      file_level_metadata_relay_2eproto[7]);
}

// ===================================================================

class AuthenticateGuestReq::_Internal {
 public:
};

AuthenticateGuestReq::AuthenticateGuestReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ServerData.AuthenticateGuestReq)
}
AuthenticateGuestReq::AuthenticateGuestReq(const AuthenticateGuestReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AuthenticateGuestReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.server_){}
    , decltype(_impl_.screenname_){}
    , decltype(_impl_.reqid_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.server_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.server_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_server().empty()) {
    _this->_impl_.server_.Set(from._internal_server(), 
      _this->GetArenaForAllocation());
  }
  _impl_.screenname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.screenname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_screenname().empty()) {
    _this->_impl_.screenname_.Set(from._internal_screenname(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.reqid_ = from._impl_.reqid_;
  // @@protoc_insertion_point(copy_constructor:ServerData.AuthenticateGuestReq)
}

inline void AuthenticateGuestReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.server_){}
    , decltype(_impl_.screenname_){}
    , decltype(_impl_.reqid_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.server_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.server_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.screenname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.screenname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

AuthenticateGuestReq::~AuthenticateGuestReq() {
  // @@protoc_insertion_point(destructor:ServerData.AuthenticateGuestReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AuthenticateGuestReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.server_.Destroy();
  _impl_.screenname_.Destroy();
}

void AuthenticateGuestReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AuthenticateGuestReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerData.AuthenticateGuestReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.server_.ClearToEmpty();
  _impl_.screenname_.ClearToEmpty();
  _impl_.reqid_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AuthenticateGuestReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 reqId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.reqid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string server = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          auto str = _internal_mutable_server();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ServerData.AuthenticateGuestReq.server"));
        } else
          goto handle_unusual;
        continue;
      // string screenName = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          auto str = _internal_mutable_screenname();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ServerData.AuthenticateGuestReq.screenName"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AuthenticateGuestReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ServerData.AuthenticateGuestReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 reqId = 1;
  if (this->_internal_reqid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_reqid(), target);
  }

  // string server = 10;
  if (!this->_internal_server().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_server().data(), static_cast<int>(this->_internal_server().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ServerData.AuthenticateGuestReq.server");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_server(), target);
  }

  // string screenName = 11;
  if (!this->_internal_screenname().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_screenname().data(), static_cast<int>(this->_internal_screenname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ServerData.AuthenticateGuestReq.screenName");
    target = stream->WriteStringMaybeAliased(
        11, this->_internal_screenname(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerData.AuthenticateGuestReq)
  return target;
}

size_t AuthenticateGuestReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerData.AuthenticateGuestReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string server = 10;
  if (!this->_internal_server().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_server());
  }

  // string screenName = 11;
  if (!this->_internal_screenname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_screenname());
  }

  // int32 reqId = 1;
  if (this->_internal_reqid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_reqid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AuthenticateGuestReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AuthenticateGuestReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AuthenticateGuestReq::GetClassData() const { return &_class_data_; }


void AuthenticateGuestReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AuthenticateGuestReq*>(&to_msg);
  auto& from = static_cast<const AuthenticateGuestReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ServerData.AuthenticateGuestReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_server().empty()) {
    _this->_internal_set_server(from._internal_server());
  }
  if (!from._internal_screenname().empty()) {
    _this->_internal_set_screenname(from._internal_screenname());
  }
  if (from._internal_reqid() != 0) {
    _this->_internal_set_reqid(from._internal_reqid());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AuthenticateGuestReq::CopyFrom(const AuthenticateGuestReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerData.AuthenticateGuestReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthenticateGuestReq::IsInitialized() const {
  return true;
}

void AuthenticateGuestReq::InternalSwap(AuthenticateGuestReq* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.server_, lhs_arena,
      &other->_impl_.server_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.screenname_, lhs_arena,
      &other->_impl_.screenname_, rhs_arena
  );
  swap(_impl_.reqid_, other->_impl_.reqid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AuthenticateGuestReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_relay_2eproto_getter, &descriptor_table_relay_2eproto_once,
      file_level_metadata_relay_2eproto[8]);
}

// ===================================================================

class AuthenticateResp::_Internal {
 public:
  static const ::ServerData::CavrnusAuth& auth(const AuthenticateResp* msg);
};

const ::ServerData::CavrnusAuth&
AuthenticateResp::_Internal::auth(const AuthenticateResp* msg) {
  return *msg->_impl_.Resp_.auth_;
}
void AuthenticateResp::set_allocated_auth(::ServerData::CavrnusAuth* auth) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Resp();
  if (auth) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(auth));
    if (message_arena != submessage_arena) {
      auth = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, auth, submessage_arena);
    }
    set_has_auth();
    _impl_.Resp_.auth_ = auth;
  }
  // @@protoc_insertion_point(field_set_allocated:ServerData.AuthenticateResp.auth)
}
void AuthenticateResp::clear_auth() {
  if (_internal_has_auth()) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.Resp_.auth_;
    }
    clear_has_Resp();
  }
}
AuthenticateResp::AuthenticateResp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ServerData.AuthenticateResp)
}
AuthenticateResp::AuthenticateResp(const AuthenticateResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AuthenticateResp* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.reqid_){}
    , decltype(_impl_.Resp_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.reqid_ = from._impl_.reqid_;
  clear_has_Resp();
  switch (from.Resp_case()) {
    case kAuth: {
      _this->_internal_mutable_auth()->::ServerData::CavrnusAuth::MergeFrom(
          from._internal_auth());
      break;
    }
    case kError: {
      _this->_internal_set_error(from._internal_error());
      break;
    }
    case RESP_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:ServerData.AuthenticateResp)
}

inline void AuthenticateResp::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.reqid_){0}
    , decltype(_impl_.Resp_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  clear_has_Resp();
}

AuthenticateResp::~AuthenticateResp() {
  // @@protoc_insertion_point(destructor:ServerData.AuthenticateResp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AuthenticateResp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_Resp()) {
    clear_Resp();
  }
}

void AuthenticateResp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AuthenticateResp::clear_Resp() {
// @@protoc_insertion_point(one_of_clear_start:ServerData.AuthenticateResp)
  switch (Resp_case()) {
    case kAuth: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Resp_.auth_;
      }
      break;
    }
    case kError: {
      _impl_.Resp_.error_.Destroy();
      break;
    }
    case RESP_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = RESP_NOT_SET;
}


void AuthenticateResp::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerData.AuthenticateResp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.reqid_ = 0;
  clear_Resp();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AuthenticateResp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 reqId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.reqid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ServerData.CavrnusAuth auth = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_auth(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string error = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          auto str = _internal_mutable_error();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ServerData.AuthenticateResp.error"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AuthenticateResp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ServerData.AuthenticateResp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 reqId = 1;
  if (this->_internal_reqid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_reqid(), target);
  }

  // .ServerData.CavrnusAuth auth = 10;
  if (_internal_has_auth()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(10, _Internal::auth(this),
        _Internal::auth(this).GetCachedSize(), target, stream);
  }

  // string error = 11;
  if (_internal_has_error()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error().data(), static_cast<int>(this->_internal_error().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ServerData.AuthenticateResp.error");
    target = stream->WriteStringMaybeAliased(
        11, this->_internal_error(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerData.AuthenticateResp)
  return target;
}

size_t AuthenticateResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerData.AuthenticateResp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 reqId = 1;
  if (this->_internal_reqid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_reqid());
  }

  switch (Resp_case()) {
    // .ServerData.CavrnusAuth auth = 10;
    case kAuth: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Resp_.auth_);
      break;
    }
    // string error = 11;
    case kError: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_error());
      break;
    }
    case RESP_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AuthenticateResp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AuthenticateResp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AuthenticateResp::GetClassData() const { return &_class_data_; }


void AuthenticateResp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AuthenticateResp*>(&to_msg);
  auto& from = static_cast<const AuthenticateResp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ServerData.AuthenticateResp)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_reqid() != 0) {
    _this->_internal_set_reqid(from._internal_reqid());
  }
  switch (from.Resp_case()) {
    case kAuth: {
      _this->_internal_mutable_auth()->::ServerData::CavrnusAuth::MergeFrom(
          from._internal_auth());
      break;
    }
    case kError: {
      _this->_internal_set_error(from._internal_error());
      break;
    }
    case RESP_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AuthenticateResp::CopyFrom(const AuthenticateResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerData.AuthenticateResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthenticateResp::IsInitialized() const {
  return true;
}

void AuthenticateResp::InternalSwap(AuthenticateResp* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.reqid_, other->_impl_.reqid_);
  swap(_impl_.Resp_, other->_impl_.Resp_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata AuthenticateResp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_relay_2eproto_getter, &descriptor_table_relay_2eproto_once,
      file_level_metadata_relay_2eproto[9]);
}

// ===================================================================

class AuthenticateGuestResp::_Internal {
 public:
  static const ::ServerData::CavrnusAuth& auth(const AuthenticateGuestResp* msg);
};

const ::ServerData::CavrnusAuth&
AuthenticateGuestResp::_Internal::auth(const AuthenticateGuestResp* msg) {
  return *msg->_impl_.Resp_.auth_;
}
void AuthenticateGuestResp::set_allocated_auth(::ServerData::CavrnusAuth* auth) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Resp();
  if (auth) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(auth));
    if (message_arena != submessage_arena) {
      auth = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, auth, submessage_arena);
    }
    set_has_auth();
    _impl_.Resp_.auth_ = auth;
  }
  // @@protoc_insertion_point(field_set_allocated:ServerData.AuthenticateGuestResp.auth)
}
void AuthenticateGuestResp::clear_auth() {
  if (_internal_has_auth()) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.Resp_.auth_;
    }
    clear_has_Resp();
  }
}
AuthenticateGuestResp::AuthenticateGuestResp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ServerData.AuthenticateGuestResp)
}
AuthenticateGuestResp::AuthenticateGuestResp(const AuthenticateGuestResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AuthenticateGuestResp* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.reqid_){}
    , decltype(_impl_.Resp_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.reqid_ = from._impl_.reqid_;
  clear_has_Resp();
  switch (from.Resp_case()) {
    case kAuth: {
      _this->_internal_mutable_auth()->::ServerData::CavrnusAuth::MergeFrom(
          from._internal_auth());
      break;
    }
    case kError: {
      _this->_internal_set_error(from._internal_error());
      break;
    }
    case RESP_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:ServerData.AuthenticateGuestResp)
}

inline void AuthenticateGuestResp::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.reqid_){0}
    , decltype(_impl_.Resp_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  clear_has_Resp();
}

AuthenticateGuestResp::~AuthenticateGuestResp() {
  // @@protoc_insertion_point(destructor:ServerData.AuthenticateGuestResp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AuthenticateGuestResp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_Resp()) {
    clear_Resp();
  }
}

void AuthenticateGuestResp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AuthenticateGuestResp::clear_Resp() {
// @@protoc_insertion_point(one_of_clear_start:ServerData.AuthenticateGuestResp)
  switch (Resp_case()) {
    case kAuth: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Resp_.auth_;
      }
      break;
    }
    case kError: {
      _impl_.Resp_.error_.Destroy();
      break;
    }
    case RESP_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = RESP_NOT_SET;
}


void AuthenticateGuestResp::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerData.AuthenticateGuestResp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.reqid_ = 0;
  clear_Resp();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AuthenticateGuestResp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 reqId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.reqid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ServerData.CavrnusAuth auth = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_auth(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string error = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          auto str = _internal_mutable_error();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ServerData.AuthenticateGuestResp.error"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AuthenticateGuestResp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ServerData.AuthenticateGuestResp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 reqId = 1;
  if (this->_internal_reqid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_reqid(), target);
  }

  // .ServerData.CavrnusAuth auth = 10;
  if (_internal_has_auth()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(10, _Internal::auth(this),
        _Internal::auth(this).GetCachedSize(), target, stream);
  }

  // string error = 11;
  if (_internal_has_error()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error().data(), static_cast<int>(this->_internal_error().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ServerData.AuthenticateGuestResp.error");
    target = stream->WriteStringMaybeAliased(
        11, this->_internal_error(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerData.AuthenticateGuestResp)
  return target;
}

size_t AuthenticateGuestResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerData.AuthenticateGuestResp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 reqId = 1;
  if (this->_internal_reqid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_reqid());
  }

  switch (Resp_case()) {
    // .ServerData.CavrnusAuth auth = 10;
    case kAuth: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Resp_.auth_);
      break;
    }
    // string error = 11;
    case kError: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_error());
      break;
    }
    case RESP_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AuthenticateGuestResp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AuthenticateGuestResp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AuthenticateGuestResp::GetClassData() const { return &_class_data_; }


void AuthenticateGuestResp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AuthenticateGuestResp*>(&to_msg);
  auto& from = static_cast<const AuthenticateGuestResp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ServerData.AuthenticateGuestResp)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_reqid() != 0) {
    _this->_internal_set_reqid(from._internal_reqid());
  }
  switch (from.Resp_case()) {
    case kAuth: {
      _this->_internal_mutable_auth()->::ServerData::CavrnusAuth::MergeFrom(
          from._internal_auth());
      break;
    }
    case kError: {
      _this->_internal_set_error(from._internal_error());
      break;
    }
    case RESP_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AuthenticateGuestResp::CopyFrom(const AuthenticateGuestResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerData.AuthenticateGuestResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthenticateGuestResp::IsInitialized() const {
  return true;
}

void AuthenticateGuestResp::InternalSwap(AuthenticateGuestResp* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.reqid_, other->_impl_.reqid_);
  swap(_impl_.Resp_, other->_impl_.Resp_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata AuthenticateGuestResp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_relay_2eproto_getter, &descriptor_table_relay_2eproto_once,
      file_level_metadata_relay_2eproto[10]);
}

// ===================================================================

class AuthenticateWithLinkReq::_Internal {
 public:
};

AuthenticateWithLinkReq::AuthenticateWithLinkReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ServerData.AuthenticateWithLinkReq)
}
AuthenticateWithLinkReq::AuthenticateWithLinkReq(const AuthenticateWithLinkReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AuthenticateWithLinkReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.link_){}
    , decltype(_impl_.reqid_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.link_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.link_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_link().empty()) {
    _this->_impl_.link_.Set(from._internal_link(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.reqid_ = from._impl_.reqid_;
  // @@protoc_insertion_point(copy_constructor:ServerData.AuthenticateWithLinkReq)
}

inline void AuthenticateWithLinkReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.link_){}
    , decltype(_impl_.reqid_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.link_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.link_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

AuthenticateWithLinkReq::~AuthenticateWithLinkReq() {
  // @@protoc_insertion_point(destructor:ServerData.AuthenticateWithLinkReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AuthenticateWithLinkReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.link_.Destroy();
}

void AuthenticateWithLinkReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AuthenticateWithLinkReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerData.AuthenticateWithLinkReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.link_.ClearToEmpty();
  _impl_.reqid_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AuthenticateWithLinkReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 reqId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.reqid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string link = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          auto str = _internal_mutable_link();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ServerData.AuthenticateWithLinkReq.link"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AuthenticateWithLinkReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ServerData.AuthenticateWithLinkReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 reqId = 1;
  if (this->_internal_reqid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_reqid(), target);
  }

  // string link = 10;
  if (!this->_internal_link().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_link().data(), static_cast<int>(this->_internal_link().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ServerData.AuthenticateWithLinkReq.link");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_link(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerData.AuthenticateWithLinkReq)
  return target;
}

size_t AuthenticateWithLinkReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerData.AuthenticateWithLinkReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string link = 10;
  if (!this->_internal_link().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_link());
  }

  // int32 reqId = 1;
  if (this->_internal_reqid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_reqid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AuthenticateWithLinkReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AuthenticateWithLinkReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AuthenticateWithLinkReq::GetClassData() const { return &_class_data_; }


void AuthenticateWithLinkReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AuthenticateWithLinkReq*>(&to_msg);
  auto& from = static_cast<const AuthenticateWithLinkReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ServerData.AuthenticateWithLinkReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_link().empty()) {
    _this->_internal_set_link(from._internal_link());
  }
  if (from._internal_reqid() != 0) {
    _this->_internal_set_reqid(from._internal_reqid());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AuthenticateWithLinkReq::CopyFrom(const AuthenticateWithLinkReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerData.AuthenticateWithLinkReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthenticateWithLinkReq::IsInitialized() const {
  return true;
}

void AuthenticateWithLinkReq::InternalSwap(AuthenticateWithLinkReq* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.link_, lhs_arena,
      &other->_impl_.link_, rhs_arena
  );
  swap(_impl_.reqid_, other->_impl_.reqid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AuthenticateWithLinkReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_relay_2eproto_getter, &descriptor_table_relay_2eproto_once,
      file_level_metadata_relay_2eproto[11]);
}

// ===================================================================

class AuthenticateWithLinkResp::_Internal {
 public:
  static const ::ServerData::CavrnusAuthLinkResponse& linkauth(const AuthenticateWithLinkResp* msg);
};

const ::ServerData::CavrnusAuthLinkResponse&
AuthenticateWithLinkResp::_Internal::linkauth(const AuthenticateWithLinkResp* msg) {
  return *msg->_impl_.Resp_.linkauth_;
}
void AuthenticateWithLinkResp::set_allocated_linkauth(::ServerData::CavrnusAuthLinkResponse* linkauth) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Resp();
  if (linkauth) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(linkauth));
    if (message_arena != submessage_arena) {
      linkauth = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, linkauth, submessage_arena);
    }
    set_has_linkauth();
    _impl_.Resp_.linkauth_ = linkauth;
  }
  // @@protoc_insertion_point(field_set_allocated:ServerData.AuthenticateWithLinkResp.linkAuth)
}
void AuthenticateWithLinkResp::clear_linkauth() {
  if (_internal_has_linkauth()) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.Resp_.linkauth_;
    }
    clear_has_Resp();
  }
}
AuthenticateWithLinkResp::AuthenticateWithLinkResp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ServerData.AuthenticateWithLinkResp)
}
AuthenticateWithLinkResp::AuthenticateWithLinkResp(const AuthenticateWithLinkResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AuthenticateWithLinkResp* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.reqid_){}
    , decltype(_impl_.Resp_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.reqid_ = from._impl_.reqid_;
  clear_has_Resp();
  switch (from.Resp_case()) {
    case kLinkAuth: {
      _this->_internal_mutable_linkauth()->::ServerData::CavrnusAuthLinkResponse::MergeFrom(
          from._internal_linkauth());
      break;
    }
    case kError: {
      _this->_internal_set_error(from._internal_error());
      break;
    }
    case RESP_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:ServerData.AuthenticateWithLinkResp)
}

inline void AuthenticateWithLinkResp::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.reqid_){0}
    , decltype(_impl_.Resp_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  clear_has_Resp();
}

AuthenticateWithLinkResp::~AuthenticateWithLinkResp() {
  // @@protoc_insertion_point(destructor:ServerData.AuthenticateWithLinkResp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AuthenticateWithLinkResp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_Resp()) {
    clear_Resp();
  }
}

void AuthenticateWithLinkResp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AuthenticateWithLinkResp::clear_Resp() {
// @@protoc_insertion_point(one_of_clear_start:ServerData.AuthenticateWithLinkResp)
  switch (Resp_case()) {
    case kLinkAuth: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Resp_.linkauth_;
      }
      break;
    }
    case kError: {
      _impl_.Resp_.error_.Destroy();
      break;
    }
    case RESP_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = RESP_NOT_SET;
}


void AuthenticateWithLinkResp::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerData.AuthenticateWithLinkResp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.reqid_ = 0;
  clear_Resp();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AuthenticateWithLinkResp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 reqId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.reqid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ServerData.CavrnusAuthLinkResponse linkAuth = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_linkauth(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string error = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          auto str = _internal_mutable_error();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ServerData.AuthenticateWithLinkResp.error"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AuthenticateWithLinkResp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ServerData.AuthenticateWithLinkResp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 reqId = 1;
  if (this->_internal_reqid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_reqid(), target);
  }

  // .ServerData.CavrnusAuthLinkResponse linkAuth = 10;
  if (_internal_has_linkauth()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(10, _Internal::linkauth(this),
        _Internal::linkauth(this).GetCachedSize(), target, stream);
  }

  // string error = 11;
  if (_internal_has_error()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error().data(), static_cast<int>(this->_internal_error().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ServerData.AuthenticateWithLinkResp.error");
    target = stream->WriteStringMaybeAliased(
        11, this->_internal_error(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerData.AuthenticateWithLinkResp)
  return target;
}

size_t AuthenticateWithLinkResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerData.AuthenticateWithLinkResp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 reqId = 1;
  if (this->_internal_reqid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_reqid());
  }

  switch (Resp_case()) {
    // .ServerData.CavrnusAuthLinkResponse linkAuth = 10;
    case kLinkAuth: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Resp_.linkauth_);
      break;
    }
    // string error = 11;
    case kError: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_error());
      break;
    }
    case RESP_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AuthenticateWithLinkResp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AuthenticateWithLinkResp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AuthenticateWithLinkResp::GetClassData() const { return &_class_data_; }


void AuthenticateWithLinkResp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AuthenticateWithLinkResp*>(&to_msg);
  auto& from = static_cast<const AuthenticateWithLinkResp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ServerData.AuthenticateWithLinkResp)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_reqid() != 0) {
    _this->_internal_set_reqid(from._internal_reqid());
  }
  switch (from.Resp_case()) {
    case kLinkAuth: {
      _this->_internal_mutable_linkauth()->::ServerData::CavrnusAuthLinkResponse::MergeFrom(
          from._internal_linkauth());
      break;
    }
    case kError: {
      _this->_internal_set_error(from._internal_error());
      break;
    }
    case RESP_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AuthenticateWithLinkResp::CopyFrom(const AuthenticateWithLinkResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerData.AuthenticateWithLinkResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthenticateWithLinkResp::IsInitialized() const {
  return true;
}

void AuthenticateWithLinkResp::InternalSwap(AuthenticateWithLinkResp* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.reqid_, other->_impl_.reqid_);
  swap(_impl_.Resp_, other->_impl_.Resp_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata AuthenticateWithLinkResp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_relay_2eproto_getter, &descriptor_table_relay_2eproto_once,
      file_level_metadata_relay_2eproto[12]);
}

// ===================================================================

class ExitAllSpacesAndLogoutReq::_Internal {
 public:
};

ExitAllSpacesAndLogoutReq::ExitAllSpacesAndLogoutReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ServerData.ExitAllSpacesAndLogoutReq)
}
ExitAllSpacesAndLogoutReq::ExitAllSpacesAndLogoutReq(const ExitAllSpacesAndLogoutReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ExitAllSpacesAndLogoutReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.reqid_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.reqid_ = from._impl_.reqid_;
  // @@protoc_insertion_point(copy_constructor:ServerData.ExitAllSpacesAndLogoutReq)
}

inline void ExitAllSpacesAndLogoutReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.reqid_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ExitAllSpacesAndLogoutReq::~ExitAllSpacesAndLogoutReq() {
  // @@protoc_insertion_point(destructor:ServerData.ExitAllSpacesAndLogoutReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ExitAllSpacesAndLogoutReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ExitAllSpacesAndLogoutReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ExitAllSpacesAndLogoutReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerData.ExitAllSpacesAndLogoutReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.reqid_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ExitAllSpacesAndLogoutReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 reqId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.reqid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ExitAllSpacesAndLogoutReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ServerData.ExitAllSpacesAndLogoutReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 reqId = 1;
  if (this->_internal_reqid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_reqid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerData.ExitAllSpacesAndLogoutReq)
  return target;
}

size_t ExitAllSpacesAndLogoutReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerData.ExitAllSpacesAndLogoutReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 reqId = 1;
  if (this->_internal_reqid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_reqid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ExitAllSpacesAndLogoutReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ExitAllSpacesAndLogoutReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ExitAllSpacesAndLogoutReq::GetClassData() const { return &_class_data_; }


void ExitAllSpacesAndLogoutReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ExitAllSpacesAndLogoutReq*>(&to_msg);
  auto& from = static_cast<const ExitAllSpacesAndLogoutReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ServerData.ExitAllSpacesAndLogoutReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_reqid() != 0) {
    _this->_internal_set_reqid(from._internal_reqid());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ExitAllSpacesAndLogoutReq::CopyFrom(const ExitAllSpacesAndLogoutReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerData.ExitAllSpacesAndLogoutReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExitAllSpacesAndLogoutReq::IsInitialized() const {
  return true;
}

void ExitAllSpacesAndLogoutReq::InternalSwap(ExitAllSpacesAndLogoutReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.reqid_, other->_impl_.reqid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ExitAllSpacesAndLogoutReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_relay_2eproto_getter, &descriptor_table_relay_2eproto_once,
      file_level_metadata_relay_2eproto[13]);
}

// ===================================================================

class ExitAllSpacesAndLogoutResp::_Internal {
 public:
};

ExitAllSpacesAndLogoutResp::ExitAllSpacesAndLogoutResp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ServerData.ExitAllSpacesAndLogoutResp)
}
ExitAllSpacesAndLogoutResp::ExitAllSpacesAndLogoutResp(const ExitAllSpacesAndLogoutResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ExitAllSpacesAndLogoutResp* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.spacesexited_){from._impl_.spacesexited_}
    , /*decltype(_impl_._spacesexited_cached_byte_size_)*/{0}
    , decltype(_impl_.reqid_){}
    , decltype(_impl_.Resp_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.reqid_ = from._impl_.reqid_;
  clear_has_Resp();
  switch (from.Resp_case()) {
    case kLogoutSuccess: {
      _this->_internal_set_logoutsuccess(from._internal_logoutsuccess());
      break;
    }
    case kError: {
      _this->_internal_set_error(from._internal_error());
      break;
    }
    case RESP_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:ServerData.ExitAllSpacesAndLogoutResp)
}

inline void ExitAllSpacesAndLogoutResp::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.spacesexited_){arena}
    , /*decltype(_impl_._spacesexited_cached_byte_size_)*/{0}
    , decltype(_impl_.reqid_){0}
    , decltype(_impl_.Resp_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  clear_has_Resp();
}

ExitAllSpacesAndLogoutResp::~ExitAllSpacesAndLogoutResp() {
  // @@protoc_insertion_point(destructor:ServerData.ExitAllSpacesAndLogoutResp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ExitAllSpacesAndLogoutResp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.spacesexited_.~RepeatedField();
  if (has_Resp()) {
    clear_Resp();
  }
}

void ExitAllSpacesAndLogoutResp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ExitAllSpacesAndLogoutResp::clear_Resp() {
// @@protoc_insertion_point(one_of_clear_start:ServerData.ExitAllSpacesAndLogoutResp)
  switch (Resp_case()) {
    case kLogoutSuccess: {
      // No need to clear
      break;
    }
    case kError: {
      _impl_.Resp_.error_.Destroy();
      break;
    }
    case RESP_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = RESP_NOT_SET;
}


void ExitAllSpacesAndLogoutResp::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerData.ExitAllSpacesAndLogoutResp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.spacesexited_.Clear();
  _impl_.reqid_ = 0;
  clear_Resp();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ExitAllSpacesAndLogoutResp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 reqId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.reqid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool logoutSuccess = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          _internal_set_logoutsuccess(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string error = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          auto str = _internal_mutable_error();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ServerData.ExitAllSpacesAndLogoutResp.error"));
        } else
          goto handle_unusual;
        continue;
      // repeated int32 spacesExited = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 162)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_spacesexited(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 160) {
          _internal_add_spacesexited(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ExitAllSpacesAndLogoutResp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ServerData.ExitAllSpacesAndLogoutResp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 reqId = 1;
  if (this->_internal_reqid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_reqid(), target);
  }

  // bool logoutSuccess = 10;
  if (_internal_has_logoutsuccess()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(10, this->_internal_logoutsuccess(), target);
  }

  // string error = 11;
  if (_internal_has_error()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error().data(), static_cast<int>(this->_internal_error().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ServerData.ExitAllSpacesAndLogoutResp.error");
    target = stream->WriteStringMaybeAliased(
        11, this->_internal_error(), target);
  }

  // repeated int32 spacesExited = 20;
  {
    int byte_size = _impl_._spacesexited_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          20, _internal_spacesexited(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerData.ExitAllSpacesAndLogoutResp)
  return target;
}

size_t ExitAllSpacesAndLogoutResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerData.ExitAllSpacesAndLogoutResp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 spacesExited = 20;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int32Size(this->_impl_.spacesexited_);
    if (data_size > 0) {
      total_size += 2 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._spacesexited_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // int32 reqId = 1;
  if (this->_internal_reqid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_reqid());
  }

  switch (Resp_case()) {
    // bool logoutSuccess = 10;
    case kLogoutSuccess: {
      total_size += 1 + 1;
      break;
    }
    // string error = 11;
    case kError: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_error());
      break;
    }
    case RESP_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ExitAllSpacesAndLogoutResp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ExitAllSpacesAndLogoutResp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ExitAllSpacesAndLogoutResp::GetClassData() const { return &_class_data_; }


void ExitAllSpacesAndLogoutResp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ExitAllSpacesAndLogoutResp*>(&to_msg);
  auto& from = static_cast<const ExitAllSpacesAndLogoutResp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ServerData.ExitAllSpacesAndLogoutResp)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.spacesexited_.MergeFrom(from._impl_.spacesexited_);
  if (from._internal_reqid() != 0) {
    _this->_internal_set_reqid(from._internal_reqid());
  }
  switch (from.Resp_case()) {
    case kLogoutSuccess: {
      _this->_internal_set_logoutsuccess(from._internal_logoutsuccess());
      break;
    }
    case kError: {
      _this->_internal_set_error(from._internal_error());
      break;
    }
    case RESP_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ExitAllSpacesAndLogoutResp::CopyFrom(const ExitAllSpacesAndLogoutResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerData.ExitAllSpacesAndLogoutResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExitAllSpacesAndLogoutResp::IsInitialized() const {
  return true;
}

void ExitAllSpacesAndLogoutResp::InternalSwap(ExitAllSpacesAndLogoutResp* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.spacesexited_.InternalSwap(&other->_impl_.spacesexited_);
  swap(_impl_.reqid_, other->_impl_.reqid_);
  swap(_impl_.Resp_, other->_impl_.Resp_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata ExitAllSpacesAndLogoutResp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_relay_2eproto_getter, &descriptor_table_relay_2eproto_once,
      file_level_metadata_relay_2eproto[14]);
}

// ===================================================================

class JoinSpaceFromIdReq::_Internal {
 public:
};

JoinSpaceFromIdReq::JoinSpaceFromIdReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ServerData.JoinSpaceFromIdReq)
}
JoinSpaceFromIdReq::JoinSpaceFromIdReq(const JoinSpaceFromIdReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  JoinSpaceFromIdReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.spaceid_){}
    , decltype(_impl_.reqid_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.spaceid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.spaceid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_spaceid().empty()) {
    _this->_impl_.spaceid_.Set(from._internal_spaceid(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.reqid_ = from._impl_.reqid_;
  // @@protoc_insertion_point(copy_constructor:ServerData.JoinSpaceFromIdReq)
}

inline void JoinSpaceFromIdReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.spaceid_){}
    , decltype(_impl_.reqid_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.spaceid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.spaceid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

JoinSpaceFromIdReq::~JoinSpaceFromIdReq() {
  // @@protoc_insertion_point(destructor:ServerData.JoinSpaceFromIdReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void JoinSpaceFromIdReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.spaceid_.Destroy();
}

void JoinSpaceFromIdReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void JoinSpaceFromIdReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerData.JoinSpaceFromIdReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.spaceid_.ClearToEmpty();
  _impl_.reqid_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* JoinSpaceFromIdReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 reqId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.reqid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string spaceId = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          auto str = _internal_mutable_spaceid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ServerData.JoinSpaceFromIdReq.spaceId"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* JoinSpaceFromIdReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ServerData.JoinSpaceFromIdReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 reqId = 1;
  if (this->_internal_reqid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_reqid(), target);
  }

  // string spaceId = 10;
  if (!this->_internal_spaceid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_spaceid().data(), static_cast<int>(this->_internal_spaceid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ServerData.JoinSpaceFromIdReq.spaceId");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_spaceid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerData.JoinSpaceFromIdReq)
  return target;
}

size_t JoinSpaceFromIdReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerData.JoinSpaceFromIdReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string spaceId = 10;
  if (!this->_internal_spaceid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_spaceid());
  }

  // int32 reqId = 1;
  if (this->_internal_reqid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_reqid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData JoinSpaceFromIdReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    JoinSpaceFromIdReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*JoinSpaceFromIdReq::GetClassData() const { return &_class_data_; }


void JoinSpaceFromIdReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<JoinSpaceFromIdReq*>(&to_msg);
  auto& from = static_cast<const JoinSpaceFromIdReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ServerData.JoinSpaceFromIdReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_spaceid().empty()) {
    _this->_internal_set_spaceid(from._internal_spaceid());
  }
  if (from._internal_reqid() != 0) {
    _this->_internal_set_reqid(from._internal_reqid());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void JoinSpaceFromIdReq::CopyFrom(const JoinSpaceFromIdReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerData.JoinSpaceFromIdReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JoinSpaceFromIdReq::IsInitialized() const {
  return true;
}

void JoinSpaceFromIdReq::InternalSwap(JoinSpaceFromIdReq* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.spaceid_, lhs_arena,
      &other->_impl_.spaceid_, rhs_arena
  );
  swap(_impl_.reqid_, other->_impl_.reqid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata JoinSpaceFromIdReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_relay_2eproto_getter, &descriptor_table_relay_2eproto_once,
      file_level_metadata_relay_2eproto[15]);
}

// ===================================================================

class JoinSpaceFromIdResp::_Internal {
 public:
  static const ::ServerData::CavrnusSpaceConnection& spaceconn(const JoinSpaceFromIdResp* msg);
};

const ::ServerData::CavrnusSpaceConnection&
JoinSpaceFromIdResp::_Internal::spaceconn(const JoinSpaceFromIdResp* msg) {
  return *msg->_impl_.Resp_.spaceconn_;
}
void JoinSpaceFromIdResp::set_allocated_spaceconn(::ServerData::CavrnusSpaceConnection* spaceconn) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Resp();
  if (spaceconn) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(spaceconn));
    if (message_arena != submessage_arena) {
      spaceconn = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, spaceconn, submessage_arena);
    }
    set_has_spaceconn();
    _impl_.Resp_.spaceconn_ = spaceconn;
  }
  // @@protoc_insertion_point(field_set_allocated:ServerData.JoinSpaceFromIdResp.spaceConn)
}
void JoinSpaceFromIdResp::clear_spaceconn() {
  if (_internal_has_spaceconn()) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.Resp_.spaceconn_;
    }
    clear_has_Resp();
  }
}
JoinSpaceFromIdResp::JoinSpaceFromIdResp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ServerData.JoinSpaceFromIdResp)
}
JoinSpaceFromIdResp::JoinSpaceFromIdResp(const JoinSpaceFromIdResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  JoinSpaceFromIdResp* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.reqid_){}
    , decltype(_impl_.Resp_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.reqid_ = from._impl_.reqid_;
  clear_has_Resp();
  switch (from.Resp_case()) {
    case kSpaceConn: {
      _this->_internal_mutable_spaceconn()->::ServerData::CavrnusSpaceConnection::MergeFrom(
          from._internal_spaceconn());
      break;
    }
    case kError: {
      _this->_internal_set_error(from._internal_error());
      break;
    }
    case RESP_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:ServerData.JoinSpaceFromIdResp)
}

inline void JoinSpaceFromIdResp::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.reqid_){0}
    , decltype(_impl_.Resp_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  clear_has_Resp();
}

JoinSpaceFromIdResp::~JoinSpaceFromIdResp() {
  // @@protoc_insertion_point(destructor:ServerData.JoinSpaceFromIdResp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void JoinSpaceFromIdResp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_Resp()) {
    clear_Resp();
  }
}

void JoinSpaceFromIdResp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void JoinSpaceFromIdResp::clear_Resp() {
// @@protoc_insertion_point(one_of_clear_start:ServerData.JoinSpaceFromIdResp)
  switch (Resp_case()) {
    case kSpaceConn: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Resp_.spaceconn_;
      }
      break;
    }
    case kError: {
      _impl_.Resp_.error_.Destroy();
      break;
    }
    case RESP_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = RESP_NOT_SET;
}


void JoinSpaceFromIdResp::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerData.JoinSpaceFromIdResp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.reqid_ = 0;
  clear_Resp();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* JoinSpaceFromIdResp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 reqId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.reqid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ServerData.CavrnusSpaceConnection spaceConn = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_spaceconn(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string error = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          auto str = _internal_mutable_error();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ServerData.JoinSpaceFromIdResp.error"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* JoinSpaceFromIdResp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ServerData.JoinSpaceFromIdResp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 reqId = 1;
  if (this->_internal_reqid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_reqid(), target);
  }

  // .ServerData.CavrnusSpaceConnection spaceConn = 10;
  if (_internal_has_spaceconn()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(10, _Internal::spaceconn(this),
        _Internal::spaceconn(this).GetCachedSize(), target, stream);
  }

  // string error = 11;
  if (_internal_has_error()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error().data(), static_cast<int>(this->_internal_error().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ServerData.JoinSpaceFromIdResp.error");
    target = stream->WriteStringMaybeAliased(
        11, this->_internal_error(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerData.JoinSpaceFromIdResp)
  return target;
}

size_t JoinSpaceFromIdResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerData.JoinSpaceFromIdResp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 reqId = 1;
  if (this->_internal_reqid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_reqid());
  }

  switch (Resp_case()) {
    // .ServerData.CavrnusSpaceConnection spaceConn = 10;
    case kSpaceConn: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Resp_.spaceconn_);
      break;
    }
    // string error = 11;
    case kError: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_error());
      break;
    }
    case RESP_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData JoinSpaceFromIdResp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    JoinSpaceFromIdResp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*JoinSpaceFromIdResp::GetClassData() const { return &_class_data_; }


void JoinSpaceFromIdResp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<JoinSpaceFromIdResp*>(&to_msg);
  auto& from = static_cast<const JoinSpaceFromIdResp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ServerData.JoinSpaceFromIdResp)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_reqid() != 0) {
    _this->_internal_set_reqid(from._internal_reqid());
  }
  switch (from.Resp_case()) {
    case kSpaceConn: {
      _this->_internal_mutable_spaceconn()->::ServerData::CavrnusSpaceConnection::MergeFrom(
          from._internal_spaceconn());
      break;
    }
    case kError: {
      _this->_internal_set_error(from._internal_error());
      break;
    }
    case RESP_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void JoinSpaceFromIdResp::CopyFrom(const JoinSpaceFromIdResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerData.JoinSpaceFromIdResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JoinSpaceFromIdResp::IsInitialized() const {
  return true;
}

void JoinSpaceFromIdResp::InternalSwap(JoinSpaceFromIdResp* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.reqid_, other->_impl_.reqid_);
  swap(_impl_.Resp_, other->_impl_.Resp_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata JoinSpaceFromIdResp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_relay_2eproto_getter, &descriptor_table_relay_2eproto_once,
      file_level_metadata_relay_2eproto[16]);
}

// ===================================================================

class ShutdownSpaceConnectionReq::_Internal {
 public:
  static const ::ServerData::CavrnusSpaceConnection& spaceconnection(const ShutdownSpaceConnectionReq* msg);
};

const ::ServerData::CavrnusSpaceConnection&
ShutdownSpaceConnectionReq::_Internal::spaceconnection(const ShutdownSpaceConnectionReq* msg) {
  return *msg->_impl_.spaceconnection_;
}
void ShutdownSpaceConnectionReq::clear_spaceconnection() {
  if (GetArenaForAllocation() == nullptr && _impl_.spaceconnection_ != nullptr) {
    delete _impl_.spaceconnection_;
  }
  _impl_.spaceconnection_ = nullptr;
}
ShutdownSpaceConnectionReq::ShutdownSpaceConnectionReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ServerData.ShutdownSpaceConnectionReq)
}
ShutdownSpaceConnectionReq::ShutdownSpaceConnectionReq(const ShutdownSpaceConnectionReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ShutdownSpaceConnectionReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.spaceconnection_){nullptr}
    , decltype(_impl_.reqid_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_spaceconnection()) {
    _this->_impl_.spaceconnection_ = new ::ServerData::CavrnusSpaceConnection(*from._impl_.spaceconnection_);
  }
  _this->_impl_.reqid_ = from._impl_.reqid_;
  // @@protoc_insertion_point(copy_constructor:ServerData.ShutdownSpaceConnectionReq)
}

inline void ShutdownSpaceConnectionReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.spaceconnection_){nullptr}
    , decltype(_impl_.reqid_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ShutdownSpaceConnectionReq::~ShutdownSpaceConnectionReq() {
  // @@protoc_insertion_point(destructor:ServerData.ShutdownSpaceConnectionReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ShutdownSpaceConnectionReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.spaceconnection_;
}

void ShutdownSpaceConnectionReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ShutdownSpaceConnectionReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerData.ShutdownSpaceConnectionReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.spaceconnection_ != nullptr) {
    delete _impl_.spaceconnection_;
  }
  _impl_.spaceconnection_ = nullptr;
  _impl_.reqid_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ShutdownSpaceConnectionReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 reqId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.reqid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ServerData.CavrnusSpaceConnection SpaceConnection = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_spaceconnection(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ShutdownSpaceConnectionReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ServerData.ShutdownSpaceConnectionReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 reqId = 1;
  if (this->_internal_reqid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_reqid(), target);
  }

  // .ServerData.CavrnusSpaceConnection SpaceConnection = 10;
  if (this->_internal_has_spaceconnection()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(10, _Internal::spaceconnection(this),
        _Internal::spaceconnection(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerData.ShutdownSpaceConnectionReq)
  return target;
}

size_t ShutdownSpaceConnectionReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerData.ShutdownSpaceConnectionReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .ServerData.CavrnusSpaceConnection SpaceConnection = 10;
  if (this->_internal_has_spaceconnection()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.spaceconnection_);
  }

  // int32 reqId = 1;
  if (this->_internal_reqid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_reqid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ShutdownSpaceConnectionReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ShutdownSpaceConnectionReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ShutdownSpaceConnectionReq::GetClassData() const { return &_class_data_; }


void ShutdownSpaceConnectionReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ShutdownSpaceConnectionReq*>(&to_msg);
  auto& from = static_cast<const ShutdownSpaceConnectionReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ServerData.ShutdownSpaceConnectionReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_spaceconnection()) {
    _this->_internal_mutable_spaceconnection()->::ServerData::CavrnusSpaceConnection::MergeFrom(
        from._internal_spaceconnection());
  }
  if (from._internal_reqid() != 0) {
    _this->_internal_set_reqid(from._internal_reqid());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ShutdownSpaceConnectionReq::CopyFrom(const ShutdownSpaceConnectionReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerData.ShutdownSpaceConnectionReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShutdownSpaceConnectionReq::IsInitialized() const {
  return true;
}

void ShutdownSpaceConnectionReq::InternalSwap(ShutdownSpaceConnectionReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ShutdownSpaceConnectionReq, _impl_.reqid_)
      + sizeof(ShutdownSpaceConnectionReq::_impl_.reqid_)
      - PROTOBUF_FIELD_OFFSET(ShutdownSpaceConnectionReq, _impl_.spaceconnection_)>(
          reinterpret_cast<char*>(&_impl_.spaceconnection_),
          reinterpret_cast<char*>(&other->_impl_.spaceconnection_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ShutdownSpaceConnectionReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_relay_2eproto_getter, &descriptor_table_relay_2eproto_once,
      file_level_metadata_relay_2eproto[17]);
}

// ===================================================================

class ShutdownSpaceConnectionResp::_Internal {
 public:
  static const ::ServerData::CavrnusSpaceConnection& spaceconn(const ShutdownSpaceConnectionResp* msg);
};

const ::ServerData::CavrnusSpaceConnection&
ShutdownSpaceConnectionResp::_Internal::spaceconn(const ShutdownSpaceConnectionResp* msg) {
  return *msg->_impl_.Resp_.spaceconn_;
}
void ShutdownSpaceConnectionResp::set_allocated_spaceconn(::ServerData::CavrnusSpaceConnection* spaceconn) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Resp();
  if (spaceconn) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(spaceconn));
    if (message_arena != submessage_arena) {
      spaceconn = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, spaceconn, submessage_arena);
    }
    set_has_spaceconn();
    _impl_.Resp_.spaceconn_ = spaceconn;
  }
  // @@protoc_insertion_point(field_set_allocated:ServerData.ShutdownSpaceConnectionResp.spaceConn)
}
void ShutdownSpaceConnectionResp::clear_spaceconn() {
  if (_internal_has_spaceconn()) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.Resp_.spaceconn_;
    }
    clear_has_Resp();
  }
}
ShutdownSpaceConnectionResp::ShutdownSpaceConnectionResp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ServerData.ShutdownSpaceConnectionResp)
}
ShutdownSpaceConnectionResp::ShutdownSpaceConnectionResp(const ShutdownSpaceConnectionResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ShutdownSpaceConnectionResp* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.reqid_){}
    , decltype(_impl_.Resp_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.reqid_ = from._impl_.reqid_;
  clear_has_Resp();
  switch (from.Resp_case()) {
    case kSpaceConn: {
      _this->_internal_mutable_spaceconn()->::ServerData::CavrnusSpaceConnection::MergeFrom(
          from._internal_spaceconn());
      break;
    }
    case kError: {
      _this->_internal_set_error(from._internal_error());
      break;
    }
    case RESP_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:ServerData.ShutdownSpaceConnectionResp)
}

inline void ShutdownSpaceConnectionResp::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.reqid_){0}
    , decltype(_impl_.Resp_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  clear_has_Resp();
}

ShutdownSpaceConnectionResp::~ShutdownSpaceConnectionResp() {
  // @@protoc_insertion_point(destructor:ServerData.ShutdownSpaceConnectionResp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ShutdownSpaceConnectionResp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_Resp()) {
    clear_Resp();
  }
}

void ShutdownSpaceConnectionResp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ShutdownSpaceConnectionResp::clear_Resp() {
// @@protoc_insertion_point(one_of_clear_start:ServerData.ShutdownSpaceConnectionResp)
  switch (Resp_case()) {
    case kSpaceConn: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Resp_.spaceconn_;
      }
      break;
    }
    case kError: {
      _impl_.Resp_.error_.Destroy();
      break;
    }
    case RESP_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = RESP_NOT_SET;
}


void ShutdownSpaceConnectionResp::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerData.ShutdownSpaceConnectionResp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.reqid_ = 0;
  clear_Resp();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ShutdownSpaceConnectionResp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 reqId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.reqid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ServerData.CavrnusSpaceConnection spaceConn = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_spaceconn(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string error = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          auto str = _internal_mutable_error();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ServerData.ShutdownSpaceConnectionResp.error"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ShutdownSpaceConnectionResp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ServerData.ShutdownSpaceConnectionResp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 reqId = 1;
  if (this->_internal_reqid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_reqid(), target);
  }

  // .ServerData.CavrnusSpaceConnection spaceConn = 10;
  if (_internal_has_spaceconn()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(10, _Internal::spaceconn(this),
        _Internal::spaceconn(this).GetCachedSize(), target, stream);
  }

  // string error = 11;
  if (_internal_has_error()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error().data(), static_cast<int>(this->_internal_error().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ServerData.ShutdownSpaceConnectionResp.error");
    target = stream->WriteStringMaybeAliased(
        11, this->_internal_error(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerData.ShutdownSpaceConnectionResp)
  return target;
}

size_t ShutdownSpaceConnectionResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerData.ShutdownSpaceConnectionResp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 reqId = 1;
  if (this->_internal_reqid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_reqid());
  }

  switch (Resp_case()) {
    // .ServerData.CavrnusSpaceConnection spaceConn = 10;
    case kSpaceConn: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Resp_.spaceconn_);
      break;
    }
    // string error = 11;
    case kError: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_error());
      break;
    }
    case RESP_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ShutdownSpaceConnectionResp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ShutdownSpaceConnectionResp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ShutdownSpaceConnectionResp::GetClassData() const { return &_class_data_; }


void ShutdownSpaceConnectionResp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ShutdownSpaceConnectionResp*>(&to_msg);
  auto& from = static_cast<const ShutdownSpaceConnectionResp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ServerData.ShutdownSpaceConnectionResp)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_reqid() != 0) {
    _this->_internal_set_reqid(from._internal_reqid());
  }
  switch (from.Resp_case()) {
    case kSpaceConn: {
      _this->_internal_mutable_spaceconn()->::ServerData::CavrnusSpaceConnection::MergeFrom(
          from._internal_spaceconn());
      break;
    }
    case kError: {
      _this->_internal_set_error(from._internal_error());
      break;
    }
    case RESP_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ShutdownSpaceConnectionResp::CopyFrom(const ShutdownSpaceConnectionResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerData.ShutdownSpaceConnectionResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShutdownSpaceConnectionResp::IsInitialized() const {
  return true;
}

void ShutdownSpaceConnectionResp::InternalSwap(ShutdownSpaceConnectionResp* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.reqid_, other->_impl_.reqid_);
  swap(_impl_.Resp_, other->_impl_.Resp_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata ShutdownSpaceConnectionResp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_relay_2eproto_getter, &descriptor_table_relay_2eproto_once,
      file_level_metadata_relay_2eproto[18]);
}

// ===================================================================

class PropertyValue::_Internal {
 public:
  static const ::Common::Float4& vectorval(const PropertyValue* msg);
  static const ::Common::Color4& colorval(const PropertyValue* msg);
  static const ::ServerData::TransformPropertyValue& transformval(const PropertyValue* msg);
  static const ::Property::PropertyIdentifier& linkval(const PropertyValue* msg);
};

const ::Common::Float4&
PropertyValue::_Internal::vectorval(const PropertyValue* msg) {
  return *msg->_impl_.Value_.vectorval_;
}
const ::Common::Color4&
PropertyValue::_Internal::colorval(const PropertyValue* msg) {
  return *msg->_impl_.Value_.colorval_;
}
const ::ServerData::TransformPropertyValue&
PropertyValue::_Internal::transformval(const PropertyValue* msg) {
  return *msg->_impl_.Value_.transformval_;
}
const ::Property::PropertyIdentifier&
PropertyValue::_Internal::linkval(const PropertyValue* msg) {
  return *msg->_impl_.Value_.linkval_;
}
void PropertyValue::set_allocated_vectorval(::Common::Float4* vectorval) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Value();
  if (vectorval) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(vectorval));
    if (message_arena != submessage_arena) {
      vectorval = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, vectorval, submessage_arena);
    }
    set_has_vectorval();
    _impl_.Value_.vectorval_ = vectorval;
  }
  // @@protoc_insertion_point(field_set_allocated:ServerData.PropertyValue.vectorVal)
}
void PropertyValue::clear_vectorval() {
  if (_internal_has_vectorval()) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.Value_.vectorval_;
    }
    clear_has_Value();
  }
}
void PropertyValue::set_allocated_colorval(::Common::Color4* colorval) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Value();
  if (colorval) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(colorval));
    if (message_arena != submessage_arena) {
      colorval = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, colorval, submessage_arena);
    }
    set_has_colorval();
    _impl_.Value_.colorval_ = colorval;
  }
  // @@protoc_insertion_point(field_set_allocated:ServerData.PropertyValue.colorVal)
}
void PropertyValue::clear_colorval() {
  if (_internal_has_colorval()) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.Value_.colorval_;
    }
    clear_has_Value();
  }
}
void PropertyValue::set_allocated_transformval(::ServerData::TransformPropertyValue* transformval) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Value();
  if (transformval) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(transformval);
    if (message_arena != submessage_arena) {
      transformval = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, transformval, submessage_arena);
    }
    set_has_transformval();
    _impl_.Value_.transformval_ = transformval;
  }
  // @@protoc_insertion_point(field_set_allocated:ServerData.PropertyValue.transformVal)
}
void PropertyValue::set_allocated_linkval(::Property::PropertyIdentifier* linkval) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Value();
  if (linkval) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(linkval));
    if (message_arena != submessage_arena) {
      linkval = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, linkval, submessage_arena);
    }
    set_has_linkval();
    _impl_.Value_.linkval_ = linkval;
  }
  // @@protoc_insertion_point(field_set_allocated:ServerData.PropertyValue.linkVal)
}
void PropertyValue::clear_linkval() {
  if (_internal_has_linkval()) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.Value_.linkval_;
    }
    clear_has_Value();
  }
}
PropertyValue::PropertyValue(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ServerData.PropertyValue)
}
PropertyValue::PropertyValue(const PropertyValue& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PropertyValue* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.Value_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_Value();
  switch (from.Value_case()) {
    case kBoolVal: {
      _this->_internal_set_boolval(from._internal_boolval());
      break;
    }
    case kStringVal: {
      _this->_internal_set_stringval(from._internal_stringval());
      break;
    }
    case kScalarVal: {
      _this->_internal_set_scalarval(from._internal_scalarval());
      break;
    }
    case kVectorVal: {
      _this->_internal_mutable_vectorval()->::Common::Float4::MergeFrom(
          from._internal_vectorval());
      break;
    }
    case kColorVal: {
      _this->_internal_mutable_colorval()->::Common::Color4::MergeFrom(
          from._internal_colorval());
      break;
    }
    case kTransformVal: {
      _this->_internal_mutable_transformval()->::ServerData::TransformPropertyValue::MergeFrom(
          from._internal_transformval());
      break;
    }
    case kLinkVal: {
      _this->_internal_mutable_linkval()->::Property::PropertyIdentifier::MergeFrom(
          from._internal_linkval());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:ServerData.PropertyValue)
}

inline void PropertyValue::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.Value_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  clear_has_Value();
}

PropertyValue::~PropertyValue() {
  // @@protoc_insertion_point(destructor:ServerData.PropertyValue)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PropertyValue::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_Value()) {
    clear_Value();
  }
}

void PropertyValue::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PropertyValue::clear_Value() {
// @@protoc_insertion_point(one_of_clear_start:ServerData.PropertyValue)
  switch (Value_case()) {
    case kBoolVal: {
      // No need to clear
      break;
    }
    case kStringVal: {
      _impl_.Value_.stringval_.Destroy();
      break;
    }
    case kScalarVal: {
      // No need to clear
      break;
    }
    case kVectorVal: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Value_.vectorval_;
      }
      break;
    }
    case kColorVal: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Value_.colorval_;
      }
      break;
    }
    case kTransformVal: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Value_.transformval_;
      }
      break;
    }
    case kLinkVal: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Value_.linkval_;
      }
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = VALUE_NOT_SET;
}


void PropertyValue::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerData.PropertyValue)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_Value();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PropertyValue::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool boolVal = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          _internal_set_boolval(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string stringVal = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          auto str = _internal_mutable_stringval();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ServerData.PropertyValue.stringVal"));
        } else
          goto handle_unusual;
        continue;
      // float scalarVal = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 101)) {
          _internal_set_scalarval(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr));
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // .Common.Float4 vectorVal = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_vectorval(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Common.Color4 colorVal = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 114)) {
          ptr = ctx->ParseMessage(_internal_mutable_colorval(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.PropertyIdentifier linkVal = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 122)) {
          ptr = ctx->ParseMessage(_internal_mutable_linkval(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ServerData.TransformPropertyValue transformVal = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 138)) {
          ptr = ctx->ParseMessage(_internal_mutable_transformval(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PropertyValue::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ServerData.PropertyValue)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool boolVal = 10;
  if (_internal_has_boolval()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(10, this->_internal_boolval(), target);
  }

  // string stringVal = 11;
  if (_internal_has_stringval()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_stringval().data(), static_cast<int>(this->_internal_stringval().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ServerData.PropertyValue.stringVal");
    target = stream->WriteStringMaybeAliased(
        11, this->_internal_stringval(), target);
  }

  // float scalarVal = 12;
  if (_internal_has_scalarval()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(12, this->_internal_scalarval(), target);
  }

  // .Common.Float4 vectorVal = 13;
  if (_internal_has_vectorval()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(13, _Internal::vectorval(this),
        _Internal::vectorval(this).GetCachedSize(), target, stream);
  }

  // .Common.Color4 colorVal = 14;
  if (_internal_has_colorval()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(14, _Internal::colorval(this),
        _Internal::colorval(this).GetCachedSize(), target, stream);
  }

  // .Property.PropertyIdentifier linkVal = 15;
  if (_internal_has_linkval()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(15, _Internal::linkval(this),
        _Internal::linkval(this).GetCachedSize(), target, stream);
  }

  // .ServerData.TransformPropertyValue transformVal = 17;
  if (_internal_has_transformval()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(17, _Internal::transformval(this),
        _Internal::transformval(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerData.PropertyValue)
  return target;
}

size_t PropertyValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerData.PropertyValue)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (Value_case()) {
    // bool boolVal = 10;
    case kBoolVal: {
      total_size += 1 + 1;
      break;
    }
    // string stringVal = 11;
    case kStringVal: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_stringval());
      break;
    }
    // float scalarVal = 12;
    case kScalarVal: {
      total_size += 1 + 4;
      break;
    }
    // .Common.Float4 vectorVal = 13;
    case kVectorVal: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Value_.vectorval_);
      break;
    }
    // .Common.Color4 colorVal = 14;
    case kColorVal: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Value_.colorval_);
      break;
    }
    // .ServerData.TransformPropertyValue transformVal = 17;
    case kTransformVal: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Value_.transformval_);
      break;
    }
    // .Property.PropertyIdentifier linkVal = 15;
    case kLinkVal: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Value_.linkval_);
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PropertyValue::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PropertyValue::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PropertyValue::GetClassData() const { return &_class_data_; }


void PropertyValue::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PropertyValue*>(&to_msg);
  auto& from = static_cast<const PropertyValue&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ServerData.PropertyValue)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.Value_case()) {
    case kBoolVal: {
      _this->_internal_set_boolval(from._internal_boolval());
      break;
    }
    case kStringVal: {
      _this->_internal_set_stringval(from._internal_stringval());
      break;
    }
    case kScalarVal: {
      _this->_internal_set_scalarval(from._internal_scalarval());
      break;
    }
    case kVectorVal: {
      _this->_internal_mutable_vectorval()->::Common::Float4::MergeFrom(
          from._internal_vectorval());
      break;
    }
    case kColorVal: {
      _this->_internal_mutable_colorval()->::Common::Color4::MergeFrom(
          from._internal_colorval());
      break;
    }
    case kTransformVal: {
      _this->_internal_mutable_transformval()->::ServerData::TransformPropertyValue::MergeFrom(
          from._internal_transformval());
      break;
    }
    case kLinkVal: {
      _this->_internal_mutable_linkval()->::Property::PropertyIdentifier::MergeFrom(
          from._internal_linkval());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PropertyValue::CopyFrom(const PropertyValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerData.PropertyValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PropertyValue::IsInitialized() const {
  return true;
}

void PropertyValue::InternalSwap(PropertyValue* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.Value_, other->_impl_.Value_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata PropertyValue::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_relay_2eproto_getter, &descriptor_table_relay_2eproto_once,
      file_level_metadata_relay_2eproto[19]);
}

// ===================================================================

class DefinePropertyDefaultValue::_Internal {
 public:
  static const ::ServerData::CavrnusSpaceConnection& spaceconn(const DefinePropertyDefaultValue* msg);
  static const ::ServerData::PropertyValue& propertyvalue(const DefinePropertyDefaultValue* msg);
};

const ::ServerData::CavrnusSpaceConnection&
DefinePropertyDefaultValue::_Internal::spaceconn(const DefinePropertyDefaultValue* msg) {
  return *msg->_impl_.spaceconn_;
}
const ::ServerData::PropertyValue&
DefinePropertyDefaultValue::_Internal::propertyvalue(const DefinePropertyDefaultValue* msg) {
  return *msg->_impl_.propertyvalue_;
}
void DefinePropertyDefaultValue::clear_spaceconn() {
  if (GetArenaForAllocation() == nullptr && _impl_.spaceconn_ != nullptr) {
    delete _impl_.spaceconn_;
  }
  _impl_.spaceconn_ = nullptr;
}
DefinePropertyDefaultValue::DefinePropertyDefaultValue(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ServerData.DefinePropertyDefaultValue)
}
DefinePropertyDefaultValue::DefinePropertyDefaultValue(const DefinePropertyDefaultValue& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DefinePropertyDefaultValue* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.propertyid_){}
    , decltype(_impl_.spaceconn_){nullptr}
    , decltype(_impl_.propertyvalue_){nullptr}
    , decltype(_impl_.localchangeid_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.propertyid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.propertyid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_propertyid().empty()) {
    _this->_impl_.propertyid_.Set(from._internal_propertyid(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_spaceconn()) {
    _this->_impl_.spaceconn_ = new ::ServerData::CavrnusSpaceConnection(*from._impl_.spaceconn_);
  }
  if (from._internal_has_propertyvalue()) {
    _this->_impl_.propertyvalue_ = new ::ServerData::PropertyValue(*from._impl_.propertyvalue_);
  }
  _this->_impl_.localchangeid_ = from._impl_.localchangeid_;
  // @@protoc_insertion_point(copy_constructor:ServerData.DefinePropertyDefaultValue)
}

inline void DefinePropertyDefaultValue::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.propertyid_){}
    , decltype(_impl_.spaceconn_){nullptr}
    , decltype(_impl_.propertyvalue_){nullptr}
    , decltype(_impl_.localchangeid_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.propertyid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.propertyid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DefinePropertyDefaultValue::~DefinePropertyDefaultValue() {
  // @@protoc_insertion_point(destructor:ServerData.DefinePropertyDefaultValue)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DefinePropertyDefaultValue::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.propertyid_.Destroy();
  if (this != internal_default_instance()) delete _impl_.spaceconn_;
  if (this != internal_default_instance()) delete _impl_.propertyvalue_;
}

void DefinePropertyDefaultValue::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DefinePropertyDefaultValue::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerData.DefinePropertyDefaultValue)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.propertyid_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.spaceconn_ != nullptr) {
    delete _impl_.spaceconn_;
  }
  _impl_.spaceconn_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.propertyvalue_ != nullptr) {
    delete _impl_.propertyvalue_;
  }
  _impl_.propertyvalue_ = nullptr;
  _impl_.localchangeid_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DefinePropertyDefaultValue::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .ServerData.CavrnusSpaceConnection SpaceConn = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_spaceconn(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string PropertyId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_propertyid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ServerData.DefinePropertyDefaultValue.PropertyId"));
        } else
          goto handle_unusual;
        continue;
      // int32 localChangeId = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.localchangeid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ServerData.PropertyValue PropertyValue = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_propertyvalue(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DefinePropertyDefaultValue::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ServerData.DefinePropertyDefaultValue)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .ServerData.CavrnusSpaceConnection SpaceConn = 1;
  if (this->_internal_has_spaceconn()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::spaceconn(this),
        _Internal::spaceconn(this).GetCachedSize(), target, stream);
  }

  // string PropertyId = 2;
  if (!this->_internal_propertyid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_propertyid().data(), static_cast<int>(this->_internal_propertyid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ServerData.DefinePropertyDefaultValue.PropertyId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_propertyid(), target);
  }

  // int32 localChangeId = 3;
  if (this->_internal_localchangeid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_localchangeid(), target);
  }

  // .ServerData.PropertyValue PropertyValue = 10;
  if (this->_internal_has_propertyvalue()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(10, _Internal::propertyvalue(this),
        _Internal::propertyvalue(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerData.DefinePropertyDefaultValue)
  return target;
}

size_t DefinePropertyDefaultValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerData.DefinePropertyDefaultValue)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string PropertyId = 2;
  if (!this->_internal_propertyid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_propertyid());
  }

  // .ServerData.CavrnusSpaceConnection SpaceConn = 1;
  if (this->_internal_has_spaceconn()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.spaceconn_);
  }

  // .ServerData.PropertyValue PropertyValue = 10;
  if (this->_internal_has_propertyvalue()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.propertyvalue_);
  }

  // int32 localChangeId = 3;
  if (this->_internal_localchangeid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_localchangeid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DefinePropertyDefaultValue::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DefinePropertyDefaultValue::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DefinePropertyDefaultValue::GetClassData() const { return &_class_data_; }


void DefinePropertyDefaultValue::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DefinePropertyDefaultValue*>(&to_msg);
  auto& from = static_cast<const DefinePropertyDefaultValue&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ServerData.DefinePropertyDefaultValue)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_propertyid().empty()) {
    _this->_internal_set_propertyid(from._internal_propertyid());
  }
  if (from._internal_has_spaceconn()) {
    _this->_internal_mutable_spaceconn()->::ServerData::CavrnusSpaceConnection::MergeFrom(
        from._internal_spaceconn());
  }
  if (from._internal_has_propertyvalue()) {
    _this->_internal_mutable_propertyvalue()->::ServerData::PropertyValue::MergeFrom(
        from._internal_propertyvalue());
  }
  if (from._internal_localchangeid() != 0) {
    _this->_internal_set_localchangeid(from._internal_localchangeid());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DefinePropertyDefaultValue::CopyFrom(const DefinePropertyDefaultValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerData.DefinePropertyDefaultValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DefinePropertyDefaultValue::IsInitialized() const {
  return true;
}

void DefinePropertyDefaultValue::InternalSwap(DefinePropertyDefaultValue* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.propertyid_, lhs_arena,
      &other->_impl_.propertyid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DefinePropertyDefaultValue, _impl_.localchangeid_)
      + sizeof(DefinePropertyDefaultValue::_impl_.localchangeid_)
      - PROTOBUF_FIELD_OFFSET(DefinePropertyDefaultValue, _impl_.spaceconn_)>(
          reinterpret_cast<char*>(&_impl_.spaceconn_),
          reinterpret_cast<char*>(&other->_impl_.spaceconn_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DefinePropertyDefaultValue::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_relay_2eproto_getter, &descriptor_table_relay_2eproto_once,
      file_level_metadata_relay_2eproto[20]);
}

// ===================================================================

class PostPropertyUpdate::_Internal {
 public:
  static const ::ServerData::CavrnusSpaceConnection& spaceconn(const PostPropertyUpdate* msg);
  static const ::ServerData::PropertyValue& propertyvalue(const PostPropertyUpdate* msg);
};

const ::ServerData::CavrnusSpaceConnection&
PostPropertyUpdate::_Internal::spaceconn(const PostPropertyUpdate* msg) {
  return *msg->_impl_.spaceconn_;
}
const ::ServerData::PropertyValue&
PostPropertyUpdate::_Internal::propertyvalue(const PostPropertyUpdate* msg) {
  return *msg->_impl_.propertyvalue_;
}
void PostPropertyUpdate::clear_spaceconn() {
  if (GetArenaForAllocation() == nullptr && _impl_.spaceconn_ != nullptr) {
    delete _impl_.spaceconn_;
  }
  _impl_.spaceconn_ = nullptr;
}
PostPropertyUpdate::PostPropertyUpdate(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ServerData.PostPropertyUpdate)
}
PostPropertyUpdate::PostPropertyUpdate(const PostPropertyUpdate& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PostPropertyUpdate* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.propertyid_){}
    , decltype(_impl_.spaceconn_){nullptr}
    , decltype(_impl_.propertyvalue_){nullptr}
    , decltype(_impl_.localchangeid_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.propertyid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.propertyid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_propertyid().empty()) {
    _this->_impl_.propertyid_.Set(from._internal_propertyid(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_spaceconn()) {
    _this->_impl_.spaceconn_ = new ::ServerData::CavrnusSpaceConnection(*from._impl_.spaceconn_);
  }
  if (from._internal_has_propertyvalue()) {
    _this->_impl_.propertyvalue_ = new ::ServerData::PropertyValue(*from._impl_.propertyvalue_);
  }
  _this->_impl_.localchangeid_ = from._impl_.localchangeid_;
  // @@protoc_insertion_point(copy_constructor:ServerData.PostPropertyUpdate)
}

inline void PostPropertyUpdate::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.propertyid_){}
    , decltype(_impl_.spaceconn_){nullptr}
    , decltype(_impl_.propertyvalue_){nullptr}
    , decltype(_impl_.localchangeid_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.propertyid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.propertyid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

PostPropertyUpdate::~PostPropertyUpdate() {
  // @@protoc_insertion_point(destructor:ServerData.PostPropertyUpdate)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PostPropertyUpdate::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.propertyid_.Destroy();
  if (this != internal_default_instance()) delete _impl_.spaceconn_;
  if (this != internal_default_instance()) delete _impl_.propertyvalue_;
}

void PostPropertyUpdate::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PostPropertyUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerData.PostPropertyUpdate)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.propertyid_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.spaceconn_ != nullptr) {
    delete _impl_.spaceconn_;
  }
  _impl_.spaceconn_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.propertyvalue_ != nullptr) {
    delete _impl_.propertyvalue_;
  }
  _impl_.propertyvalue_ = nullptr;
  _impl_.localchangeid_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PostPropertyUpdate::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .ServerData.CavrnusSpaceConnection SpaceConn = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_spaceconn(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string PropertyId = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_propertyid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ServerData.PostPropertyUpdate.PropertyId"));
        } else
          goto handle_unusual;
        continue;
      // int32 localChangeId = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.localchangeid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ServerData.PropertyValue PropertyValue = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_propertyvalue(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PostPropertyUpdate::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ServerData.PostPropertyUpdate)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .ServerData.CavrnusSpaceConnection SpaceConn = 1;
  if (this->_internal_has_spaceconn()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::spaceconn(this),
        _Internal::spaceconn(this).GetCachedSize(), target, stream);
  }

  // string PropertyId = 3;
  if (!this->_internal_propertyid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_propertyid().data(), static_cast<int>(this->_internal_propertyid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ServerData.PostPropertyUpdate.PropertyId");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_propertyid(), target);
  }

  // int32 localChangeId = 4;
  if (this->_internal_localchangeid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(4, this->_internal_localchangeid(), target);
  }

  // .ServerData.PropertyValue PropertyValue = 10;
  if (this->_internal_has_propertyvalue()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(10, _Internal::propertyvalue(this),
        _Internal::propertyvalue(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerData.PostPropertyUpdate)
  return target;
}

size_t PostPropertyUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerData.PostPropertyUpdate)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string PropertyId = 3;
  if (!this->_internal_propertyid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_propertyid());
  }

  // .ServerData.CavrnusSpaceConnection SpaceConn = 1;
  if (this->_internal_has_spaceconn()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.spaceconn_);
  }

  // .ServerData.PropertyValue PropertyValue = 10;
  if (this->_internal_has_propertyvalue()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.propertyvalue_);
  }

  // int32 localChangeId = 4;
  if (this->_internal_localchangeid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_localchangeid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PostPropertyUpdate::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PostPropertyUpdate::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PostPropertyUpdate::GetClassData() const { return &_class_data_; }


void PostPropertyUpdate::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PostPropertyUpdate*>(&to_msg);
  auto& from = static_cast<const PostPropertyUpdate&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ServerData.PostPropertyUpdate)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_propertyid().empty()) {
    _this->_internal_set_propertyid(from._internal_propertyid());
  }
  if (from._internal_has_spaceconn()) {
    _this->_internal_mutable_spaceconn()->::ServerData::CavrnusSpaceConnection::MergeFrom(
        from._internal_spaceconn());
  }
  if (from._internal_has_propertyvalue()) {
    _this->_internal_mutable_propertyvalue()->::ServerData::PropertyValue::MergeFrom(
        from._internal_propertyvalue());
  }
  if (from._internal_localchangeid() != 0) {
    _this->_internal_set_localchangeid(from._internal_localchangeid());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PostPropertyUpdate::CopyFrom(const PostPropertyUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerData.PostPropertyUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PostPropertyUpdate::IsInitialized() const {
  return true;
}

void PostPropertyUpdate::InternalSwap(PostPropertyUpdate* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.propertyid_, lhs_arena,
      &other->_impl_.propertyid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PostPropertyUpdate, _impl_.localchangeid_)
      + sizeof(PostPropertyUpdate::_impl_.localchangeid_)
      - PROTOBUF_FIELD_OFFSET(PostPropertyUpdate, _impl_.spaceconn_)>(
          reinterpret_cast<char*>(&_impl_.spaceconn_),
          reinterpret_cast<char*>(&other->_impl_.spaceconn_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PostPropertyUpdate::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_relay_2eproto_getter, &descriptor_table_relay_2eproto_once,
      file_level_metadata_relay_2eproto[21]);
}

// ===================================================================

class BeginTransientPropertyUpdate::_Internal {
 public:
  static const ::ServerData::CavrnusSpaceConnection& spaceconn(const BeginTransientPropertyUpdate* msg);
  static const ::ServerData::PropertyValue& propertyvalue(const BeginTransientPropertyUpdate* msg);
};

const ::ServerData::CavrnusSpaceConnection&
BeginTransientPropertyUpdate::_Internal::spaceconn(const BeginTransientPropertyUpdate* msg) {
  return *msg->_impl_.spaceconn_;
}
const ::ServerData::PropertyValue&
BeginTransientPropertyUpdate::_Internal::propertyvalue(const BeginTransientPropertyUpdate* msg) {
  return *msg->_impl_.propertyvalue_;
}
void BeginTransientPropertyUpdate::clear_spaceconn() {
  if (GetArenaForAllocation() == nullptr && _impl_.spaceconn_ != nullptr) {
    delete _impl_.spaceconn_;
  }
  _impl_.spaceconn_ = nullptr;
}
BeginTransientPropertyUpdate::BeginTransientPropertyUpdate(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ServerData.BeginTransientPropertyUpdate)
}
BeginTransientPropertyUpdate::BeginTransientPropertyUpdate(const BeginTransientPropertyUpdate& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  BeginTransientPropertyUpdate* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.liveupdaterid_){}
    , decltype(_impl_.propertyid_){}
    , decltype(_impl_.spaceconn_){nullptr}
    , decltype(_impl_.propertyvalue_){nullptr}
    , decltype(_impl_.localchangeid_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.liveupdaterid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.liveupdaterid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_liveupdaterid().empty()) {
    _this->_impl_.liveupdaterid_.Set(from._internal_liveupdaterid(), 
      _this->GetArenaForAllocation());
  }
  _impl_.propertyid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.propertyid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_propertyid().empty()) {
    _this->_impl_.propertyid_.Set(from._internal_propertyid(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_spaceconn()) {
    _this->_impl_.spaceconn_ = new ::ServerData::CavrnusSpaceConnection(*from._impl_.spaceconn_);
  }
  if (from._internal_has_propertyvalue()) {
    _this->_impl_.propertyvalue_ = new ::ServerData::PropertyValue(*from._impl_.propertyvalue_);
  }
  _this->_impl_.localchangeid_ = from._impl_.localchangeid_;
  // @@protoc_insertion_point(copy_constructor:ServerData.BeginTransientPropertyUpdate)
}

inline void BeginTransientPropertyUpdate::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.liveupdaterid_){}
    , decltype(_impl_.propertyid_){}
    , decltype(_impl_.spaceconn_){nullptr}
    , decltype(_impl_.propertyvalue_){nullptr}
    , decltype(_impl_.localchangeid_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.liveupdaterid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.liveupdaterid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.propertyid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.propertyid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

BeginTransientPropertyUpdate::~BeginTransientPropertyUpdate() {
  // @@protoc_insertion_point(destructor:ServerData.BeginTransientPropertyUpdate)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void BeginTransientPropertyUpdate::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.liveupdaterid_.Destroy();
  _impl_.propertyid_.Destroy();
  if (this != internal_default_instance()) delete _impl_.spaceconn_;
  if (this != internal_default_instance()) delete _impl_.propertyvalue_;
}

void BeginTransientPropertyUpdate::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void BeginTransientPropertyUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerData.BeginTransientPropertyUpdate)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.liveupdaterid_.ClearToEmpty();
  _impl_.propertyid_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.spaceconn_ != nullptr) {
    delete _impl_.spaceconn_;
  }
  _impl_.spaceconn_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.propertyvalue_ != nullptr) {
    delete _impl_.propertyvalue_;
  }
  _impl_.propertyvalue_ = nullptr;
  _impl_.localchangeid_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BeginTransientPropertyUpdate::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .ServerData.CavrnusSpaceConnection SpaceConn = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_spaceconn(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string LiveUpdaterId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_liveupdaterid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ServerData.BeginTransientPropertyUpdate.LiveUpdaterId"));
        } else
          goto handle_unusual;
        continue;
      // string PropertyId = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_propertyid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ServerData.BeginTransientPropertyUpdate.PropertyId"));
        } else
          goto handle_unusual;
        continue;
      // int32 localChangeId = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.localchangeid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ServerData.PropertyValue PropertyValue = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_propertyvalue(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BeginTransientPropertyUpdate::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ServerData.BeginTransientPropertyUpdate)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .ServerData.CavrnusSpaceConnection SpaceConn = 1;
  if (this->_internal_has_spaceconn()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::spaceconn(this),
        _Internal::spaceconn(this).GetCachedSize(), target, stream);
  }

  // string LiveUpdaterId = 2;
  if (!this->_internal_liveupdaterid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_liveupdaterid().data(), static_cast<int>(this->_internal_liveupdaterid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ServerData.BeginTransientPropertyUpdate.LiveUpdaterId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_liveupdaterid(), target);
  }

  // string PropertyId = 3;
  if (!this->_internal_propertyid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_propertyid().data(), static_cast<int>(this->_internal_propertyid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ServerData.BeginTransientPropertyUpdate.PropertyId");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_propertyid(), target);
  }

  // int32 localChangeId = 4;
  if (this->_internal_localchangeid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(4, this->_internal_localchangeid(), target);
  }

  // .ServerData.PropertyValue PropertyValue = 10;
  if (this->_internal_has_propertyvalue()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(10, _Internal::propertyvalue(this),
        _Internal::propertyvalue(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerData.BeginTransientPropertyUpdate)
  return target;
}

size_t BeginTransientPropertyUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerData.BeginTransientPropertyUpdate)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string LiveUpdaterId = 2;
  if (!this->_internal_liveupdaterid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_liveupdaterid());
  }

  // string PropertyId = 3;
  if (!this->_internal_propertyid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_propertyid());
  }

  // .ServerData.CavrnusSpaceConnection SpaceConn = 1;
  if (this->_internal_has_spaceconn()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.spaceconn_);
  }

  // .ServerData.PropertyValue PropertyValue = 10;
  if (this->_internal_has_propertyvalue()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.propertyvalue_);
  }

  // int32 localChangeId = 4;
  if (this->_internal_localchangeid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_localchangeid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BeginTransientPropertyUpdate::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    BeginTransientPropertyUpdate::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BeginTransientPropertyUpdate::GetClassData() const { return &_class_data_; }


void BeginTransientPropertyUpdate::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<BeginTransientPropertyUpdate*>(&to_msg);
  auto& from = static_cast<const BeginTransientPropertyUpdate&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ServerData.BeginTransientPropertyUpdate)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_liveupdaterid().empty()) {
    _this->_internal_set_liveupdaterid(from._internal_liveupdaterid());
  }
  if (!from._internal_propertyid().empty()) {
    _this->_internal_set_propertyid(from._internal_propertyid());
  }
  if (from._internal_has_spaceconn()) {
    _this->_internal_mutable_spaceconn()->::ServerData::CavrnusSpaceConnection::MergeFrom(
        from._internal_spaceconn());
  }
  if (from._internal_has_propertyvalue()) {
    _this->_internal_mutable_propertyvalue()->::ServerData::PropertyValue::MergeFrom(
        from._internal_propertyvalue());
  }
  if (from._internal_localchangeid() != 0) {
    _this->_internal_set_localchangeid(from._internal_localchangeid());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BeginTransientPropertyUpdate::CopyFrom(const BeginTransientPropertyUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerData.BeginTransientPropertyUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BeginTransientPropertyUpdate::IsInitialized() const {
  return true;
}

void BeginTransientPropertyUpdate::InternalSwap(BeginTransientPropertyUpdate* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.liveupdaterid_, lhs_arena,
      &other->_impl_.liveupdaterid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.propertyid_, lhs_arena,
      &other->_impl_.propertyid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BeginTransientPropertyUpdate, _impl_.localchangeid_)
      + sizeof(BeginTransientPropertyUpdate::_impl_.localchangeid_)
      - PROTOBUF_FIELD_OFFSET(BeginTransientPropertyUpdate, _impl_.spaceconn_)>(
          reinterpret_cast<char*>(&_impl_.spaceconn_),
          reinterpret_cast<char*>(&other->_impl_.spaceconn_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BeginTransientPropertyUpdate::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_relay_2eproto_getter, &descriptor_table_relay_2eproto_once,
      file_level_metadata_relay_2eproto[22]);
}

// ===================================================================

class ContinueTransientPropertyUpdate::_Internal {
 public:
  static const ::ServerData::CavrnusSpaceConnection& spaceconn(const ContinueTransientPropertyUpdate* msg);
  static const ::ServerData::PropertyValue& propertyvalue(const ContinueTransientPropertyUpdate* msg);
};

const ::ServerData::CavrnusSpaceConnection&
ContinueTransientPropertyUpdate::_Internal::spaceconn(const ContinueTransientPropertyUpdate* msg) {
  return *msg->_impl_.spaceconn_;
}
const ::ServerData::PropertyValue&
ContinueTransientPropertyUpdate::_Internal::propertyvalue(const ContinueTransientPropertyUpdate* msg) {
  return *msg->_impl_.propertyvalue_;
}
void ContinueTransientPropertyUpdate::clear_spaceconn() {
  if (GetArenaForAllocation() == nullptr && _impl_.spaceconn_ != nullptr) {
    delete _impl_.spaceconn_;
  }
  _impl_.spaceconn_ = nullptr;
}
ContinueTransientPropertyUpdate::ContinueTransientPropertyUpdate(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ServerData.ContinueTransientPropertyUpdate)
}
ContinueTransientPropertyUpdate::ContinueTransientPropertyUpdate(const ContinueTransientPropertyUpdate& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ContinueTransientPropertyUpdate* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.liveupdaterid_){}
    , decltype(_impl_.propertyid_){}
    , decltype(_impl_.spaceconn_){nullptr}
    , decltype(_impl_.propertyvalue_){nullptr}
    , decltype(_impl_.localchangeid_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.liveupdaterid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.liveupdaterid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_liveupdaterid().empty()) {
    _this->_impl_.liveupdaterid_.Set(from._internal_liveupdaterid(), 
      _this->GetArenaForAllocation());
  }
  _impl_.propertyid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.propertyid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_propertyid().empty()) {
    _this->_impl_.propertyid_.Set(from._internal_propertyid(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_spaceconn()) {
    _this->_impl_.spaceconn_ = new ::ServerData::CavrnusSpaceConnection(*from._impl_.spaceconn_);
  }
  if (from._internal_has_propertyvalue()) {
    _this->_impl_.propertyvalue_ = new ::ServerData::PropertyValue(*from._impl_.propertyvalue_);
  }
  _this->_impl_.localchangeid_ = from._impl_.localchangeid_;
  // @@protoc_insertion_point(copy_constructor:ServerData.ContinueTransientPropertyUpdate)
}

inline void ContinueTransientPropertyUpdate::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.liveupdaterid_){}
    , decltype(_impl_.propertyid_){}
    , decltype(_impl_.spaceconn_){nullptr}
    , decltype(_impl_.propertyvalue_){nullptr}
    , decltype(_impl_.localchangeid_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.liveupdaterid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.liveupdaterid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.propertyid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.propertyid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ContinueTransientPropertyUpdate::~ContinueTransientPropertyUpdate() {
  // @@protoc_insertion_point(destructor:ServerData.ContinueTransientPropertyUpdate)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ContinueTransientPropertyUpdate::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.liveupdaterid_.Destroy();
  _impl_.propertyid_.Destroy();
  if (this != internal_default_instance()) delete _impl_.spaceconn_;
  if (this != internal_default_instance()) delete _impl_.propertyvalue_;
}

void ContinueTransientPropertyUpdate::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ContinueTransientPropertyUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerData.ContinueTransientPropertyUpdate)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.liveupdaterid_.ClearToEmpty();
  _impl_.propertyid_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.spaceconn_ != nullptr) {
    delete _impl_.spaceconn_;
  }
  _impl_.spaceconn_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.propertyvalue_ != nullptr) {
    delete _impl_.propertyvalue_;
  }
  _impl_.propertyvalue_ = nullptr;
  _impl_.localchangeid_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ContinueTransientPropertyUpdate::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .ServerData.CavrnusSpaceConnection SpaceConn = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_spaceconn(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string LiveUpdaterId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_liveupdaterid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ServerData.ContinueTransientPropertyUpdate.LiveUpdaterId"));
        } else
          goto handle_unusual;
        continue;
      // string PropertyId = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_propertyid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ServerData.ContinueTransientPropertyUpdate.PropertyId"));
        } else
          goto handle_unusual;
        continue;
      // int32 localChangeId = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.localchangeid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ServerData.PropertyValue PropertyValue = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_propertyvalue(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ContinueTransientPropertyUpdate::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ServerData.ContinueTransientPropertyUpdate)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .ServerData.CavrnusSpaceConnection SpaceConn = 1;
  if (this->_internal_has_spaceconn()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::spaceconn(this),
        _Internal::spaceconn(this).GetCachedSize(), target, stream);
  }

  // string LiveUpdaterId = 2;
  if (!this->_internal_liveupdaterid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_liveupdaterid().data(), static_cast<int>(this->_internal_liveupdaterid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ServerData.ContinueTransientPropertyUpdate.LiveUpdaterId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_liveupdaterid(), target);
  }

  // string PropertyId = 3;
  if (!this->_internal_propertyid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_propertyid().data(), static_cast<int>(this->_internal_propertyid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ServerData.ContinueTransientPropertyUpdate.PropertyId");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_propertyid(), target);
  }

  // int32 localChangeId = 4;
  if (this->_internal_localchangeid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(4, this->_internal_localchangeid(), target);
  }

  // .ServerData.PropertyValue PropertyValue = 10;
  if (this->_internal_has_propertyvalue()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(10, _Internal::propertyvalue(this),
        _Internal::propertyvalue(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerData.ContinueTransientPropertyUpdate)
  return target;
}

size_t ContinueTransientPropertyUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerData.ContinueTransientPropertyUpdate)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string LiveUpdaterId = 2;
  if (!this->_internal_liveupdaterid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_liveupdaterid());
  }

  // string PropertyId = 3;
  if (!this->_internal_propertyid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_propertyid());
  }

  // .ServerData.CavrnusSpaceConnection SpaceConn = 1;
  if (this->_internal_has_spaceconn()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.spaceconn_);
  }

  // .ServerData.PropertyValue PropertyValue = 10;
  if (this->_internal_has_propertyvalue()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.propertyvalue_);
  }

  // int32 localChangeId = 4;
  if (this->_internal_localchangeid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_localchangeid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ContinueTransientPropertyUpdate::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ContinueTransientPropertyUpdate::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ContinueTransientPropertyUpdate::GetClassData() const { return &_class_data_; }


void ContinueTransientPropertyUpdate::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ContinueTransientPropertyUpdate*>(&to_msg);
  auto& from = static_cast<const ContinueTransientPropertyUpdate&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ServerData.ContinueTransientPropertyUpdate)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_liveupdaterid().empty()) {
    _this->_internal_set_liveupdaterid(from._internal_liveupdaterid());
  }
  if (!from._internal_propertyid().empty()) {
    _this->_internal_set_propertyid(from._internal_propertyid());
  }
  if (from._internal_has_spaceconn()) {
    _this->_internal_mutable_spaceconn()->::ServerData::CavrnusSpaceConnection::MergeFrom(
        from._internal_spaceconn());
  }
  if (from._internal_has_propertyvalue()) {
    _this->_internal_mutable_propertyvalue()->::ServerData::PropertyValue::MergeFrom(
        from._internal_propertyvalue());
  }
  if (from._internal_localchangeid() != 0) {
    _this->_internal_set_localchangeid(from._internal_localchangeid());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ContinueTransientPropertyUpdate::CopyFrom(const ContinueTransientPropertyUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerData.ContinueTransientPropertyUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ContinueTransientPropertyUpdate::IsInitialized() const {
  return true;
}

void ContinueTransientPropertyUpdate::InternalSwap(ContinueTransientPropertyUpdate* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.liveupdaterid_, lhs_arena,
      &other->_impl_.liveupdaterid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.propertyid_, lhs_arena,
      &other->_impl_.propertyid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ContinueTransientPropertyUpdate, _impl_.localchangeid_)
      + sizeof(ContinueTransientPropertyUpdate::_impl_.localchangeid_)
      - PROTOBUF_FIELD_OFFSET(ContinueTransientPropertyUpdate, _impl_.spaceconn_)>(
          reinterpret_cast<char*>(&_impl_.spaceconn_),
          reinterpret_cast<char*>(&other->_impl_.spaceconn_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ContinueTransientPropertyUpdate::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_relay_2eproto_getter, &descriptor_table_relay_2eproto_once,
      file_level_metadata_relay_2eproto[23]);
}

// ===================================================================

class FinalizeTransientPropertyUpdate::_Internal {
 public:
  static const ::ServerData::CavrnusSpaceConnection& spaceconn(const FinalizeTransientPropertyUpdate* msg);
  static const ::ServerData::PropertyValue& propertyvalue(const FinalizeTransientPropertyUpdate* msg);
};

const ::ServerData::CavrnusSpaceConnection&
FinalizeTransientPropertyUpdate::_Internal::spaceconn(const FinalizeTransientPropertyUpdate* msg) {
  return *msg->_impl_.spaceconn_;
}
const ::ServerData::PropertyValue&
FinalizeTransientPropertyUpdate::_Internal::propertyvalue(const FinalizeTransientPropertyUpdate* msg) {
  return *msg->_impl_.propertyvalue_;
}
void FinalizeTransientPropertyUpdate::clear_spaceconn() {
  if (GetArenaForAllocation() == nullptr && _impl_.spaceconn_ != nullptr) {
    delete _impl_.spaceconn_;
  }
  _impl_.spaceconn_ = nullptr;
}
FinalizeTransientPropertyUpdate::FinalizeTransientPropertyUpdate(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ServerData.FinalizeTransientPropertyUpdate)
}
FinalizeTransientPropertyUpdate::FinalizeTransientPropertyUpdate(const FinalizeTransientPropertyUpdate& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  FinalizeTransientPropertyUpdate* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.liveupdaterid_){}
    , decltype(_impl_.propertyid_){}
    , decltype(_impl_.spaceconn_){nullptr}
    , decltype(_impl_.propertyvalue_){nullptr}
    , decltype(_impl_.localchangeid_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.liveupdaterid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.liveupdaterid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_liveupdaterid().empty()) {
    _this->_impl_.liveupdaterid_.Set(from._internal_liveupdaterid(), 
      _this->GetArenaForAllocation());
  }
  _impl_.propertyid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.propertyid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_propertyid().empty()) {
    _this->_impl_.propertyid_.Set(from._internal_propertyid(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_spaceconn()) {
    _this->_impl_.spaceconn_ = new ::ServerData::CavrnusSpaceConnection(*from._impl_.spaceconn_);
  }
  if (from._internal_has_propertyvalue()) {
    _this->_impl_.propertyvalue_ = new ::ServerData::PropertyValue(*from._impl_.propertyvalue_);
  }
  _this->_impl_.localchangeid_ = from._impl_.localchangeid_;
  // @@protoc_insertion_point(copy_constructor:ServerData.FinalizeTransientPropertyUpdate)
}

inline void FinalizeTransientPropertyUpdate::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.liveupdaterid_){}
    , decltype(_impl_.propertyid_){}
    , decltype(_impl_.spaceconn_){nullptr}
    , decltype(_impl_.propertyvalue_){nullptr}
    , decltype(_impl_.localchangeid_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.liveupdaterid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.liveupdaterid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.propertyid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.propertyid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

FinalizeTransientPropertyUpdate::~FinalizeTransientPropertyUpdate() {
  // @@protoc_insertion_point(destructor:ServerData.FinalizeTransientPropertyUpdate)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FinalizeTransientPropertyUpdate::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.liveupdaterid_.Destroy();
  _impl_.propertyid_.Destroy();
  if (this != internal_default_instance()) delete _impl_.spaceconn_;
  if (this != internal_default_instance()) delete _impl_.propertyvalue_;
}

void FinalizeTransientPropertyUpdate::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void FinalizeTransientPropertyUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerData.FinalizeTransientPropertyUpdate)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.liveupdaterid_.ClearToEmpty();
  _impl_.propertyid_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.spaceconn_ != nullptr) {
    delete _impl_.spaceconn_;
  }
  _impl_.spaceconn_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.propertyvalue_ != nullptr) {
    delete _impl_.propertyvalue_;
  }
  _impl_.propertyvalue_ = nullptr;
  _impl_.localchangeid_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FinalizeTransientPropertyUpdate::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .ServerData.CavrnusSpaceConnection SpaceConn = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_spaceconn(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string LiveUpdaterId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_liveupdaterid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ServerData.FinalizeTransientPropertyUpdate.LiveUpdaterId"));
        } else
          goto handle_unusual;
        continue;
      // string PropertyId = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_propertyid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ServerData.FinalizeTransientPropertyUpdate.PropertyId"));
        } else
          goto handle_unusual;
        continue;
      // int32 localChangeId = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.localchangeid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ServerData.PropertyValue PropertyValue = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_propertyvalue(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FinalizeTransientPropertyUpdate::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ServerData.FinalizeTransientPropertyUpdate)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .ServerData.CavrnusSpaceConnection SpaceConn = 1;
  if (this->_internal_has_spaceconn()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::spaceconn(this),
        _Internal::spaceconn(this).GetCachedSize(), target, stream);
  }

  // string LiveUpdaterId = 2;
  if (!this->_internal_liveupdaterid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_liveupdaterid().data(), static_cast<int>(this->_internal_liveupdaterid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ServerData.FinalizeTransientPropertyUpdate.LiveUpdaterId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_liveupdaterid(), target);
  }

  // string PropertyId = 3;
  if (!this->_internal_propertyid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_propertyid().data(), static_cast<int>(this->_internal_propertyid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ServerData.FinalizeTransientPropertyUpdate.PropertyId");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_propertyid(), target);
  }

  // int32 localChangeId = 4;
  if (this->_internal_localchangeid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(4, this->_internal_localchangeid(), target);
  }

  // .ServerData.PropertyValue PropertyValue = 10;
  if (this->_internal_has_propertyvalue()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(10, _Internal::propertyvalue(this),
        _Internal::propertyvalue(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerData.FinalizeTransientPropertyUpdate)
  return target;
}

size_t FinalizeTransientPropertyUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerData.FinalizeTransientPropertyUpdate)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string LiveUpdaterId = 2;
  if (!this->_internal_liveupdaterid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_liveupdaterid());
  }

  // string PropertyId = 3;
  if (!this->_internal_propertyid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_propertyid());
  }

  // .ServerData.CavrnusSpaceConnection SpaceConn = 1;
  if (this->_internal_has_spaceconn()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.spaceconn_);
  }

  // .ServerData.PropertyValue PropertyValue = 10;
  if (this->_internal_has_propertyvalue()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.propertyvalue_);
  }

  // int32 localChangeId = 4;
  if (this->_internal_localchangeid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_localchangeid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FinalizeTransientPropertyUpdate::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    FinalizeTransientPropertyUpdate::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FinalizeTransientPropertyUpdate::GetClassData() const { return &_class_data_; }


void FinalizeTransientPropertyUpdate::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<FinalizeTransientPropertyUpdate*>(&to_msg);
  auto& from = static_cast<const FinalizeTransientPropertyUpdate&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ServerData.FinalizeTransientPropertyUpdate)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_liveupdaterid().empty()) {
    _this->_internal_set_liveupdaterid(from._internal_liveupdaterid());
  }
  if (!from._internal_propertyid().empty()) {
    _this->_internal_set_propertyid(from._internal_propertyid());
  }
  if (from._internal_has_spaceconn()) {
    _this->_internal_mutable_spaceconn()->::ServerData::CavrnusSpaceConnection::MergeFrom(
        from._internal_spaceconn());
  }
  if (from._internal_has_propertyvalue()) {
    _this->_internal_mutable_propertyvalue()->::ServerData::PropertyValue::MergeFrom(
        from._internal_propertyvalue());
  }
  if (from._internal_localchangeid() != 0) {
    _this->_internal_set_localchangeid(from._internal_localchangeid());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FinalizeTransientPropertyUpdate::CopyFrom(const FinalizeTransientPropertyUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerData.FinalizeTransientPropertyUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FinalizeTransientPropertyUpdate::IsInitialized() const {
  return true;
}

void FinalizeTransientPropertyUpdate::InternalSwap(FinalizeTransientPropertyUpdate* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.liveupdaterid_, lhs_arena,
      &other->_impl_.liveupdaterid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.propertyid_, lhs_arena,
      &other->_impl_.propertyid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FinalizeTransientPropertyUpdate, _impl_.localchangeid_)
      + sizeof(FinalizeTransientPropertyUpdate::_impl_.localchangeid_)
      - PROTOBUF_FIELD_OFFSET(FinalizeTransientPropertyUpdate, _impl_.spaceconn_)>(
          reinterpret_cast<char*>(&_impl_.spaceconn_),
          reinterpret_cast<char*>(&other->_impl_.spaceconn_));
}

::PROTOBUF_NAMESPACE_ID::Metadata FinalizeTransientPropertyUpdate::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_relay_2eproto_getter, &descriptor_table_relay_2eproto_once,
      file_level_metadata_relay_2eproto[24]);
}

// ===================================================================

class CancelTransientPropertyUpdate::_Internal {
 public:
  static const ::ServerData::CavrnusSpaceConnection& spaceconn(const CancelTransientPropertyUpdate* msg);
};

const ::ServerData::CavrnusSpaceConnection&
CancelTransientPropertyUpdate::_Internal::spaceconn(const CancelTransientPropertyUpdate* msg) {
  return *msg->_impl_.spaceconn_;
}
void CancelTransientPropertyUpdate::clear_spaceconn() {
  if (GetArenaForAllocation() == nullptr && _impl_.spaceconn_ != nullptr) {
    delete _impl_.spaceconn_;
  }
  _impl_.spaceconn_ = nullptr;
}
CancelTransientPropertyUpdate::CancelTransientPropertyUpdate(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ServerData.CancelTransientPropertyUpdate)
}
CancelTransientPropertyUpdate::CancelTransientPropertyUpdate(const CancelTransientPropertyUpdate& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CancelTransientPropertyUpdate* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.liveupdaterid_){}
    , decltype(_impl_.spaceconn_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.liveupdaterid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.liveupdaterid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_liveupdaterid().empty()) {
    _this->_impl_.liveupdaterid_.Set(from._internal_liveupdaterid(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_spaceconn()) {
    _this->_impl_.spaceconn_ = new ::ServerData::CavrnusSpaceConnection(*from._impl_.spaceconn_);
  }
  // @@protoc_insertion_point(copy_constructor:ServerData.CancelTransientPropertyUpdate)
}

inline void CancelTransientPropertyUpdate::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.liveupdaterid_){}
    , decltype(_impl_.spaceconn_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.liveupdaterid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.liveupdaterid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CancelTransientPropertyUpdate::~CancelTransientPropertyUpdate() {
  // @@protoc_insertion_point(destructor:ServerData.CancelTransientPropertyUpdate)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CancelTransientPropertyUpdate::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.liveupdaterid_.Destroy();
  if (this != internal_default_instance()) delete _impl_.spaceconn_;
}

void CancelTransientPropertyUpdate::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CancelTransientPropertyUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerData.CancelTransientPropertyUpdate)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.liveupdaterid_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.spaceconn_ != nullptr) {
    delete _impl_.spaceconn_;
  }
  _impl_.spaceconn_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CancelTransientPropertyUpdate::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .ServerData.CavrnusSpaceConnection SpaceConn = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_spaceconn(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string LiveUpdaterId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_liveupdaterid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ServerData.CancelTransientPropertyUpdate.LiveUpdaterId"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CancelTransientPropertyUpdate::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ServerData.CancelTransientPropertyUpdate)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .ServerData.CavrnusSpaceConnection SpaceConn = 1;
  if (this->_internal_has_spaceconn()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::spaceconn(this),
        _Internal::spaceconn(this).GetCachedSize(), target, stream);
  }

  // string LiveUpdaterId = 2;
  if (!this->_internal_liveupdaterid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_liveupdaterid().data(), static_cast<int>(this->_internal_liveupdaterid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ServerData.CancelTransientPropertyUpdate.LiveUpdaterId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_liveupdaterid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerData.CancelTransientPropertyUpdate)
  return target;
}

size_t CancelTransientPropertyUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerData.CancelTransientPropertyUpdate)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string LiveUpdaterId = 2;
  if (!this->_internal_liveupdaterid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_liveupdaterid());
  }

  // .ServerData.CavrnusSpaceConnection SpaceConn = 1;
  if (this->_internal_has_spaceconn()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.spaceconn_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CancelTransientPropertyUpdate::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CancelTransientPropertyUpdate::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CancelTransientPropertyUpdate::GetClassData() const { return &_class_data_; }


void CancelTransientPropertyUpdate::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CancelTransientPropertyUpdate*>(&to_msg);
  auto& from = static_cast<const CancelTransientPropertyUpdate&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ServerData.CancelTransientPropertyUpdate)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_liveupdaterid().empty()) {
    _this->_internal_set_liveupdaterid(from._internal_liveupdaterid());
  }
  if (from._internal_has_spaceconn()) {
    _this->_internal_mutable_spaceconn()->::ServerData::CavrnusSpaceConnection::MergeFrom(
        from._internal_spaceconn());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CancelTransientPropertyUpdate::CopyFrom(const CancelTransientPropertyUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerData.CancelTransientPropertyUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CancelTransientPropertyUpdate::IsInitialized() const {
  return true;
}

void CancelTransientPropertyUpdate::InternalSwap(CancelTransientPropertyUpdate* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.liveupdaterid_, lhs_arena,
      &other->_impl_.liveupdaterid_, rhs_arena
  );
  swap(_impl_.spaceconn_, other->_impl_.spaceconn_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CancelTransientPropertyUpdate::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_relay_2eproto_getter, &descriptor_table_relay_2eproto_once,
      file_level_metadata_relay_2eproto[25]);
}

// ===================================================================

class TransformPropertyValue::_Internal {
 public:
  static const ::Common::Float3& pos(const TransformPropertyValue* msg);
  static const ::Common::Float3& rot(const TransformPropertyValue* msg);
  static const ::Common::Float3& scl(const TransformPropertyValue* msg);
};

const ::Common::Float3&
TransformPropertyValue::_Internal::pos(const TransformPropertyValue* msg) {
  return *msg->_impl_.pos_;
}
const ::Common::Float3&
TransformPropertyValue::_Internal::rot(const TransformPropertyValue* msg) {
  return *msg->_impl_.rot_;
}
const ::Common::Float3&
TransformPropertyValue::_Internal::scl(const TransformPropertyValue* msg) {
  return *msg->_impl_.scl_;
}
void TransformPropertyValue::clear_pos() {
  if (GetArenaForAllocation() == nullptr && _impl_.pos_ != nullptr) {
    delete _impl_.pos_;
  }
  _impl_.pos_ = nullptr;
}
void TransformPropertyValue::clear_rot() {
  if (GetArenaForAllocation() == nullptr && _impl_.rot_ != nullptr) {
    delete _impl_.rot_;
  }
  _impl_.rot_ = nullptr;
}
void TransformPropertyValue::clear_scl() {
  if (GetArenaForAllocation() == nullptr && _impl_.scl_ != nullptr) {
    delete _impl_.scl_;
  }
  _impl_.scl_ = nullptr;
}
TransformPropertyValue::TransformPropertyValue(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ServerData.TransformPropertyValue)
}
TransformPropertyValue::TransformPropertyValue(const TransformPropertyValue& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TransformPropertyValue* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.pos_){nullptr}
    , decltype(_impl_.rot_){nullptr}
    , decltype(_impl_.scl_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_pos()) {
    _this->_impl_.pos_ = new ::Common::Float3(*from._impl_.pos_);
  }
  if (from._internal_has_rot()) {
    _this->_impl_.rot_ = new ::Common::Float3(*from._impl_.rot_);
  }
  if (from._internal_has_scl()) {
    _this->_impl_.scl_ = new ::Common::Float3(*from._impl_.scl_);
  }
  // @@protoc_insertion_point(copy_constructor:ServerData.TransformPropertyValue)
}

inline void TransformPropertyValue::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.pos_){nullptr}
    , decltype(_impl_.rot_){nullptr}
    , decltype(_impl_.scl_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

TransformPropertyValue::~TransformPropertyValue() {
  // @@protoc_insertion_point(destructor:ServerData.TransformPropertyValue)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TransformPropertyValue::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.pos_;
  if (this != internal_default_instance()) delete _impl_.rot_;
  if (this != internal_default_instance()) delete _impl_.scl_;
}

void TransformPropertyValue::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TransformPropertyValue::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerData.TransformPropertyValue)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.pos_ != nullptr) {
    delete _impl_.pos_;
  }
  _impl_.pos_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.rot_ != nullptr) {
    delete _impl_.rot_;
  }
  _impl_.rot_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.scl_ != nullptr) {
    delete _impl_.scl_;
  }
  _impl_.scl_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TransformPropertyValue::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Common.Float3 pos = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_pos(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Common.Float3 rot = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_rot(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Common.Float3 scl = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_scl(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TransformPropertyValue::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ServerData.TransformPropertyValue)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Common.Float3 pos = 1;
  if (this->_internal_has_pos()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::pos(this),
        _Internal::pos(this).GetCachedSize(), target, stream);
  }

  // .Common.Float3 rot = 2;
  if (this->_internal_has_rot()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::rot(this),
        _Internal::rot(this).GetCachedSize(), target, stream);
  }

  // .Common.Float3 scl = 3;
  if (this->_internal_has_scl()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::scl(this),
        _Internal::scl(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerData.TransformPropertyValue)
  return target;
}

size_t TransformPropertyValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerData.TransformPropertyValue)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Common.Float3 pos = 1;
  if (this->_internal_has_pos()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.pos_);
  }

  // .Common.Float3 rot = 2;
  if (this->_internal_has_rot()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.rot_);
  }

  // .Common.Float3 scl = 3;
  if (this->_internal_has_scl()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.scl_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TransformPropertyValue::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TransformPropertyValue::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TransformPropertyValue::GetClassData() const { return &_class_data_; }


void TransformPropertyValue::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TransformPropertyValue*>(&to_msg);
  auto& from = static_cast<const TransformPropertyValue&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ServerData.TransformPropertyValue)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_pos()) {
    _this->_internal_mutable_pos()->::Common::Float3::MergeFrom(
        from._internal_pos());
  }
  if (from._internal_has_rot()) {
    _this->_internal_mutable_rot()->::Common::Float3::MergeFrom(
        from._internal_rot());
  }
  if (from._internal_has_scl()) {
    _this->_internal_mutable_scl()->::Common::Float3::MergeFrom(
        from._internal_scl());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TransformPropertyValue::CopyFrom(const TransformPropertyValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerData.TransformPropertyValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransformPropertyValue::IsInitialized() const {
  return true;
}

void TransformPropertyValue::InternalSwap(TransformPropertyValue* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TransformPropertyValue, _impl_.scl_)
      + sizeof(TransformPropertyValue::_impl_.scl_)
      - PROTOBUF_FIELD_OFFSET(TransformPropertyValue, _impl_.pos_)>(
          reinterpret_cast<char*>(&_impl_.pos_),
          reinterpret_cast<char*>(&other->_impl_.pos_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TransformPropertyValue::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_relay_2eproto_getter, &descriptor_table_relay_2eproto_once,
      file_level_metadata_relay_2eproto[26]);
}

// ===================================================================

class GetAudioInputDevicesReq::_Internal {
 public:
};

GetAudioInputDevicesReq::GetAudioInputDevicesReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ServerData.GetAudioInputDevicesReq)
}
GetAudioInputDevicesReq::GetAudioInputDevicesReq(const GetAudioInputDevicesReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetAudioInputDevicesReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.reqid_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.reqid_ = from._impl_.reqid_;
  // @@protoc_insertion_point(copy_constructor:ServerData.GetAudioInputDevicesReq)
}

inline void GetAudioInputDevicesReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.reqid_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetAudioInputDevicesReq::~GetAudioInputDevicesReq() {
  // @@protoc_insertion_point(destructor:ServerData.GetAudioInputDevicesReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetAudioInputDevicesReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetAudioInputDevicesReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetAudioInputDevicesReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerData.GetAudioInputDevicesReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.reqid_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetAudioInputDevicesReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 reqId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.reqid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetAudioInputDevicesReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ServerData.GetAudioInputDevicesReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 reqId = 1;
  if (this->_internal_reqid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_reqid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerData.GetAudioInputDevicesReq)
  return target;
}

size_t GetAudioInputDevicesReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerData.GetAudioInputDevicesReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 reqId = 1;
  if (this->_internal_reqid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_reqid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetAudioInputDevicesReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetAudioInputDevicesReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetAudioInputDevicesReq::GetClassData() const { return &_class_data_; }


void GetAudioInputDevicesReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetAudioInputDevicesReq*>(&to_msg);
  auto& from = static_cast<const GetAudioInputDevicesReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ServerData.GetAudioInputDevicesReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_reqid() != 0) {
    _this->_internal_set_reqid(from._internal_reqid());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetAudioInputDevicesReq::CopyFrom(const GetAudioInputDevicesReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerData.GetAudioInputDevicesReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAudioInputDevicesReq::IsInitialized() const {
  return true;
}

void GetAudioInputDevicesReq::InternalSwap(GetAudioInputDevicesReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.reqid_, other->_impl_.reqid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetAudioInputDevicesReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_relay_2eproto_getter, &descriptor_table_relay_2eproto_once,
      file_level_metadata_relay_2eproto[27]);
}

// ===================================================================

class GetAudioOutputDevicesReq::_Internal {
 public:
};

GetAudioOutputDevicesReq::GetAudioOutputDevicesReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ServerData.GetAudioOutputDevicesReq)
}
GetAudioOutputDevicesReq::GetAudioOutputDevicesReq(const GetAudioOutputDevicesReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetAudioOutputDevicesReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.reqid_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.reqid_ = from._impl_.reqid_;
  // @@protoc_insertion_point(copy_constructor:ServerData.GetAudioOutputDevicesReq)
}

inline void GetAudioOutputDevicesReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.reqid_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetAudioOutputDevicesReq::~GetAudioOutputDevicesReq() {
  // @@protoc_insertion_point(destructor:ServerData.GetAudioOutputDevicesReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetAudioOutputDevicesReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetAudioOutputDevicesReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetAudioOutputDevicesReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerData.GetAudioOutputDevicesReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.reqid_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetAudioOutputDevicesReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 reqId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.reqid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetAudioOutputDevicesReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ServerData.GetAudioOutputDevicesReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 reqId = 1;
  if (this->_internal_reqid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_reqid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerData.GetAudioOutputDevicesReq)
  return target;
}

size_t GetAudioOutputDevicesReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerData.GetAudioOutputDevicesReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 reqId = 1;
  if (this->_internal_reqid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_reqid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetAudioOutputDevicesReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetAudioOutputDevicesReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetAudioOutputDevicesReq::GetClassData() const { return &_class_data_; }


void GetAudioOutputDevicesReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetAudioOutputDevicesReq*>(&to_msg);
  auto& from = static_cast<const GetAudioOutputDevicesReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ServerData.GetAudioOutputDevicesReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_reqid() != 0) {
    _this->_internal_set_reqid(from._internal_reqid());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetAudioOutputDevicesReq::CopyFrom(const GetAudioOutputDevicesReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerData.GetAudioOutputDevicesReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAudioOutputDevicesReq::IsInitialized() const {
  return true;
}

void GetAudioOutputDevicesReq::InternalSwap(GetAudioOutputDevicesReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.reqid_, other->_impl_.reqid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetAudioOutputDevicesReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_relay_2eproto_getter, &descriptor_table_relay_2eproto_once,
      file_level_metadata_relay_2eproto[28]);
}

// ===================================================================

class GetVideoInputDevicesReq::_Internal {
 public:
};

GetVideoInputDevicesReq::GetVideoInputDevicesReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ServerData.GetVideoInputDevicesReq)
}
GetVideoInputDevicesReq::GetVideoInputDevicesReq(const GetVideoInputDevicesReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetVideoInputDevicesReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.reqid_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.reqid_ = from._impl_.reqid_;
  // @@protoc_insertion_point(copy_constructor:ServerData.GetVideoInputDevicesReq)
}

inline void GetVideoInputDevicesReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.reqid_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetVideoInputDevicesReq::~GetVideoInputDevicesReq() {
  // @@protoc_insertion_point(destructor:ServerData.GetVideoInputDevicesReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetVideoInputDevicesReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetVideoInputDevicesReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetVideoInputDevicesReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerData.GetVideoInputDevicesReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.reqid_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetVideoInputDevicesReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 reqId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.reqid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetVideoInputDevicesReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ServerData.GetVideoInputDevicesReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 reqId = 1;
  if (this->_internal_reqid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_reqid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerData.GetVideoInputDevicesReq)
  return target;
}

size_t GetVideoInputDevicesReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerData.GetVideoInputDevicesReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 reqId = 1;
  if (this->_internal_reqid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_reqid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetVideoInputDevicesReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetVideoInputDevicesReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetVideoInputDevicesReq::GetClassData() const { return &_class_data_; }


void GetVideoInputDevicesReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetVideoInputDevicesReq*>(&to_msg);
  auto& from = static_cast<const GetVideoInputDevicesReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ServerData.GetVideoInputDevicesReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_reqid() != 0) {
    _this->_internal_set_reqid(from._internal_reqid());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetVideoInputDevicesReq::CopyFrom(const GetVideoInputDevicesReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerData.GetVideoInputDevicesReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetVideoInputDevicesReq::IsInitialized() const {
  return true;
}

void GetVideoInputDevicesReq::InternalSwap(GetVideoInputDevicesReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.reqid_, other->_impl_.reqid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetVideoInputDevicesReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_relay_2eproto_getter, &descriptor_table_relay_2eproto_once,
      file_level_metadata_relay_2eproto[29]);
}

// ===================================================================

class GetAudioInputDevicesResp::_Internal {
 public:
  static const ::ServerData::RtcAudioInputDeviceList& devices(const GetAudioInputDevicesResp* msg);
};

const ::ServerData::RtcAudioInputDeviceList&
GetAudioInputDevicesResp::_Internal::devices(const GetAudioInputDevicesResp* msg) {
  return *msg->_impl_.Resp_.devices_;
}
void GetAudioInputDevicesResp::set_allocated_devices(::ServerData::RtcAudioInputDeviceList* devices) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Resp();
  if (devices) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(devices));
    if (message_arena != submessage_arena) {
      devices = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, devices, submessage_arena);
    }
    set_has_devices();
    _impl_.Resp_.devices_ = devices;
  }
  // @@protoc_insertion_point(field_set_allocated:ServerData.GetAudioInputDevicesResp.Devices)
}
void GetAudioInputDevicesResp::clear_devices() {
  if (_internal_has_devices()) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.Resp_.devices_;
    }
    clear_has_Resp();
  }
}
GetAudioInputDevicesResp::GetAudioInputDevicesResp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ServerData.GetAudioInputDevicesResp)
}
GetAudioInputDevicesResp::GetAudioInputDevicesResp(const GetAudioInputDevicesResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetAudioInputDevicesResp* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.reqid_){}
    , decltype(_impl_.Resp_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.reqid_ = from._impl_.reqid_;
  clear_has_Resp();
  switch (from.Resp_case()) {
    case kDevices: {
      _this->_internal_mutable_devices()->::ServerData::RtcAudioInputDeviceList::MergeFrom(
          from._internal_devices());
      break;
    }
    case kError: {
      _this->_internal_set_error(from._internal_error());
      break;
    }
    case RESP_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:ServerData.GetAudioInputDevicesResp)
}

inline void GetAudioInputDevicesResp::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.reqid_){0}
    , decltype(_impl_.Resp_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  clear_has_Resp();
}

GetAudioInputDevicesResp::~GetAudioInputDevicesResp() {
  // @@protoc_insertion_point(destructor:ServerData.GetAudioInputDevicesResp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetAudioInputDevicesResp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_Resp()) {
    clear_Resp();
  }
}

void GetAudioInputDevicesResp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetAudioInputDevicesResp::clear_Resp() {
// @@protoc_insertion_point(one_of_clear_start:ServerData.GetAudioInputDevicesResp)
  switch (Resp_case()) {
    case kDevices: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Resp_.devices_;
      }
      break;
    }
    case kError: {
      _impl_.Resp_.error_.Destroy();
      break;
    }
    case RESP_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = RESP_NOT_SET;
}


void GetAudioInputDevicesResp::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerData.GetAudioInputDevicesResp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.reqid_ = 0;
  clear_Resp();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetAudioInputDevicesResp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 reqId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.reqid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ServerData.RtcAudioInputDeviceList Devices = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_devices(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string error = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          auto str = _internal_mutable_error();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ServerData.GetAudioInputDevicesResp.error"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetAudioInputDevicesResp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ServerData.GetAudioInputDevicesResp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 reqId = 1;
  if (this->_internal_reqid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_reqid(), target);
  }

  // .ServerData.RtcAudioInputDeviceList Devices = 10;
  if (_internal_has_devices()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(10, _Internal::devices(this),
        _Internal::devices(this).GetCachedSize(), target, stream);
  }

  // string error = 11;
  if (_internal_has_error()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error().data(), static_cast<int>(this->_internal_error().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ServerData.GetAudioInputDevicesResp.error");
    target = stream->WriteStringMaybeAliased(
        11, this->_internal_error(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerData.GetAudioInputDevicesResp)
  return target;
}

size_t GetAudioInputDevicesResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerData.GetAudioInputDevicesResp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 reqId = 1;
  if (this->_internal_reqid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_reqid());
  }

  switch (Resp_case()) {
    // .ServerData.RtcAudioInputDeviceList Devices = 10;
    case kDevices: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Resp_.devices_);
      break;
    }
    // string error = 11;
    case kError: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_error());
      break;
    }
    case RESP_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetAudioInputDevicesResp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetAudioInputDevicesResp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetAudioInputDevicesResp::GetClassData() const { return &_class_data_; }


void GetAudioInputDevicesResp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetAudioInputDevicesResp*>(&to_msg);
  auto& from = static_cast<const GetAudioInputDevicesResp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ServerData.GetAudioInputDevicesResp)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_reqid() != 0) {
    _this->_internal_set_reqid(from._internal_reqid());
  }
  switch (from.Resp_case()) {
    case kDevices: {
      _this->_internal_mutable_devices()->::ServerData::RtcAudioInputDeviceList::MergeFrom(
          from._internal_devices());
      break;
    }
    case kError: {
      _this->_internal_set_error(from._internal_error());
      break;
    }
    case RESP_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetAudioInputDevicesResp::CopyFrom(const GetAudioInputDevicesResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerData.GetAudioInputDevicesResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAudioInputDevicesResp::IsInitialized() const {
  return true;
}

void GetAudioInputDevicesResp::InternalSwap(GetAudioInputDevicesResp* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.reqid_, other->_impl_.reqid_);
  swap(_impl_.Resp_, other->_impl_.Resp_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetAudioInputDevicesResp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_relay_2eproto_getter, &descriptor_table_relay_2eproto_once,
      file_level_metadata_relay_2eproto[30]);
}

// ===================================================================

class GetAudioOutputDevicesResp::_Internal {
 public:
  static const ::ServerData::RtcAudioOutputDeviceList& devices(const GetAudioOutputDevicesResp* msg);
};

const ::ServerData::RtcAudioOutputDeviceList&
GetAudioOutputDevicesResp::_Internal::devices(const GetAudioOutputDevicesResp* msg) {
  return *msg->_impl_.Resp_.devices_;
}
void GetAudioOutputDevicesResp::set_allocated_devices(::ServerData::RtcAudioOutputDeviceList* devices) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Resp();
  if (devices) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(devices));
    if (message_arena != submessage_arena) {
      devices = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, devices, submessage_arena);
    }
    set_has_devices();
    _impl_.Resp_.devices_ = devices;
  }
  // @@protoc_insertion_point(field_set_allocated:ServerData.GetAudioOutputDevicesResp.Devices)
}
void GetAudioOutputDevicesResp::clear_devices() {
  if (_internal_has_devices()) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.Resp_.devices_;
    }
    clear_has_Resp();
  }
}
GetAudioOutputDevicesResp::GetAudioOutputDevicesResp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ServerData.GetAudioOutputDevicesResp)
}
GetAudioOutputDevicesResp::GetAudioOutputDevicesResp(const GetAudioOutputDevicesResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetAudioOutputDevicesResp* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.reqid_){}
    , decltype(_impl_.Resp_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.reqid_ = from._impl_.reqid_;
  clear_has_Resp();
  switch (from.Resp_case()) {
    case kDevices: {
      _this->_internal_mutable_devices()->::ServerData::RtcAudioOutputDeviceList::MergeFrom(
          from._internal_devices());
      break;
    }
    case kError: {
      _this->_internal_set_error(from._internal_error());
      break;
    }
    case RESP_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:ServerData.GetAudioOutputDevicesResp)
}

inline void GetAudioOutputDevicesResp::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.reqid_){0}
    , decltype(_impl_.Resp_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  clear_has_Resp();
}

GetAudioOutputDevicesResp::~GetAudioOutputDevicesResp() {
  // @@protoc_insertion_point(destructor:ServerData.GetAudioOutputDevicesResp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetAudioOutputDevicesResp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_Resp()) {
    clear_Resp();
  }
}

void GetAudioOutputDevicesResp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetAudioOutputDevicesResp::clear_Resp() {
// @@protoc_insertion_point(one_of_clear_start:ServerData.GetAudioOutputDevicesResp)
  switch (Resp_case()) {
    case kDevices: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Resp_.devices_;
      }
      break;
    }
    case kError: {
      _impl_.Resp_.error_.Destroy();
      break;
    }
    case RESP_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = RESP_NOT_SET;
}


void GetAudioOutputDevicesResp::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerData.GetAudioOutputDevicesResp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.reqid_ = 0;
  clear_Resp();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetAudioOutputDevicesResp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 reqId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.reqid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ServerData.RtcAudioOutputDeviceList Devices = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_devices(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string error = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          auto str = _internal_mutable_error();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ServerData.GetAudioOutputDevicesResp.error"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetAudioOutputDevicesResp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ServerData.GetAudioOutputDevicesResp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 reqId = 1;
  if (this->_internal_reqid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_reqid(), target);
  }

  // .ServerData.RtcAudioOutputDeviceList Devices = 10;
  if (_internal_has_devices()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(10, _Internal::devices(this),
        _Internal::devices(this).GetCachedSize(), target, stream);
  }

  // string error = 11;
  if (_internal_has_error()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error().data(), static_cast<int>(this->_internal_error().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ServerData.GetAudioOutputDevicesResp.error");
    target = stream->WriteStringMaybeAliased(
        11, this->_internal_error(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerData.GetAudioOutputDevicesResp)
  return target;
}

size_t GetAudioOutputDevicesResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerData.GetAudioOutputDevicesResp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 reqId = 1;
  if (this->_internal_reqid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_reqid());
  }

  switch (Resp_case()) {
    // .ServerData.RtcAudioOutputDeviceList Devices = 10;
    case kDevices: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Resp_.devices_);
      break;
    }
    // string error = 11;
    case kError: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_error());
      break;
    }
    case RESP_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetAudioOutputDevicesResp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetAudioOutputDevicesResp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetAudioOutputDevicesResp::GetClassData() const { return &_class_data_; }


void GetAudioOutputDevicesResp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetAudioOutputDevicesResp*>(&to_msg);
  auto& from = static_cast<const GetAudioOutputDevicesResp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ServerData.GetAudioOutputDevicesResp)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_reqid() != 0) {
    _this->_internal_set_reqid(from._internal_reqid());
  }
  switch (from.Resp_case()) {
    case kDevices: {
      _this->_internal_mutable_devices()->::ServerData::RtcAudioOutputDeviceList::MergeFrom(
          from._internal_devices());
      break;
    }
    case kError: {
      _this->_internal_set_error(from._internal_error());
      break;
    }
    case RESP_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetAudioOutputDevicesResp::CopyFrom(const GetAudioOutputDevicesResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerData.GetAudioOutputDevicesResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAudioOutputDevicesResp::IsInitialized() const {
  return true;
}

void GetAudioOutputDevicesResp::InternalSwap(GetAudioOutputDevicesResp* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.reqid_, other->_impl_.reqid_);
  swap(_impl_.Resp_, other->_impl_.Resp_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetAudioOutputDevicesResp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_relay_2eproto_getter, &descriptor_table_relay_2eproto_once,
      file_level_metadata_relay_2eproto[31]);
}

// ===================================================================

class GetVideoInputDevicesResp::_Internal {
 public:
  static const ::ServerData::RtcVideoInputDeviceList& devices(const GetVideoInputDevicesResp* msg);
};

const ::ServerData::RtcVideoInputDeviceList&
GetVideoInputDevicesResp::_Internal::devices(const GetVideoInputDevicesResp* msg) {
  return *msg->_impl_.Resp_.devices_;
}
void GetVideoInputDevicesResp::set_allocated_devices(::ServerData::RtcVideoInputDeviceList* devices) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Resp();
  if (devices) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(devices));
    if (message_arena != submessage_arena) {
      devices = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, devices, submessage_arena);
    }
    set_has_devices();
    _impl_.Resp_.devices_ = devices;
  }
  // @@protoc_insertion_point(field_set_allocated:ServerData.GetVideoInputDevicesResp.Devices)
}
void GetVideoInputDevicesResp::clear_devices() {
  if (_internal_has_devices()) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.Resp_.devices_;
    }
    clear_has_Resp();
  }
}
GetVideoInputDevicesResp::GetVideoInputDevicesResp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ServerData.GetVideoInputDevicesResp)
}
GetVideoInputDevicesResp::GetVideoInputDevicesResp(const GetVideoInputDevicesResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetVideoInputDevicesResp* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.reqid_){}
    , decltype(_impl_.Resp_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.reqid_ = from._impl_.reqid_;
  clear_has_Resp();
  switch (from.Resp_case()) {
    case kDevices: {
      _this->_internal_mutable_devices()->::ServerData::RtcVideoInputDeviceList::MergeFrom(
          from._internal_devices());
      break;
    }
    case kError: {
      _this->_internal_set_error(from._internal_error());
      break;
    }
    case RESP_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:ServerData.GetVideoInputDevicesResp)
}

inline void GetVideoInputDevicesResp::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.reqid_){0}
    , decltype(_impl_.Resp_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  clear_has_Resp();
}

GetVideoInputDevicesResp::~GetVideoInputDevicesResp() {
  // @@protoc_insertion_point(destructor:ServerData.GetVideoInputDevicesResp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetVideoInputDevicesResp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_Resp()) {
    clear_Resp();
  }
}

void GetVideoInputDevicesResp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetVideoInputDevicesResp::clear_Resp() {
// @@protoc_insertion_point(one_of_clear_start:ServerData.GetVideoInputDevicesResp)
  switch (Resp_case()) {
    case kDevices: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Resp_.devices_;
      }
      break;
    }
    case kError: {
      _impl_.Resp_.error_.Destroy();
      break;
    }
    case RESP_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = RESP_NOT_SET;
}


void GetVideoInputDevicesResp::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerData.GetVideoInputDevicesResp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.reqid_ = 0;
  clear_Resp();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetVideoInputDevicesResp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 reqId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.reqid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ServerData.RtcVideoInputDeviceList Devices = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_devices(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string error = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          auto str = _internal_mutable_error();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ServerData.GetVideoInputDevicesResp.error"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetVideoInputDevicesResp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ServerData.GetVideoInputDevicesResp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 reqId = 1;
  if (this->_internal_reqid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_reqid(), target);
  }

  // .ServerData.RtcVideoInputDeviceList Devices = 10;
  if (_internal_has_devices()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(10, _Internal::devices(this),
        _Internal::devices(this).GetCachedSize(), target, stream);
  }

  // string error = 11;
  if (_internal_has_error()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error().data(), static_cast<int>(this->_internal_error().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ServerData.GetVideoInputDevicesResp.error");
    target = stream->WriteStringMaybeAliased(
        11, this->_internal_error(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerData.GetVideoInputDevicesResp)
  return target;
}

size_t GetVideoInputDevicesResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerData.GetVideoInputDevicesResp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 reqId = 1;
  if (this->_internal_reqid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_reqid());
  }

  switch (Resp_case()) {
    // .ServerData.RtcVideoInputDeviceList Devices = 10;
    case kDevices: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Resp_.devices_);
      break;
    }
    // string error = 11;
    case kError: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_error());
      break;
    }
    case RESP_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetVideoInputDevicesResp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetVideoInputDevicesResp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetVideoInputDevicesResp::GetClassData() const { return &_class_data_; }


void GetVideoInputDevicesResp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetVideoInputDevicesResp*>(&to_msg);
  auto& from = static_cast<const GetVideoInputDevicesResp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ServerData.GetVideoInputDevicesResp)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_reqid() != 0) {
    _this->_internal_set_reqid(from._internal_reqid());
  }
  switch (from.Resp_case()) {
    case kDevices: {
      _this->_internal_mutable_devices()->::ServerData::RtcVideoInputDeviceList::MergeFrom(
          from._internal_devices());
      break;
    }
    case kError: {
      _this->_internal_set_error(from._internal_error());
      break;
    }
    case RESP_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetVideoInputDevicesResp::CopyFrom(const GetVideoInputDevicesResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerData.GetVideoInputDevicesResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetVideoInputDevicesResp::IsInitialized() const {
  return true;
}

void GetVideoInputDevicesResp::InternalSwap(GetVideoInputDevicesResp* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.reqid_, other->_impl_.reqid_);
  swap(_impl_.Resp_, other->_impl_.Resp_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetVideoInputDevicesResp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_relay_2eproto_getter, &descriptor_table_relay_2eproto_once,
      file_level_metadata_relay_2eproto[32]);
}

// ===================================================================

class SetAudioInputDeviceReq::_Internal {
 public:
  static const ::ServerData::RtcAudioInputDevice& device(const SetAudioInputDeviceReq* msg);
};

const ::ServerData::RtcAudioInputDevice&
SetAudioInputDeviceReq::_Internal::device(const SetAudioInputDeviceReq* msg) {
  return *msg->_impl_.device_;
}
void SetAudioInputDeviceReq::clear_device() {
  if (GetArenaForAllocation() == nullptr && _impl_.device_ != nullptr) {
    delete _impl_.device_;
  }
  _impl_.device_ = nullptr;
}
SetAudioInputDeviceReq::SetAudioInputDeviceReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ServerData.SetAudioInputDeviceReq)
}
SetAudioInputDeviceReq::SetAudioInputDeviceReq(const SetAudioInputDeviceReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SetAudioInputDeviceReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.device_){nullptr}
    , decltype(_impl_.reqid_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_device()) {
    _this->_impl_.device_ = new ::ServerData::RtcAudioInputDevice(*from._impl_.device_);
  }
  _this->_impl_.reqid_ = from._impl_.reqid_;
  // @@protoc_insertion_point(copy_constructor:ServerData.SetAudioInputDeviceReq)
}

inline void SetAudioInputDeviceReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.device_){nullptr}
    , decltype(_impl_.reqid_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SetAudioInputDeviceReq::~SetAudioInputDeviceReq() {
  // @@protoc_insertion_point(destructor:ServerData.SetAudioInputDeviceReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetAudioInputDeviceReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.device_;
}

void SetAudioInputDeviceReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SetAudioInputDeviceReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerData.SetAudioInputDeviceReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.device_ != nullptr) {
    delete _impl_.device_;
  }
  _impl_.device_ = nullptr;
  _impl_.reqid_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetAudioInputDeviceReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 reqId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.reqid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ServerData.RtcAudioInputDevice Device = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_device(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetAudioInputDeviceReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ServerData.SetAudioInputDeviceReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 reqId = 1;
  if (this->_internal_reqid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_reqid(), target);
  }

  // .ServerData.RtcAudioInputDevice Device = 2;
  if (this->_internal_has_device()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::device(this),
        _Internal::device(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerData.SetAudioInputDeviceReq)
  return target;
}

size_t SetAudioInputDeviceReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerData.SetAudioInputDeviceReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .ServerData.RtcAudioInputDevice Device = 2;
  if (this->_internal_has_device()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.device_);
  }

  // int32 reqId = 1;
  if (this->_internal_reqid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_reqid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetAudioInputDeviceReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SetAudioInputDeviceReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetAudioInputDeviceReq::GetClassData() const { return &_class_data_; }


void SetAudioInputDeviceReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SetAudioInputDeviceReq*>(&to_msg);
  auto& from = static_cast<const SetAudioInputDeviceReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ServerData.SetAudioInputDeviceReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_device()) {
    _this->_internal_mutable_device()->::ServerData::RtcAudioInputDevice::MergeFrom(
        from._internal_device());
  }
  if (from._internal_reqid() != 0) {
    _this->_internal_set_reqid(from._internal_reqid());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetAudioInputDeviceReq::CopyFrom(const SetAudioInputDeviceReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerData.SetAudioInputDeviceReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetAudioInputDeviceReq::IsInitialized() const {
  return true;
}

void SetAudioInputDeviceReq::InternalSwap(SetAudioInputDeviceReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SetAudioInputDeviceReq, _impl_.reqid_)
      + sizeof(SetAudioInputDeviceReq::_impl_.reqid_)
      - PROTOBUF_FIELD_OFFSET(SetAudioInputDeviceReq, _impl_.device_)>(
          reinterpret_cast<char*>(&_impl_.device_),
          reinterpret_cast<char*>(&other->_impl_.device_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SetAudioInputDeviceReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_relay_2eproto_getter, &descriptor_table_relay_2eproto_once,
      file_level_metadata_relay_2eproto[33]);
}

// ===================================================================

class SetAudioOutputDeviceReq::_Internal {
 public:
  static const ::ServerData::RtcAudioOutputDevice& device(const SetAudioOutputDeviceReq* msg);
};

const ::ServerData::RtcAudioOutputDevice&
SetAudioOutputDeviceReq::_Internal::device(const SetAudioOutputDeviceReq* msg) {
  return *msg->_impl_.device_;
}
void SetAudioOutputDeviceReq::clear_device() {
  if (GetArenaForAllocation() == nullptr && _impl_.device_ != nullptr) {
    delete _impl_.device_;
  }
  _impl_.device_ = nullptr;
}
SetAudioOutputDeviceReq::SetAudioOutputDeviceReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ServerData.SetAudioOutputDeviceReq)
}
SetAudioOutputDeviceReq::SetAudioOutputDeviceReq(const SetAudioOutputDeviceReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SetAudioOutputDeviceReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.device_){nullptr}
    , decltype(_impl_.reqid_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_device()) {
    _this->_impl_.device_ = new ::ServerData::RtcAudioOutputDevice(*from._impl_.device_);
  }
  _this->_impl_.reqid_ = from._impl_.reqid_;
  // @@protoc_insertion_point(copy_constructor:ServerData.SetAudioOutputDeviceReq)
}

inline void SetAudioOutputDeviceReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.device_){nullptr}
    , decltype(_impl_.reqid_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SetAudioOutputDeviceReq::~SetAudioOutputDeviceReq() {
  // @@protoc_insertion_point(destructor:ServerData.SetAudioOutputDeviceReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetAudioOutputDeviceReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.device_;
}

void SetAudioOutputDeviceReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SetAudioOutputDeviceReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerData.SetAudioOutputDeviceReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.device_ != nullptr) {
    delete _impl_.device_;
  }
  _impl_.device_ = nullptr;
  _impl_.reqid_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetAudioOutputDeviceReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 reqId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.reqid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ServerData.RtcAudioOutputDevice Device = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_device(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetAudioOutputDeviceReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ServerData.SetAudioOutputDeviceReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 reqId = 1;
  if (this->_internal_reqid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_reqid(), target);
  }

  // .ServerData.RtcAudioOutputDevice Device = 2;
  if (this->_internal_has_device()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::device(this),
        _Internal::device(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerData.SetAudioOutputDeviceReq)
  return target;
}

size_t SetAudioOutputDeviceReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerData.SetAudioOutputDeviceReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .ServerData.RtcAudioOutputDevice Device = 2;
  if (this->_internal_has_device()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.device_);
  }

  // int32 reqId = 1;
  if (this->_internal_reqid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_reqid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetAudioOutputDeviceReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SetAudioOutputDeviceReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetAudioOutputDeviceReq::GetClassData() const { return &_class_data_; }


void SetAudioOutputDeviceReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SetAudioOutputDeviceReq*>(&to_msg);
  auto& from = static_cast<const SetAudioOutputDeviceReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ServerData.SetAudioOutputDeviceReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_device()) {
    _this->_internal_mutable_device()->::ServerData::RtcAudioOutputDevice::MergeFrom(
        from._internal_device());
  }
  if (from._internal_reqid() != 0) {
    _this->_internal_set_reqid(from._internal_reqid());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetAudioOutputDeviceReq::CopyFrom(const SetAudioOutputDeviceReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerData.SetAudioOutputDeviceReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetAudioOutputDeviceReq::IsInitialized() const {
  return true;
}

void SetAudioOutputDeviceReq::InternalSwap(SetAudioOutputDeviceReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SetAudioOutputDeviceReq, _impl_.reqid_)
      + sizeof(SetAudioOutputDeviceReq::_impl_.reqid_)
      - PROTOBUF_FIELD_OFFSET(SetAudioOutputDeviceReq, _impl_.device_)>(
          reinterpret_cast<char*>(&_impl_.device_),
          reinterpret_cast<char*>(&other->_impl_.device_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SetAudioOutputDeviceReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_relay_2eproto_getter, &descriptor_table_relay_2eproto_once,
      file_level_metadata_relay_2eproto[34]);
}

// ===================================================================

class SetVideoInputDeviceReq::_Internal {
 public:
  static const ::ServerData::RtcVideoInputDevice& device(const SetVideoInputDeviceReq* msg);
};

const ::ServerData::RtcVideoInputDevice&
SetVideoInputDeviceReq::_Internal::device(const SetVideoInputDeviceReq* msg) {
  return *msg->_impl_.device_;
}
void SetVideoInputDeviceReq::clear_device() {
  if (GetArenaForAllocation() == nullptr && _impl_.device_ != nullptr) {
    delete _impl_.device_;
  }
  _impl_.device_ = nullptr;
}
SetVideoInputDeviceReq::SetVideoInputDeviceReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ServerData.SetVideoInputDeviceReq)
}
SetVideoInputDeviceReq::SetVideoInputDeviceReq(const SetVideoInputDeviceReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SetVideoInputDeviceReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.device_){nullptr}
    , decltype(_impl_.reqid_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_device()) {
    _this->_impl_.device_ = new ::ServerData::RtcVideoInputDevice(*from._impl_.device_);
  }
  _this->_impl_.reqid_ = from._impl_.reqid_;
  // @@protoc_insertion_point(copy_constructor:ServerData.SetVideoInputDeviceReq)
}

inline void SetVideoInputDeviceReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.device_){nullptr}
    , decltype(_impl_.reqid_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SetVideoInputDeviceReq::~SetVideoInputDeviceReq() {
  // @@protoc_insertion_point(destructor:ServerData.SetVideoInputDeviceReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetVideoInputDeviceReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.device_;
}

void SetVideoInputDeviceReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SetVideoInputDeviceReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerData.SetVideoInputDeviceReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.device_ != nullptr) {
    delete _impl_.device_;
  }
  _impl_.device_ = nullptr;
  _impl_.reqid_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetVideoInputDeviceReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 reqId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.reqid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ServerData.RtcVideoInputDevice Device = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_device(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetVideoInputDeviceReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ServerData.SetVideoInputDeviceReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 reqId = 1;
  if (this->_internal_reqid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_reqid(), target);
  }

  // .ServerData.RtcVideoInputDevice Device = 2;
  if (this->_internal_has_device()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::device(this),
        _Internal::device(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerData.SetVideoInputDeviceReq)
  return target;
}

size_t SetVideoInputDeviceReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerData.SetVideoInputDeviceReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .ServerData.RtcVideoInputDevice Device = 2;
  if (this->_internal_has_device()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.device_);
  }

  // int32 reqId = 1;
  if (this->_internal_reqid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_reqid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetVideoInputDeviceReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SetVideoInputDeviceReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetVideoInputDeviceReq::GetClassData() const { return &_class_data_; }


void SetVideoInputDeviceReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SetVideoInputDeviceReq*>(&to_msg);
  auto& from = static_cast<const SetVideoInputDeviceReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ServerData.SetVideoInputDeviceReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_device()) {
    _this->_internal_mutable_device()->::ServerData::RtcVideoInputDevice::MergeFrom(
        from._internal_device());
  }
  if (from._internal_reqid() != 0) {
    _this->_internal_set_reqid(from._internal_reqid());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetVideoInputDeviceReq::CopyFrom(const SetVideoInputDeviceReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerData.SetVideoInputDeviceReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetVideoInputDeviceReq::IsInitialized() const {
  return true;
}

void SetVideoInputDeviceReq::InternalSwap(SetVideoInputDeviceReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SetVideoInputDeviceReq, _impl_.reqid_)
      + sizeof(SetVideoInputDeviceReq::_impl_.reqid_)
      - PROTOBUF_FIELD_OFFSET(SetVideoInputDeviceReq, _impl_.device_)>(
          reinterpret_cast<char*>(&_impl_.device_),
          reinterpret_cast<char*>(&other->_impl_.device_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SetVideoInputDeviceReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_relay_2eproto_getter, &descriptor_table_relay_2eproto_once,
      file_level_metadata_relay_2eproto[35]);
}

// ===================================================================

class SetAudioInputDeviceResp::_Internal {
 public:
  static const ::ServerData::RtcAudioInputDevice& device(const SetAudioInputDeviceResp* msg);
};

const ::ServerData::RtcAudioInputDevice&
SetAudioInputDeviceResp::_Internal::device(const SetAudioInputDeviceResp* msg) {
  return *msg->_impl_.Resp_.device_;
}
void SetAudioInputDeviceResp::set_allocated_device(::ServerData::RtcAudioInputDevice* device) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Resp();
  if (device) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(device));
    if (message_arena != submessage_arena) {
      device = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, device, submessage_arena);
    }
    set_has_device();
    _impl_.Resp_.device_ = device;
  }
  // @@protoc_insertion_point(field_set_allocated:ServerData.SetAudioInputDeviceResp.Device)
}
void SetAudioInputDeviceResp::clear_device() {
  if (_internal_has_device()) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.Resp_.device_;
    }
    clear_has_Resp();
  }
}
SetAudioInputDeviceResp::SetAudioInputDeviceResp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ServerData.SetAudioInputDeviceResp)
}
SetAudioInputDeviceResp::SetAudioInputDeviceResp(const SetAudioInputDeviceResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SetAudioInputDeviceResp* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.reqid_){}
    , decltype(_impl_.Resp_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.reqid_ = from._impl_.reqid_;
  clear_has_Resp();
  switch (from.Resp_case()) {
    case kDevice: {
      _this->_internal_mutable_device()->::ServerData::RtcAudioInputDevice::MergeFrom(
          from._internal_device());
      break;
    }
    case kError: {
      _this->_internal_set_error(from._internal_error());
      break;
    }
    case RESP_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:ServerData.SetAudioInputDeviceResp)
}

inline void SetAudioInputDeviceResp::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.reqid_){0}
    , decltype(_impl_.Resp_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  clear_has_Resp();
}

SetAudioInputDeviceResp::~SetAudioInputDeviceResp() {
  // @@protoc_insertion_point(destructor:ServerData.SetAudioInputDeviceResp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetAudioInputDeviceResp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_Resp()) {
    clear_Resp();
  }
}

void SetAudioInputDeviceResp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SetAudioInputDeviceResp::clear_Resp() {
// @@protoc_insertion_point(one_of_clear_start:ServerData.SetAudioInputDeviceResp)
  switch (Resp_case()) {
    case kDevice: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Resp_.device_;
      }
      break;
    }
    case kError: {
      _impl_.Resp_.error_.Destroy();
      break;
    }
    case RESP_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = RESP_NOT_SET;
}


void SetAudioInputDeviceResp::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerData.SetAudioInputDeviceResp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.reqid_ = 0;
  clear_Resp();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetAudioInputDeviceResp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 reqId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.reqid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ServerData.RtcAudioInputDevice Device = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_device(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string error = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          auto str = _internal_mutable_error();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ServerData.SetAudioInputDeviceResp.error"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetAudioInputDeviceResp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ServerData.SetAudioInputDeviceResp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 reqId = 1;
  if (this->_internal_reqid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_reqid(), target);
  }

  // .ServerData.RtcAudioInputDevice Device = 10;
  if (_internal_has_device()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(10, _Internal::device(this),
        _Internal::device(this).GetCachedSize(), target, stream);
  }

  // string error = 11;
  if (_internal_has_error()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error().data(), static_cast<int>(this->_internal_error().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ServerData.SetAudioInputDeviceResp.error");
    target = stream->WriteStringMaybeAliased(
        11, this->_internal_error(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerData.SetAudioInputDeviceResp)
  return target;
}

size_t SetAudioInputDeviceResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerData.SetAudioInputDeviceResp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 reqId = 1;
  if (this->_internal_reqid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_reqid());
  }

  switch (Resp_case()) {
    // .ServerData.RtcAudioInputDevice Device = 10;
    case kDevice: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Resp_.device_);
      break;
    }
    // string error = 11;
    case kError: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_error());
      break;
    }
    case RESP_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetAudioInputDeviceResp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SetAudioInputDeviceResp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetAudioInputDeviceResp::GetClassData() const { return &_class_data_; }


void SetAudioInputDeviceResp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SetAudioInputDeviceResp*>(&to_msg);
  auto& from = static_cast<const SetAudioInputDeviceResp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ServerData.SetAudioInputDeviceResp)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_reqid() != 0) {
    _this->_internal_set_reqid(from._internal_reqid());
  }
  switch (from.Resp_case()) {
    case kDevice: {
      _this->_internal_mutable_device()->::ServerData::RtcAudioInputDevice::MergeFrom(
          from._internal_device());
      break;
    }
    case kError: {
      _this->_internal_set_error(from._internal_error());
      break;
    }
    case RESP_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetAudioInputDeviceResp::CopyFrom(const SetAudioInputDeviceResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerData.SetAudioInputDeviceResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetAudioInputDeviceResp::IsInitialized() const {
  return true;
}

void SetAudioInputDeviceResp::InternalSwap(SetAudioInputDeviceResp* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.reqid_, other->_impl_.reqid_);
  swap(_impl_.Resp_, other->_impl_.Resp_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetAudioInputDeviceResp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_relay_2eproto_getter, &descriptor_table_relay_2eproto_once,
      file_level_metadata_relay_2eproto[36]);
}

// ===================================================================

class SetAudioOutputDeviceResp::_Internal {
 public:
  static const ::ServerData::RtcAudioOutputDevice& device(const SetAudioOutputDeviceResp* msg);
};

const ::ServerData::RtcAudioOutputDevice&
SetAudioOutputDeviceResp::_Internal::device(const SetAudioOutputDeviceResp* msg) {
  return *msg->_impl_.Resp_.device_;
}
void SetAudioOutputDeviceResp::set_allocated_device(::ServerData::RtcAudioOutputDevice* device) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Resp();
  if (device) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(device));
    if (message_arena != submessage_arena) {
      device = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, device, submessage_arena);
    }
    set_has_device();
    _impl_.Resp_.device_ = device;
  }
  // @@protoc_insertion_point(field_set_allocated:ServerData.SetAudioOutputDeviceResp.Device)
}
void SetAudioOutputDeviceResp::clear_device() {
  if (_internal_has_device()) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.Resp_.device_;
    }
    clear_has_Resp();
  }
}
SetAudioOutputDeviceResp::SetAudioOutputDeviceResp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ServerData.SetAudioOutputDeviceResp)
}
SetAudioOutputDeviceResp::SetAudioOutputDeviceResp(const SetAudioOutputDeviceResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SetAudioOutputDeviceResp* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.reqid_){}
    , decltype(_impl_.Resp_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.reqid_ = from._impl_.reqid_;
  clear_has_Resp();
  switch (from.Resp_case()) {
    case kDevice: {
      _this->_internal_mutable_device()->::ServerData::RtcAudioOutputDevice::MergeFrom(
          from._internal_device());
      break;
    }
    case kError: {
      _this->_internal_set_error(from._internal_error());
      break;
    }
    case RESP_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:ServerData.SetAudioOutputDeviceResp)
}

inline void SetAudioOutputDeviceResp::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.reqid_){0}
    , decltype(_impl_.Resp_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  clear_has_Resp();
}

SetAudioOutputDeviceResp::~SetAudioOutputDeviceResp() {
  // @@protoc_insertion_point(destructor:ServerData.SetAudioOutputDeviceResp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetAudioOutputDeviceResp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_Resp()) {
    clear_Resp();
  }
}

void SetAudioOutputDeviceResp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SetAudioOutputDeviceResp::clear_Resp() {
// @@protoc_insertion_point(one_of_clear_start:ServerData.SetAudioOutputDeviceResp)
  switch (Resp_case()) {
    case kDevice: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Resp_.device_;
      }
      break;
    }
    case kError: {
      _impl_.Resp_.error_.Destroy();
      break;
    }
    case RESP_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = RESP_NOT_SET;
}


void SetAudioOutputDeviceResp::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerData.SetAudioOutputDeviceResp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.reqid_ = 0;
  clear_Resp();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetAudioOutputDeviceResp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 reqId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.reqid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ServerData.RtcAudioOutputDevice Device = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_device(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string error = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          auto str = _internal_mutable_error();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ServerData.SetAudioOutputDeviceResp.error"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetAudioOutputDeviceResp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ServerData.SetAudioOutputDeviceResp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 reqId = 1;
  if (this->_internal_reqid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_reqid(), target);
  }

  // .ServerData.RtcAudioOutputDevice Device = 10;
  if (_internal_has_device()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(10, _Internal::device(this),
        _Internal::device(this).GetCachedSize(), target, stream);
  }

  // string error = 11;
  if (_internal_has_error()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error().data(), static_cast<int>(this->_internal_error().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ServerData.SetAudioOutputDeviceResp.error");
    target = stream->WriteStringMaybeAliased(
        11, this->_internal_error(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerData.SetAudioOutputDeviceResp)
  return target;
}

size_t SetAudioOutputDeviceResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerData.SetAudioOutputDeviceResp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 reqId = 1;
  if (this->_internal_reqid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_reqid());
  }

  switch (Resp_case()) {
    // .ServerData.RtcAudioOutputDevice Device = 10;
    case kDevice: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Resp_.device_);
      break;
    }
    // string error = 11;
    case kError: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_error());
      break;
    }
    case RESP_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetAudioOutputDeviceResp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SetAudioOutputDeviceResp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetAudioOutputDeviceResp::GetClassData() const { return &_class_data_; }


void SetAudioOutputDeviceResp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SetAudioOutputDeviceResp*>(&to_msg);
  auto& from = static_cast<const SetAudioOutputDeviceResp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ServerData.SetAudioOutputDeviceResp)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_reqid() != 0) {
    _this->_internal_set_reqid(from._internal_reqid());
  }
  switch (from.Resp_case()) {
    case kDevice: {
      _this->_internal_mutable_device()->::ServerData::RtcAudioOutputDevice::MergeFrom(
          from._internal_device());
      break;
    }
    case kError: {
      _this->_internal_set_error(from._internal_error());
      break;
    }
    case RESP_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetAudioOutputDeviceResp::CopyFrom(const SetAudioOutputDeviceResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerData.SetAudioOutputDeviceResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetAudioOutputDeviceResp::IsInitialized() const {
  return true;
}

void SetAudioOutputDeviceResp::InternalSwap(SetAudioOutputDeviceResp* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.reqid_, other->_impl_.reqid_);
  swap(_impl_.Resp_, other->_impl_.Resp_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetAudioOutputDeviceResp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_relay_2eproto_getter, &descriptor_table_relay_2eproto_once,
      file_level_metadata_relay_2eproto[37]);
}

// ===================================================================

class SetVideoInputDeviceResp::_Internal {
 public:
  static const ::ServerData::RtcVideoInputDevice& device(const SetVideoInputDeviceResp* msg);
};

const ::ServerData::RtcVideoInputDevice&
SetVideoInputDeviceResp::_Internal::device(const SetVideoInputDeviceResp* msg) {
  return *msg->_impl_.Resp_.device_;
}
void SetVideoInputDeviceResp::set_allocated_device(::ServerData::RtcVideoInputDevice* device) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Resp();
  if (device) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(device));
    if (message_arena != submessage_arena) {
      device = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, device, submessage_arena);
    }
    set_has_device();
    _impl_.Resp_.device_ = device;
  }
  // @@protoc_insertion_point(field_set_allocated:ServerData.SetVideoInputDeviceResp.Device)
}
void SetVideoInputDeviceResp::clear_device() {
  if (_internal_has_device()) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.Resp_.device_;
    }
    clear_has_Resp();
  }
}
SetVideoInputDeviceResp::SetVideoInputDeviceResp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ServerData.SetVideoInputDeviceResp)
}
SetVideoInputDeviceResp::SetVideoInputDeviceResp(const SetVideoInputDeviceResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SetVideoInputDeviceResp* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.reqid_){}
    , decltype(_impl_.Resp_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.reqid_ = from._impl_.reqid_;
  clear_has_Resp();
  switch (from.Resp_case()) {
    case kDevice: {
      _this->_internal_mutable_device()->::ServerData::RtcVideoInputDevice::MergeFrom(
          from._internal_device());
      break;
    }
    case kError: {
      _this->_internal_set_error(from._internal_error());
      break;
    }
    case RESP_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:ServerData.SetVideoInputDeviceResp)
}

inline void SetVideoInputDeviceResp::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.reqid_){0}
    , decltype(_impl_.Resp_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  clear_has_Resp();
}

SetVideoInputDeviceResp::~SetVideoInputDeviceResp() {
  // @@protoc_insertion_point(destructor:ServerData.SetVideoInputDeviceResp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetVideoInputDeviceResp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_Resp()) {
    clear_Resp();
  }
}

void SetVideoInputDeviceResp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SetVideoInputDeviceResp::clear_Resp() {
// @@protoc_insertion_point(one_of_clear_start:ServerData.SetVideoInputDeviceResp)
  switch (Resp_case()) {
    case kDevice: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.Resp_.device_;
      }
      break;
    }
    case kError: {
      _impl_.Resp_.error_.Destroy();
      break;
    }
    case RESP_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = RESP_NOT_SET;
}


void SetVideoInputDeviceResp::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerData.SetVideoInputDeviceResp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.reqid_ = 0;
  clear_Resp();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetVideoInputDeviceResp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 reqId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.reqid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ServerData.RtcVideoInputDevice Device = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_device(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string error = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          auto str = _internal_mutable_error();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ServerData.SetVideoInputDeviceResp.error"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetVideoInputDeviceResp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ServerData.SetVideoInputDeviceResp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 reqId = 1;
  if (this->_internal_reqid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_reqid(), target);
  }

  // .ServerData.RtcVideoInputDevice Device = 10;
  if (_internal_has_device()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(10, _Internal::device(this),
        _Internal::device(this).GetCachedSize(), target, stream);
  }

  // string error = 11;
  if (_internal_has_error()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error().data(), static_cast<int>(this->_internal_error().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ServerData.SetVideoInputDeviceResp.error");
    target = stream->WriteStringMaybeAliased(
        11, this->_internal_error(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerData.SetVideoInputDeviceResp)
  return target;
}

size_t SetVideoInputDeviceResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerData.SetVideoInputDeviceResp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 reqId = 1;
  if (this->_internal_reqid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_reqid());
  }

  switch (Resp_case()) {
    // .ServerData.RtcVideoInputDevice Device = 10;
    case kDevice: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.Resp_.device_);
      break;
    }
    // string error = 11;
    case kError: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_error());
      break;
    }
    case RESP_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetVideoInputDeviceResp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SetVideoInputDeviceResp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetVideoInputDeviceResp::GetClassData() const { return &_class_data_; }


void SetVideoInputDeviceResp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SetVideoInputDeviceResp*>(&to_msg);
  auto& from = static_cast<const SetVideoInputDeviceResp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ServerData.SetVideoInputDeviceResp)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_reqid() != 0) {
    _this->_internal_set_reqid(from._internal_reqid());
  }
  switch (from.Resp_case()) {
    case kDevice: {
      _this->_internal_mutable_device()->::ServerData::RtcVideoInputDevice::MergeFrom(
          from._internal_device());
      break;
    }
    case kError: {
      _this->_internal_set_error(from._internal_error());
      break;
    }
    case RESP_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetVideoInputDeviceResp::CopyFrom(const SetVideoInputDeviceResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerData.SetVideoInputDeviceResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetVideoInputDeviceResp::IsInitialized() const {
  return true;
}

void SetVideoInputDeviceResp::InternalSwap(SetVideoInputDeviceResp* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.reqid_, other->_impl_.reqid_);
  swap(_impl_.Resp_, other->_impl_.Resp_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetVideoInputDeviceResp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_relay_2eproto_getter, &descriptor_table_relay_2eproto_once,
      file_level_metadata_relay_2eproto[38]);
}

// ===================================================================

class PostCreateObject::_Internal {
 public:
  static const ::ServerData::CavrnusSpaceConnection& spaceconn(const PostCreateObject* msg);
};

const ::ServerData::CavrnusSpaceConnection&
PostCreateObject::_Internal::spaceconn(const PostCreateObject* msg) {
  return *msg->_impl_.spaceconn_;
}
void PostCreateObject::clear_spaceconn() {
  if (GetArenaForAllocation() == nullptr && _impl_.spaceconn_ != nullptr) {
    delete _impl_.spaceconn_;
  }
  _impl_.spaceconn_ = nullptr;
}
PostCreateObject::PostCreateObject(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ServerData.PostCreateObject)
}
PostCreateObject::PostCreateObject(const PostCreateObject& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PostCreateObject* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.newinstanceid_){}
    , decltype(_impl_.uniqueobjectident_){}
    , decltype(_impl_.spaceconn_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.newinstanceid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.newinstanceid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_newinstanceid().empty()) {
    _this->_impl_.newinstanceid_.Set(from._internal_newinstanceid(), 
      _this->GetArenaForAllocation());
  }
  _impl_.uniqueobjectident_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.uniqueobjectident_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_uniqueobjectident().empty()) {
    _this->_impl_.uniqueobjectident_.Set(from._internal_uniqueobjectident(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_spaceconn()) {
    _this->_impl_.spaceconn_ = new ::ServerData::CavrnusSpaceConnection(*from._impl_.spaceconn_);
  }
  // @@protoc_insertion_point(copy_constructor:ServerData.PostCreateObject)
}

inline void PostCreateObject::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.newinstanceid_){}
    , decltype(_impl_.uniqueobjectident_){}
    , decltype(_impl_.spaceconn_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.newinstanceid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.newinstanceid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.uniqueobjectident_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.uniqueobjectident_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

PostCreateObject::~PostCreateObject() {
  // @@protoc_insertion_point(destructor:ServerData.PostCreateObject)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PostCreateObject::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.newinstanceid_.Destroy();
  _impl_.uniqueobjectident_.Destroy();
  if (this != internal_default_instance()) delete _impl_.spaceconn_;
}

void PostCreateObject::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PostCreateObject::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerData.PostCreateObject)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.newinstanceid_.ClearToEmpty();
  _impl_.uniqueobjectident_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.spaceconn_ != nullptr) {
    delete _impl_.spaceconn_;
  }
  _impl_.spaceconn_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PostCreateObject::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .ServerData.CavrnusSpaceConnection spaceConn = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_spaceconn(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string newInstanceId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_newinstanceid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ServerData.PostCreateObject.newInstanceId"));
        } else
          goto handle_unusual;
        continue;
      // string uniqueObjectIdent = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          auto str = _internal_mutable_uniqueobjectident();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ServerData.PostCreateObject.uniqueObjectIdent"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PostCreateObject::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ServerData.PostCreateObject)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .ServerData.CavrnusSpaceConnection spaceConn = 1;
  if (this->_internal_has_spaceconn()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::spaceconn(this),
        _Internal::spaceconn(this).GetCachedSize(), target, stream);
  }

  // string newInstanceId = 2;
  if (!this->_internal_newinstanceid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_newinstanceid().data(), static_cast<int>(this->_internal_newinstanceid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ServerData.PostCreateObject.newInstanceId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_newinstanceid(), target);
  }

  // string uniqueObjectIdent = 10;
  if (!this->_internal_uniqueobjectident().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_uniqueobjectident().data(), static_cast<int>(this->_internal_uniqueobjectident().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ServerData.PostCreateObject.uniqueObjectIdent");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_uniqueobjectident(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerData.PostCreateObject)
  return target;
}

size_t PostCreateObject::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerData.PostCreateObject)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string newInstanceId = 2;
  if (!this->_internal_newinstanceid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_newinstanceid());
  }

  // string uniqueObjectIdent = 10;
  if (!this->_internal_uniqueobjectident().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_uniqueobjectident());
  }

  // .ServerData.CavrnusSpaceConnection spaceConn = 1;
  if (this->_internal_has_spaceconn()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.spaceconn_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PostCreateObject::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PostCreateObject::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PostCreateObject::GetClassData() const { return &_class_data_; }


void PostCreateObject::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PostCreateObject*>(&to_msg);
  auto& from = static_cast<const PostCreateObject&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ServerData.PostCreateObject)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_newinstanceid().empty()) {
    _this->_internal_set_newinstanceid(from._internal_newinstanceid());
  }
  if (!from._internal_uniqueobjectident().empty()) {
    _this->_internal_set_uniqueobjectident(from._internal_uniqueobjectident());
  }
  if (from._internal_has_spaceconn()) {
    _this->_internal_mutable_spaceconn()->::ServerData::CavrnusSpaceConnection::MergeFrom(
        from._internal_spaceconn());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PostCreateObject::CopyFrom(const PostCreateObject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerData.PostCreateObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PostCreateObject::IsInitialized() const {
  return true;
}

void PostCreateObject::InternalSwap(PostCreateObject* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.newinstanceid_, lhs_arena,
      &other->_impl_.newinstanceid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.uniqueobjectident_, lhs_arena,
      &other->_impl_.uniqueobjectident_, rhs_arena
  );
  swap(_impl_.spaceconn_, other->_impl_.spaceconn_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PostCreateObject::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_relay_2eproto_getter, &descriptor_table_relay_2eproto_once,
      file_level_metadata_relay_2eproto[39]);
}

// ===================================================================

class PostRemoveObject::_Internal {
 public:
  static const ::ServerData::CavrnusSpaceConnection& spaceconn(const PostRemoveObject* msg);
};

const ::ServerData::CavrnusSpaceConnection&
PostRemoveObject::_Internal::spaceconn(const PostRemoveObject* msg) {
  return *msg->_impl_.spaceconn_;
}
void PostRemoveObject::clear_spaceconn() {
  if (GetArenaForAllocation() == nullptr && _impl_.spaceconn_ != nullptr) {
    delete _impl_.spaceconn_;
  }
  _impl_.spaceconn_ = nullptr;
}
PostRemoveObject::PostRemoveObject(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ServerData.PostRemoveObject)
}
PostRemoveObject::PostRemoveObject(const PostRemoveObject& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PostRemoveObject* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.opid_){}
    , decltype(_impl_.spaceconn_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.opid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.opid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_opid().empty()) {
    _this->_impl_.opid_.Set(from._internal_opid(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_spaceconn()) {
    _this->_impl_.spaceconn_ = new ::ServerData::CavrnusSpaceConnection(*from._impl_.spaceconn_);
  }
  // @@protoc_insertion_point(copy_constructor:ServerData.PostRemoveObject)
}

inline void PostRemoveObject::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.opid_){}
    , decltype(_impl_.spaceconn_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.opid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.opid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

PostRemoveObject::~PostRemoveObject() {
  // @@protoc_insertion_point(destructor:ServerData.PostRemoveObject)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PostRemoveObject::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.opid_.Destroy();
  if (this != internal_default_instance()) delete _impl_.spaceconn_;
}

void PostRemoveObject::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PostRemoveObject::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerData.PostRemoveObject)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.opid_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.spaceconn_ != nullptr) {
    delete _impl_.spaceconn_;
  }
  _impl_.spaceconn_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PostRemoveObject::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .ServerData.CavrnusSpaceConnection spaceConn = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_spaceconn(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string opId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_opid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ServerData.PostRemoveObject.opId"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PostRemoveObject::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ServerData.PostRemoveObject)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .ServerData.CavrnusSpaceConnection spaceConn = 1;
  if (this->_internal_has_spaceconn()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::spaceconn(this),
        _Internal::spaceconn(this).GetCachedSize(), target, stream);
  }

  // string opId = 2;
  if (!this->_internal_opid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_opid().data(), static_cast<int>(this->_internal_opid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ServerData.PostRemoveObject.opId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_opid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerData.PostRemoveObject)
  return target;
}

size_t PostRemoveObject::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerData.PostRemoveObject)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string opId = 2;
  if (!this->_internal_opid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_opid());
  }

  // .ServerData.CavrnusSpaceConnection spaceConn = 1;
  if (this->_internal_has_spaceconn()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.spaceconn_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PostRemoveObject::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PostRemoveObject::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PostRemoveObject::GetClassData() const { return &_class_data_; }


void PostRemoveObject::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PostRemoveObject*>(&to_msg);
  auto& from = static_cast<const PostRemoveObject&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ServerData.PostRemoveObject)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_opid().empty()) {
    _this->_internal_set_opid(from._internal_opid());
  }
  if (from._internal_has_spaceconn()) {
    _this->_internal_mutable_spaceconn()->::ServerData::CavrnusSpaceConnection::MergeFrom(
        from._internal_spaceconn());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PostRemoveObject::CopyFrom(const PostRemoveObject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerData.PostRemoveObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PostRemoveObject::IsInitialized() const {
  return true;
}

void PostRemoveObject::InternalSwap(PostRemoveObject* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.opid_, lhs_arena,
      &other->_impl_.opid_, rhs_arena
  );
  swap(_impl_.spaceconn_, other->_impl_.spaceconn_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PostRemoveObject::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_relay_2eproto_getter, &descriptor_table_relay_2eproto_once,
      file_level_metadata_relay_2eproto[40]);
}

// ===================================================================

class PropMetadataStatus::_Internal {
 public:
  static const ::ServerData::CavrnusSpaceConnection& spaceconn(const PropMetadataStatus* msg);
  static const ::Property::PropertyIdentifier& propertypath(const PropMetadataStatus* msg);
};

const ::ServerData::CavrnusSpaceConnection&
PropMetadataStatus::_Internal::spaceconn(const PropMetadataStatus* msg) {
  return *msg->_impl_.spaceconn_;
}
const ::Property::PropertyIdentifier&
PropMetadataStatus::_Internal::propertypath(const PropMetadataStatus* msg) {
  return *msg->_impl_.propertypath_;
}
void PropMetadataStatus::clear_spaceconn() {
  if (GetArenaForAllocation() == nullptr && _impl_.spaceconn_ != nullptr) {
    delete _impl_.spaceconn_;
  }
  _impl_.spaceconn_ = nullptr;
}
void PropMetadataStatus::clear_propertypath() {
  if (GetArenaForAllocation() == nullptr && _impl_.propertypath_ != nullptr) {
    delete _impl_.propertypath_;
  }
  _impl_.propertypath_ = nullptr;
}
PropMetadataStatus::PropMetadataStatus(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ServerData.PropMetadataStatus)
}
PropMetadataStatus::PropMetadataStatus(const PropMetadataStatus& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PropMetadataStatus* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.spaceconn_){nullptr}
    , decltype(_impl_.propertypath_){nullptr}
    , decltype(_impl_.isreadonly_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_spaceconn()) {
    _this->_impl_.spaceconn_ = new ::ServerData::CavrnusSpaceConnection(*from._impl_.spaceconn_);
  }
  if (from._internal_has_propertypath()) {
    _this->_impl_.propertypath_ = new ::Property::PropertyIdentifier(*from._impl_.propertypath_);
  }
  _this->_impl_.isreadonly_ = from._impl_.isreadonly_;
  // @@protoc_insertion_point(copy_constructor:ServerData.PropMetadataStatus)
}

inline void PropMetadataStatus::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.spaceconn_){nullptr}
    , decltype(_impl_.propertypath_){nullptr}
    , decltype(_impl_.isreadonly_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

PropMetadataStatus::~PropMetadataStatus() {
  // @@protoc_insertion_point(destructor:ServerData.PropMetadataStatus)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PropMetadataStatus::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.spaceconn_;
  if (this != internal_default_instance()) delete _impl_.propertypath_;
}

void PropMetadataStatus::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PropMetadataStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerData.PropMetadataStatus)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.spaceconn_ != nullptr) {
    delete _impl_.spaceconn_;
  }
  _impl_.spaceconn_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.propertypath_ != nullptr) {
    delete _impl_.propertypath_;
  }
  _impl_.propertypath_ = nullptr;
  _impl_.isreadonly_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PropMetadataStatus::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .ServerData.CavrnusSpaceConnection spaceConn = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_spaceconn(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.PropertyIdentifier propertyPath = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_propertypath(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool isReadonly = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          _impl_.isreadonly_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PropMetadataStatus::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ServerData.PropMetadataStatus)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .ServerData.CavrnusSpaceConnection spaceConn = 1;
  if (this->_internal_has_spaceconn()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::spaceconn(this),
        _Internal::spaceconn(this).GetCachedSize(), target, stream);
  }

  // .Property.PropertyIdentifier propertyPath = 2;
  if (this->_internal_has_propertypath()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::propertypath(this),
        _Internal::propertypath(this).GetCachedSize(), target, stream);
  }

  // bool isReadonly = 10;
  if (this->_internal_isreadonly() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(10, this->_internal_isreadonly(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerData.PropMetadataStatus)
  return target;
}

size_t PropMetadataStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerData.PropMetadataStatus)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .ServerData.CavrnusSpaceConnection spaceConn = 1;
  if (this->_internal_has_spaceconn()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.spaceconn_);
  }

  // .Property.PropertyIdentifier propertyPath = 2;
  if (this->_internal_has_propertypath()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.propertypath_);
  }

  // bool isReadonly = 10;
  if (this->_internal_isreadonly() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PropMetadataStatus::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PropMetadataStatus::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PropMetadataStatus::GetClassData() const { return &_class_data_; }


void PropMetadataStatus::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PropMetadataStatus*>(&to_msg);
  auto& from = static_cast<const PropMetadataStatus&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ServerData.PropMetadataStatus)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_spaceconn()) {
    _this->_internal_mutable_spaceconn()->::ServerData::CavrnusSpaceConnection::MergeFrom(
        from._internal_spaceconn());
  }
  if (from._internal_has_propertypath()) {
    _this->_internal_mutable_propertypath()->::Property::PropertyIdentifier::MergeFrom(
        from._internal_propertypath());
  }
  if (from._internal_isreadonly() != 0) {
    _this->_internal_set_isreadonly(from._internal_isreadonly());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PropMetadataStatus::CopyFrom(const PropMetadataStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerData.PropMetadataStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PropMetadataStatus::IsInitialized() const {
  return true;
}

void PropMetadataStatus::InternalSwap(PropMetadataStatus* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PropMetadataStatus, _impl_.isreadonly_)
      + sizeof(PropMetadataStatus::_impl_.isreadonly_)
      - PROTOBUF_FIELD_OFFSET(PropMetadataStatus, _impl_.spaceconn_)>(
          reinterpret_cast<char*>(&_impl_.spaceconn_),
          reinterpret_cast<char*>(&other->_impl_.spaceconn_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PropMetadataStatus::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_relay_2eproto_getter, &descriptor_table_relay_2eproto_once,
      file_level_metadata_relay_2eproto[41]);
}

// ===================================================================

class PropertyValueStatus::_Internal {
 public:
  static const ::ServerData::CavrnusSpaceConnection& spaceconn(const PropertyValueStatus* msg);
  static const ::Property::PropertyIdentifier& propertypath(const PropertyValueStatus* msg);
  static const ::ServerData::PropertyValue& propertyvalue(const PropertyValueStatus* msg);
};

const ::ServerData::CavrnusSpaceConnection&
PropertyValueStatus::_Internal::spaceconn(const PropertyValueStatus* msg) {
  return *msg->_impl_.spaceconn_;
}
const ::Property::PropertyIdentifier&
PropertyValueStatus::_Internal::propertypath(const PropertyValueStatus* msg) {
  return *msg->_impl_.propertypath_;
}
const ::ServerData::PropertyValue&
PropertyValueStatus::_Internal::propertyvalue(const PropertyValueStatus* msg) {
  return *msg->_impl_.propertyvalue_;
}
void PropertyValueStatus::clear_spaceconn() {
  if (GetArenaForAllocation() == nullptr && _impl_.spaceconn_ != nullptr) {
    delete _impl_.spaceconn_;
  }
  _impl_.spaceconn_ = nullptr;
}
void PropertyValueStatus::clear_propertypath() {
  if (GetArenaForAllocation() == nullptr && _impl_.propertypath_ != nullptr) {
    delete _impl_.propertypath_;
  }
  _impl_.propertypath_ = nullptr;
}
PropertyValueStatus::PropertyValueStatus(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ServerData.PropertyValueStatus)
}
PropertyValueStatus::PropertyValueStatus(const PropertyValueStatus& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PropertyValueStatus* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.spaceconn_){nullptr}
    , decltype(_impl_.propertypath_){nullptr}
    , decltype(_impl_.propertyvalue_){nullptr}
    , decltype(_impl_.priority_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_spaceconn()) {
    _this->_impl_.spaceconn_ = new ::ServerData::CavrnusSpaceConnection(*from._impl_.spaceconn_);
  }
  if (from._internal_has_propertypath()) {
    _this->_impl_.propertypath_ = new ::Property::PropertyIdentifier(*from._impl_.propertypath_);
  }
  if (from._internal_has_propertyvalue()) {
    _this->_impl_.propertyvalue_ = new ::ServerData::PropertyValue(*from._impl_.propertyvalue_);
  }
  _this->_impl_.priority_ = from._impl_.priority_;
  // @@protoc_insertion_point(copy_constructor:ServerData.PropertyValueStatus)
}

inline void PropertyValueStatus::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.spaceconn_){nullptr}
    , decltype(_impl_.propertypath_){nullptr}
    , decltype(_impl_.propertyvalue_){nullptr}
    , decltype(_impl_.priority_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

PropertyValueStatus::~PropertyValueStatus() {
  // @@protoc_insertion_point(destructor:ServerData.PropertyValueStatus)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PropertyValueStatus::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.spaceconn_;
  if (this != internal_default_instance()) delete _impl_.propertypath_;
  if (this != internal_default_instance()) delete _impl_.propertyvalue_;
}

void PropertyValueStatus::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PropertyValueStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerData.PropertyValueStatus)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.spaceconn_ != nullptr) {
    delete _impl_.spaceconn_;
  }
  _impl_.spaceconn_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.propertypath_ != nullptr) {
    delete _impl_.propertypath_;
  }
  _impl_.propertypath_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.propertyvalue_ != nullptr) {
    delete _impl_.propertyvalue_;
  }
  _impl_.propertyvalue_ = nullptr;
  _impl_.priority_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PropertyValueStatus::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .ServerData.CavrnusSpaceConnection spaceConn = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_spaceconn(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.PropertyIdentifier propertyPath = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_propertypath(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ServerData.PropertyValue PropertyValue = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_propertyvalue(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 priority = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 88)) {
          _impl_.priority_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PropertyValueStatus::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ServerData.PropertyValueStatus)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .ServerData.CavrnusSpaceConnection spaceConn = 1;
  if (this->_internal_has_spaceconn()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::spaceconn(this),
        _Internal::spaceconn(this).GetCachedSize(), target, stream);
  }

  // .Property.PropertyIdentifier propertyPath = 2;
  if (this->_internal_has_propertypath()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::propertypath(this),
        _Internal::propertypath(this).GetCachedSize(), target, stream);
  }

  // .ServerData.PropertyValue PropertyValue = 10;
  if (this->_internal_has_propertyvalue()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(10, _Internal::propertyvalue(this),
        _Internal::propertyvalue(this).GetCachedSize(), target, stream);
  }

  // int32 priority = 11;
  if (this->_internal_priority() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(11, this->_internal_priority(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerData.PropertyValueStatus)
  return target;
}

size_t PropertyValueStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerData.PropertyValueStatus)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .ServerData.CavrnusSpaceConnection spaceConn = 1;
  if (this->_internal_has_spaceconn()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.spaceconn_);
  }

  // .Property.PropertyIdentifier propertyPath = 2;
  if (this->_internal_has_propertypath()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.propertypath_);
  }

  // .ServerData.PropertyValue PropertyValue = 10;
  if (this->_internal_has_propertyvalue()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.propertyvalue_);
  }

  // int32 priority = 11;
  if (this->_internal_priority() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_priority());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PropertyValueStatus::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PropertyValueStatus::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PropertyValueStatus::GetClassData() const { return &_class_data_; }


void PropertyValueStatus::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PropertyValueStatus*>(&to_msg);
  auto& from = static_cast<const PropertyValueStatus&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ServerData.PropertyValueStatus)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_spaceconn()) {
    _this->_internal_mutable_spaceconn()->::ServerData::CavrnusSpaceConnection::MergeFrom(
        from._internal_spaceconn());
  }
  if (from._internal_has_propertypath()) {
    _this->_internal_mutable_propertypath()->::Property::PropertyIdentifier::MergeFrom(
        from._internal_propertypath());
  }
  if (from._internal_has_propertyvalue()) {
    _this->_internal_mutable_propertyvalue()->::ServerData::PropertyValue::MergeFrom(
        from._internal_propertyvalue());
  }
  if (from._internal_priority() != 0) {
    _this->_internal_set_priority(from._internal_priority());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PropertyValueStatus::CopyFrom(const PropertyValueStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerData.PropertyValueStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PropertyValueStatus::IsInitialized() const {
  return true;
}

void PropertyValueStatus::InternalSwap(PropertyValueStatus* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PropertyValueStatus, _impl_.priority_)
      + sizeof(PropertyValueStatus::_impl_.priority_)
      - PROTOBUF_FIELD_OFFSET(PropertyValueStatus, _impl_.spaceconn_)>(
          reinterpret_cast<char*>(&_impl_.spaceconn_),
          reinterpret_cast<char*>(&other->_impl_.spaceconn_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PropertyValueStatus::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_relay_2eproto_getter, &descriptor_table_relay_2eproto_once,
      file_level_metadata_relay_2eproto[42]);
}

// ===================================================================

class LocalPropertyHandledResp::_Internal {
 public:
  static const ::ServerData::CavrnusSpaceConnection& spaceconn(const LocalPropertyHandledResp* msg);
  static const ::Property::PropertyIdentifier& propertypath(const LocalPropertyHandledResp* msg);
};

const ::ServerData::CavrnusSpaceConnection&
LocalPropertyHandledResp::_Internal::spaceconn(const LocalPropertyHandledResp* msg) {
  return *msg->_impl_.spaceconn_;
}
const ::Property::PropertyIdentifier&
LocalPropertyHandledResp::_Internal::propertypath(const LocalPropertyHandledResp* msg) {
  return *msg->_impl_.propertypath_;
}
void LocalPropertyHandledResp::clear_spaceconn() {
  if (GetArenaForAllocation() == nullptr && _impl_.spaceconn_ != nullptr) {
    delete _impl_.spaceconn_;
  }
  _impl_.spaceconn_ = nullptr;
}
void LocalPropertyHandledResp::clear_propertypath() {
  if (GetArenaForAllocation() == nullptr && _impl_.propertypath_ != nullptr) {
    delete _impl_.propertypath_;
  }
  _impl_.propertypath_ = nullptr;
}
LocalPropertyHandledResp::LocalPropertyHandledResp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ServerData.LocalPropertyHandledResp)
}
LocalPropertyHandledResp::LocalPropertyHandledResp(const LocalPropertyHandledResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  LocalPropertyHandledResp* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.spaceconn_){nullptr}
    , decltype(_impl_.propertypath_){nullptr}
    , decltype(_impl_.localpropchangeid_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_spaceconn()) {
    _this->_impl_.spaceconn_ = new ::ServerData::CavrnusSpaceConnection(*from._impl_.spaceconn_);
  }
  if (from._internal_has_propertypath()) {
    _this->_impl_.propertypath_ = new ::Property::PropertyIdentifier(*from._impl_.propertypath_);
  }
  _this->_impl_.localpropchangeid_ = from._impl_.localpropchangeid_;
  // @@protoc_insertion_point(copy_constructor:ServerData.LocalPropertyHandledResp)
}

inline void LocalPropertyHandledResp::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.spaceconn_){nullptr}
    , decltype(_impl_.propertypath_){nullptr}
    , decltype(_impl_.localpropchangeid_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

LocalPropertyHandledResp::~LocalPropertyHandledResp() {
  // @@protoc_insertion_point(destructor:ServerData.LocalPropertyHandledResp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LocalPropertyHandledResp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.spaceconn_;
  if (this != internal_default_instance()) delete _impl_.propertypath_;
}

void LocalPropertyHandledResp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void LocalPropertyHandledResp::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerData.LocalPropertyHandledResp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.spaceconn_ != nullptr) {
    delete _impl_.spaceconn_;
  }
  _impl_.spaceconn_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.propertypath_ != nullptr) {
    delete _impl_.propertypath_;
  }
  _impl_.propertypath_ = nullptr;
  _impl_.localpropchangeid_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LocalPropertyHandledResp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .ServerData.CavrnusSpaceConnection spaceConn = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_spaceconn(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.PropertyIdentifier propertyPath = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_propertypath(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 localPropChangeId = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          _impl_.localpropchangeid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LocalPropertyHandledResp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ServerData.LocalPropertyHandledResp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .ServerData.CavrnusSpaceConnection spaceConn = 1;
  if (this->_internal_has_spaceconn()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::spaceconn(this),
        _Internal::spaceconn(this).GetCachedSize(), target, stream);
  }

  // .Property.PropertyIdentifier propertyPath = 2;
  if (this->_internal_has_propertypath()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::propertypath(this),
        _Internal::propertypath(this).GetCachedSize(), target, stream);
  }

  // int32 localPropChangeId = 10;
  if (this->_internal_localpropchangeid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(10, this->_internal_localpropchangeid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerData.LocalPropertyHandledResp)
  return target;
}

size_t LocalPropertyHandledResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerData.LocalPropertyHandledResp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .ServerData.CavrnusSpaceConnection spaceConn = 1;
  if (this->_internal_has_spaceconn()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.spaceconn_);
  }

  // .Property.PropertyIdentifier propertyPath = 2;
  if (this->_internal_has_propertypath()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.propertypath_);
  }

  // int32 localPropChangeId = 10;
  if (this->_internal_localpropchangeid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_localpropchangeid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LocalPropertyHandledResp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    LocalPropertyHandledResp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LocalPropertyHandledResp::GetClassData() const { return &_class_data_; }


void LocalPropertyHandledResp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<LocalPropertyHandledResp*>(&to_msg);
  auto& from = static_cast<const LocalPropertyHandledResp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ServerData.LocalPropertyHandledResp)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_spaceconn()) {
    _this->_internal_mutable_spaceconn()->::ServerData::CavrnusSpaceConnection::MergeFrom(
        from._internal_spaceconn());
  }
  if (from._internal_has_propertypath()) {
    _this->_internal_mutable_propertypath()->::Property::PropertyIdentifier::MergeFrom(
        from._internal_propertypath());
  }
  if (from._internal_localpropchangeid() != 0) {
    _this->_internal_set_localpropchangeid(from._internal_localpropchangeid());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LocalPropertyHandledResp::CopyFrom(const LocalPropertyHandledResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerData.LocalPropertyHandledResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LocalPropertyHandledResp::IsInitialized() const {
  return true;
}

void LocalPropertyHandledResp::InternalSwap(LocalPropertyHandledResp* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LocalPropertyHandledResp, _impl_.localpropchangeid_)
      + sizeof(LocalPropertyHandledResp::_impl_.localpropchangeid_)
      - PROTOBUF_FIELD_OFFSET(LocalPropertyHandledResp, _impl_.spaceconn_)>(
          reinterpret_cast<char*>(&_impl_.spaceconn_),
          reinterpret_cast<char*>(&other->_impl_.spaceconn_));
}

::PROTOBUF_NAMESPACE_ID::Metadata LocalPropertyHandledResp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_relay_2eproto_getter, &descriptor_table_relay_2eproto_once,
      file_level_metadata_relay_2eproto[43]);
}

// ===================================================================

class UserAdded::_Internal {
 public:
  static const ::ServerData::CavrnusSpaceConnection& spaceconn(const UserAdded* msg);
  static const ::ServerData::CavrnusUser& user(const UserAdded* msg);
};

const ::ServerData::CavrnusSpaceConnection&
UserAdded::_Internal::spaceconn(const UserAdded* msg) {
  return *msg->_impl_.spaceconn_;
}
const ::ServerData::CavrnusUser&
UserAdded::_Internal::user(const UserAdded* msg) {
  return *msg->_impl_.user_;
}
void UserAdded::clear_spaceconn() {
  if (GetArenaForAllocation() == nullptr && _impl_.spaceconn_ != nullptr) {
    delete _impl_.spaceconn_;
  }
  _impl_.spaceconn_ = nullptr;
}
void UserAdded::clear_user() {
  if (GetArenaForAllocation() == nullptr && _impl_.user_ != nullptr) {
    delete _impl_.user_;
  }
  _impl_.user_ = nullptr;
}
UserAdded::UserAdded(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ServerData.UserAdded)
}
UserAdded::UserAdded(const UserAdded& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UserAdded* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.spaceconn_){nullptr}
    , decltype(_impl_.user_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_spaceconn()) {
    _this->_impl_.spaceconn_ = new ::ServerData::CavrnusSpaceConnection(*from._impl_.spaceconn_);
  }
  if (from._internal_has_user()) {
    _this->_impl_.user_ = new ::ServerData::CavrnusUser(*from._impl_.user_);
  }
  // @@protoc_insertion_point(copy_constructor:ServerData.UserAdded)
}

inline void UserAdded::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.spaceconn_){nullptr}
    , decltype(_impl_.user_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

UserAdded::~UserAdded() {
  // @@protoc_insertion_point(destructor:ServerData.UserAdded)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UserAdded::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.spaceconn_;
  if (this != internal_default_instance()) delete _impl_.user_;
}

void UserAdded::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UserAdded::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerData.UserAdded)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.spaceconn_ != nullptr) {
    delete _impl_.spaceconn_;
  }
  _impl_.spaceconn_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.user_ != nullptr) {
    delete _impl_.user_;
  }
  _impl_.user_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UserAdded::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .ServerData.CavrnusSpaceConnection spaceConn = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_spaceconn(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ServerData.CavrnusUser user = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_user(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UserAdded::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ServerData.UserAdded)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .ServerData.CavrnusSpaceConnection spaceConn = 1;
  if (this->_internal_has_spaceconn()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::spaceconn(this),
        _Internal::spaceconn(this).GetCachedSize(), target, stream);
  }

  // .ServerData.CavrnusUser user = 2;
  if (this->_internal_has_user()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::user(this),
        _Internal::user(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerData.UserAdded)
  return target;
}

size_t UserAdded::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerData.UserAdded)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .ServerData.CavrnusSpaceConnection spaceConn = 1;
  if (this->_internal_has_spaceconn()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.spaceconn_);
  }

  // .ServerData.CavrnusUser user = 2;
  if (this->_internal_has_user()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.user_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UserAdded::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UserAdded::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UserAdded::GetClassData() const { return &_class_data_; }


void UserAdded::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UserAdded*>(&to_msg);
  auto& from = static_cast<const UserAdded&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ServerData.UserAdded)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_spaceconn()) {
    _this->_internal_mutable_spaceconn()->::ServerData::CavrnusSpaceConnection::MergeFrom(
        from._internal_spaceconn());
  }
  if (from._internal_has_user()) {
    _this->_internal_mutable_user()->::ServerData::CavrnusUser::MergeFrom(
        from._internal_user());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UserAdded::CopyFrom(const UserAdded& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerData.UserAdded)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserAdded::IsInitialized() const {
  return true;
}

void UserAdded::InternalSwap(UserAdded* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UserAdded, _impl_.user_)
      + sizeof(UserAdded::_impl_.user_)
      - PROTOBUF_FIELD_OFFSET(UserAdded, _impl_.spaceconn_)>(
          reinterpret_cast<char*>(&_impl_.spaceconn_),
          reinterpret_cast<char*>(&other->_impl_.spaceconn_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UserAdded::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_relay_2eproto_getter, &descriptor_table_relay_2eproto_once,
      file_level_metadata_relay_2eproto[44]);
}

// ===================================================================

class UserRemoved::_Internal {
 public:
  static const ::ServerData::CavrnusSpaceConnection& spaceconn(const UserRemoved* msg);
};

const ::ServerData::CavrnusSpaceConnection&
UserRemoved::_Internal::spaceconn(const UserRemoved* msg) {
  return *msg->_impl_.spaceconn_;
}
void UserRemoved::clear_spaceconn() {
  if (GetArenaForAllocation() == nullptr && _impl_.spaceconn_ != nullptr) {
    delete _impl_.spaceconn_;
  }
  _impl_.spaceconn_ = nullptr;
}
UserRemoved::UserRemoved(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ServerData.UserRemoved)
}
UserRemoved::UserRemoved(const UserRemoved& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UserRemoved* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.userid_){}
    , decltype(_impl_.spaceconn_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.userid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.userid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_userid().empty()) {
    _this->_impl_.userid_.Set(from._internal_userid(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_spaceconn()) {
    _this->_impl_.spaceconn_ = new ::ServerData::CavrnusSpaceConnection(*from._impl_.spaceconn_);
  }
  // @@protoc_insertion_point(copy_constructor:ServerData.UserRemoved)
}

inline void UserRemoved::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.userid_){}
    , decltype(_impl_.spaceconn_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.userid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.userid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

UserRemoved::~UserRemoved() {
  // @@protoc_insertion_point(destructor:ServerData.UserRemoved)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UserRemoved::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.userid_.Destroy();
  if (this != internal_default_instance()) delete _impl_.spaceconn_;
}

void UserRemoved::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UserRemoved::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerData.UserRemoved)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.userid_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.spaceconn_ != nullptr) {
    delete _impl_.spaceconn_;
  }
  _impl_.spaceconn_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UserRemoved::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .ServerData.CavrnusSpaceConnection spaceConn = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_spaceconn(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string userId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_userid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ServerData.UserRemoved.userId"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UserRemoved::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ServerData.UserRemoved)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .ServerData.CavrnusSpaceConnection spaceConn = 1;
  if (this->_internal_has_spaceconn()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::spaceconn(this),
        _Internal::spaceconn(this).GetCachedSize(), target, stream);
  }

  // string userId = 2;
  if (!this->_internal_userid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_userid().data(), static_cast<int>(this->_internal_userid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ServerData.UserRemoved.userId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_userid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerData.UserRemoved)
  return target;
}

size_t UserRemoved::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerData.UserRemoved)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string userId = 2;
  if (!this->_internal_userid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_userid());
  }

  // .ServerData.CavrnusSpaceConnection spaceConn = 1;
  if (this->_internal_has_spaceconn()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.spaceconn_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UserRemoved::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UserRemoved::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UserRemoved::GetClassData() const { return &_class_data_; }


void UserRemoved::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UserRemoved*>(&to_msg);
  auto& from = static_cast<const UserRemoved&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ServerData.UserRemoved)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_userid().empty()) {
    _this->_internal_set_userid(from._internal_userid());
  }
  if (from._internal_has_spaceconn()) {
    _this->_internal_mutable_spaceconn()->::ServerData::CavrnusSpaceConnection::MergeFrom(
        from._internal_spaceconn());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UserRemoved::CopyFrom(const UserRemoved& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerData.UserRemoved)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserRemoved::IsInitialized() const {
  return true;
}

void UserRemoved::InternalSwap(UserRemoved* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.userid_, lhs_arena,
      &other->_impl_.userid_, rhs_arena
  );
  swap(_impl_.spaceconn_, other->_impl_.spaceconn_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UserRemoved::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_relay_2eproto_getter, &descriptor_table_relay_2eproto_once,
      file_level_metadata_relay_2eproto[45]);
}

// ===================================================================

class UserVideoFrame::_Internal {
 public:
  static const ::ServerData::CavrnusSpaceConnection& spaceconn(const UserVideoFrame* msg);
};

const ::ServerData::CavrnusSpaceConnection&
UserVideoFrame::_Internal::spaceconn(const UserVideoFrame* msg) {
  return *msg->_impl_.spaceconn_;
}
void UserVideoFrame::clear_spaceconn() {
  if (GetArenaForAllocation() == nullptr && _impl_.spaceconn_ != nullptr) {
    delete _impl_.spaceconn_;
  }
  _impl_.spaceconn_ = nullptr;
}
UserVideoFrame::UserVideoFrame(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ServerData.UserVideoFrame)
}
UserVideoFrame::UserVideoFrame(const UserVideoFrame& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UserVideoFrame* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.userid_){}
    , decltype(_impl_.stream_){}
    , decltype(_impl_.spaceconn_){nullptr}
    , decltype(_impl_.resx_){}
    , decltype(_impl_.resy_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.userid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.userid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_userid().empty()) {
    _this->_impl_.userid_.Set(from._internal_userid(), 
      _this->GetArenaForAllocation());
  }
  _impl_.stream_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.stream_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_stream().empty()) {
    _this->_impl_.stream_.Set(from._internal_stream(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_spaceconn()) {
    _this->_impl_.spaceconn_ = new ::ServerData::CavrnusSpaceConnection(*from._impl_.spaceconn_);
  }
  ::memcpy(&_impl_.resx_, &from._impl_.resx_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.resy_) -
    reinterpret_cast<char*>(&_impl_.resx_)) + sizeof(_impl_.resy_));
  // @@protoc_insertion_point(copy_constructor:ServerData.UserVideoFrame)
}

inline void UserVideoFrame::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.userid_){}
    , decltype(_impl_.stream_){}
    , decltype(_impl_.spaceconn_){nullptr}
    , decltype(_impl_.resx_){0}
    , decltype(_impl_.resy_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.userid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.userid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.stream_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.stream_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

UserVideoFrame::~UserVideoFrame() {
  // @@protoc_insertion_point(destructor:ServerData.UserVideoFrame)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UserVideoFrame::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.userid_.Destroy();
  _impl_.stream_.Destroy();
  if (this != internal_default_instance()) delete _impl_.spaceconn_;
}

void UserVideoFrame::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UserVideoFrame::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerData.UserVideoFrame)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.userid_.ClearToEmpty();
  _impl_.stream_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.spaceconn_ != nullptr) {
    delete _impl_.spaceconn_;
  }
  _impl_.spaceconn_ = nullptr;
  ::memset(&_impl_.resx_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.resy_) -
      reinterpret_cast<char*>(&_impl_.resx_)) + sizeof(_impl_.resy_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UserVideoFrame::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .ServerData.CavrnusSpaceConnection spaceConn = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_spaceconn(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string userId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_userid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ServerData.UserVideoFrame.userId"));
        } else
          goto handle_unusual;
        continue;
      // int32 resX = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          _impl_.resx_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 resY = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 88)) {
          _impl_.resy_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes stream = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 162)) {
          auto str = _internal_mutable_stream();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UserVideoFrame::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ServerData.UserVideoFrame)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .ServerData.CavrnusSpaceConnection spaceConn = 1;
  if (this->_internal_has_spaceconn()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::spaceconn(this),
        _Internal::spaceconn(this).GetCachedSize(), target, stream);
  }

  // string userId = 2;
  if (!this->_internal_userid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_userid().data(), static_cast<int>(this->_internal_userid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ServerData.UserVideoFrame.userId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_userid(), target);
  }

  // int32 resX = 10;
  if (this->_internal_resx() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(10, this->_internal_resx(), target);
  }

  // int32 resY = 11;
  if (this->_internal_resy() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(11, this->_internal_resy(), target);
  }

  // bytes stream = 20;
  if (!this->_internal_stream().empty()) {
    target = stream->WriteBytesMaybeAliased(
        20, this->_internal_stream(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerData.UserVideoFrame)
  return target;
}

size_t UserVideoFrame::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerData.UserVideoFrame)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string userId = 2;
  if (!this->_internal_userid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_userid());
  }

  // bytes stream = 20;
  if (!this->_internal_stream().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_stream());
  }

  // .ServerData.CavrnusSpaceConnection spaceConn = 1;
  if (this->_internal_has_spaceconn()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.spaceconn_);
  }

  // int32 resX = 10;
  if (this->_internal_resx() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_resx());
  }

  // int32 resY = 11;
  if (this->_internal_resy() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_resy());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UserVideoFrame::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UserVideoFrame::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UserVideoFrame::GetClassData() const { return &_class_data_; }


void UserVideoFrame::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UserVideoFrame*>(&to_msg);
  auto& from = static_cast<const UserVideoFrame&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ServerData.UserVideoFrame)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_userid().empty()) {
    _this->_internal_set_userid(from._internal_userid());
  }
  if (!from._internal_stream().empty()) {
    _this->_internal_set_stream(from._internal_stream());
  }
  if (from._internal_has_spaceconn()) {
    _this->_internal_mutable_spaceconn()->::ServerData::CavrnusSpaceConnection::MergeFrom(
        from._internal_spaceconn());
  }
  if (from._internal_resx() != 0) {
    _this->_internal_set_resx(from._internal_resx());
  }
  if (from._internal_resy() != 0) {
    _this->_internal_set_resy(from._internal_resy());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UserVideoFrame::CopyFrom(const UserVideoFrame& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerData.UserVideoFrame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserVideoFrame::IsInitialized() const {
  return true;
}

void UserVideoFrame::InternalSwap(UserVideoFrame* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.userid_, lhs_arena,
      &other->_impl_.userid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.stream_, lhs_arena,
      &other->_impl_.stream_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UserVideoFrame, _impl_.resy_)
      + sizeof(UserVideoFrame::_impl_.resy_)
      - PROTOBUF_FIELD_OFFSET(UserVideoFrame, _impl_.spaceconn_)>(
          reinterpret_cast<char*>(&_impl_.spaceconn_),
          reinterpret_cast<char*>(&other->_impl_.spaceconn_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UserVideoFrame::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_relay_2eproto_getter, &descriptor_table_relay_2eproto_once,
      file_level_metadata_relay_2eproto[46]);
}

// ===================================================================

class SpaceInfo::_Internal {
 public:
};

SpaceInfo::SpaceInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ServerData.SpaceInfo)
}
SpaceInfo::SpaceInfo(const SpaceInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SpaceInfo* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.spaceid_){}
    , decltype(_impl_.spacename_){}
    , decltype(_impl_.spacethumbnailurl_){}
    , decltype(_impl_.archived_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.spaceid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.spaceid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_spaceid().empty()) {
    _this->_impl_.spaceid_.Set(from._internal_spaceid(), 
      _this->GetArenaForAllocation());
  }
  _impl_.spacename_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.spacename_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_spacename().empty()) {
    _this->_impl_.spacename_.Set(from._internal_spacename(), 
      _this->GetArenaForAllocation());
  }
  _impl_.spacethumbnailurl_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.spacethumbnailurl_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_spacethumbnailurl().empty()) {
    _this->_impl_.spacethumbnailurl_.Set(from._internal_spacethumbnailurl(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.archived_ = from._impl_.archived_;
  // @@protoc_insertion_point(copy_constructor:ServerData.SpaceInfo)
}

inline void SpaceInfo::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.spaceid_){}
    , decltype(_impl_.spacename_){}
    , decltype(_impl_.spacethumbnailurl_){}
    , decltype(_impl_.archived_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.spaceid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.spaceid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.spacename_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.spacename_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.spacethumbnailurl_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.spacethumbnailurl_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SpaceInfo::~SpaceInfo() {
  // @@protoc_insertion_point(destructor:ServerData.SpaceInfo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SpaceInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.spaceid_.Destroy();
  _impl_.spacename_.Destroy();
  _impl_.spacethumbnailurl_.Destroy();
}

void SpaceInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SpaceInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerData.SpaceInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.spaceid_.ClearToEmpty();
  _impl_.spacename_.ClearToEmpty();
  _impl_.spacethumbnailurl_.ClearToEmpty();
  _impl_.archived_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SpaceInfo::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string spaceId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_spaceid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ServerData.SpaceInfo.spaceId"));
        } else
          goto handle_unusual;
        continue;
      // string spaceName = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_spacename();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ServerData.SpaceInfo.spaceName"));
        } else
          goto handle_unusual;
        continue;
      // string spaceThumbnailUrl = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_spacethumbnailurl();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ServerData.SpaceInfo.spaceThumbnailUrl"));
        } else
          goto handle_unusual;
        continue;
      // bool archived = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.archived_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SpaceInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ServerData.SpaceInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string spaceId = 1;
  if (!this->_internal_spaceid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_spaceid().data(), static_cast<int>(this->_internal_spaceid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ServerData.SpaceInfo.spaceId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_spaceid(), target);
  }

  // string spaceName = 2;
  if (!this->_internal_spacename().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_spacename().data(), static_cast<int>(this->_internal_spacename().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ServerData.SpaceInfo.spaceName");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_spacename(), target);
  }

  // string spaceThumbnailUrl = 3;
  if (!this->_internal_spacethumbnailurl().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_spacethumbnailurl().data(), static_cast<int>(this->_internal_spacethumbnailurl().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ServerData.SpaceInfo.spaceThumbnailUrl");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_spacethumbnailurl(), target);
  }

  // bool archived = 4;
  if (this->_internal_archived() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(4, this->_internal_archived(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerData.SpaceInfo)
  return target;
}

size_t SpaceInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerData.SpaceInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string spaceId = 1;
  if (!this->_internal_spaceid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_spaceid());
  }

  // string spaceName = 2;
  if (!this->_internal_spacename().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_spacename());
  }

  // string spaceThumbnailUrl = 3;
  if (!this->_internal_spacethumbnailurl().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_spacethumbnailurl());
  }

  // bool archived = 4;
  if (this->_internal_archived() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SpaceInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SpaceInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SpaceInfo::GetClassData() const { return &_class_data_; }


void SpaceInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SpaceInfo*>(&to_msg);
  auto& from = static_cast<const SpaceInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ServerData.SpaceInfo)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_spaceid().empty()) {
    _this->_internal_set_spaceid(from._internal_spaceid());
  }
  if (!from._internal_spacename().empty()) {
    _this->_internal_set_spacename(from._internal_spacename());
  }
  if (!from._internal_spacethumbnailurl().empty()) {
    _this->_internal_set_spacethumbnailurl(from._internal_spacethumbnailurl());
  }
  if (from._internal_archived() != 0) {
    _this->_internal_set_archived(from._internal_archived());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SpaceInfo::CopyFrom(const SpaceInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerData.SpaceInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpaceInfo::IsInitialized() const {
  return true;
}

void SpaceInfo::InternalSwap(SpaceInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.spaceid_, lhs_arena,
      &other->_impl_.spaceid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.spacename_, lhs_arena,
      &other->_impl_.spacename_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.spacethumbnailurl_, lhs_arena,
      &other->_impl_.spacethumbnailurl_, rhs_arena
  );
  swap(_impl_.archived_, other->_impl_.archived_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SpaceInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_relay_2eproto_getter, &descriptor_table_relay_2eproto_once,
      file_level_metadata_relay_2eproto[47]);
}

// ===================================================================

class ObjectAdded::_Internal {
 public:
  static const ::ServerData::CavrnusSpaceConnection& spaceconn(const ObjectAdded* msg);
};

const ::ServerData::CavrnusSpaceConnection&
ObjectAdded::_Internal::spaceconn(const ObjectAdded* msg) {
  return *msg->_impl_.spaceconn_;
}
void ObjectAdded::clear_spaceconn() {
  if (GetArenaForAllocation() == nullptr && _impl_.spaceconn_ != nullptr) {
    delete _impl_.spaceconn_;
  }
  _impl_.spaceconn_ = nullptr;
}
ObjectAdded::ObjectAdded(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ServerData.ObjectAdded)
}
ObjectAdded::ObjectAdded(const ObjectAdded& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ObjectAdded* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.creationopid_){}
    , decltype(_impl_.propertiescontainer_){}
    , decltype(_impl_.objectcreated_){}
    , decltype(_impl_.spaceconn_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.creationopid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.creationopid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_creationopid().empty()) {
    _this->_impl_.creationopid_.Set(from._internal_creationopid(), 
      _this->GetArenaForAllocation());
  }
  _impl_.propertiescontainer_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.propertiescontainer_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_propertiescontainer().empty()) {
    _this->_impl_.propertiescontainer_.Set(from._internal_propertiescontainer(), 
      _this->GetArenaForAllocation());
  }
  _impl_.objectcreated_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.objectcreated_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_objectcreated().empty()) {
    _this->_impl_.objectcreated_.Set(from._internal_objectcreated(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_spaceconn()) {
    _this->_impl_.spaceconn_ = new ::ServerData::CavrnusSpaceConnection(*from._impl_.spaceconn_);
  }
  // @@protoc_insertion_point(copy_constructor:ServerData.ObjectAdded)
}

inline void ObjectAdded::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.creationopid_){}
    , decltype(_impl_.propertiescontainer_){}
    , decltype(_impl_.objectcreated_){}
    , decltype(_impl_.spaceconn_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.creationopid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.creationopid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.propertiescontainer_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.propertiescontainer_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.objectcreated_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.objectcreated_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ObjectAdded::~ObjectAdded() {
  // @@protoc_insertion_point(destructor:ServerData.ObjectAdded)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ObjectAdded::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.creationopid_.Destroy();
  _impl_.propertiescontainer_.Destroy();
  _impl_.objectcreated_.Destroy();
  if (this != internal_default_instance()) delete _impl_.spaceconn_;
}

void ObjectAdded::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ObjectAdded::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerData.ObjectAdded)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.creationopid_.ClearToEmpty();
  _impl_.propertiescontainer_.ClearToEmpty();
  _impl_.objectcreated_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.spaceconn_ != nullptr) {
    delete _impl_.spaceconn_;
  }
  _impl_.spaceconn_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ObjectAdded::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .ServerData.CavrnusSpaceConnection spaceConn = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_spaceconn(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string creationOpId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_creationopid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ServerData.ObjectAdded.creationOpId"));
        } else
          goto handle_unusual;
        continue;
      // string propertiesContainer = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_propertiescontainer();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ServerData.ObjectAdded.propertiesContainer"));
        } else
          goto handle_unusual;
        continue;
      // string objectCreated = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_objectcreated();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ServerData.ObjectAdded.objectCreated"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ObjectAdded::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ServerData.ObjectAdded)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .ServerData.CavrnusSpaceConnection spaceConn = 1;
  if (this->_internal_has_spaceconn()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::spaceconn(this),
        _Internal::spaceconn(this).GetCachedSize(), target, stream);
  }

  // string creationOpId = 2;
  if (!this->_internal_creationopid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_creationopid().data(), static_cast<int>(this->_internal_creationopid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ServerData.ObjectAdded.creationOpId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_creationopid(), target);
  }

  // string propertiesContainer = 3;
  if (!this->_internal_propertiescontainer().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_propertiescontainer().data(), static_cast<int>(this->_internal_propertiescontainer().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ServerData.ObjectAdded.propertiesContainer");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_propertiescontainer(), target);
  }

  // string objectCreated = 4;
  if (!this->_internal_objectcreated().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_objectcreated().data(), static_cast<int>(this->_internal_objectcreated().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ServerData.ObjectAdded.objectCreated");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_objectcreated(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerData.ObjectAdded)
  return target;
}

size_t ObjectAdded::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerData.ObjectAdded)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string creationOpId = 2;
  if (!this->_internal_creationopid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_creationopid());
  }

  // string propertiesContainer = 3;
  if (!this->_internal_propertiescontainer().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_propertiescontainer());
  }

  // string objectCreated = 4;
  if (!this->_internal_objectcreated().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_objectcreated());
  }

  // .ServerData.CavrnusSpaceConnection spaceConn = 1;
  if (this->_internal_has_spaceconn()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.spaceconn_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ObjectAdded::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ObjectAdded::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ObjectAdded::GetClassData() const { return &_class_data_; }


void ObjectAdded::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ObjectAdded*>(&to_msg);
  auto& from = static_cast<const ObjectAdded&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ServerData.ObjectAdded)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_creationopid().empty()) {
    _this->_internal_set_creationopid(from._internal_creationopid());
  }
  if (!from._internal_propertiescontainer().empty()) {
    _this->_internal_set_propertiescontainer(from._internal_propertiescontainer());
  }
  if (!from._internal_objectcreated().empty()) {
    _this->_internal_set_objectcreated(from._internal_objectcreated());
  }
  if (from._internal_has_spaceconn()) {
    _this->_internal_mutable_spaceconn()->::ServerData::CavrnusSpaceConnection::MergeFrom(
        from._internal_spaceconn());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ObjectAdded::CopyFrom(const ObjectAdded& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerData.ObjectAdded)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectAdded::IsInitialized() const {
  return true;
}

void ObjectAdded::InternalSwap(ObjectAdded* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.creationopid_, lhs_arena,
      &other->_impl_.creationopid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.propertiescontainer_, lhs_arena,
      &other->_impl_.propertiescontainer_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.objectcreated_, lhs_arena,
      &other->_impl_.objectcreated_, rhs_arena
  );
  swap(_impl_.spaceconn_, other->_impl_.spaceconn_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ObjectAdded::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_relay_2eproto_getter, &descriptor_table_relay_2eproto_once,
      file_level_metadata_relay_2eproto[48]);
}

// ===================================================================

class ObjectRemoved::_Internal {
 public:
  static const ::ServerData::CavrnusSpaceConnection& spaceconn(const ObjectRemoved* msg);
};

const ::ServerData::CavrnusSpaceConnection&
ObjectRemoved::_Internal::spaceconn(const ObjectRemoved* msg) {
  return *msg->_impl_.spaceconn_;
}
void ObjectRemoved::clear_spaceconn() {
  if (GetArenaForAllocation() == nullptr && _impl_.spaceconn_ != nullptr) {
    delete _impl_.spaceconn_;
  }
  _impl_.spaceconn_ = nullptr;
}
ObjectRemoved::ObjectRemoved(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ServerData.ObjectRemoved)
}
ObjectRemoved::ObjectRemoved(const ObjectRemoved& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ObjectRemoved* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.propertiescontainer_){}
    , decltype(_impl_.spaceconn_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.propertiescontainer_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.propertiescontainer_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_propertiescontainer().empty()) {
    _this->_impl_.propertiescontainer_.Set(from._internal_propertiescontainer(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_spaceconn()) {
    _this->_impl_.spaceconn_ = new ::ServerData::CavrnusSpaceConnection(*from._impl_.spaceconn_);
  }
  // @@protoc_insertion_point(copy_constructor:ServerData.ObjectRemoved)
}

inline void ObjectRemoved::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.propertiescontainer_){}
    , decltype(_impl_.spaceconn_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.propertiescontainer_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.propertiescontainer_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ObjectRemoved::~ObjectRemoved() {
  // @@protoc_insertion_point(destructor:ServerData.ObjectRemoved)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ObjectRemoved::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.propertiescontainer_.Destroy();
  if (this != internal_default_instance()) delete _impl_.spaceconn_;
}

void ObjectRemoved::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ObjectRemoved::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerData.ObjectRemoved)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.propertiescontainer_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.spaceconn_ != nullptr) {
    delete _impl_.spaceconn_;
  }
  _impl_.spaceconn_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ObjectRemoved::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .ServerData.CavrnusSpaceConnection spaceConn = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_spaceconn(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string propertiesContainer = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_propertiescontainer();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ServerData.ObjectRemoved.propertiesContainer"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ObjectRemoved::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ServerData.ObjectRemoved)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .ServerData.CavrnusSpaceConnection spaceConn = 1;
  if (this->_internal_has_spaceconn()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::spaceconn(this),
        _Internal::spaceconn(this).GetCachedSize(), target, stream);
  }

  // string propertiesContainer = 3;
  if (!this->_internal_propertiescontainer().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_propertiescontainer().data(), static_cast<int>(this->_internal_propertiescontainer().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ServerData.ObjectRemoved.propertiesContainer");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_propertiescontainer(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerData.ObjectRemoved)
  return target;
}

size_t ObjectRemoved::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerData.ObjectRemoved)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string propertiesContainer = 3;
  if (!this->_internal_propertiescontainer().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_propertiescontainer());
  }

  // .ServerData.CavrnusSpaceConnection spaceConn = 1;
  if (this->_internal_has_spaceconn()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.spaceconn_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ObjectRemoved::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ObjectRemoved::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ObjectRemoved::GetClassData() const { return &_class_data_; }


void ObjectRemoved::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ObjectRemoved*>(&to_msg);
  auto& from = static_cast<const ObjectRemoved&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ServerData.ObjectRemoved)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_propertiescontainer().empty()) {
    _this->_internal_set_propertiescontainer(from._internal_propertiescontainer());
  }
  if (from._internal_has_spaceconn()) {
    _this->_internal_mutable_spaceconn()->::ServerData::CavrnusSpaceConnection::MergeFrom(
        from._internal_spaceconn());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ObjectRemoved::CopyFrom(const ObjectRemoved& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerData.ObjectRemoved)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectRemoved::IsInitialized() const {
  return true;
}

void ObjectRemoved::InternalSwap(ObjectRemoved* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.propertiescontainer_, lhs_arena,
      &other->_impl_.propertiescontainer_, rhs_arena
  );
  swap(_impl_.spaceconn_, other->_impl_.spaceconn_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ObjectRemoved::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_relay_2eproto_getter, &descriptor_table_relay_2eproto_once,
      file_level_metadata_relay_2eproto[49]);
}

// ===================================================================

class UpdateLocalUserMuted::_Internal {
 public:
  static const ::ServerData::CavrnusSpaceConnection& spaceconn(const UpdateLocalUserMuted* msg);
};

const ::ServerData::CavrnusSpaceConnection&
UpdateLocalUserMuted::_Internal::spaceconn(const UpdateLocalUserMuted* msg) {
  return *msg->_impl_.spaceconn_;
}
void UpdateLocalUserMuted::clear_spaceconn() {
  if (GetArenaForAllocation() == nullptr && _impl_.spaceconn_ != nullptr) {
    delete _impl_.spaceconn_;
  }
  _impl_.spaceconn_ = nullptr;
}
UpdateLocalUserMuted::UpdateLocalUserMuted(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ServerData.UpdateLocalUserMuted)
}
UpdateLocalUserMuted::UpdateLocalUserMuted(const UpdateLocalUserMuted& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UpdateLocalUserMuted* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.spaceconn_){nullptr}
    , decltype(_impl_.muted_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_spaceconn()) {
    _this->_impl_.spaceconn_ = new ::ServerData::CavrnusSpaceConnection(*from._impl_.spaceconn_);
  }
  _this->_impl_.muted_ = from._impl_.muted_;
  // @@protoc_insertion_point(copy_constructor:ServerData.UpdateLocalUserMuted)
}

inline void UpdateLocalUserMuted::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.spaceconn_){nullptr}
    , decltype(_impl_.muted_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

UpdateLocalUserMuted::~UpdateLocalUserMuted() {
  // @@protoc_insertion_point(destructor:ServerData.UpdateLocalUserMuted)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UpdateLocalUserMuted::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.spaceconn_;
}

void UpdateLocalUserMuted::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UpdateLocalUserMuted::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerData.UpdateLocalUserMuted)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.spaceconn_ != nullptr) {
    delete _impl_.spaceconn_;
  }
  _impl_.spaceconn_ = nullptr;
  _impl_.muted_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateLocalUserMuted::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .ServerData.CavrnusSpaceConnection spaceConn = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_spaceconn(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool muted = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.muted_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateLocalUserMuted::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ServerData.UpdateLocalUserMuted)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .ServerData.CavrnusSpaceConnection spaceConn = 1;
  if (this->_internal_has_spaceconn()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::spaceconn(this),
        _Internal::spaceconn(this).GetCachedSize(), target, stream);
  }

  // bool muted = 2;
  if (this->_internal_muted() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_muted(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerData.UpdateLocalUserMuted)
  return target;
}

size_t UpdateLocalUserMuted::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerData.UpdateLocalUserMuted)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .ServerData.CavrnusSpaceConnection spaceConn = 1;
  if (this->_internal_has_spaceconn()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.spaceconn_);
  }

  // bool muted = 2;
  if (this->_internal_muted() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateLocalUserMuted::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UpdateLocalUserMuted::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateLocalUserMuted::GetClassData() const { return &_class_data_; }


void UpdateLocalUserMuted::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UpdateLocalUserMuted*>(&to_msg);
  auto& from = static_cast<const UpdateLocalUserMuted&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ServerData.UpdateLocalUserMuted)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_spaceconn()) {
    _this->_internal_mutable_spaceconn()->::ServerData::CavrnusSpaceConnection::MergeFrom(
        from._internal_spaceconn());
  }
  if (from._internal_muted() != 0) {
    _this->_internal_set_muted(from._internal_muted());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateLocalUserMuted::CopyFrom(const UpdateLocalUserMuted& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerData.UpdateLocalUserMuted)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateLocalUserMuted::IsInitialized() const {
  return true;
}

void UpdateLocalUserMuted::InternalSwap(UpdateLocalUserMuted* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdateLocalUserMuted, _impl_.muted_)
      + sizeof(UpdateLocalUserMuted::_impl_.muted_)
      - PROTOBUF_FIELD_OFFSET(UpdateLocalUserMuted, _impl_.spaceconn_)>(
          reinterpret_cast<char*>(&_impl_.spaceconn_),
          reinterpret_cast<char*>(&other->_impl_.spaceconn_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateLocalUserMuted::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_relay_2eproto_getter, &descriptor_table_relay_2eproto_once,
      file_level_metadata_relay_2eproto[50]);
}

// ===================================================================

class UpdateLocalUserCoPresence::_Internal {
 public:
  static const ::ServerData::CavrnusSpaceConnection& spaceconn(const UpdateLocalUserCoPresence* msg);
  static const ::ServerData::TransformPropertyValue& localuserroottransform(const UpdateLocalUserCoPresence* msg);
};

const ::ServerData::CavrnusSpaceConnection&
UpdateLocalUserCoPresence::_Internal::spaceconn(const UpdateLocalUserCoPresence* msg) {
  return *msg->_impl_.spaceconn_;
}
const ::ServerData::TransformPropertyValue&
UpdateLocalUserCoPresence::_Internal::localuserroottransform(const UpdateLocalUserCoPresence* msg) {
  return *msg->_impl_.localuserroottransform_;
}
void UpdateLocalUserCoPresence::clear_spaceconn() {
  if (GetArenaForAllocation() == nullptr && _impl_.spaceconn_ != nullptr) {
    delete _impl_.spaceconn_;
  }
  _impl_.spaceconn_ = nullptr;
}
UpdateLocalUserCoPresence::UpdateLocalUserCoPresence(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ServerData.UpdateLocalUserCoPresence)
}
UpdateLocalUserCoPresence::UpdateLocalUserCoPresence(const UpdateLocalUserCoPresence& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UpdateLocalUserCoPresence* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.spaceconn_){nullptr}
    , decltype(_impl_.localuserroottransform_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_spaceconn()) {
    _this->_impl_.spaceconn_ = new ::ServerData::CavrnusSpaceConnection(*from._impl_.spaceconn_);
  }
  if (from._internal_has_localuserroottransform()) {
    _this->_impl_.localuserroottransform_ = new ::ServerData::TransformPropertyValue(*from._impl_.localuserroottransform_);
  }
  // @@protoc_insertion_point(copy_constructor:ServerData.UpdateLocalUserCoPresence)
}

inline void UpdateLocalUserCoPresence::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.spaceconn_){nullptr}
    , decltype(_impl_.localuserroottransform_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

UpdateLocalUserCoPresence::~UpdateLocalUserCoPresence() {
  // @@protoc_insertion_point(destructor:ServerData.UpdateLocalUserCoPresence)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UpdateLocalUserCoPresence::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.spaceconn_;
  if (this != internal_default_instance()) delete _impl_.localuserroottransform_;
}

void UpdateLocalUserCoPresence::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UpdateLocalUserCoPresence::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerData.UpdateLocalUserCoPresence)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.spaceconn_ != nullptr) {
    delete _impl_.spaceconn_;
  }
  _impl_.spaceconn_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.localuserroottransform_ != nullptr) {
    delete _impl_.localuserroottransform_;
  }
  _impl_.localuserroottransform_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateLocalUserCoPresence::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .ServerData.CavrnusSpaceConnection spaceConn = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_spaceconn(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ServerData.TransformPropertyValue localUserRootTransform = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_localuserroottransform(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateLocalUserCoPresence::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ServerData.UpdateLocalUserCoPresence)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .ServerData.CavrnusSpaceConnection spaceConn = 1;
  if (this->_internal_has_spaceconn()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::spaceconn(this),
        _Internal::spaceconn(this).GetCachedSize(), target, stream);
  }

  // .ServerData.TransformPropertyValue localUserRootTransform = 10;
  if (this->_internal_has_localuserroottransform()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(10, _Internal::localuserroottransform(this),
        _Internal::localuserroottransform(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerData.UpdateLocalUserCoPresence)
  return target;
}

size_t UpdateLocalUserCoPresence::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerData.UpdateLocalUserCoPresence)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .ServerData.CavrnusSpaceConnection spaceConn = 1;
  if (this->_internal_has_spaceconn()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.spaceconn_);
  }

  // .ServerData.TransformPropertyValue localUserRootTransform = 10;
  if (this->_internal_has_localuserroottransform()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.localuserroottransform_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateLocalUserCoPresence::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UpdateLocalUserCoPresence::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateLocalUserCoPresence::GetClassData() const { return &_class_data_; }


void UpdateLocalUserCoPresence::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UpdateLocalUserCoPresence*>(&to_msg);
  auto& from = static_cast<const UpdateLocalUserCoPresence&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ServerData.UpdateLocalUserCoPresence)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_spaceconn()) {
    _this->_internal_mutable_spaceconn()->::ServerData::CavrnusSpaceConnection::MergeFrom(
        from._internal_spaceconn());
  }
  if (from._internal_has_localuserroottransform()) {
    _this->_internal_mutable_localuserroottransform()->::ServerData::TransformPropertyValue::MergeFrom(
        from._internal_localuserroottransform());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateLocalUserCoPresence::CopyFrom(const UpdateLocalUserCoPresence& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerData.UpdateLocalUserCoPresence)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateLocalUserCoPresence::IsInitialized() const {
  return true;
}

void UpdateLocalUserCoPresence::InternalSwap(UpdateLocalUserCoPresence* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdateLocalUserCoPresence, _impl_.localuserroottransform_)
      + sizeof(UpdateLocalUserCoPresence::_impl_.localuserroottransform_)
      - PROTOBUF_FIELD_OFFSET(UpdateLocalUserCoPresence, _impl_.spaceconn_)>(
          reinterpret_cast<char*>(&_impl_.spaceconn_),
          reinterpret_cast<char*>(&other->_impl_.spaceconn_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateLocalUserCoPresence::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_relay_2eproto_getter, &descriptor_table_relay_2eproto_once,
      file_level_metadata_relay_2eproto[51]);
}

// ===================================================================

class UpdateLocalUserStreamState::_Internal {
 public:
  static const ::ServerData::CavrnusSpaceConnection& spaceconn(const UpdateLocalUserStreamState* msg);
};

const ::ServerData::CavrnusSpaceConnection&
UpdateLocalUserStreamState::_Internal::spaceconn(const UpdateLocalUserStreamState* msg) {
  return *msg->_impl_.spaceconn_;
}
void UpdateLocalUserStreamState::clear_spaceconn() {
  if (GetArenaForAllocation() == nullptr && _impl_.spaceconn_ != nullptr) {
    delete _impl_.spaceconn_;
  }
  _impl_.spaceconn_ = nullptr;
}
UpdateLocalUserStreamState::UpdateLocalUserStreamState(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ServerData.UpdateLocalUserStreamState)
}
UpdateLocalUserStreamState::UpdateLocalUserStreamState(const UpdateLocalUserStreamState& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UpdateLocalUserStreamState* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.spaceconn_){nullptr}
    , decltype(_impl_.streaming_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_spaceconn()) {
    _this->_impl_.spaceconn_ = new ::ServerData::CavrnusSpaceConnection(*from._impl_.spaceconn_);
  }
  _this->_impl_.streaming_ = from._impl_.streaming_;
  // @@protoc_insertion_point(copy_constructor:ServerData.UpdateLocalUserStreamState)
}

inline void UpdateLocalUserStreamState::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.spaceconn_){nullptr}
    , decltype(_impl_.streaming_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

UpdateLocalUserStreamState::~UpdateLocalUserStreamState() {
  // @@protoc_insertion_point(destructor:ServerData.UpdateLocalUserStreamState)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UpdateLocalUserStreamState::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.spaceconn_;
}

void UpdateLocalUserStreamState::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UpdateLocalUserStreamState::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerData.UpdateLocalUserStreamState)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.spaceconn_ != nullptr) {
    delete _impl_.spaceconn_;
  }
  _impl_.spaceconn_ = nullptr;
  _impl_.streaming_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateLocalUserStreamState::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .ServerData.CavrnusSpaceConnection spaceConn = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_spaceconn(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool streaming = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.streaming_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateLocalUserStreamState::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ServerData.UpdateLocalUserStreamState)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .ServerData.CavrnusSpaceConnection spaceConn = 1;
  if (this->_internal_has_spaceconn()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::spaceconn(this),
        _Internal::spaceconn(this).GetCachedSize(), target, stream);
  }

  // bool streaming = 2;
  if (this->_internal_streaming() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_streaming(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerData.UpdateLocalUserStreamState)
  return target;
}

size_t UpdateLocalUserStreamState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerData.UpdateLocalUserStreamState)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .ServerData.CavrnusSpaceConnection spaceConn = 1;
  if (this->_internal_has_spaceconn()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.spaceconn_);
  }

  // bool streaming = 2;
  if (this->_internal_streaming() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateLocalUserStreamState::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UpdateLocalUserStreamState::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateLocalUserStreamState::GetClassData() const { return &_class_data_; }


void UpdateLocalUserStreamState::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UpdateLocalUserStreamState*>(&to_msg);
  auto& from = static_cast<const UpdateLocalUserStreamState&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ServerData.UpdateLocalUserStreamState)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_spaceconn()) {
    _this->_internal_mutable_spaceconn()->::ServerData::CavrnusSpaceConnection::MergeFrom(
        from._internal_spaceconn());
  }
  if (from._internal_streaming() != 0) {
    _this->_internal_set_streaming(from._internal_streaming());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateLocalUserStreamState::CopyFrom(const UpdateLocalUserStreamState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerData.UpdateLocalUserStreamState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateLocalUserStreamState::IsInitialized() const {
  return true;
}

void UpdateLocalUserStreamState::InternalSwap(UpdateLocalUserStreamState* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdateLocalUserStreamState, _impl_.streaming_)
      + sizeof(UpdateLocalUserStreamState::_impl_.streaming_)
      - PROTOBUF_FIELD_OFFSET(UpdateLocalUserStreamState, _impl_.spaceconn_)>(
          reinterpret_cast<char*>(&_impl_.spaceconn_),
          reinterpret_cast<char*>(&other->_impl_.spaceconn_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateLocalUserStreamState::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_relay_2eproto_getter, &descriptor_table_relay_2eproto_once,
      file_level_metadata_relay_2eproto[52]);
}

// ===================================================================

class PermissionStatusReq::_Internal {
 public:
  using HasBits = decltype(std::declval<PermissionStatusReq>()._impl_._has_bits_);
  static const ::ServerData::CavrnusSpaceConnection& spaceconn(const PermissionStatusReq* msg);
  static void set_has_spaceconn(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::ServerData::CavrnusSpaceConnection&
PermissionStatusReq::_Internal::spaceconn(const PermissionStatusReq* msg) {
  return *msg->_impl_.spaceconn_;
}
void PermissionStatusReq::clear_spaceconn() {
  if (_impl_.spaceconn_ != nullptr) _impl_.spaceconn_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
PermissionStatusReq::PermissionStatusReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ServerData.PermissionStatusReq)
}
PermissionStatusReq::PermissionStatusReq(const PermissionStatusReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PermissionStatusReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.permission_){}
    , decltype(_impl_.spaceconn_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.permission_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.permission_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_permission().empty()) {
    _this->_impl_.permission_.Set(from._internal_permission(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_spaceconn()) {
    _this->_impl_.spaceconn_ = new ::ServerData::CavrnusSpaceConnection(*from._impl_.spaceconn_);
  }
  // @@protoc_insertion_point(copy_constructor:ServerData.PermissionStatusReq)
}

inline void PermissionStatusReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.permission_){}
    , decltype(_impl_.spaceconn_){nullptr}
  };
  _impl_.permission_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.permission_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

PermissionStatusReq::~PermissionStatusReq() {
  // @@protoc_insertion_point(destructor:ServerData.PermissionStatusReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PermissionStatusReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.permission_.Destroy();
  if (this != internal_default_instance()) delete _impl_.spaceconn_;
}

void PermissionStatusReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PermissionStatusReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerData.PermissionStatusReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.permission_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.spaceconn_ != nullptr);
    _impl_.spaceconn_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PermissionStatusReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .ServerData.CavrnusSpaceConnection spaceConn = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_spaceconn(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string permission = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_permission();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ServerData.PermissionStatusReq.permission"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PermissionStatusReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ServerData.PermissionStatusReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional .ServerData.CavrnusSpaceConnection spaceConn = 1;
  if (_internal_has_spaceconn()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::spaceconn(this),
        _Internal::spaceconn(this).GetCachedSize(), target, stream);
  }

  // string permission = 2;
  if (!this->_internal_permission().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_permission().data(), static_cast<int>(this->_internal_permission().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ServerData.PermissionStatusReq.permission");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_permission(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerData.PermissionStatusReq)
  return target;
}

size_t PermissionStatusReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerData.PermissionStatusReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string permission = 2;
  if (!this->_internal_permission().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_permission());
  }

  // optional .ServerData.CavrnusSpaceConnection spaceConn = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.spaceconn_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PermissionStatusReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PermissionStatusReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PermissionStatusReq::GetClassData() const { return &_class_data_; }


void PermissionStatusReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PermissionStatusReq*>(&to_msg);
  auto& from = static_cast<const PermissionStatusReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ServerData.PermissionStatusReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_permission().empty()) {
    _this->_internal_set_permission(from._internal_permission());
  }
  if (from._internal_has_spaceconn()) {
    _this->_internal_mutable_spaceconn()->::ServerData::CavrnusSpaceConnection::MergeFrom(
        from._internal_spaceconn());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PermissionStatusReq::CopyFrom(const PermissionStatusReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerData.PermissionStatusReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PermissionStatusReq::IsInitialized() const {
  return true;
}

void PermissionStatusReq::InternalSwap(PermissionStatusReq* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.permission_, lhs_arena,
      &other->_impl_.permission_, rhs_arena
  );
  swap(_impl_.spaceconn_, other->_impl_.spaceconn_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PermissionStatusReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_relay_2eproto_getter, &descriptor_table_relay_2eproto_once,
      file_level_metadata_relay_2eproto[53]);
}

// ===================================================================

class PermissionStatus::_Internal {
 public:
  using HasBits = decltype(std::declval<PermissionStatus>()._impl_._has_bits_);
  static const ::ServerData::CavrnusSpaceConnection& spaceconn(const PermissionStatus* msg);
  static void set_has_spaceconn(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::ServerData::CavrnusSpaceConnection&
PermissionStatus::_Internal::spaceconn(const PermissionStatus* msg) {
  return *msg->_impl_.spaceconn_;
}
void PermissionStatus::clear_spaceconn() {
  if (_impl_.spaceconn_ != nullptr) _impl_.spaceconn_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
PermissionStatus::PermissionStatus(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ServerData.PermissionStatus)
}
PermissionStatus::PermissionStatus(const PermissionStatus& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PermissionStatus* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.permission_){}
    , decltype(_impl_.spaceconn_){nullptr}
    , decltype(_impl_.value_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.permission_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.permission_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_permission().empty()) {
    _this->_impl_.permission_.Set(from._internal_permission(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_spaceconn()) {
    _this->_impl_.spaceconn_ = new ::ServerData::CavrnusSpaceConnection(*from._impl_.spaceconn_);
  }
  _this->_impl_.value_ = from._impl_.value_;
  // @@protoc_insertion_point(copy_constructor:ServerData.PermissionStatus)
}

inline void PermissionStatus::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.permission_){}
    , decltype(_impl_.spaceconn_){nullptr}
    , decltype(_impl_.value_){false}
  };
  _impl_.permission_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.permission_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

PermissionStatus::~PermissionStatus() {
  // @@protoc_insertion_point(destructor:ServerData.PermissionStatus)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PermissionStatus::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.permission_.Destroy();
  if (this != internal_default_instance()) delete _impl_.spaceconn_;
}

void PermissionStatus::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PermissionStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerData.PermissionStatus)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.permission_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.spaceconn_ != nullptr);
    _impl_.spaceconn_->Clear();
  }
  _impl_.value_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PermissionStatus::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .ServerData.CavrnusSpaceConnection spaceConn = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_spaceconn(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string permission = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_permission();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ServerData.PermissionStatus.permission"));
        } else
          goto handle_unusual;
        continue;
      // bool value = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.value_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PermissionStatus::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ServerData.PermissionStatus)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional .ServerData.CavrnusSpaceConnection spaceConn = 1;
  if (_internal_has_spaceconn()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::spaceconn(this),
        _Internal::spaceconn(this).GetCachedSize(), target, stream);
  }

  // string permission = 2;
  if (!this->_internal_permission().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_permission().data(), static_cast<int>(this->_internal_permission().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ServerData.PermissionStatus.permission");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_permission(), target);
  }

  // bool value = 3;
  if (this->_internal_value() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerData.PermissionStatus)
  return target;
}

size_t PermissionStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerData.PermissionStatus)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string permission = 2;
  if (!this->_internal_permission().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_permission());
  }

  // optional .ServerData.CavrnusSpaceConnection spaceConn = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.spaceconn_);
  }

  // bool value = 3;
  if (this->_internal_value() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PermissionStatus::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PermissionStatus::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PermissionStatus::GetClassData() const { return &_class_data_; }


void PermissionStatus::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PermissionStatus*>(&to_msg);
  auto& from = static_cast<const PermissionStatus&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ServerData.PermissionStatus)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_permission().empty()) {
    _this->_internal_set_permission(from._internal_permission());
  }
  if (from._internal_has_spaceconn()) {
    _this->_internal_mutable_spaceconn()->::ServerData::CavrnusSpaceConnection::MergeFrom(
        from._internal_spaceconn());
  }
  if (from._internal_value() != 0) {
    _this->_internal_set_value(from._internal_value());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PermissionStatus::CopyFrom(const PermissionStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerData.PermissionStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PermissionStatus::IsInitialized() const {
  return true;
}

void PermissionStatus::InternalSwap(PermissionStatus* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.permission_, lhs_arena,
      &other->_impl_.permission_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PermissionStatus, _impl_.value_)
      + sizeof(PermissionStatus::_impl_.value_)
      - PROTOBUF_FIELD_OFFSET(PermissionStatus, _impl_.spaceconn_)>(
          reinterpret_cast<char*>(&_impl_.spaceconn_),
          reinterpret_cast<char*>(&other->_impl_.spaceconn_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PermissionStatus::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_relay_2eproto_getter, &descriptor_table_relay_2eproto_once,
      file_level_metadata_relay_2eproto[54]);
}

// ===================================================================

class AllJoinableSpacesReq::_Internal {
 public:
};

AllJoinableSpacesReq::AllJoinableSpacesReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ServerData.AllJoinableSpacesReq)
}
AllJoinableSpacesReq::AllJoinableSpacesReq(const AllJoinableSpacesReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AllJoinableSpacesReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.reqid_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.reqid_ = from._impl_.reqid_;
  // @@protoc_insertion_point(copy_constructor:ServerData.AllJoinableSpacesReq)
}

inline void AllJoinableSpacesReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.reqid_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

AllJoinableSpacesReq::~AllJoinableSpacesReq() {
  // @@protoc_insertion_point(destructor:ServerData.AllJoinableSpacesReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AllJoinableSpacesReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void AllJoinableSpacesReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AllJoinableSpacesReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerData.AllJoinableSpacesReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.reqid_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AllJoinableSpacesReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 reqId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.reqid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AllJoinableSpacesReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ServerData.AllJoinableSpacesReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 reqId = 1;
  if (this->_internal_reqid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_reqid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerData.AllJoinableSpacesReq)
  return target;
}

size_t AllJoinableSpacesReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerData.AllJoinableSpacesReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 reqId = 1;
  if (this->_internal_reqid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_reqid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AllJoinableSpacesReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AllJoinableSpacesReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AllJoinableSpacesReq::GetClassData() const { return &_class_data_; }


void AllJoinableSpacesReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AllJoinableSpacesReq*>(&to_msg);
  auto& from = static_cast<const AllJoinableSpacesReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ServerData.AllJoinableSpacesReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_reqid() != 0) {
    _this->_internal_set_reqid(from._internal_reqid());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AllJoinableSpacesReq::CopyFrom(const AllJoinableSpacesReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerData.AllJoinableSpacesReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AllJoinableSpacesReq::IsInitialized() const {
  return true;
}

void AllJoinableSpacesReq::InternalSwap(AllJoinableSpacesReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.reqid_, other->_impl_.reqid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AllJoinableSpacesReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_relay_2eproto_getter, &descriptor_table_relay_2eproto_once,
      file_level_metadata_relay_2eproto[55]);
}

// ===================================================================

class AllJoinableSpacesResp::_Internal {
 public:
};

AllJoinableSpacesResp::AllJoinableSpacesResp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ServerData.AllJoinableSpacesResp)
}
AllJoinableSpacesResp::AllJoinableSpacesResp(const AllJoinableSpacesResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AllJoinableSpacesResp* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.availablespaces_){from._impl_.availablespaces_}
    , decltype(_impl_.reqid_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.reqid_ = from._impl_.reqid_;
  // @@protoc_insertion_point(copy_constructor:ServerData.AllJoinableSpacesResp)
}

inline void AllJoinableSpacesResp::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.availablespaces_){arena}
    , decltype(_impl_.reqid_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

AllJoinableSpacesResp::~AllJoinableSpacesResp() {
  // @@protoc_insertion_point(destructor:ServerData.AllJoinableSpacesResp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AllJoinableSpacesResp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.availablespaces_.~RepeatedPtrField();
}

void AllJoinableSpacesResp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AllJoinableSpacesResp::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerData.AllJoinableSpacesResp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.availablespaces_.Clear();
  _impl_.reqid_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AllJoinableSpacesResp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 reqId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.reqid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .ServerData.SpaceInfo availableSpaces = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_availablespaces(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<82>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AllJoinableSpacesResp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ServerData.AllJoinableSpacesResp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 reqId = 1;
  if (this->_internal_reqid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_reqid(), target);
  }

  // repeated .ServerData.SpaceInfo availableSpaces = 10;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_availablespaces_size()); i < n; i++) {
    const auto& repfield = this->_internal_availablespaces(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(10, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerData.AllJoinableSpacesResp)
  return target;
}

size_t AllJoinableSpacesResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerData.AllJoinableSpacesResp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ServerData.SpaceInfo availableSpaces = 10;
  total_size += 1UL * this->_internal_availablespaces_size();
  for (const auto& msg : this->_impl_.availablespaces_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // int32 reqId = 1;
  if (this->_internal_reqid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_reqid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AllJoinableSpacesResp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AllJoinableSpacesResp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AllJoinableSpacesResp::GetClassData() const { return &_class_data_; }


void AllJoinableSpacesResp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AllJoinableSpacesResp*>(&to_msg);
  auto& from = static_cast<const AllJoinableSpacesResp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ServerData.AllJoinableSpacesResp)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.availablespaces_.MergeFrom(from._impl_.availablespaces_);
  if (from._internal_reqid() != 0) {
    _this->_internal_set_reqid(from._internal_reqid());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AllJoinableSpacesResp::CopyFrom(const AllJoinableSpacesResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerData.AllJoinableSpacesResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AllJoinableSpacesResp::IsInitialized() const {
  return true;
}

void AllJoinableSpacesResp::InternalSwap(AllJoinableSpacesResp* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.availablespaces_.InternalSwap(&other->_impl_.availablespaces_);
  swap(_impl_.reqid_, other->_impl_.reqid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AllJoinableSpacesResp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_relay_2eproto_getter, &descriptor_table_relay_2eproto_once,
      file_level_metadata_relay_2eproto[56]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace ServerData
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::ServerData::RelayClientMessageBatch*
Arena::CreateMaybeMessage< ::ServerData::RelayClientMessageBatch >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ServerData::RelayClientMessageBatch >(arena);
}
template<> PROTOBUF_NOINLINE ::ServerData::RelayClientMessage*
Arena::CreateMaybeMessage< ::ServerData::RelayClientMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ServerData::RelayClientMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::ServerData::RelayRemoteMessageBatch*
Arena::CreateMaybeMessage< ::ServerData::RelayRemoteMessageBatch >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ServerData::RelayRemoteMessageBatch >(arena);
}
template<> PROTOBUF_NOINLINE ::ServerData::RelayRemoteMessage*
Arena::CreateMaybeMessage< ::ServerData::RelayRemoteMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ServerData::RelayRemoteMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::ServerData::KeepAlive*
Arena::CreateMaybeMessage< ::ServerData::KeepAlive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ServerData::KeepAlive >(arena);
}
template<> PROTOBUF_NOINLINE ::ServerData::UpdateTime*
Arena::CreateMaybeMessage< ::ServerData::UpdateTime >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ServerData::UpdateTime >(arena);
}
template<> PROTOBUF_NOINLINE ::ServerData::StatusMessage*
Arena::CreateMaybeMessage< ::ServerData::StatusMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ServerData::StatusMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::ServerData::AuthenticateReq*
Arena::CreateMaybeMessage< ::ServerData::AuthenticateReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ServerData::AuthenticateReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ServerData::AuthenticateGuestReq*
Arena::CreateMaybeMessage< ::ServerData::AuthenticateGuestReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ServerData::AuthenticateGuestReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ServerData::AuthenticateResp*
Arena::CreateMaybeMessage< ::ServerData::AuthenticateResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ServerData::AuthenticateResp >(arena);
}
template<> PROTOBUF_NOINLINE ::ServerData::AuthenticateGuestResp*
Arena::CreateMaybeMessage< ::ServerData::AuthenticateGuestResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ServerData::AuthenticateGuestResp >(arena);
}
template<> PROTOBUF_NOINLINE ::ServerData::AuthenticateWithLinkReq*
Arena::CreateMaybeMessage< ::ServerData::AuthenticateWithLinkReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ServerData::AuthenticateWithLinkReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ServerData::AuthenticateWithLinkResp*
Arena::CreateMaybeMessage< ::ServerData::AuthenticateWithLinkResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ServerData::AuthenticateWithLinkResp >(arena);
}
template<> PROTOBUF_NOINLINE ::ServerData::ExitAllSpacesAndLogoutReq*
Arena::CreateMaybeMessage< ::ServerData::ExitAllSpacesAndLogoutReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ServerData::ExitAllSpacesAndLogoutReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ServerData::ExitAllSpacesAndLogoutResp*
Arena::CreateMaybeMessage< ::ServerData::ExitAllSpacesAndLogoutResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ServerData::ExitAllSpacesAndLogoutResp >(arena);
}
template<> PROTOBUF_NOINLINE ::ServerData::JoinSpaceFromIdReq*
Arena::CreateMaybeMessage< ::ServerData::JoinSpaceFromIdReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ServerData::JoinSpaceFromIdReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ServerData::JoinSpaceFromIdResp*
Arena::CreateMaybeMessage< ::ServerData::JoinSpaceFromIdResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ServerData::JoinSpaceFromIdResp >(arena);
}
template<> PROTOBUF_NOINLINE ::ServerData::ShutdownSpaceConnectionReq*
Arena::CreateMaybeMessage< ::ServerData::ShutdownSpaceConnectionReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ServerData::ShutdownSpaceConnectionReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ServerData::ShutdownSpaceConnectionResp*
Arena::CreateMaybeMessage< ::ServerData::ShutdownSpaceConnectionResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ServerData::ShutdownSpaceConnectionResp >(arena);
}
template<> PROTOBUF_NOINLINE ::ServerData::PropertyValue*
Arena::CreateMaybeMessage< ::ServerData::PropertyValue >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ServerData::PropertyValue >(arena);
}
template<> PROTOBUF_NOINLINE ::ServerData::DefinePropertyDefaultValue*
Arena::CreateMaybeMessage< ::ServerData::DefinePropertyDefaultValue >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ServerData::DefinePropertyDefaultValue >(arena);
}
template<> PROTOBUF_NOINLINE ::ServerData::PostPropertyUpdate*
Arena::CreateMaybeMessage< ::ServerData::PostPropertyUpdate >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ServerData::PostPropertyUpdate >(arena);
}
template<> PROTOBUF_NOINLINE ::ServerData::BeginTransientPropertyUpdate*
Arena::CreateMaybeMessage< ::ServerData::BeginTransientPropertyUpdate >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ServerData::BeginTransientPropertyUpdate >(arena);
}
template<> PROTOBUF_NOINLINE ::ServerData::ContinueTransientPropertyUpdate*
Arena::CreateMaybeMessage< ::ServerData::ContinueTransientPropertyUpdate >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ServerData::ContinueTransientPropertyUpdate >(arena);
}
template<> PROTOBUF_NOINLINE ::ServerData::FinalizeTransientPropertyUpdate*
Arena::CreateMaybeMessage< ::ServerData::FinalizeTransientPropertyUpdate >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ServerData::FinalizeTransientPropertyUpdate >(arena);
}
template<> PROTOBUF_NOINLINE ::ServerData::CancelTransientPropertyUpdate*
Arena::CreateMaybeMessage< ::ServerData::CancelTransientPropertyUpdate >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ServerData::CancelTransientPropertyUpdate >(arena);
}
template<> PROTOBUF_NOINLINE ::ServerData::TransformPropertyValue*
Arena::CreateMaybeMessage< ::ServerData::TransformPropertyValue >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ServerData::TransformPropertyValue >(arena);
}
template<> PROTOBUF_NOINLINE ::ServerData::GetAudioInputDevicesReq*
Arena::CreateMaybeMessage< ::ServerData::GetAudioInputDevicesReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ServerData::GetAudioInputDevicesReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ServerData::GetAudioOutputDevicesReq*
Arena::CreateMaybeMessage< ::ServerData::GetAudioOutputDevicesReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ServerData::GetAudioOutputDevicesReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ServerData::GetVideoInputDevicesReq*
Arena::CreateMaybeMessage< ::ServerData::GetVideoInputDevicesReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ServerData::GetVideoInputDevicesReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ServerData::GetAudioInputDevicesResp*
Arena::CreateMaybeMessage< ::ServerData::GetAudioInputDevicesResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ServerData::GetAudioInputDevicesResp >(arena);
}
template<> PROTOBUF_NOINLINE ::ServerData::GetAudioOutputDevicesResp*
Arena::CreateMaybeMessage< ::ServerData::GetAudioOutputDevicesResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ServerData::GetAudioOutputDevicesResp >(arena);
}
template<> PROTOBUF_NOINLINE ::ServerData::GetVideoInputDevicesResp*
Arena::CreateMaybeMessage< ::ServerData::GetVideoInputDevicesResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ServerData::GetVideoInputDevicesResp >(arena);
}
template<> PROTOBUF_NOINLINE ::ServerData::SetAudioInputDeviceReq*
Arena::CreateMaybeMessage< ::ServerData::SetAudioInputDeviceReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ServerData::SetAudioInputDeviceReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ServerData::SetAudioOutputDeviceReq*
Arena::CreateMaybeMessage< ::ServerData::SetAudioOutputDeviceReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ServerData::SetAudioOutputDeviceReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ServerData::SetVideoInputDeviceReq*
Arena::CreateMaybeMessage< ::ServerData::SetVideoInputDeviceReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ServerData::SetVideoInputDeviceReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ServerData::SetAudioInputDeviceResp*
Arena::CreateMaybeMessage< ::ServerData::SetAudioInputDeviceResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ServerData::SetAudioInputDeviceResp >(arena);
}
template<> PROTOBUF_NOINLINE ::ServerData::SetAudioOutputDeviceResp*
Arena::CreateMaybeMessage< ::ServerData::SetAudioOutputDeviceResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ServerData::SetAudioOutputDeviceResp >(arena);
}
template<> PROTOBUF_NOINLINE ::ServerData::SetVideoInputDeviceResp*
Arena::CreateMaybeMessage< ::ServerData::SetVideoInputDeviceResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ServerData::SetVideoInputDeviceResp >(arena);
}
template<> PROTOBUF_NOINLINE ::ServerData::PostCreateObject*
Arena::CreateMaybeMessage< ::ServerData::PostCreateObject >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ServerData::PostCreateObject >(arena);
}
template<> PROTOBUF_NOINLINE ::ServerData::PostRemoveObject*
Arena::CreateMaybeMessage< ::ServerData::PostRemoveObject >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ServerData::PostRemoveObject >(arena);
}
template<> PROTOBUF_NOINLINE ::ServerData::PropMetadataStatus*
Arena::CreateMaybeMessage< ::ServerData::PropMetadataStatus >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ServerData::PropMetadataStatus >(arena);
}
template<> PROTOBUF_NOINLINE ::ServerData::PropertyValueStatus*
Arena::CreateMaybeMessage< ::ServerData::PropertyValueStatus >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ServerData::PropertyValueStatus >(arena);
}
template<> PROTOBUF_NOINLINE ::ServerData::LocalPropertyHandledResp*
Arena::CreateMaybeMessage< ::ServerData::LocalPropertyHandledResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ServerData::LocalPropertyHandledResp >(arena);
}
template<> PROTOBUF_NOINLINE ::ServerData::UserAdded*
Arena::CreateMaybeMessage< ::ServerData::UserAdded >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ServerData::UserAdded >(arena);
}
template<> PROTOBUF_NOINLINE ::ServerData::UserRemoved*
Arena::CreateMaybeMessage< ::ServerData::UserRemoved >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ServerData::UserRemoved >(arena);
}
template<> PROTOBUF_NOINLINE ::ServerData::UserVideoFrame*
Arena::CreateMaybeMessage< ::ServerData::UserVideoFrame >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ServerData::UserVideoFrame >(arena);
}
template<> PROTOBUF_NOINLINE ::ServerData::SpaceInfo*
Arena::CreateMaybeMessage< ::ServerData::SpaceInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ServerData::SpaceInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::ServerData::ObjectAdded*
Arena::CreateMaybeMessage< ::ServerData::ObjectAdded >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ServerData::ObjectAdded >(arena);
}
template<> PROTOBUF_NOINLINE ::ServerData::ObjectRemoved*
Arena::CreateMaybeMessage< ::ServerData::ObjectRemoved >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ServerData::ObjectRemoved >(arena);
}
template<> PROTOBUF_NOINLINE ::ServerData::UpdateLocalUserMuted*
Arena::CreateMaybeMessage< ::ServerData::UpdateLocalUserMuted >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ServerData::UpdateLocalUserMuted >(arena);
}
template<> PROTOBUF_NOINLINE ::ServerData::UpdateLocalUserCoPresence*
Arena::CreateMaybeMessage< ::ServerData::UpdateLocalUserCoPresence >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ServerData::UpdateLocalUserCoPresence >(arena);
}
template<> PROTOBUF_NOINLINE ::ServerData::UpdateLocalUserStreamState*
Arena::CreateMaybeMessage< ::ServerData::UpdateLocalUserStreamState >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ServerData::UpdateLocalUserStreamState >(arena);
}
template<> PROTOBUF_NOINLINE ::ServerData::PermissionStatusReq*
Arena::CreateMaybeMessage< ::ServerData::PermissionStatusReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ServerData::PermissionStatusReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ServerData::PermissionStatus*
Arena::CreateMaybeMessage< ::ServerData::PermissionStatus >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ServerData::PermissionStatus >(arena);
}
template<> PROTOBUF_NOINLINE ::ServerData::AllJoinableSpacesReq*
Arena::CreateMaybeMessage< ::ServerData::AllJoinableSpacesReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ServerData::AllJoinableSpacesReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ServerData::AllJoinableSpacesResp*
Arena::CreateMaybeMessage< ::ServerData::AllJoinableSpacesResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ServerData::AllJoinableSpacesResp >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>

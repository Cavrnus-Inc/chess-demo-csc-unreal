// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: properties.proto

#include "properties.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace Property {
PROTOBUF_CONSTEXPR PropertyIdentifier::PropertyIdentifier(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct PropertyIdentifierDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PropertyIdentifierDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PropertyIdentifierDefaultTypeInternal() {}
  union {
    PropertyIdentifier _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PropertyIdentifierDefaultTypeInternal _PropertyIdentifier_default_instance_;
PROTOBUF_CONSTEXPR AnyPropertyValue::AnyPropertyValue(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.PropertyType_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct AnyPropertyValueDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AnyPropertyValueDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AnyPropertyValueDefaultTypeInternal() {}
  union {
    AnyPropertyValue _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AnyPropertyValueDefaultTypeInternal _AnyPropertyValue_default_instance_;
PROTOBUF_CONSTEXPR GeneratorMetadata::GeneratorMetadata(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.description_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.hidden_)*/false} {}
struct GeneratorMetadataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GeneratorMetadataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GeneratorMetadataDefaultTypeInternal() {}
  union {
    GeneratorMetadata _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GeneratorMetadataDefaultTypeInternal _GeneratorMetadata_default_instance_;
PROTOBUF_CONSTEXPR PropertyMetadata::PropertyMetadata(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.category_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.description_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.uivisibility_)*/nullptr
  , /*decltype(_impl_.categoryorder_)*/0
  , /*decltype(_impl_.internalorder_)*/0
  , /*decltype(_impl_.isreadonly_)*/false
  , /*decltype(_impl_.isadvanced_)*/false
  , /*decltype(_impl_.syncmethod_)*/0} {}
struct PropertyMetadataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PropertyMetadataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PropertyMetadataDefaultTypeInternal() {}
  union {
    PropertyMetadata _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PropertyMetadataDefaultTypeInternal _PropertyMetadata_default_instance_;
PROTOBUF_CONSTEXPR AnyPropertyDeclaration::AnyPropertyDeclaration(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ValueType_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct AnyPropertyDeclarationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AnyPropertyDeclarationDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AnyPropertyDeclarationDefaultTypeInternal() {}
  union {
    AnyPropertyDeclaration _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AnyPropertyDeclarationDefaultTypeInternal _AnyPropertyDeclaration_default_instance_;
PROTOBUF_CONSTEXPR Interpolation::Interpolation(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.easeout_)*/0
  , /*decltype(_impl_.easein_)*/0
  , /*decltype(_impl_.duration_)*/0
  , /*decltype(_impl_.delay_)*/0} {}
struct InterpolationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InterpolationDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~InterpolationDefaultTypeInternal() {}
  union {
    Interpolation _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InterpolationDefaultTypeInternal _Interpolation_default_instance_;
PROTOBUF_CONSTEXPR ScalarPropertyAssignment::ScalarPropertyAssignment(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.assignmentid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.value_)*/nullptr
  , /*decltype(_impl_.method_)*/0
  , /*decltype(_impl_.overridingpriority_)*/0} {}
struct ScalarPropertyAssignmentDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ScalarPropertyAssignmentDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ScalarPropertyAssignmentDefaultTypeInternal() {}
  union {
    ScalarPropertyAssignment _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ScalarPropertyAssignmentDefaultTypeInternal _ScalarPropertyAssignment_default_instance_;
PROTOBUF_CONSTEXPR ScalarPropertyValue::ScalarPropertyValue(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ValueType_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct ScalarPropertyValueDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ScalarPropertyValueDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ScalarPropertyValueDefaultTypeInternal() {}
  union {
    ScalarPropertyValue _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ScalarPropertyValueDefaultTypeInternal _ScalarPropertyValue_default_instance_;
PROTOBUF_CONSTEXPR ScalarPropertyInterpolator::ScalarPropertyInterpolator(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.from_)*/nullptr
  , /*decltype(_impl_.to_)*/nullptr
  , /*decltype(_impl_.by_)*/nullptr
  , /*decltype(_impl_.t_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ScalarPropertyInterpolatorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ScalarPropertyInterpolatorDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ScalarPropertyInterpolatorDefaultTypeInternal() {}
  union {
    ScalarPropertyInterpolator _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ScalarPropertyInterpolatorDefaultTypeInternal _ScalarPropertyInterpolator_default_instance_;
PROTOBUF_CONSTEXPR ScalarPropertyPulse::ScalarPropertyPulse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.tsrc_)*/nullptr
  , /*decltype(_impl_.length_)*/nullptr
  , /*decltype(_impl_.min_)*/nullptr
  , /*decltype(_impl_.max_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ScalarPropertyPulseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ScalarPropertyPulseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ScalarPropertyPulseDefaultTypeInternal() {}
  union {
    ScalarPropertyPulse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ScalarPropertyPulseDefaultTypeInternal _ScalarPropertyPulse_default_instance_;
PROTOBUF_CONSTEXPR ScalarPropertyPlaybackBasic::ScalarPropertyPlaybackBasic(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.starttime_)*/0
  , /*decltype(_impl_.playing_)*/false
  , /*decltype(_impl_.speedwhileplaying_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ScalarPropertyPlaybackBasicDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ScalarPropertyPlaybackBasicDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ScalarPropertyPlaybackBasicDefaultTypeInternal() {}
  union {
    ScalarPropertyPlaybackBasic _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ScalarPropertyPlaybackBasicDefaultTypeInternal _ScalarPropertyPlaybackBasic_default_instance_;
PROTOBUF_CONSTEXPR ScalarPropertyPlayback::ScalarPropertyPlayback(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.tsrc_)*/nullptr
  , /*decltype(_impl_.starttime_)*/nullptr
  , /*decltype(_impl_.playing_)*/nullptr
  , /*decltype(_impl_.speedwhileplaying_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ScalarPropertyPlaybackDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ScalarPropertyPlaybackDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ScalarPropertyPlaybackDefaultTypeInternal() {}
  union {
    ScalarPropertyPlayback _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ScalarPropertyPlaybackDefaultTypeInternal _ScalarPropertyPlayback_default_instance_;
PROTOBUF_CONSTEXPR ScalarPropertyKeyframed_ScalarKeyframe::ScalarPropertyKeyframed_ScalarKeyframe(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.val_)*/nullptr
  , /*decltype(_impl_.t_)*/0
  , /*decltype(_impl_.tangentin_)*/0
  , /*decltype(_impl_.tangentout_)*/0} {}
struct ScalarPropertyKeyframed_ScalarKeyframeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ScalarPropertyKeyframed_ScalarKeyframeDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ScalarPropertyKeyframed_ScalarKeyframeDefaultTypeInternal() {}
  union {
    ScalarPropertyKeyframed_ScalarKeyframe _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ScalarPropertyKeyframed_ScalarKeyframeDefaultTypeInternal _ScalarPropertyKeyframed_ScalarKeyframe_default_instance_;
PROTOBUF_CONSTEXPR ScalarPropertyKeyframed::ScalarPropertyKeyframed(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.keys_)*/{}
  , /*decltype(_impl_.tsrc_)*/nullptr
  , /*decltype(_impl_.looping_)*/0
  , /*decltype(_impl_.tangentgen_)*/0} {}
struct ScalarPropertyKeyframedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ScalarPropertyKeyframedDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ScalarPropertyKeyframedDefaultTypeInternal() {}
  union {
    ScalarPropertyKeyframed _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ScalarPropertyKeyframedDefaultTypeInternal _ScalarPropertyKeyframed_default_instance_;
PROTOBUF_CONSTEXPR ScalarPropertyApproach::ScalarPropertyApproach(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.t_)*/nullptr
  , /*decltype(_impl_.to_)*/nullptr
  , /*decltype(_impl_.timetohalf_)*/nullptr
  , /*decltype(_impl_.start_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ScalarPropertyApproachDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ScalarPropertyApproachDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ScalarPropertyApproachDefaultTypeInternal() {}
  union {
    ScalarPropertyApproach _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ScalarPropertyApproachDefaultTypeInternal _ScalarPropertyApproach_default_instance_;
PROTOBUF_CONSTEXPR ScalarPropertyDeclaration::ScalarPropertyDeclaration(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.meta_)*/nullptr
  , /*decltype(_impl_.default__)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ScalarPropertyDeclarationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ScalarPropertyDeclarationDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ScalarPropertyDeclarationDefaultTypeInternal() {}
  union {
    ScalarPropertyDeclaration _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ScalarPropertyDeclarationDefaultTypeInternal _ScalarPropertyDeclaration_default_instance_;
PROTOBUF_CONSTEXPR ScalarEditingMetadata::ScalarEditingMetadata(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.playbacklengthref_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.scalartype_)*/0
  , /*decltype(_impl_.uiincrement_)*/0
  , /*decltype(_impl_.uiminimum_)*/0
  , /*decltype(_impl_.uimaximum_)*/0} {}
struct ScalarEditingMetadataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ScalarEditingMetadataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ScalarEditingMetadataDefaultTypeInternal() {}
  union {
    ScalarEditingMetadata _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ScalarEditingMetadataDefaultTypeInternal _ScalarEditingMetadata_default_instance_;
PROTOBUF_CONSTEXPR ScalarGeneratorMetadata::ScalarGeneratorMetadata(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.base_)*/nullptr
  , /*decltype(_impl_.edit_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ScalarGeneratorMetadataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ScalarGeneratorMetadataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ScalarGeneratorMetadataDefaultTypeInternal() {}
  union {
    ScalarGeneratorMetadata _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ScalarGeneratorMetadataDefaultTypeInternal _ScalarGeneratorMetadata_default_instance_;
PROTOBUF_CONSTEXPR ScalarPropertyMetadata::ScalarPropertyMetadata(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.base_)*/nullptr
  , /*decltype(_impl_.edit_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ScalarPropertyMetadataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ScalarPropertyMetadataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ScalarPropertyMetadataDefaultTypeInternal() {}
  union {
    ScalarPropertyMetadata _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ScalarPropertyMetadataDefaultTypeInternal _ScalarPropertyMetadata_default_instance_;
PROTOBUF_CONSTEXPR StringPropertyAssignment::StringPropertyAssignment(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.assignmentid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.value_)*/nullptr
  , /*decltype(_impl_.priority_)*/0} {}
struct StringPropertyAssignmentDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StringPropertyAssignmentDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StringPropertyAssignmentDefaultTypeInternal() {}
  union {
    StringPropertyAssignment _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StringPropertyAssignmentDefaultTypeInternal _StringPropertyAssignment_default_instance_;
PROTOBUF_CONSTEXPR StringPropertyValue::StringPropertyValue(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ValueType_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct StringPropertyValueDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StringPropertyValueDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StringPropertyValueDefaultTypeInternal() {}
  union {
    StringPropertyValue _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StringPropertyValueDefaultTypeInternal _StringPropertyValue_default_instance_;
PROTOBUF_CONSTEXPR StringPropertyFormatted::StringPropertyFormatted(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.arguments_)*/{}
  , /*decltype(_impl_.formatstring_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct StringPropertyFormattedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StringPropertyFormattedDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StringPropertyFormattedDefaultTypeInternal() {}
  union {
    StringPropertyFormatted _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StringPropertyFormattedDefaultTypeInternal _StringPropertyFormatted_default_instance_;
PROTOBUF_CONSTEXPR StringPropertyDeclaration::StringPropertyDeclaration(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.default__)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.meta_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct StringPropertyDeclarationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StringPropertyDeclarationDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StringPropertyDeclarationDefaultTypeInternal() {}
  union {
    StringPropertyDeclaration _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StringPropertyDeclarationDefaultTypeInternal _StringPropertyDeclaration_default_instance_;
PROTOBUF_CONSTEXPR StringValueEnumerationOption::StringValueEnumerationOption(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.enumvalue_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.displaytext_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct StringValueEnumerationOptionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StringValueEnumerationOptionDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StringValueEnumerationOptionDefaultTypeInternal() {}
  union {
    StringValueEnumerationOption _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StringValueEnumerationOptionDefaultTypeInternal _StringValueEnumerationOption_default_instance_;
PROTOBUF_CONSTEXPR StringEditingMetadata::StringEditingMetadata(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.enumerationoptions_)*/{}
  , /*decltype(_impl_.isscript_)*/false
  , /*decltype(_impl_.ismultiline_)*/false} {}
struct StringEditingMetadataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StringEditingMetadataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StringEditingMetadataDefaultTypeInternal() {}
  union {
    StringEditingMetadata _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StringEditingMetadataDefaultTypeInternal _StringEditingMetadata_default_instance_;
PROTOBUF_CONSTEXPR StringGeneratorMetadata::StringGeneratorMetadata(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.base_)*/nullptr
  , /*decltype(_impl_.edit_)*/nullptr} {}
struct StringGeneratorMetadataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StringGeneratorMetadataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StringGeneratorMetadataDefaultTypeInternal() {}
  union {
    StringGeneratorMetadata _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StringGeneratorMetadataDefaultTypeInternal _StringGeneratorMetadata_default_instance_;
PROTOBUF_CONSTEXPR StringPropertyMetadata::StringPropertyMetadata(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.base_)*/nullptr
  , /*decltype(_impl_.edit_)*/nullptr} {}
struct StringPropertyMetadataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StringPropertyMetadataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StringPropertyMetadataDefaultTypeInternal() {}
  union {
    StringPropertyMetadata _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StringPropertyMetadataDefaultTypeInternal _StringPropertyMetadata_default_instance_;
PROTOBUF_CONSTEXPR LinkPropertyAssignment::LinkPropertyAssignment(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.assignmentid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.value_)*/nullptr
  , /*decltype(_impl_.priority_)*/0} {}
struct LinkPropertyAssignmentDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LinkPropertyAssignmentDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LinkPropertyAssignmentDefaultTypeInternal() {}
  union {
    LinkPropertyAssignment _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LinkPropertyAssignmentDefaultTypeInternal _LinkPropertyAssignment_default_instance_;
PROTOBUF_CONSTEXPR LinkPropertyValue::LinkPropertyValue(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ValueType_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct LinkPropertyValueDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LinkPropertyValueDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LinkPropertyValueDefaultTypeInternal() {}
  union {
    LinkPropertyValue _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LinkPropertyValueDefaultTypeInternal _LinkPropertyValue_default_instance_;
PROTOBUF_CONSTEXPR LinkPropertyDeclaration::LinkPropertyDeclaration(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.default__)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.meta_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct LinkPropertyDeclarationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LinkPropertyDeclarationDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LinkPropertyDeclarationDefaultTypeInternal() {}
  union {
    LinkPropertyDeclaration _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LinkPropertyDeclarationDefaultTypeInternal _LinkPropertyDeclaration_default_instance_;
PROTOBUF_CONSTEXPR LinkPropertyMetadata::LinkPropertyMetadata(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.base_)*/nullptr
  , /*decltype(_impl_.edit_)*/nullptr} {}
struct LinkPropertyMetadataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LinkPropertyMetadataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LinkPropertyMetadataDefaultTypeInternal() {}
  union {
    LinkPropertyMetadata _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LinkPropertyMetadataDefaultTypeInternal _LinkPropertyMetadata_default_instance_;
PROTOBUF_CONSTEXPR LinkGeneratorMetadata::LinkGeneratorMetadata(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.base_)*/nullptr
  , /*decltype(_impl_.edit_)*/nullptr} {}
struct LinkGeneratorMetadataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LinkGeneratorMetadataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LinkGeneratorMetadataDefaultTypeInternal() {}
  union {
    LinkGeneratorMetadata _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LinkGeneratorMetadataDefaultTypeInternal _LinkGeneratorMetadata_default_instance_;
PROTOBUF_CONSTEXPR LinkEditingMetadata::LinkEditingMetadata(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.contenttype_)*/nullptr
  , /*decltype(_impl_.directtolibrary_)*/false} {}
struct LinkEditingMetadataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LinkEditingMetadataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LinkEditingMetadataDefaultTypeInternal() {}
  union {
    LinkEditingMetadata _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LinkEditingMetadataDefaultTypeInternal _LinkEditingMetadata_default_instance_;
PROTOBUF_CONSTEXPR LinkContentTypeSpecifier::LinkContentTypeSpecifier(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ContentType_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct LinkContentTypeSpecifierDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LinkContentTypeSpecifierDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LinkContentTypeSpecifierDefaultTypeInternal() {}
  union {
    LinkContentTypeSpecifier _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LinkContentTypeSpecifierDefaultTypeInternal _LinkContentTypeSpecifier_default_instance_;
PROTOBUF_CONSTEXPR VectorPropertyAssignment::VectorPropertyAssignment(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.assignmentid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.value_)*/nullptr
  , /*decltype(_impl_.method_)*/0
  , /*decltype(_impl_.priority_)*/0} {}
struct VectorPropertyAssignmentDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VectorPropertyAssignmentDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~VectorPropertyAssignmentDefaultTypeInternal() {}
  union {
    VectorPropertyAssignment _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VectorPropertyAssignmentDefaultTypeInternal _VectorPropertyAssignment_default_instance_;
PROTOBUF_CONSTEXPR VectorPropertyValue::VectorPropertyValue(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ValueType_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct VectorPropertyValueDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VectorPropertyValueDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~VectorPropertyValueDefaultTypeInternal() {}
  union {
    VectorPropertyValue _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VectorPropertyValueDefaultTypeInternal _VectorPropertyValue_default_instance_;
PROTOBUF_CONSTEXPR VectorPropertyInterpolator::VectorPropertyInterpolator(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.from_)*/nullptr
  , /*decltype(_impl_.to_)*/nullptr
  , /*decltype(_impl_.by_)*/nullptr
  , /*decltype(_impl_.t_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct VectorPropertyInterpolatorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VectorPropertyInterpolatorDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~VectorPropertyInterpolatorDefaultTypeInternal() {}
  union {
    VectorPropertyInterpolator _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VectorPropertyInterpolatorDefaultTypeInternal _VectorPropertyInterpolator_default_instance_;
PROTOBUF_CONSTEXPR VectorPerChannel::VectorPerChannel(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.x_)*/nullptr
  , /*decltype(_impl_.y_)*/nullptr
  , /*decltype(_impl_.z_)*/nullptr
  , /*decltype(_impl_.w_)*/nullptr} {}
struct VectorPerChannelDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VectorPerChannelDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~VectorPerChannelDefaultTypeInternal() {}
  union {
    VectorPerChannel _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VectorPerChannelDefaultTypeInternal _VectorPerChannel_default_instance_;
PROTOBUF_CONSTEXPR VectorPropertyQuadratic::VectorPropertyQuadratic(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.p_)*/nullptr
  , /*decltype(_impl_.v_)*/nullptr
  , /*decltype(_impl_.a_)*/nullptr
  , /*decltype(_impl_.t_)*/nullptr} {}
struct VectorPropertyQuadraticDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VectorPropertyQuadraticDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~VectorPropertyQuadraticDefaultTypeInternal() {}
  union {
    VectorPropertyQuadratic _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VectorPropertyQuadraticDefaultTypeInternal _VectorPropertyQuadratic_default_instance_;
PROTOBUF_CONSTEXPR VectorPropertyApproach::VectorPropertyApproach(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.t_)*/nullptr
  , /*decltype(_impl_.to_)*/nullptr
  , /*decltype(_impl_.timetohalf_)*/nullptr
  , /*decltype(_impl_.start_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct VectorPropertyApproachDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VectorPropertyApproachDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~VectorPropertyApproachDefaultTypeInternal() {}
  union {
    VectorPropertyApproach _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VectorPropertyApproachDefaultTypeInternal _VectorPropertyApproach_default_instance_;
PROTOBUF_CONSTEXPR VectorPropertyKeyframed_VectorKeyframe::VectorPropertyKeyframed_VectorKeyframe(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.val_)*/nullptr
  , /*decltype(_impl_.tangentin_)*/nullptr
  , /*decltype(_impl_.tangentout_)*/nullptr
  , /*decltype(_impl_.t_)*/0} {}
struct VectorPropertyKeyframed_VectorKeyframeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VectorPropertyKeyframed_VectorKeyframeDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~VectorPropertyKeyframed_VectorKeyframeDefaultTypeInternal() {}
  union {
    VectorPropertyKeyframed_VectorKeyframe _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VectorPropertyKeyframed_VectorKeyframeDefaultTypeInternal _VectorPropertyKeyframed_VectorKeyframe_default_instance_;
PROTOBUF_CONSTEXPR VectorPropertyKeyframed::VectorPropertyKeyframed(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.keys_)*/{}
  , /*decltype(_impl_.tsrc_)*/nullptr
  , /*decltype(_impl_.looping_)*/0
  , /*decltype(_impl_.tangentgen_)*/0
  , /*decltype(_impl_.interpolationmethod_)*/0} {}
struct VectorPropertyKeyframedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VectorPropertyKeyframedDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~VectorPropertyKeyframedDefaultTypeInternal() {}
  union {
    VectorPropertyKeyframed _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VectorPropertyKeyframedDefaultTypeInternal _VectorPropertyKeyframed_default_instance_;
PROTOBUF_CONSTEXPR VectorPropertyDeclaration::VectorPropertyDeclaration(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.meta_)*/nullptr
  , /*decltype(_impl_.default__)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct VectorPropertyDeclarationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VectorPropertyDeclarationDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~VectorPropertyDeclarationDefaultTypeInternal() {}
  union {
    VectorPropertyDeclaration _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VectorPropertyDeclarationDefaultTypeInternal _VectorPropertyDeclaration_default_instance_;
PROTOBUF_CONSTEXPR VectorEditingMetadata::VectorEditingMetadata(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.usage_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct VectorEditingMetadataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VectorEditingMetadataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~VectorEditingMetadataDefaultTypeInternal() {}
  union {
    VectorEditingMetadata _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VectorEditingMetadataDefaultTypeInternal _VectorEditingMetadata_default_instance_;
PROTOBUF_CONSTEXPR VectorGeneratorMetadata::VectorGeneratorMetadata(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.base_)*/nullptr
  , /*decltype(_impl_.edit_)*/nullptr} {}
struct VectorGeneratorMetadataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VectorGeneratorMetadataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~VectorGeneratorMetadataDefaultTypeInternal() {}
  union {
    VectorGeneratorMetadata _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VectorGeneratorMetadataDefaultTypeInternal _VectorGeneratorMetadata_default_instance_;
PROTOBUF_CONSTEXPR VectorPropertyMetadata::VectorPropertyMetadata(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.base_)*/nullptr
  , /*decltype(_impl_.edit_)*/nullptr} {}
struct VectorPropertyMetadataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VectorPropertyMetadataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~VectorPropertyMetadataDefaultTypeInternal() {}
  union {
    VectorPropertyMetadata _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VectorPropertyMetadataDefaultTypeInternal _VectorPropertyMetadata_default_instance_;
PROTOBUF_CONSTEXPR ColorPropertyAssignment::ColorPropertyAssignment(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.assignmentid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.value_)*/nullptr
  , /*decltype(_impl_.method_)*/0
  , /*decltype(_impl_.priority_)*/0} {}
struct ColorPropertyAssignmentDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ColorPropertyAssignmentDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ColorPropertyAssignmentDefaultTypeInternal() {}
  union {
    ColorPropertyAssignment _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ColorPropertyAssignmentDefaultTypeInternal _ColorPropertyAssignment_default_instance_;
PROTOBUF_CONSTEXPR ColorPropertyValue::ColorPropertyValue(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ValueType_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct ColorPropertyValueDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ColorPropertyValueDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ColorPropertyValueDefaultTypeInternal() {}
  union {
    ColorPropertyValue _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ColorPropertyValueDefaultTypeInternal _ColorPropertyValue_default_instance_;
PROTOBUF_CONSTEXPR ColorPropertyInterpolator::ColorPropertyInterpolator(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.from_)*/nullptr
  , /*decltype(_impl_.to_)*/nullptr
  , /*decltype(_impl_.by_)*/nullptr
  , /*decltype(_impl_.t_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ColorPropertyInterpolatorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ColorPropertyInterpolatorDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ColorPropertyInterpolatorDefaultTypeInternal() {}
  union {
    ColorPropertyInterpolator _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ColorPropertyInterpolatorDefaultTypeInternal _ColorPropertyInterpolator_default_instance_;
PROTOBUF_CONSTEXPR ColorPerChannel::ColorPerChannel(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.r_)*/nullptr
  , /*decltype(_impl_.g_)*/nullptr
  , /*decltype(_impl_.b_)*/nullptr
  , /*decltype(_impl_.a_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ColorPerChannelDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ColorPerChannelDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ColorPerChannelDefaultTypeInternal() {}
  union {
    ColorPerChannel _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ColorPerChannelDefaultTypeInternal _ColorPerChannel_default_instance_;
PROTOBUF_CONSTEXPR ColorPropertyKeyframed_ColorKeyframe::ColorPropertyKeyframed_ColorKeyframe(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.val_)*/nullptr
  , /*decltype(_impl_.tangentin_)*/nullptr
  , /*decltype(_impl_.tangentout_)*/nullptr
  , /*decltype(_impl_.t_)*/0} {}
struct ColorPropertyKeyframed_ColorKeyframeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ColorPropertyKeyframed_ColorKeyframeDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ColorPropertyKeyframed_ColorKeyframeDefaultTypeInternal() {}
  union {
    ColorPropertyKeyframed_ColorKeyframe _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ColorPropertyKeyframed_ColorKeyframeDefaultTypeInternal _ColorPropertyKeyframed_ColorKeyframe_default_instance_;
PROTOBUF_CONSTEXPR ColorPropertyKeyframed::ColorPropertyKeyframed(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.keys_)*/{}
  , /*decltype(_impl_.tsrc_)*/nullptr
  , /*decltype(_impl_.looping_)*/0
  , /*decltype(_impl_.tangentgen_)*/0} {}
struct ColorPropertyKeyframedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ColorPropertyKeyframedDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ColorPropertyKeyframedDefaultTypeInternal() {}
  union {
    ColorPropertyKeyframed _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ColorPropertyKeyframedDefaultTypeInternal _ColorPropertyKeyframed_default_instance_;
PROTOBUF_CONSTEXPR ColorPropertyApproach::ColorPropertyApproach(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.t_)*/nullptr
  , /*decltype(_impl_.to_)*/nullptr
  , /*decltype(_impl_.timetohalf_)*/nullptr
  , /*decltype(_impl_.start_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ColorPropertyApproachDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ColorPropertyApproachDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ColorPropertyApproachDefaultTypeInternal() {}
  union {
    ColorPropertyApproach _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ColorPropertyApproachDefaultTypeInternal _ColorPropertyApproach_default_instance_;
PROTOBUF_CONSTEXPR ColorPropertyDeclaration::ColorPropertyDeclaration(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.meta_)*/nullptr
  , /*decltype(_impl_.default__)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ColorPropertyDeclarationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ColorPropertyDeclarationDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ColorPropertyDeclarationDefaultTypeInternal() {}
  union {
    ColorPropertyDeclaration _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ColorPropertyDeclarationDefaultTypeInternal _ColorPropertyDeclaration_default_instance_;
PROTOBUF_CONSTEXPR ColorEditingMetadata::ColorEditingMetadata(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.allowhdr_)*/false
  , /*decltype(_impl_.usesalpha_)*/false} {}
struct ColorEditingMetadataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ColorEditingMetadataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ColorEditingMetadataDefaultTypeInternal() {}
  union {
    ColorEditingMetadata _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ColorEditingMetadataDefaultTypeInternal _ColorEditingMetadata_default_instance_;
PROTOBUF_CONSTEXPR ColorGeneratorMetadata::ColorGeneratorMetadata(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.base_)*/nullptr
  , /*decltype(_impl_.edit_)*/nullptr} {}
struct ColorGeneratorMetadataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ColorGeneratorMetadataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ColorGeneratorMetadataDefaultTypeInternal() {}
  union {
    ColorGeneratorMetadata _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ColorGeneratorMetadataDefaultTypeInternal _ColorGeneratorMetadata_default_instance_;
PROTOBUF_CONSTEXPR ColorPropertyMetadata::ColorPropertyMetadata(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.base_)*/nullptr
  , /*decltype(_impl_.edit_)*/nullptr} {}
struct ColorPropertyMetadataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ColorPropertyMetadataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ColorPropertyMetadataDefaultTypeInternal() {}
  union {
    ColorPropertyMetadata _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ColorPropertyMetadataDefaultTypeInternal _ColorPropertyMetadata_default_instance_;
PROTOBUF_CONSTEXPR BooleanPropertyAssignment::BooleanPropertyAssignment(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.assignmentid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.value_)*/nullptr
  , /*decltype(_impl_.priority_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct BooleanPropertyAssignmentDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BooleanPropertyAssignmentDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~BooleanPropertyAssignmentDefaultTypeInternal() {}
  union {
    BooleanPropertyAssignment _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BooleanPropertyAssignmentDefaultTypeInternal _BooleanPropertyAssignment_default_instance_;
PROTOBUF_CONSTEXPR BooleanPropertyValue::BooleanPropertyValue(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ValueType_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct BooleanPropertyValueDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BooleanPropertyValueDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~BooleanPropertyValueDefaultTypeInternal() {}
  union {
    BooleanPropertyValue _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BooleanPropertyValueDefaultTypeInternal _BooleanPropertyValue_default_instance_;
PROTOBUF_CONSTEXPR BooleanPropertyKeyframed_BooleanKeyframe::BooleanPropertyKeyframed_BooleanKeyframe(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.val_)*/nullptr
  , /*decltype(_impl_.t_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct BooleanPropertyKeyframed_BooleanKeyframeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BooleanPropertyKeyframed_BooleanKeyframeDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~BooleanPropertyKeyframed_BooleanKeyframeDefaultTypeInternal() {}
  union {
    BooleanPropertyKeyframed_BooleanKeyframe _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BooleanPropertyKeyframed_BooleanKeyframeDefaultTypeInternal _BooleanPropertyKeyframed_BooleanKeyframe_default_instance_;
PROTOBUF_CONSTEXPR BooleanPropertyKeyframed::BooleanPropertyKeyframed(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.keys_)*/{}
  , /*decltype(_impl_.tsrc_)*/nullptr
  , /*decltype(_impl_.looping_)*/0} {}
struct BooleanPropertyKeyframedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BooleanPropertyKeyframedDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~BooleanPropertyKeyframedDefaultTypeInternal() {}
  union {
    BooleanPropertyKeyframed _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BooleanPropertyKeyframedDefaultTypeInternal _BooleanPropertyKeyframed_default_instance_;
PROTOBUF_CONSTEXPR BooleanPropertyScalarComparison::BooleanPropertyScalarComparison(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.a_)*/nullptr
  , /*decltype(_impl_.b_)*/nullptr
  , /*decltype(_impl_.cmp_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct BooleanPropertyScalarComparisonDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BooleanPropertyScalarComparisonDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~BooleanPropertyScalarComparisonDefaultTypeInternal() {}
  union {
    BooleanPropertyScalarComparison _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BooleanPropertyScalarComparisonDefaultTypeInternal _BooleanPropertyScalarComparison_default_instance_;
PROTOBUF_CONSTEXPR BooleanPropertyDeclaration::BooleanPropertyDeclaration(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.meta_)*/nullptr
  , /*decltype(_impl_.default__)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct BooleanPropertyDeclarationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BooleanPropertyDeclarationDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~BooleanPropertyDeclarationDefaultTypeInternal() {}
  union {
    BooleanPropertyDeclaration _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BooleanPropertyDeclarationDefaultTypeInternal _BooleanPropertyDeclaration_default_instance_;
PROTOBUF_CONSTEXPR BooleanEditingMetadata::BooleanEditingMetadata(
    ::_pbi::ConstantInitialized) {}
struct BooleanEditingMetadataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BooleanEditingMetadataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~BooleanEditingMetadataDefaultTypeInternal() {}
  union {
    BooleanEditingMetadata _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BooleanEditingMetadataDefaultTypeInternal _BooleanEditingMetadata_default_instance_;
PROTOBUF_CONSTEXPR BooleanGeneratorMetadata::BooleanGeneratorMetadata(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.base_)*/nullptr
  , /*decltype(_impl_.edit_)*/nullptr} {}
struct BooleanGeneratorMetadataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BooleanGeneratorMetadataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~BooleanGeneratorMetadataDefaultTypeInternal() {}
  union {
    BooleanGeneratorMetadata _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BooleanGeneratorMetadataDefaultTypeInternal _BooleanGeneratorMetadata_default_instance_;
PROTOBUF_CONSTEXPR BooleanPropertyMetadata::BooleanPropertyMetadata(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.base_)*/nullptr
  , /*decltype(_impl_.edit_)*/nullptr} {}
struct BooleanPropertyMetadataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BooleanPropertyMetadataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~BooleanPropertyMetadataDefaultTypeInternal() {}
  union {
    BooleanPropertyMetadata _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BooleanPropertyMetadataDefaultTypeInternal _BooleanPropertyMetadata_default_instance_;
PROTOBUF_CONSTEXPR JsonPropertyAssignment::JsonPropertyAssignment(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.assignmentid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.value_)*/nullptr
  , /*decltype(_impl_.priority_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct JsonPropertyAssignmentDefaultTypeInternal {
  PROTOBUF_CONSTEXPR JsonPropertyAssignmentDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~JsonPropertyAssignmentDefaultTypeInternal() {}
  union {
    JsonPropertyAssignment _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 JsonPropertyAssignmentDefaultTypeInternal _JsonPropertyAssignment_default_instance_;
PROTOBUF_CONSTEXPR JsonPropertyValue::JsonPropertyValue(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ValueType_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct JsonPropertyValueDefaultTypeInternal {
  PROTOBUF_CONSTEXPR JsonPropertyValueDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~JsonPropertyValueDefaultTypeInternal() {}
  union {
    JsonPropertyValue _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 JsonPropertyValueDefaultTypeInternal _JsonPropertyValue_default_instance_;
PROTOBUF_CONSTEXPR JsonPropertyDeclaration::JsonPropertyDeclaration(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.defaultjson_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.meta_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct JsonPropertyDeclarationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR JsonPropertyDeclarationDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~JsonPropertyDeclarationDefaultTypeInternal() {}
  union {
    JsonPropertyDeclaration _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 JsonPropertyDeclarationDefaultTypeInternal _JsonPropertyDeclaration_default_instance_;
PROTOBUF_CONSTEXPR JsonEditingMetadata::JsonEditingMetadata(
    ::_pbi::ConstantInitialized) {}
struct JsonEditingMetadataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR JsonEditingMetadataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~JsonEditingMetadataDefaultTypeInternal() {}
  union {
    JsonEditingMetadata _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 JsonEditingMetadataDefaultTypeInternal _JsonEditingMetadata_default_instance_;
PROTOBUF_CONSTEXPR JsonGeneratorMetadata::JsonGeneratorMetadata(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.base_)*/nullptr
  , /*decltype(_impl_.edit_)*/nullptr} {}
struct JsonGeneratorMetadataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR JsonGeneratorMetadataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~JsonGeneratorMetadataDefaultTypeInternal() {}
  union {
    JsonGeneratorMetadata _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 JsonGeneratorMetadataDefaultTypeInternal _JsonGeneratorMetadata_default_instance_;
PROTOBUF_CONSTEXPR JsonPropertyMetadata::JsonPropertyMetadata(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.base_)*/nullptr
  , /*decltype(_impl_.edit_)*/nullptr} {}
struct JsonPropertyMetadataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR JsonPropertyMetadataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~JsonPropertyMetadataDefaultTypeInternal() {}
  union {
    JsonPropertyMetadata _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 JsonPropertyMetadataDefaultTypeInternal _JsonPropertyMetadata_default_instance_;
PROTOBUF_CONSTEXPR TransformSet::TransformSet(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.SetType_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct TransformSetDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TransformSetDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TransformSetDefaultTypeInternal() {}
  union {
    TransformSet _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TransformSetDefaultTypeInternal _TransformSet_default_instance_;
PROTOBUF_CONSTEXPR TransformSetSRT::TransformSetSRT(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.scale_)*/nullptr
  , /*decltype(_impl_.rotationeuler_)*/nullptr
  , /*decltype(_impl_.transformpos_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct TransformSetSRTDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TransformSetSRTDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TransformSetSRTDefaultTypeInternal() {}
  union {
    TransformSetSRT _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TransformSetSRTDefaultTypeInternal _TransformSetSRT_default_instance_;
PROTOBUF_CONSTEXPR TransformSetSQT::TransformSetSQT(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.scale_)*/nullptr
  , /*decltype(_impl_.rotationquat_)*/nullptr
  , /*decltype(_impl_.transformpos_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct TransformSetSQTDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TransformSetSQTDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TransformSetSQTDefaultTypeInternal() {}
  union {
    TransformSetSQT _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TransformSetSQTDefaultTypeInternal _TransformSetSQT_default_instance_;
PROTOBUF_CONSTEXPR TransformSetLookAt::TransformSetLookAt(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.eye_)*/nullptr
  , /*decltype(_impl_.lookat_)*/nullptr
  , /*decltype(_impl_.up_)*/nullptr} {}
struct TransformSetLookAtDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TransformSetLookAtDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TransformSetLookAtDefaultTypeInternal() {}
  union {
    TransformSetLookAt _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TransformSetLookAtDefaultTypeInternal _TransformSetLookAt_default_instance_;
PROTOBUF_CONSTEXPR TransformSetInterpolatorSRT::TransformSetInterpolatorSRT(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.from_)*/nullptr
  , /*decltype(_impl_.to_)*/nullptr
  , /*decltype(_impl_.by_)*/nullptr
  , /*decltype(_impl_.t_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct TransformSetInterpolatorSRTDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TransformSetInterpolatorSRTDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TransformSetInterpolatorSRTDefaultTypeInternal() {}
  union {
    TransformSetInterpolatorSRT _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TransformSetInterpolatorSRTDefaultTypeInternal _TransformSetInterpolatorSRT_default_instance_;
PROTOBUF_CONSTEXPR TransformSetInterpolatorSQT::TransformSetInterpolatorSQT(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.from_)*/nullptr
  , /*decltype(_impl_.to_)*/nullptr
  , /*decltype(_impl_.by_)*/nullptr
  , /*decltype(_impl_.t_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct TransformSetInterpolatorSQTDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TransformSetInterpolatorSQTDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TransformSetInterpolatorSQTDefaultTypeInternal() {}
  union {
    TransformSetInterpolatorSQT _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TransformSetInterpolatorSQTDefaultTypeInternal _TransformSetInterpolatorSQT_default_instance_;
PROTOBUF_CONSTEXPR TransformSetInterpolatorLookAt::TransformSetInterpolatorLookAt(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.from_)*/nullptr
  , /*decltype(_impl_.to_)*/nullptr
  , /*decltype(_impl_.by_)*/nullptr
  , /*decltype(_impl_.t_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct TransformSetInterpolatorLookAtDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TransformSetInterpolatorLookAtDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TransformSetInterpolatorLookAtDefaultTypeInternal() {}
  union {
    TransformSetInterpolatorLookAt _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TransformSetInterpolatorLookAtDefaultTypeInternal _TransformSetInterpolatorLookAt_default_instance_;
PROTOBUF_CONSTEXPR TransformSetApproach::TransformSetApproach(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.t_)*/nullptr
  , /*decltype(_impl_.to_)*/nullptr
  , /*decltype(_impl_.timetohalf_)*/nullptr
  , /*decltype(_impl_.start_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct TransformSetApproachDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TransformSetApproachDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TransformSetApproachDefaultTypeInternal() {}
  union {
    TransformSetApproach _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TransformSetApproachDefaultTypeInternal _TransformSetApproach_default_instance_;
PROTOBUF_CONSTEXPR TransformSetConditional::TransformSetConditional(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.condition_)*/nullptr
  , /*decltype(_impl_.truevalue_)*/nullptr
  , /*decltype(_impl_.falsevalue_)*/nullptr} {}
struct TransformSetConditionalDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TransformSetConditionalDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TransformSetConditionalDefaultTypeInternal() {}
  union {
    TransformSetConditional _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TransformSetConditionalDefaultTypeInternal _TransformSetConditional_default_instance_;
PROTOBUF_CONSTEXPR TransformUpdate::TransformUpdate(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.UpdateType_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct TransformUpdateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TransformUpdateDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TransformUpdateDefaultTypeInternal() {}
  union {
    TransformUpdate _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TransformUpdateDefaultTypeInternal _TransformUpdate_default_instance_;
PROTOBUF_CONSTEXPR TransformUpdateAddT::TransformUpdateAddT(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.offsetposition_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct TransformUpdateAddTDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TransformUpdateAddTDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TransformUpdateAddTDefaultTypeInternal() {}
  union {
    TransformUpdateAddT _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TransformUpdateAddTDefaultTypeInternal _TransformUpdateAddT_default_instance_;
PROTOBUF_CONSTEXPR TransformUpdateAddR::TransformUpdateAddR(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.offsetrotationeuler_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct TransformUpdateAddRDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TransformUpdateAddRDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TransformUpdateAddRDefaultTypeInternal() {}
  union {
    TransformUpdateAddR _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TransformUpdateAddRDefaultTypeInternal _TransformUpdateAddR_default_instance_;
PROTOBUF_CONSTEXPR TransformUpdateAddQ::TransformUpdateAddQ(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.offsetrotationquat_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct TransformUpdateAddQDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TransformUpdateAddQDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TransformUpdateAddQDefaultTypeInternal() {}
  union {
    TransformUpdateAddQ _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TransformUpdateAddQDefaultTypeInternal _TransformUpdateAddQ_default_instance_;
PROTOBUF_CONSTEXPR TransformUpdateScaleUniform::TransformUpdateScaleUniform(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.uniformscalemultiplier_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct TransformUpdateScaleUniformDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TransformUpdateScaleUniformDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TransformUpdateScaleUniformDefaultTypeInternal() {}
  union {
    TransformUpdateScaleUniform _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TransformUpdateScaleUniformDefaultTypeInternal _TransformUpdateScaleUniform_default_instance_;
PROTOBUF_CONSTEXPR TransformUpdateScaleNonuniform::TransformUpdateScaleNonuniform(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.nonuniformscalemultiplier_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct TransformUpdateScaleNonuniformDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TransformUpdateScaleNonuniformDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TransformUpdateScaleNonuniformDefaultTypeInternal() {}
  union {
    TransformUpdateScaleNonuniform _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TransformUpdateScaleNonuniformDefaultTypeInternal _TransformUpdateScaleNonuniform_default_instance_;
PROTOBUF_CONSTEXPR TransformUpdateLookAt::TransformUpdateLookAt(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.percenttomove_)*/nullptr
  , /*decltype(_impl_.lookat_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct TransformUpdateLookAtDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TransformUpdateLookAtDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TransformUpdateLookAtDefaultTypeInternal() {}
  union {
    TransformUpdateLookAt _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TransformUpdateLookAtDefaultTypeInternal _TransformUpdateLookAt_default_instance_;
PROTOBUF_CONSTEXPR TransformUpdateRotateToEuler::TransformUpdateRotateToEuler(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.percenttomove_)*/nullptr
  , /*decltype(_impl_.toeuler_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct TransformUpdateRotateToEulerDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TransformUpdateRotateToEulerDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TransformUpdateRotateToEulerDefaultTypeInternal() {}
  union {
    TransformUpdateRotateToEuler _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TransformUpdateRotateToEulerDefaultTypeInternal _TransformUpdateRotateToEuler_default_instance_;
PROTOBUF_CONSTEXPR TransformUpdateRotateToQuat::TransformUpdateRotateToQuat(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.percenttomove_)*/nullptr
  , /*decltype(_impl_.toquat_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct TransformUpdateRotateToQuatDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TransformUpdateRotateToQuatDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TransformUpdateRotateToQuatDefaultTypeInternal() {}
  union {
    TransformUpdateRotateToQuat _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TransformUpdateRotateToQuatDefaultTypeInternal _TransformUpdateRotateToQuat_default_instance_;
PROTOBUF_CONSTEXPR TransformPropertyAssignment::TransformPropertyAssignment(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.assignmentid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.setpriority_)*/0
  , /*decltype(_impl_.modifyorder_)*/0
  , /*decltype(_impl_.AssignmentType_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct TransformPropertyAssignmentDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TransformPropertyAssignmentDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TransformPropertyAssignmentDefaultTypeInternal() {}
  union {
    TransformPropertyAssignment _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TransformPropertyAssignmentDefaultTypeInternal _TransformPropertyAssignment_default_instance_;
PROTOBUF_CONSTEXPR TransformPropertyDeclaration::TransformPropertyDeclaration(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.meta_)*/nullptr
  , /*decltype(_impl_.default__)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct TransformPropertyDeclarationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TransformPropertyDeclarationDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TransformPropertyDeclarationDefaultTypeInternal() {}
  union {
    TransformPropertyDeclaration _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TransformPropertyDeclarationDefaultTypeInternal _TransformPropertyDeclaration_default_instance_;
PROTOBUF_CONSTEXPR TransformEditingMetadata::TransformEditingMetadata(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.allowsetfromusertransform_)*/false
  , /*decltype(_impl_.allowunset_)*/false} {}
struct TransformEditingMetadataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TransformEditingMetadataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TransformEditingMetadataDefaultTypeInternal() {}
  union {
    TransformEditingMetadata _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TransformEditingMetadataDefaultTypeInternal _TransformEditingMetadata_default_instance_;
PROTOBUF_CONSTEXPR TransformGeneratorMetadata::TransformGeneratorMetadata(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.base_)*/nullptr
  , /*decltype(_impl_.edit_)*/nullptr} {}
struct TransformGeneratorMetadataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TransformGeneratorMetadataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TransformGeneratorMetadataDefaultTypeInternal() {}
  union {
    TransformGeneratorMetadata _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TransformGeneratorMetadataDefaultTypeInternal _TransformGeneratorMetadata_default_instance_;
PROTOBUF_CONSTEXPR TransformPropertyMetadata::TransformPropertyMetadata(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.base_)*/nullptr
  , /*decltype(_impl_.edit_)*/nullptr} {}
struct TransformPropertyMetadataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TransformPropertyMetadataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TransformPropertyMetadataDefaultTypeInternal() {}
  union {
    TransformPropertyMetadata _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TransformPropertyMetadataDefaultTypeInternal _TransformPropertyMetadata_default_instance_;
PROTOBUF_CONSTEXPR CustomGeneratorSubGenScalar::CustomGeneratorSubGenScalar(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.generator_)*/nullptr
  , /*decltype(_impl_.meta_)*/nullptr} {}
struct CustomGeneratorSubGenScalarDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CustomGeneratorSubGenScalarDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CustomGeneratorSubGenScalarDefaultTypeInternal() {}
  union {
    CustomGeneratorSubGenScalar _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CustomGeneratorSubGenScalarDefaultTypeInternal _CustomGeneratorSubGenScalar_default_instance_;
PROTOBUF_CONSTEXPR CustomGeneratorSubGenString::CustomGeneratorSubGenString(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.generator_)*/nullptr
  , /*decltype(_impl_.meta_)*/nullptr} {}
struct CustomGeneratorSubGenStringDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CustomGeneratorSubGenStringDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CustomGeneratorSubGenStringDefaultTypeInternal() {}
  union {
    CustomGeneratorSubGenString _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CustomGeneratorSubGenStringDefaultTypeInternal _CustomGeneratorSubGenString_default_instance_;
PROTOBUF_CONSTEXPR CustomGeneratorSubGenLink::CustomGeneratorSubGenLink(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.generator_)*/nullptr
  , /*decltype(_impl_.meta_)*/nullptr} {}
struct CustomGeneratorSubGenLinkDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CustomGeneratorSubGenLinkDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CustomGeneratorSubGenLinkDefaultTypeInternal() {}
  union {
    CustomGeneratorSubGenLink _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CustomGeneratorSubGenLinkDefaultTypeInternal _CustomGeneratorSubGenLink_default_instance_;
PROTOBUF_CONSTEXPR CustomGeneratorSubGenVector::CustomGeneratorSubGenVector(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.generator_)*/nullptr
  , /*decltype(_impl_.meta_)*/nullptr} {}
struct CustomGeneratorSubGenVectorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CustomGeneratorSubGenVectorDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CustomGeneratorSubGenVectorDefaultTypeInternal() {}
  union {
    CustomGeneratorSubGenVector _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CustomGeneratorSubGenVectorDefaultTypeInternal _CustomGeneratorSubGenVector_default_instance_;
PROTOBUF_CONSTEXPR CustomGeneratorSubGenColor::CustomGeneratorSubGenColor(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.generator_)*/nullptr
  , /*decltype(_impl_.meta_)*/nullptr} {}
struct CustomGeneratorSubGenColorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CustomGeneratorSubGenColorDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CustomGeneratorSubGenColorDefaultTypeInternal() {}
  union {
    CustomGeneratorSubGenColor _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CustomGeneratorSubGenColorDefaultTypeInternal _CustomGeneratorSubGenColor_default_instance_;
PROTOBUF_CONSTEXPR CustomGeneratorSubGenBoolean::CustomGeneratorSubGenBoolean(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.generator_)*/nullptr
  , /*decltype(_impl_.meta_)*/nullptr} {}
struct CustomGeneratorSubGenBooleanDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CustomGeneratorSubGenBooleanDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CustomGeneratorSubGenBooleanDefaultTypeInternal() {}
  union {
    CustomGeneratorSubGenBoolean _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CustomGeneratorSubGenBooleanDefaultTypeInternal _CustomGeneratorSubGenBoolean_default_instance_;
PROTOBUF_CONSTEXPR CustomGeneratorSubGenJson::CustomGeneratorSubGenJson(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.generator_)*/nullptr
  , /*decltype(_impl_.meta_)*/nullptr} {}
struct CustomGeneratorSubGenJsonDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CustomGeneratorSubGenJsonDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CustomGeneratorSubGenJsonDefaultTypeInternal() {}
  union {
    CustomGeneratorSubGenJson _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CustomGeneratorSubGenJsonDefaultTypeInternal _CustomGeneratorSubGenJson_default_instance_;
PROTOBUF_CONSTEXPR CustomGeneratorSubGenTransform::CustomGeneratorSubGenTransform(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.generator_)*/nullptr
  , /*decltype(_impl_.meta_)*/nullptr} {}
struct CustomGeneratorSubGenTransformDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CustomGeneratorSubGenTransformDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CustomGeneratorSubGenTransformDefaultTypeInternal() {}
  union {
    CustomGeneratorSubGenTransform _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CustomGeneratorSubGenTransformDefaultTypeInternal _CustomGeneratorSubGenTransform_default_instance_;
PROTOBUF_CONSTEXPR CustomGeneratorSubGen::CustomGeneratorSubGen(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.SubGenType_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct CustomGeneratorSubGenDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CustomGeneratorSubGenDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CustomGeneratorSubGenDefaultTypeInternal() {}
  union {
    CustomGeneratorSubGen _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CustomGeneratorSubGenDefaultTypeInternal _CustomGeneratorSubGen_default_instance_;
PROTOBUF_CONSTEXPR CustomGeneratorValue::CustomGeneratorValue(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.subgens_)*/{}
  , /*decltype(_impl_.customid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CustomGeneratorValueDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CustomGeneratorValueDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CustomGeneratorValueDefaultTypeInternal() {}
  union {
    CustomGeneratorValue _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CustomGeneratorValueDefaultTypeInternal _CustomGeneratorValue_default_instance_;
}  // namespace Property
static ::_pb::Metadata file_level_metadata_properties_2eproto[105];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_properties_2eproto[12];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_properties_2eproto = nullptr;

const uint32_t TableStruct_properties_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Property::PropertyIdentifier, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Property::PropertyIdentifier, _impl_.id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Property::AnyPropertyValue, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::Property::AnyPropertyValue, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::Property::AnyPropertyValue, _impl_.PropertyType_),
  PROTOBUF_FIELD_OFFSET(::Property::GeneratorMetadata, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::Property::GeneratorMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Property::GeneratorMetadata, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::Property::GeneratorMetadata, _impl_.description_),
  PROTOBUF_FIELD_OFFSET(::Property::GeneratorMetadata, _impl_.hidden_),
  ~0u,
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::Property::PropertyMetadata, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::Property::PropertyMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Property::PropertyMetadata, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::Property::PropertyMetadata, _impl_.category_),
  PROTOBUF_FIELD_OFFSET(::Property::PropertyMetadata, _impl_.categoryorder_),
  PROTOBUF_FIELD_OFFSET(::Property::PropertyMetadata, _impl_.description_),
  PROTOBUF_FIELD_OFFSET(::Property::PropertyMetadata, _impl_.isreadonly_),
  PROTOBUF_FIELD_OFFSET(::Property::PropertyMetadata, _impl_.internalorder_),
  PROTOBUF_FIELD_OFFSET(::Property::PropertyMetadata, _impl_.syncmethod_),
  PROTOBUF_FIELD_OFFSET(::Property::PropertyMetadata, _impl_.isadvanced_),
  PROTOBUF_FIELD_OFFSET(::Property::PropertyMetadata, _impl_.uivisibility_),
  ~0u,
  0,
  2,
  ~0u,
  4,
  3,
  6,
  5,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Property::AnyPropertyDeclaration, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::Property::AnyPropertyDeclaration, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::Property::AnyPropertyDeclaration, _impl_.ValueType_),
  PROTOBUF_FIELD_OFFSET(::Property::Interpolation, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::Property::Interpolation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Property::Interpolation, _impl_.easeout_),
  PROTOBUF_FIELD_OFFSET(::Property::Interpolation, _impl_.easein_),
  PROTOBUF_FIELD_OFFSET(::Property::Interpolation, _impl_.duration_),
  PROTOBUF_FIELD_OFFSET(::Property::Interpolation, _impl_.delay_),
  0,
  1,
  2,
  3,
  PROTOBUF_FIELD_OFFSET(::Property::ScalarPropertyAssignment, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::Property::ScalarPropertyAssignment, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Property::ScalarPropertyAssignment, _impl_.method_),
  PROTOBUF_FIELD_OFFSET(::Property::ScalarPropertyAssignment, _impl_.overridingpriority_),
  PROTOBUF_FIELD_OFFSET(::Property::ScalarPropertyAssignment, _impl_.assignmentid_),
  PROTOBUF_FIELD_OFFSET(::Property::ScalarPropertyAssignment, _impl_.value_),
  0,
  1,
  ~0u,
  ~0u,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Property::ScalarPropertyValue, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::Property::ScalarPropertyValue, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::Property::ScalarPropertyValue, _impl_.ValueType_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Property::ScalarPropertyInterpolator, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Property::ScalarPropertyInterpolator, _impl_.t_),
  PROTOBUF_FIELD_OFFSET(::Property::ScalarPropertyInterpolator, _impl_.from_),
  PROTOBUF_FIELD_OFFSET(::Property::ScalarPropertyInterpolator, _impl_.to_),
  PROTOBUF_FIELD_OFFSET(::Property::ScalarPropertyInterpolator, _impl_.by_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Property::ScalarPropertyPulse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Property::ScalarPropertyPulse, _impl_.tsrc_),
  PROTOBUF_FIELD_OFFSET(::Property::ScalarPropertyPulse, _impl_.length_),
  PROTOBUF_FIELD_OFFSET(::Property::ScalarPropertyPulse, _impl_.min_),
  PROTOBUF_FIELD_OFFSET(::Property::ScalarPropertyPulse, _impl_.max_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Property::ScalarPropertyPlaybackBasic, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Property::ScalarPropertyPlaybackBasic, _impl_.playing_),
  PROTOBUF_FIELD_OFFSET(::Property::ScalarPropertyPlaybackBasic, _impl_.starttime_),
  PROTOBUF_FIELD_OFFSET(::Property::ScalarPropertyPlaybackBasic, _impl_.speedwhileplaying_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Property::ScalarPropertyPlayback, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Property::ScalarPropertyPlayback, _impl_.tsrc_),
  PROTOBUF_FIELD_OFFSET(::Property::ScalarPropertyPlayback, _impl_.starttime_),
  PROTOBUF_FIELD_OFFSET(::Property::ScalarPropertyPlayback, _impl_.playing_),
  PROTOBUF_FIELD_OFFSET(::Property::ScalarPropertyPlayback, _impl_.speedwhileplaying_),
  PROTOBUF_FIELD_OFFSET(::Property::ScalarPropertyKeyframed_ScalarKeyframe, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::Property::ScalarPropertyKeyframed_ScalarKeyframe, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Property::ScalarPropertyKeyframed_ScalarKeyframe, _impl_.t_),
  PROTOBUF_FIELD_OFFSET(::Property::ScalarPropertyKeyframed_ScalarKeyframe, _impl_.val_),
  PROTOBUF_FIELD_OFFSET(::Property::ScalarPropertyKeyframed_ScalarKeyframe, _impl_.tangentin_),
  PROTOBUF_FIELD_OFFSET(::Property::ScalarPropertyKeyframed_ScalarKeyframe, _impl_.tangentout_),
  ~0u,
  ~0u,
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::Property::ScalarPropertyKeyframed, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::Property::ScalarPropertyKeyframed, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Property::ScalarPropertyKeyframed, _impl_.tsrc_),
  PROTOBUF_FIELD_OFFSET(::Property::ScalarPropertyKeyframed, _impl_.keys_),
  PROTOBUF_FIELD_OFFSET(::Property::ScalarPropertyKeyframed, _impl_.looping_),
  PROTOBUF_FIELD_OFFSET(::Property::ScalarPropertyKeyframed, _impl_.tangentgen_),
  0,
  ~0u,
  ~0u,
  ~0u,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Property::ScalarPropertyApproach, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Property::ScalarPropertyApproach, _impl_.t_),
  PROTOBUF_FIELD_OFFSET(::Property::ScalarPropertyApproach, _impl_.to_),
  PROTOBUF_FIELD_OFFSET(::Property::ScalarPropertyApproach, _impl_.timetohalf_),
  PROTOBUF_FIELD_OFFSET(::Property::ScalarPropertyApproach, _impl_.start_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Property::ScalarPropertyDeclaration, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Property::ScalarPropertyDeclaration, _impl_.default__),
  PROTOBUF_FIELD_OFFSET(::Property::ScalarPropertyDeclaration, _impl_.meta_),
  PROTOBUF_FIELD_OFFSET(::Property::ScalarEditingMetadata, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::Property::ScalarEditingMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Property::ScalarEditingMetadata, _impl_.scalartype_),
  PROTOBUF_FIELD_OFFSET(::Property::ScalarEditingMetadata, _impl_.uiincrement_),
  PROTOBUF_FIELD_OFFSET(::Property::ScalarEditingMetadata, _impl_.uiminimum_),
  PROTOBUF_FIELD_OFFSET(::Property::ScalarEditingMetadata, _impl_.uimaximum_),
  PROTOBUF_FIELD_OFFSET(::Property::ScalarEditingMetadata, _impl_.playbacklengthref_),
  1,
  2,
  3,
  4,
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Property::ScalarGeneratorMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Property::ScalarGeneratorMetadata, _impl_.base_),
  PROTOBUF_FIELD_OFFSET(::Property::ScalarGeneratorMetadata, _impl_.edit_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Property::ScalarPropertyMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Property::ScalarPropertyMetadata, _impl_.base_),
  PROTOBUF_FIELD_OFFSET(::Property::ScalarPropertyMetadata, _impl_.edit_),
  PROTOBUF_FIELD_OFFSET(::Property::StringPropertyAssignment, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::Property::StringPropertyAssignment, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Property::StringPropertyAssignment, _impl_.priority_),
  PROTOBUF_FIELD_OFFSET(::Property::StringPropertyAssignment, _impl_.value_),
  PROTOBUF_FIELD_OFFSET(::Property::StringPropertyAssignment, _impl_.assignmentid_),
  0,
  ~0u,
  ~0u,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Property::StringPropertyValue, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::Property::StringPropertyValue, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::Property::StringPropertyValue, _impl_.ValueType_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Property::StringPropertyFormatted, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Property::StringPropertyFormatted, _impl_.formatstring_),
  PROTOBUF_FIELD_OFFSET(::Property::StringPropertyFormatted, _impl_.arguments_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Property::StringPropertyDeclaration, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Property::StringPropertyDeclaration, _impl_.default__),
  PROTOBUF_FIELD_OFFSET(::Property::StringPropertyDeclaration, _impl_.meta_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Property::StringValueEnumerationOption, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Property::StringValueEnumerationOption, _impl_.enumvalue_),
  PROTOBUF_FIELD_OFFSET(::Property::StringValueEnumerationOption, _impl_.displaytext_),
  PROTOBUF_FIELD_OFFSET(::Property::StringEditingMetadata, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::Property::StringEditingMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Property::StringEditingMetadata, _impl_.enumerationoptions_),
  PROTOBUF_FIELD_OFFSET(::Property::StringEditingMetadata, _impl_.isscript_),
  PROTOBUF_FIELD_OFFSET(::Property::StringEditingMetadata, _impl_.ismultiline_),
  ~0u,
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::Property::StringGeneratorMetadata, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::Property::StringGeneratorMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Property::StringGeneratorMetadata, _impl_.base_),
  PROTOBUF_FIELD_OFFSET(::Property::StringGeneratorMetadata, _impl_.edit_),
  ~0u,
  0,
  PROTOBUF_FIELD_OFFSET(::Property::StringPropertyMetadata, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::Property::StringPropertyMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Property::StringPropertyMetadata, _impl_.base_),
  PROTOBUF_FIELD_OFFSET(::Property::StringPropertyMetadata, _impl_.edit_),
  ~0u,
  0,
  PROTOBUF_FIELD_OFFSET(::Property::LinkPropertyAssignment, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::Property::LinkPropertyAssignment, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Property::LinkPropertyAssignment, _impl_.priority_),
  PROTOBUF_FIELD_OFFSET(::Property::LinkPropertyAssignment, _impl_.value_),
  PROTOBUF_FIELD_OFFSET(::Property::LinkPropertyAssignment, _impl_.assignmentid_),
  0,
  ~0u,
  ~0u,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Property::LinkPropertyValue, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::Property::LinkPropertyValue, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::Property::LinkPropertyValue, _impl_.ValueType_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Property::LinkPropertyDeclaration, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Property::LinkPropertyDeclaration, _impl_.default__),
  PROTOBUF_FIELD_OFFSET(::Property::LinkPropertyDeclaration, _impl_.meta_),
  PROTOBUF_FIELD_OFFSET(::Property::LinkPropertyMetadata, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::Property::LinkPropertyMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Property::LinkPropertyMetadata, _impl_.base_),
  PROTOBUF_FIELD_OFFSET(::Property::LinkPropertyMetadata, _impl_.edit_),
  ~0u,
  0,
  PROTOBUF_FIELD_OFFSET(::Property::LinkGeneratorMetadata, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::Property::LinkGeneratorMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Property::LinkGeneratorMetadata, _impl_.base_),
  PROTOBUF_FIELD_OFFSET(::Property::LinkGeneratorMetadata, _impl_.edit_),
  ~0u,
  0,
  PROTOBUF_FIELD_OFFSET(::Property::LinkEditingMetadata, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::Property::LinkEditingMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Property::LinkEditingMetadata, _impl_.contenttype_),
  PROTOBUF_FIELD_OFFSET(::Property::LinkEditingMetadata, _impl_.directtolibrary_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Property::LinkContentTypeSpecifier, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::Property::LinkContentTypeSpecifier, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::Property::LinkContentTypeSpecifier, _impl_.ContentType_),
  PROTOBUF_FIELD_OFFSET(::Property::VectorPropertyAssignment, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::Property::VectorPropertyAssignment, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Property::VectorPropertyAssignment, _impl_.method_),
  PROTOBUF_FIELD_OFFSET(::Property::VectorPropertyAssignment, _impl_.priority_),
  PROTOBUF_FIELD_OFFSET(::Property::VectorPropertyAssignment, _impl_.assignmentid_),
  PROTOBUF_FIELD_OFFSET(::Property::VectorPropertyAssignment, _impl_.value_),
  0,
  1,
  ~0u,
  ~0u,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Property::VectorPropertyValue, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::Property::VectorPropertyValue, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::Property::VectorPropertyValue, _impl_.ValueType_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Property::VectorPropertyInterpolator, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Property::VectorPropertyInterpolator, _impl_.t_),
  PROTOBUF_FIELD_OFFSET(::Property::VectorPropertyInterpolator, _impl_.from_),
  PROTOBUF_FIELD_OFFSET(::Property::VectorPropertyInterpolator, _impl_.to_),
  PROTOBUF_FIELD_OFFSET(::Property::VectorPropertyInterpolator, _impl_.by_),
  PROTOBUF_FIELD_OFFSET(::Property::VectorPerChannel, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::Property::VectorPerChannel, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Property::VectorPerChannel, _impl_.x_),
  PROTOBUF_FIELD_OFFSET(::Property::VectorPerChannel, _impl_.y_),
  PROTOBUF_FIELD_OFFSET(::Property::VectorPerChannel, _impl_.z_),
  PROTOBUF_FIELD_OFFSET(::Property::VectorPerChannel, _impl_.w_),
  ~0u,
  ~0u,
  ~0u,
  0,
  PROTOBUF_FIELD_OFFSET(::Property::VectorPropertyQuadratic, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::Property::VectorPropertyQuadratic, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Property::VectorPropertyQuadratic, _impl_.p_),
  PROTOBUF_FIELD_OFFSET(::Property::VectorPropertyQuadratic, _impl_.v_),
  PROTOBUF_FIELD_OFFSET(::Property::VectorPropertyQuadratic, _impl_.a_),
  PROTOBUF_FIELD_OFFSET(::Property::VectorPropertyQuadratic, _impl_.t_),
  ~0u,
  ~0u,
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Property::VectorPropertyApproach, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Property::VectorPropertyApproach, _impl_.t_),
  PROTOBUF_FIELD_OFFSET(::Property::VectorPropertyApproach, _impl_.to_),
  PROTOBUF_FIELD_OFFSET(::Property::VectorPropertyApproach, _impl_.timetohalf_),
  PROTOBUF_FIELD_OFFSET(::Property::VectorPropertyApproach, _impl_.start_),
  PROTOBUF_FIELD_OFFSET(::Property::VectorPropertyKeyframed_VectorKeyframe, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::Property::VectorPropertyKeyframed_VectorKeyframe, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Property::VectorPropertyKeyframed_VectorKeyframe, _impl_.t_),
  PROTOBUF_FIELD_OFFSET(::Property::VectorPropertyKeyframed_VectorKeyframe, _impl_.val_),
  PROTOBUF_FIELD_OFFSET(::Property::VectorPropertyKeyframed_VectorKeyframe, _impl_.tangentin_),
  PROTOBUF_FIELD_OFFSET(::Property::VectorPropertyKeyframed_VectorKeyframe, _impl_.tangentout_),
  ~0u,
  ~0u,
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::Property::VectorPropertyKeyframed, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::Property::VectorPropertyKeyframed, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Property::VectorPropertyKeyframed, _impl_.tsrc_),
  PROTOBUF_FIELD_OFFSET(::Property::VectorPropertyKeyframed, _impl_.keys_),
  PROTOBUF_FIELD_OFFSET(::Property::VectorPropertyKeyframed, _impl_.looping_),
  PROTOBUF_FIELD_OFFSET(::Property::VectorPropertyKeyframed, _impl_.tangentgen_),
  PROTOBUF_FIELD_OFFSET(::Property::VectorPropertyKeyframed, _impl_.interpolationmethod_),
  0,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Property::VectorPropertyDeclaration, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Property::VectorPropertyDeclaration, _impl_.default__),
  PROTOBUF_FIELD_OFFSET(::Property::VectorPropertyDeclaration, _impl_.meta_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Property::VectorEditingMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Property::VectorEditingMetadata, _impl_.usage_),
  PROTOBUF_FIELD_OFFSET(::Property::VectorGeneratorMetadata, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::Property::VectorGeneratorMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Property::VectorGeneratorMetadata, _impl_.base_),
  PROTOBUF_FIELD_OFFSET(::Property::VectorGeneratorMetadata, _impl_.edit_),
  ~0u,
  0,
  PROTOBUF_FIELD_OFFSET(::Property::VectorPropertyMetadata, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::Property::VectorPropertyMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Property::VectorPropertyMetadata, _impl_.base_),
  PROTOBUF_FIELD_OFFSET(::Property::VectorPropertyMetadata, _impl_.edit_),
  ~0u,
  0,
  PROTOBUF_FIELD_OFFSET(::Property::ColorPropertyAssignment, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::Property::ColorPropertyAssignment, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Property::ColorPropertyAssignment, _impl_.method_),
  PROTOBUF_FIELD_OFFSET(::Property::ColorPropertyAssignment, _impl_.priority_),
  PROTOBUF_FIELD_OFFSET(::Property::ColorPropertyAssignment, _impl_.assignmentid_),
  PROTOBUF_FIELD_OFFSET(::Property::ColorPropertyAssignment, _impl_.value_),
  0,
  1,
  ~0u,
  ~0u,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Property::ColorPropertyValue, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::Property::ColorPropertyValue, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::Property::ColorPropertyValue, _impl_.ValueType_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Property::ColorPropertyInterpolator, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Property::ColorPropertyInterpolator, _impl_.t_),
  PROTOBUF_FIELD_OFFSET(::Property::ColorPropertyInterpolator, _impl_.from_),
  PROTOBUF_FIELD_OFFSET(::Property::ColorPropertyInterpolator, _impl_.to_),
  PROTOBUF_FIELD_OFFSET(::Property::ColorPropertyInterpolator, _impl_.by_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Property::ColorPerChannel, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Property::ColorPerChannel, _impl_.r_),
  PROTOBUF_FIELD_OFFSET(::Property::ColorPerChannel, _impl_.g_),
  PROTOBUF_FIELD_OFFSET(::Property::ColorPerChannel, _impl_.b_),
  PROTOBUF_FIELD_OFFSET(::Property::ColorPerChannel, _impl_.a_),
  PROTOBUF_FIELD_OFFSET(::Property::ColorPropertyKeyframed_ColorKeyframe, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::Property::ColorPropertyKeyframed_ColorKeyframe, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Property::ColorPropertyKeyframed_ColorKeyframe, _impl_.t_),
  PROTOBUF_FIELD_OFFSET(::Property::ColorPropertyKeyframed_ColorKeyframe, _impl_.val_),
  PROTOBUF_FIELD_OFFSET(::Property::ColorPropertyKeyframed_ColorKeyframe, _impl_.tangentin_),
  PROTOBUF_FIELD_OFFSET(::Property::ColorPropertyKeyframed_ColorKeyframe, _impl_.tangentout_),
  ~0u,
  ~0u,
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::Property::ColorPropertyKeyframed, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::Property::ColorPropertyKeyframed, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Property::ColorPropertyKeyframed, _impl_.tsrc_),
  PROTOBUF_FIELD_OFFSET(::Property::ColorPropertyKeyframed, _impl_.keys_),
  PROTOBUF_FIELD_OFFSET(::Property::ColorPropertyKeyframed, _impl_.looping_),
  PROTOBUF_FIELD_OFFSET(::Property::ColorPropertyKeyframed, _impl_.tangentgen_),
  0,
  ~0u,
  ~0u,
  ~0u,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Property::ColorPropertyApproach, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Property::ColorPropertyApproach, _impl_.t_),
  PROTOBUF_FIELD_OFFSET(::Property::ColorPropertyApproach, _impl_.to_),
  PROTOBUF_FIELD_OFFSET(::Property::ColorPropertyApproach, _impl_.timetohalf_),
  PROTOBUF_FIELD_OFFSET(::Property::ColorPropertyApproach, _impl_.start_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Property::ColorPropertyDeclaration, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Property::ColorPropertyDeclaration, _impl_.default__),
  PROTOBUF_FIELD_OFFSET(::Property::ColorPropertyDeclaration, _impl_.meta_),
  PROTOBUF_FIELD_OFFSET(::Property::ColorEditingMetadata, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::Property::ColorEditingMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Property::ColorEditingMetadata, _impl_.allowhdr_),
  PROTOBUF_FIELD_OFFSET(::Property::ColorEditingMetadata, _impl_.usesalpha_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::Property::ColorGeneratorMetadata, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::Property::ColorGeneratorMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Property::ColorGeneratorMetadata, _impl_.base_),
  PROTOBUF_FIELD_OFFSET(::Property::ColorGeneratorMetadata, _impl_.edit_),
  ~0u,
  0,
  PROTOBUF_FIELD_OFFSET(::Property::ColorPropertyMetadata, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::Property::ColorPropertyMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Property::ColorPropertyMetadata, _impl_.base_),
  PROTOBUF_FIELD_OFFSET(::Property::ColorPropertyMetadata, _impl_.edit_),
  ~0u,
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Property::BooleanPropertyAssignment, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Property::BooleanPropertyAssignment, _impl_.assignmentid_),
  PROTOBUF_FIELD_OFFSET(::Property::BooleanPropertyAssignment, _impl_.value_),
  PROTOBUF_FIELD_OFFSET(::Property::BooleanPropertyAssignment, _impl_.priority_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Property::BooleanPropertyValue, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::Property::BooleanPropertyValue, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::Property::BooleanPropertyValue, _impl_.ValueType_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Property::BooleanPropertyKeyframed_BooleanKeyframe, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Property::BooleanPropertyKeyframed_BooleanKeyframe, _impl_.t_),
  PROTOBUF_FIELD_OFFSET(::Property::BooleanPropertyKeyframed_BooleanKeyframe, _impl_.val_),
  PROTOBUF_FIELD_OFFSET(::Property::BooleanPropertyKeyframed, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::Property::BooleanPropertyKeyframed, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Property::BooleanPropertyKeyframed, _impl_.tsrc_),
  PROTOBUF_FIELD_OFFSET(::Property::BooleanPropertyKeyframed, _impl_.keys_),
  PROTOBUF_FIELD_OFFSET(::Property::BooleanPropertyKeyframed, _impl_.looping_),
  0,
  ~0u,
  ~0u,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Property::BooleanPropertyScalarComparison, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Property::BooleanPropertyScalarComparison, _impl_.cmp_),
  PROTOBUF_FIELD_OFFSET(::Property::BooleanPropertyScalarComparison, _impl_.a_),
  PROTOBUF_FIELD_OFFSET(::Property::BooleanPropertyScalarComparison, _impl_.b_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Property::BooleanPropertyDeclaration, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Property::BooleanPropertyDeclaration, _impl_.default__),
  PROTOBUF_FIELD_OFFSET(::Property::BooleanPropertyDeclaration, _impl_.meta_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Property::BooleanEditingMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Property::BooleanGeneratorMetadata, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::Property::BooleanGeneratorMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Property::BooleanGeneratorMetadata, _impl_.base_),
  PROTOBUF_FIELD_OFFSET(::Property::BooleanGeneratorMetadata, _impl_.edit_),
  ~0u,
  0,
  PROTOBUF_FIELD_OFFSET(::Property::BooleanPropertyMetadata, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::Property::BooleanPropertyMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Property::BooleanPropertyMetadata, _impl_.base_),
  PROTOBUF_FIELD_OFFSET(::Property::BooleanPropertyMetadata, _impl_.edit_),
  ~0u,
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Property::JsonPropertyAssignment, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Property::JsonPropertyAssignment, _impl_.assignmentid_),
  PROTOBUF_FIELD_OFFSET(::Property::JsonPropertyAssignment, _impl_.value_),
  PROTOBUF_FIELD_OFFSET(::Property::JsonPropertyAssignment, _impl_.priority_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Property::JsonPropertyValue, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::Property::JsonPropertyValue, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::Property::JsonPropertyValue, _impl_.ValueType_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Property::JsonPropertyDeclaration, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Property::JsonPropertyDeclaration, _impl_.defaultjson_),
  PROTOBUF_FIELD_OFFSET(::Property::JsonPropertyDeclaration, _impl_.meta_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Property::JsonEditingMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Property::JsonGeneratorMetadata, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::Property::JsonGeneratorMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Property::JsonGeneratorMetadata, _impl_.base_),
  PROTOBUF_FIELD_OFFSET(::Property::JsonGeneratorMetadata, _impl_.edit_),
  ~0u,
  0,
  PROTOBUF_FIELD_OFFSET(::Property::JsonPropertyMetadata, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::Property::JsonPropertyMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Property::JsonPropertyMetadata, _impl_.base_),
  PROTOBUF_FIELD_OFFSET(::Property::JsonPropertyMetadata, _impl_.edit_),
  ~0u,
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Property::TransformSet, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::Property::TransformSet, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::Property::TransformSet, _impl_.SetType_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Property::TransformSetSRT, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Property::TransformSetSRT, _impl_.scale_),
  PROTOBUF_FIELD_OFFSET(::Property::TransformSetSRT, _impl_.rotationeuler_),
  PROTOBUF_FIELD_OFFSET(::Property::TransformSetSRT, _impl_.transformpos_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Property::TransformSetSQT, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Property::TransformSetSQT, _impl_.scale_),
  PROTOBUF_FIELD_OFFSET(::Property::TransformSetSQT, _impl_.rotationquat_),
  PROTOBUF_FIELD_OFFSET(::Property::TransformSetSQT, _impl_.transformpos_),
  PROTOBUF_FIELD_OFFSET(::Property::TransformSetLookAt, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::Property::TransformSetLookAt, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Property::TransformSetLookAt, _impl_.eye_),
  PROTOBUF_FIELD_OFFSET(::Property::TransformSetLookAt, _impl_.lookat_),
  PROTOBUF_FIELD_OFFSET(::Property::TransformSetLookAt, _impl_.up_),
  ~0u,
  ~0u,
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Property::TransformSetInterpolatorSRT, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Property::TransformSetInterpolatorSRT, _impl_.t_),
  PROTOBUF_FIELD_OFFSET(::Property::TransformSetInterpolatorSRT, _impl_.from_),
  PROTOBUF_FIELD_OFFSET(::Property::TransformSetInterpolatorSRT, _impl_.to_),
  PROTOBUF_FIELD_OFFSET(::Property::TransformSetInterpolatorSRT, _impl_.by_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Property::TransformSetInterpolatorSQT, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Property::TransformSetInterpolatorSQT, _impl_.t_),
  PROTOBUF_FIELD_OFFSET(::Property::TransformSetInterpolatorSQT, _impl_.from_),
  PROTOBUF_FIELD_OFFSET(::Property::TransformSetInterpolatorSQT, _impl_.to_),
  PROTOBUF_FIELD_OFFSET(::Property::TransformSetInterpolatorSQT, _impl_.by_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Property::TransformSetInterpolatorLookAt, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Property::TransformSetInterpolatorLookAt, _impl_.t_),
  PROTOBUF_FIELD_OFFSET(::Property::TransformSetInterpolatorLookAt, _impl_.from_),
  PROTOBUF_FIELD_OFFSET(::Property::TransformSetInterpolatorLookAt, _impl_.to_),
  PROTOBUF_FIELD_OFFSET(::Property::TransformSetInterpolatorLookAt, _impl_.by_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Property::TransformSetApproach, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Property::TransformSetApproach, _impl_.t_),
  PROTOBUF_FIELD_OFFSET(::Property::TransformSetApproach, _impl_.to_),
  PROTOBUF_FIELD_OFFSET(::Property::TransformSetApproach, _impl_.timetohalf_),
  PROTOBUF_FIELD_OFFSET(::Property::TransformSetApproach, _impl_.start_),
  PROTOBUF_FIELD_OFFSET(::Property::TransformSetConditional, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::Property::TransformSetConditional, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Property::TransformSetConditional, _impl_.condition_),
  PROTOBUF_FIELD_OFFSET(::Property::TransformSetConditional, _impl_.truevalue_),
  PROTOBUF_FIELD_OFFSET(::Property::TransformSetConditional, _impl_.falsevalue_),
  ~0u,
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Property::TransformUpdate, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::Property::TransformUpdate, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::Property::TransformUpdate, _impl_.UpdateType_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Property::TransformUpdateAddT, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Property::TransformUpdateAddT, _impl_.offsetposition_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Property::TransformUpdateAddR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Property::TransformUpdateAddR, _impl_.offsetrotationeuler_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Property::TransformUpdateAddQ, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Property::TransformUpdateAddQ, _impl_.offsetrotationquat_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Property::TransformUpdateScaleUniform, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Property::TransformUpdateScaleUniform, _impl_.uniformscalemultiplier_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Property::TransformUpdateScaleNonuniform, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Property::TransformUpdateScaleNonuniform, _impl_.nonuniformscalemultiplier_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Property::TransformUpdateLookAt, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Property::TransformUpdateLookAt, _impl_.percenttomove_),
  PROTOBUF_FIELD_OFFSET(::Property::TransformUpdateLookAt, _impl_.lookat_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Property::TransformUpdateRotateToEuler, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Property::TransformUpdateRotateToEuler, _impl_.percenttomove_),
  PROTOBUF_FIELD_OFFSET(::Property::TransformUpdateRotateToEuler, _impl_.toeuler_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Property::TransformUpdateRotateToQuat, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Property::TransformUpdateRotateToQuat, _impl_.percenttomove_),
  PROTOBUF_FIELD_OFFSET(::Property::TransformUpdateRotateToQuat, _impl_.toquat_),
  PROTOBUF_FIELD_OFFSET(::Property::TransformPropertyAssignment, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::Property::TransformPropertyAssignment, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::Property::TransformPropertyAssignment, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Property::TransformPropertyAssignment, _impl_.assignmentid_),
  PROTOBUF_FIELD_OFFSET(::Property::TransformPropertyAssignment, _impl_.setpriority_),
  PROTOBUF_FIELD_OFFSET(::Property::TransformPropertyAssignment, _impl_.modifyorder_),
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::Property::TransformPropertyAssignment, _impl_.AssignmentType_),
  ~0u,
  0,
  1,
  ~0u,
  ~0u,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Property::TransformPropertyDeclaration, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Property::TransformPropertyDeclaration, _impl_.default__),
  PROTOBUF_FIELD_OFFSET(::Property::TransformPropertyDeclaration, _impl_.meta_),
  PROTOBUF_FIELD_OFFSET(::Property::TransformEditingMetadata, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::Property::TransformEditingMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Property::TransformEditingMetadata, _impl_.allowsetfromusertransform_),
  PROTOBUF_FIELD_OFFSET(::Property::TransformEditingMetadata, _impl_.allowunset_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::Property::TransformGeneratorMetadata, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::Property::TransformGeneratorMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Property::TransformGeneratorMetadata, _impl_.base_),
  PROTOBUF_FIELD_OFFSET(::Property::TransformGeneratorMetadata, _impl_.edit_),
  ~0u,
  0,
  PROTOBUF_FIELD_OFFSET(::Property::TransformPropertyMetadata, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::Property::TransformPropertyMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Property::TransformPropertyMetadata, _impl_.base_),
  PROTOBUF_FIELD_OFFSET(::Property::TransformPropertyMetadata, _impl_.edit_),
  ~0u,
  0,
  PROTOBUF_FIELD_OFFSET(::Property::CustomGeneratorSubGenScalar, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::Property::CustomGeneratorSubGenScalar, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Property::CustomGeneratorSubGenScalar, _impl_.generator_),
  PROTOBUF_FIELD_OFFSET(::Property::CustomGeneratorSubGenScalar, _impl_.meta_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::Property::CustomGeneratorSubGenString, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::Property::CustomGeneratorSubGenString, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Property::CustomGeneratorSubGenString, _impl_.generator_),
  PROTOBUF_FIELD_OFFSET(::Property::CustomGeneratorSubGenString, _impl_.meta_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::Property::CustomGeneratorSubGenLink, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::Property::CustomGeneratorSubGenLink, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Property::CustomGeneratorSubGenLink, _impl_.generator_),
  PROTOBUF_FIELD_OFFSET(::Property::CustomGeneratorSubGenLink, _impl_.meta_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::Property::CustomGeneratorSubGenVector, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::Property::CustomGeneratorSubGenVector, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Property::CustomGeneratorSubGenVector, _impl_.generator_),
  PROTOBUF_FIELD_OFFSET(::Property::CustomGeneratorSubGenVector, _impl_.meta_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::Property::CustomGeneratorSubGenColor, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::Property::CustomGeneratorSubGenColor, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Property::CustomGeneratorSubGenColor, _impl_.generator_),
  PROTOBUF_FIELD_OFFSET(::Property::CustomGeneratorSubGenColor, _impl_.meta_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::Property::CustomGeneratorSubGenBoolean, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::Property::CustomGeneratorSubGenBoolean, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Property::CustomGeneratorSubGenBoolean, _impl_.generator_),
  PROTOBUF_FIELD_OFFSET(::Property::CustomGeneratorSubGenBoolean, _impl_.meta_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::Property::CustomGeneratorSubGenJson, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::Property::CustomGeneratorSubGenJson, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Property::CustomGeneratorSubGenJson, _impl_.generator_),
  PROTOBUF_FIELD_OFFSET(::Property::CustomGeneratorSubGenJson, _impl_.meta_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::Property::CustomGeneratorSubGenTransform, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::Property::CustomGeneratorSubGenTransform, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Property::CustomGeneratorSubGenTransform, _impl_.generator_),
  PROTOBUF_FIELD_OFFSET(::Property::CustomGeneratorSubGenTransform, _impl_.meta_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Property::CustomGeneratorSubGen, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::Property::CustomGeneratorSubGen, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::Property::CustomGeneratorSubGen, _impl_.SubGenType_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Property::CustomGeneratorValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Property::CustomGeneratorValue, _impl_.customid_),
  PROTOBUF_FIELD_OFFSET(::Property::CustomGeneratorValue, _impl_.subgens_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::Property::PropertyIdentifier)},
  { 7, -1, -1, sizeof(::Property::AnyPropertyValue)},
  { 23, 32, -1, sizeof(::Property::GeneratorMetadata)},
  { 35, 50, -1, sizeof(::Property::PropertyMetadata)},
  { 59, -1, -1, sizeof(::Property::AnyPropertyDeclaration)},
  { 74, 84, -1, sizeof(::Property::Interpolation)},
  { 88, 98, -1, sizeof(::Property::ScalarPropertyAssignment)},
  { 102, -1, -1, sizeof(::Property::ScalarPropertyValue)},
  { 120, -1, -1, sizeof(::Property::ScalarPropertyInterpolator)},
  { 130, -1, -1, sizeof(::Property::ScalarPropertyPulse)},
  { 140, -1, -1, sizeof(::Property::ScalarPropertyPlaybackBasic)},
  { 149, -1, -1, sizeof(::Property::ScalarPropertyPlayback)},
  { 159, 169, -1, sizeof(::Property::ScalarPropertyKeyframed_ScalarKeyframe)},
  { 173, 183, -1, sizeof(::Property::ScalarPropertyKeyframed)},
  { 187, -1, -1, sizeof(::Property::ScalarPropertyApproach)},
  { 197, -1, -1, sizeof(::Property::ScalarPropertyDeclaration)},
  { 205, 216, -1, sizeof(::Property::ScalarEditingMetadata)},
  { 221, -1, -1, sizeof(::Property::ScalarGeneratorMetadata)},
  { 229, -1, -1, sizeof(::Property::ScalarPropertyMetadata)},
  { 237, 246, -1, sizeof(::Property::StringPropertyAssignment)},
  { 249, -1, -1, sizeof(::Property::StringPropertyValue)},
  { 262, -1, -1, sizeof(::Property::StringPropertyFormatted)},
  { 270, -1, -1, sizeof(::Property::StringPropertyDeclaration)},
  { 278, -1, -1, sizeof(::Property::StringValueEnumerationOption)},
  { 286, 295, -1, sizeof(::Property::StringEditingMetadata)},
  { 298, 306, -1, sizeof(::Property::StringGeneratorMetadata)},
  { 308, 316, -1, sizeof(::Property::StringPropertyMetadata)},
  { 318, 327, -1, sizeof(::Property::LinkPropertyAssignment)},
  { 330, -1, -1, sizeof(::Property::LinkPropertyValue)},
  { 342, -1, -1, sizeof(::Property::LinkPropertyDeclaration)},
  { 350, 358, -1, sizeof(::Property::LinkPropertyMetadata)},
  { 360, 368, -1, sizeof(::Property::LinkGeneratorMetadata)},
  { 370, 378, -1, sizeof(::Property::LinkEditingMetadata)},
  { 380, -1, -1, sizeof(::Property::LinkContentTypeSpecifier)},
  { 390, 400, -1, sizeof(::Property::VectorPropertyAssignment)},
  { 404, -1, -1, sizeof(::Property::VectorPropertyValue)},
  { 422, -1, -1, sizeof(::Property::VectorPropertyInterpolator)},
  { 432, 442, -1, sizeof(::Property::VectorPerChannel)},
  { 446, 456, -1, sizeof(::Property::VectorPropertyQuadratic)},
  { 460, -1, -1, sizeof(::Property::VectorPropertyApproach)},
  { 470, 480, -1, sizeof(::Property::VectorPropertyKeyframed_VectorKeyframe)},
  { 484, 495, -1, sizeof(::Property::VectorPropertyKeyframed)},
  { 500, -1, -1, sizeof(::Property::VectorPropertyDeclaration)},
  { 508, -1, -1, sizeof(::Property::VectorEditingMetadata)},
  { 515, 523, -1, sizeof(::Property::VectorGeneratorMetadata)},
  { 525, 533, -1, sizeof(::Property::VectorPropertyMetadata)},
  { 535, 545, -1, sizeof(::Property::ColorPropertyAssignment)},
  { 549, -1, -1, sizeof(::Property::ColorPropertyValue)},
  { 565, -1, -1, sizeof(::Property::ColorPropertyInterpolator)},
  { 575, -1, -1, sizeof(::Property::ColorPerChannel)},
  { 585, 595, -1, sizeof(::Property::ColorPropertyKeyframed_ColorKeyframe)},
  { 599, 609, -1, sizeof(::Property::ColorPropertyKeyframed)},
  { 613, -1, -1, sizeof(::Property::ColorPropertyApproach)},
  { 623, -1, -1, sizeof(::Property::ColorPropertyDeclaration)},
  { 631, 639, -1, sizeof(::Property::ColorEditingMetadata)},
  { 641, 649, -1, sizeof(::Property::ColorGeneratorMetadata)},
  { 651, 659, -1, sizeof(::Property::ColorPropertyMetadata)},
  { 661, -1, -1, sizeof(::Property::BooleanPropertyAssignment)},
  { 670, -1, -1, sizeof(::Property::BooleanPropertyValue)},
  { 684, -1, -1, sizeof(::Property::BooleanPropertyKeyframed_BooleanKeyframe)},
  { 692, 701, -1, sizeof(::Property::BooleanPropertyKeyframed)},
  { 704, -1, -1, sizeof(::Property::BooleanPropertyScalarComparison)},
  { 713, -1, -1, sizeof(::Property::BooleanPropertyDeclaration)},
  { 721, -1, -1, sizeof(::Property::BooleanEditingMetadata)},
  { 727, 735, -1, sizeof(::Property::BooleanGeneratorMetadata)},
  { 737, 745, -1, sizeof(::Property::BooleanPropertyMetadata)},
  { 747, -1, -1, sizeof(::Property::JsonPropertyAssignment)},
  { 756, -1, -1, sizeof(::Property::JsonPropertyValue)},
  { 768, -1, -1, sizeof(::Property::JsonPropertyDeclaration)},
  { 776, -1, -1, sizeof(::Property::JsonEditingMetadata)},
  { 782, 790, -1, sizeof(::Property::JsonGeneratorMetadata)},
  { 792, 800, -1, sizeof(::Property::JsonPropertyMetadata)},
  { 802, -1, -1, sizeof(::Property::TransformSet)},
  { 822, -1, -1, sizeof(::Property::TransformSetSRT)},
  { 831, -1, -1, sizeof(::Property::TransformSetSQT)},
  { 840, 849, -1, sizeof(::Property::TransformSetLookAt)},
  { 852, -1, -1, sizeof(::Property::TransformSetInterpolatorSRT)},
  { 862, -1, -1, sizeof(::Property::TransformSetInterpolatorSQT)},
  { 872, -1, -1, sizeof(::Property::TransformSetInterpolatorLookAt)},
  { 882, -1, -1, sizeof(::Property::TransformSetApproach)},
  { 892, 901, -1, sizeof(::Property::TransformSetConditional)},
  { 904, -1, -1, sizeof(::Property::TransformUpdate)},
  { 920, -1, -1, sizeof(::Property::TransformUpdateAddT)},
  { 927, -1, -1, sizeof(::Property::TransformUpdateAddR)},
  { 934, -1, -1, sizeof(::Property::TransformUpdateAddQ)},
  { 941, -1, -1, sizeof(::Property::TransformUpdateScaleUniform)},
  { 948, -1, -1, sizeof(::Property::TransformUpdateScaleNonuniform)},
  { 955, -1, -1, sizeof(::Property::TransformUpdateLookAt)},
  { 963, -1, -1, sizeof(::Property::TransformUpdateRotateToEuler)},
  { 971, -1, -1, sizeof(::Property::TransformUpdateRotateToQuat)},
  { 979, 991, -1, sizeof(::Property::TransformPropertyAssignment)},
  { 996, -1, -1, sizeof(::Property::TransformPropertyDeclaration)},
  { 1004, 1012, -1, sizeof(::Property::TransformEditingMetadata)},
  { 1014, 1022, -1, sizeof(::Property::TransformGeneratorMetadata)},
  { 1024, 1032, -1, sizeof(::Property::TransformPropertyMetadata)},
  { 1034, 1042, -1, sizeof(::Property::CustomGeneratorSubGenScalar)},
  { 1044, 1052, -1, sizeof(::Property::CustomGeneratorSubGenString)},
  { 1054, 1062, -1, sizeof(::Property::CustomGeneratorSubGenLink)},
  { 1064, 1072, -1, sizeof(::Property::CustomGeneratorSubGenVector)},
  { 1074, 1082, -1, sizeof(::Property::CustomGeneratorSubGenColor)},
  { 1084, 1092, -1, sizeof(::Property::CustomGeneratorSubGenBoolean)},
  { 1094, 1102, -1, sizeof(::Property::CustomGeneratorSubGenJson)},
  { 1104, 1112, -1, sizeof(::Property::CustomGeneratorSubGenTransform)},
  { 1114, -1, -1, sizeof(::Property::CustomGeneratorSubGen)},
  { 1129, -1, -1, sizeof(::Property::CustomGeneratorValue)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::Property::_PropertyIdentifier_default_instance_._instance,
  &::Property::_AnyPropertyValue_default_instance_._instance,
  &::Property::_GeneratorMetadata_default_instance_._instance,
  &::Property::_PropertyMetadata_default_instance_._instance,
  &::Property::_AnyPropertyDeclaration_default_instance_._instance,
  &::Property::_Interpolation_default_instance_._instance,
  &::Property::_ScalarPropertyAssignment_default_instance_._instance,
  &::Property::_ScalarPropertyValue_default_instance_._instance,
  &::Property::_ScalarPropertyInterpolator_default_instance_._instance,
  &::Property::_ScalarPropertyPulse_default_instance_._instance,
  &::Property::_ScalarPropertyPlaybackBasic_default_instance_._instance,
  &::Property::_ScalarPropertyPlayback_default_instance_._instance,
  &::Property::_ScalarPropertyKeyframed_ScalarKeyframe_default_instance_._instance,
  &::Property::_ScalarPropertyKeyframed_default_instance_._instance,
  &::Property::_ScalarPropertyApproach_default_instance_._instance,
  &::Property::_ScalarPropertyDeclaration_default_instance_._instance,
  &::Property::_ScalarEditingMetadata_default_instance_._instance,
  &::Property::_ScalarGeneratorMetadata_default_instance_._instance,
  &::Property::_ScalarPropertyMetadata_default_instance_._instance,
  &::Property::_StringPropertyAssignment_default_instance_._instance,
  &::Property::_StringPropertyValue_default_instance_._instance,
  &::Property::_StringPropertyFormatted_default_instance_._instance,
  &::Property::_StringPropertyDeclaration_default_instance_._instance,
  &::Property::_StringValueEnumerationOption_default_instance_._instance,
  &::Property::_StringEditingMetadata_default_instance_._instance,
  &::Property::_StringGeneratorMetadata_default_instance_._instance,
  &::Property::_StringPropertyMetadata_default_instance_._instance,
  &::Property::_LinkPropertyAssignment_default_instance_._instance,
  &::Property::_LinkPropertyValue_default_instance_._instance,
  &::Property::_LinkPropertyDeclaration_default_instance_._instance,
  &::Property::_LinkPropertyMetadata_default_instance_._instance,
  &::Property::_LinkGeneratorMetadata_default_instance_._instance,
  &::Property::_LinkEditingMetadata_default_instance_._instance,
  &::Property::_LinkContentTypeSpecifier_default_instance_._instance,
  &::Property::_VectorPropertyAssignment_default_instance_._instance,
  &::Property::_VectorPropertyValue_default_instance_._instance,
  &::Property::_VectorPropertyInterpolator_default_instance_._instance,
  &::Property::_VectorPerChannel_default_instance_._instance,
  &::Property::_VectorPropertyQuadratic_default_instance_._instance,
  &::Property::_VectorPropertyApproach_default_instance_._instance,
  &::Property::_VectorPropertyKeyframed_VectorKeyframe_default_instance_._instance,
  &::Property::_VectorPropertyKeyframed_default_instance_._instance,
  &::Property::_VectorPropertyDeclaration_default_instance_._instance,
  &::Property::_VectorEditingMetadata_default_instance_._instance,
  &::Property::_VectorGeneratorMetadata_default_instance_._instance,
  &::Property::_VectorPropertyMetadata_default_instance_._instance,
  &::Property::_ColorPropertyAssignment_default_instance_._instance,
  &::Property::_ColorPropertyValue_default_instance_._instance,
  &::Property::_ColorPropertyInterpolator_default_instance_._instance,
  &::Property::_ColorPerChannel_default_instance_._instance,
  &::Property::_ColorPropertyKeyframed_ColorKeyframe_default_instance_._instance,
  &::Property::_ColorPropertyKeyframed_default_instance_._instance,
  &::Property::_ColorPropertyApproach_default_instance_._instance,
  &::Property::_ColorPropertyDeclaration_default_instance_._instance,
  &::Property::_ColorEditingMetadata_default_instance_._instance,
  &::Property::_ColorGeneratorMetadata_default_instance_._instance,
  &::Property::_ColorPropertyMetadata_default_instance_._instance,
  &::Property::_BooleanPropertyAssignment_default_instance_._instance,
  &::Property::_BooleanPropertyValue_default_instance_._instance,
  &::Property::_BooleanPropertyKeyframed_BooleanKeyframe_default_instance_._instance,
  &::Property::_BooleanPropertyKeyframed_default_instance_._instance,
  &::Property::_BooleanPropertyScalarComparison_default_instance_._instance,
  &::Property::_BooleanPropertyDeclaration_default_instance_._instance,
  &::Property::_BooleanEditingMetadata_default_instance_._instance,
  &::Property::_BooleanGeneratorMetadata_default_instance_._instance,
  &::Property::_BooleanPropertyMetadata_default_instance_._instance,
  &::Property::_JsonPropertyAssignment_default_instance_._instance,
  &::Property::_JsonPropertyValue_default_instance_._instance,
  &::Property::_JsonPropertyDeclaration_default_instance_._instance,
  &::Property::_JsonEditingMetadata_default_instance_._instance,
  &::Property::_JsonGeneratorMetadata_default_instance_._instance,
  &::Property::_JsonPropertyMetadata_default_instance_._instance,
  &::Property::_TransformSet_default_instance_._instance,
  &::Property::_TransformSetSRT_default_instance_._instance,
  &::Property::_TransformSetSQT_default_instance_._instance,
  &::Property::_TransformSetLookAt_default_instance_._instance,
  &::Property::_TransformSetInterpolatorSRT_default_instance_._instance,
  &::Property::_TransformSetInterpolatorSQT_default_instance_._instance,
  &::Property::_TransformSetInterpolatorLookAt_default_instance_._instance,
  &::Property::_TransformSetApproach_default_instance_._instance,
  &::Property::_TransformSetConditional_default_instance_._instance,
  &::Property::_TransformUpdate_default_instance_._instance,
  &::Property::_TransformUpdateAddT_default_instance_._instance,
  &::Property::_TransformUpdateAddR_default_instance_._instance,
  &::Property::_TransformUpdateAddQ_default_instance_._instance,
  &::Property::_TransformUpdateScaleUniform_default_instance_._instance,
  &::Property::_TransformUpdateScaleNonuniform_default_instance_._instance,
  &::Property::_TransformUpdateLookAt_default_instance_._instance,
  &::Property::_TransformUpdateRotateToEuler_default_instance_._instance,
  &::Property::_TransformUpdateRotateToQuat_default_instance_._instance,
  &::Property::_TransformPropertyAssignment_default_instance_._instance,
  &::Property::_TransformPropertyDeclaration_default_instance_._instance,
  &::Property::_TransformEditingMetadata_default_instance_._instance,
  &::Property::_TransformGeneratorMetadata_default_instance_._instance,
  &::Property::_TransformPropertyMetadata_default_instance_._instance,
  &::Property::_CustomGeneratorSubGenScalar_default_instance_._instance,
  &::Property::_CustomGeneratorSubGenString_default_instance_._instance,
  &::Property::_CustomGeneratorSubGenLink_default_instance_._instance,
  &::Property::_CustomGeneratorSubGenVector_default_instance_._instance,
  &::Property::_CustomGeneratorSubGenColor_default_instance_._instance,
  &::Property::_CustomGeneratorSubGenBoolean_default_instance_._instance,
  &::Property::_CustomGeneratorSubGenJson_default_instance_._instance,
  &::Property::_CustomGeneratorSubGenTransform_default_instance_._instance,
  &::Property::_CustomGeneratorSubGen_default_instance_._instance,
  &::Property::_CustomGeneratorValue_default_instance_._instance,
};

const char descriptor_table_protodef_properties_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\020properties.proto\022\010Property\032\014common.pro"
  "to\" \n\022PropertyIdentifier\022\n\n\002id\030\001 \001(\t\"\323\003\n"
  "\020AnyPropertyValue\022/\n\006scalar\030\001 \001(\0132\035.Prop"
  "erty.ScalarPropertyValueH\000\022/\n\006string\030\002 \001"
  "(\0132\035.Property.StringPropertyValueH\000\022/\n\006v"
  "ector\030\003 \001(\0132\035.Property.VectorPropertyVal"
  "ueH\000\022-\n\005color\030\004 \001(\0132\034.Property.ColorProp"
  "ertyValueH\000\022+\n\ttransform\030\005 \001(\0132\026.Propert"
  "y.TransformSetH\000\0220\n\013transUpdate\030\006 \001(\0132\031."
  "Property.TransformUpdateH\000\022.\n\004bool\030\007 \001(\013"
  "2\036.Property.BooleanPropertyValueH\000\022+\n\004js"
  "on\030\t \001(\0132\033.Property.JsonPropertyValueH\000\022"
  "+\n\004link\030\n \001(\0132\033.Property.LinkPropertyVal"
  "ueH\000B\016\n\014PropertyTypeJ\004\010\010\020\t\"k\n\021GeneratorM"
  "etadata\022\014\n\004name\030\001 \001(\t\022\030\n\013description\030\002 \001"
  "(\tH\000\210\001\001\022\023\n\006hidden\030\003 \001(\010H\001\210\001\001B\016\n\014_descrip"
  "tionB\t\n\007_hidden\"\346\003\n\020PropertyMetadata\022\014\n\004"
  "name\030\001 \001(\t\022\025\n\010category\030\002 \001(\tH\000\210\001\001\022\032\n\rcat"
  "egoryOrder\030\006 \001(\002H\001\210\001\001\022\023\n\013description\030\003 \001"
  "(\t\022\027\n\nisReadonly\030\005 \001(\010H\002\210\001\001\022\032\n\rinternalO"
  "rder\030\007 \001(\002H\003\210\001\001\022@\n\nsyncMethod\030\010 \001(\0162\'.Pr"
  "operty.PropertyMetadata.PropertySyncH\004\210\001"
  "\001\022\027\n\nisAdvanced\030\t \001(\010H\005\210\001\001\0229\n\014uiVisibili"
  "ty\030\n \001(\0132\036.Property.BooleanPropertyValue"
  "H\006\210\001\001\"B\n\014PropertySync\022\010\n\004Full\020\000\022\r\n\tTrans"
  "ient\020\001\022\t\n\005Local\020\002\022\016\n\nSyncedOnly\020\003B\013\n\t_ca"
  "tegoryB\020\n\016_categoryOrderB\r\n\013_isReadonlyB"
  "\020\n\016_internalOrderB\r\n\013_syncMethodB\r\n\013_isA"
  "dvancedB\017\n\r_uiVisibility\"\341\003\n\026AnyProperty"
  "Declaration\0225\n\006scalar\030\002 \001(\0132#.Property.S"
  "calarPropertyDeclarationH\000\0225\n\006string\030\003 \001"
  "(\0132#.Property.StringPropertyDeclarationH"
  "\000\0225\n\006vector\030\004 \001(\0132#.Property.VectorPrope"
  "rtyDeclarationH\000\0223\n\005color\030\005 \001(\0132\".Proper"
  "ty.ColorPropertyDeclarationH\000\022;\n\ttransfo"
  "rm\030\006 \001(\0132&.Property.TransformPropertyDec"
  "larationH\000\0227\n\007boolean\030\007 \001(\0132$.Property.B"
  "ooleanPropertyDeclarationH\000\0221\n\004json\030\t \001("
  "\0132!.Property.JsonPropertyDeclarationH\000\0221"
  "\n\004link\030\n \001(\0132!.Property.LinkPropertyDecl"
  "arationH\000B\013\n\tValueTypeJ\004\010\010\020\t\"\223\001\n\rInterpo"
  "lation\022\024\n\007easeOut\030\001 \001(\002H\000\210\001\001\022\023\n\006easeIn\030\002"
  " \001(\002H\001\210\001\001\022\025\n\010duration\030\003 \001(\002H\002\210\001\001\022\022\n\005dela"
  "y\030\004 \001(\002H\003\210\001\001B\n\n\010_easeOutB\t\n\007_easeInB\013\n\t_"
  "durationB\010\n\006_delay\"\245\002\n\030ScalarPropertyAss"
  "ignment\022L\n\006method\030\001 \001(\01627.Property.Scala"
  "rPropertyAssignment.ScalarPropertyMethod"
  "H\000\210\001\001\022\037\n\022overridingPriority\030\002 \001(\005H\001\210\001\001\022\024"
  "\n\014assignmentId\030\004 \001(\t\022,\n\005value\030\003 \001(\0132\035.Pr"
  "operty.ScalarPropertyValue\"4\n\024ScalarProp"
  "ertyMethod\022\016\n\nOverriding\020\000\022\014\n\010Additive\020\001"
  "B\t\n\007_methodB\025\n\023_overridingPriority\"\207\004\n\023S"
  "calarPropertyValue\022\022\n\010constant\030\001 \001(\002H\000\022+"
  "\n\003ref\030\002 \001(\0132\034.Property.PropertyIdentifie"
  "rH\000\022\016\n\004expr\030\003 \001(\tH\000\0226\n\tkeyframes\030\004 \001(\0132!"
  ".Property.ScalarPropertyKeyframedH\000\022\024\n\nu"
  "seDefault\030\005 \001(\010H\000\022.\n\005pulse\030\006 \001(\0132\035.Prope"
  "rty.ScalarPropertyPulseH\000\0224\n\010playback\030\007 "
  "\001(\0132 .Property.ScalarPropertyPlaybackH\000\022"
  ">\n\rplaybackBasic\030\010 \001(\0132%.Property.Scalar"
  "PropertyPlaybackBasicH\000\0226\n\006interp\030\t \001(\0132"
  "$.Property.ScalarPropertyInterpolatorH\000\022"
  "0\n\006custom\030\n \001(\0132\036.Property.CustomGenerat"
  "orValueH\000\0224\n\010approach\030\013 \001(\0132 .Property.S"
  "calarPropertyApproachH\000B\013\n\tValueType\"\303\001\n"
  "\032ScalarPropertyInterpolator\022(\n\001t\030\004 \001(\0132\035"
  ".Property.ScalarPropertyValue\022+\n\004from\030\001 "
  "\001(\0132\035.Property.ScalarPropertyValue\022)\n\002to"
  "\030\002 \001(\0132\035.Property.ScalarPropertyValue\022#\n"
  "\002by\030\003 \001(\0132\027.Property.Interpolation\"\311\001\n\023S"
  "calarPropertyPulse\022+\n\004tSrc\030\001 \001(\0132\035.Prope"
  "rty.ScalarPropertyValue\022-\n\006length\030\002 \001(\0132"
  "\035.Property.ScalarPropertyValue\022*\n\003min\030\003 "
  "\001(\0132\035.Property.ScalarPropertyValue\022*\n\003ma"
  "x\030\004 \001(\0132\035.Property.ScalarPropertyValue\"\\"
  "\n\033ScalarPropertyPlaybackBasic\022\017\n\007playing"
  "\030\003 \001(\010\022\021\n\tstartTime\030\002 \001(\002\022\031\n\021speedWhileP"
  "laying\030\004 \001(\002\"\303\001\n\026ScalarPropertyPlayback\022"
  "+\n\004tSrc\030\001 \001(\0132\035.Property.ScalarPropertyV"
  "alue\0220\n\tstartTime\030\002 \001(\0132\035.Property.Scala"
  "rPropertyValue\022/\n\007playing\030\003 \001(\0132\036.Proper"
  "ty.BooleanPropertyValue\022\031\n\021speedWhilePla"
  "ying\030\004 \001(\002\"\231\003\n\027ScalarPropertyKeyframed\0220"
  "\n\004tSrc\030\010 \001(\0132\035.Property.ScalarPropertyVa"
  "lueH\000\210\001\001\022>\n\004keys\030\n \003(\01320.Property.Scalar"
  "PropertyKeyframed.ScalarKeyframe\022.\n\007loop"
  "ing\030\013 \001(\0162\035.Property.KeyframeLoopingEnum"
  "\022;\n\ntangentGen\030\014 \001(\0162\'.Property.Tangents"
  "AutocomputeMethodEnum\032\225\001\n\016ScalarKeyframe"
  "\022\t\n\001t\030\001 \001(\002\022*\n\003val\030\002 \001(\0132\035.Property.Scal"
  "arPropertyValue\022\026\n\ttangentIn\030\003 \001(\002H\000\210\001\001\022"
  "\027\n\ntangentOut\030\004 \001(\002H\001\210\001\001B\014\n\n_tangentInB\r"
  "\n\013_tangentOutB\007\n\005_tSrc\"\316\001\n\026ScalarPropert"
  "yApproach\022(\n\001t\030\001 \001(\0132\035.Property.ScalarPr"
  "opertyValue\022)\n\002to\030\002 \001(\0132\035.Property.Scala"
  "rPropertyValue\0221\n\ntimeToHalf\030\003 \001(\0132\035.Pro"
  "perty.ScalarPropertyValue\022,\n\005start\030\004 \001(\013"
  "2\035.Property.ScalarPropertyValue\"\\\n\031Scala"
  "rPropertyDeclaration\022\017\n\007default\030\002 \001(\002\022.\n"
  "\004meta\030\001 \001(\0132 .Property.ScalarPropertyMet"
  "adata\"\363\002\n\025ScalarEditingMetadata\022Q\n\nscala"
  "rType\030\001 \001(\01628.Property.ScalarEditingMeta"
  "data.ScalarInterpretationEnumH\000\210\001\001\022\030\n\013ui"
  "Increment\030\002 \001(\002H\001\210\001\001\022\026\n\tuiMinimum\030\003 \001(\002H"
  "\002\210\001\001\022\026\n\tuiMaximum\030\004 \001(\002H\003\210\001\001\022\036\n\021playback"
  "LengthRef\030\005 \001(\tH\004\210\001\001\"L\n\030ScalarInterpreta"
  "tionEnum\022\014\n\010Standard\020\000\022\010\n\004Time\020\001\022\014\n\010Play"
  "back\020\003\022\n\n\006Scaler\020\004B\r\n\013_scalarTypeB\016\n\014_ui"
  "IncrementB\014\n\n_uiMinimumB\014\n\n_uiMaximumB\024\n"
  "\022_playbackLengthRef\"s\n\027ScalarGeneratorMe"
  "tadata\022)\n\004base\030\001 \001(\0132\033.Property.Generato"
  "rMetadata\022-\n\004edit\030\002 \001(\0132\037.Property.Scala"
  "rEditingMetadata\"\203\001\n\026ScalarPropertyMetad"
  "ata\022(\n\004base\030\001 \001(\0132\032.Property.PropertyMet"
  "adata\022-\n\004edit\030\005 \001(\0132\037.Property.ScalarEdi"
  "tingMetadataJ\004\010\002\020\003J\004\010\003\020\004J\004\010\004\020\005\"\202\001\n\030Strin"
  "gPropertyAssignment\022\025\n\010priority\030\002 \001(\005H\000\210"
  "\001\001\022,\n\005value\030\003 \001(\0132\035.Property.StringPrope"
  "rtyValue\022\024\n\014assignmentId\030\004 \001(\tB\013\n\t_prior"
  "ity\"\363\001\n\023StringPropertyValue\022\022\n\010constant\030"
  "\001 \001(\tH\000\0226\n\tformatted\030\002 \001(\0132!.Property.St"
  "ringPropertyFormattedH\000\022+\n\003ref\030\003 \001(\0132\034.P"
  "roperty.PropertyIdentifierH\000\022\016\n\004expr\030\004 \001"
  "(\tH\000\022\024\n\nuseDefault\030\005 \001(\010H\000\0220\n\006custom\030\n \001"
  "(\0132\036.Property.CustomGeneratorValueH\000B\013\n\t"
  "ValueType\"^\n\027StringPropertyFormatted\022\024\n\014"
  "FormatString\030\001 \001(\t\022-\n\tArguments\030\002 \003(\0132\032."
  "Property.AnyPropertyValue\"\\\n\031StringPrope"
  "rtyDeclaration\022\017\n\007default\030\002 \001(\t\022.\n\004meta\030"
  "\001 \001(\0132 .Property.StringPropertyMetadata\""
  "F\n\034StringValueEnumerationOption\022\021\n\tenumV"
  "alue\030\001 \001(\t\022\023\n\013displayText\030\002 \001(\t\"\257\001\n\025Stri"
  "ngEditingMetadata\022B\n\022enumerationOptions\030"
  "\002 \003(\0132&.Property.StringValueEnumerationO"
  "ption\022\025\n\010isScript\030\004 \001(\010H\000\210\001\001\022\030\n\013isMultiL"
  "ine\030\005 \001(\010H\001\210\001\001B\013\n\t_isScriptB\016\n\014_isMultiL"
  "ineJ\004\010\003\020\004\"\201\001\n\027StringGeneratorMetadata\022)\n"
  "\004base\030\001 \001(\0132\033.Property.GeneratorMetadata"
  "\0222\n\004edit\030\002 \001(\0132\037.Property.StringEditingM"
  "etadataH\000\210\001\001B\007\n\005_edit\"\205\001\n\026StringProperty"
  "Metadata\022(\n\004base\030\001 \001(\0132\032.Property.Proper"
  "tyMetadata\0222\n\004edit\030\003 \001(\0132\037.Property.Stri"
  "ngEditingMetadataH\000\210\001\001B\007\n\005_editJ\004\010\002\020\003\"~\n"
  "\026LinkPropertyAssignment\022\025\n\010priority\030\002 \001("
  "\005H\000\210\001\001\022*\n\005value\030\003 \001(\0132\033.Property.LinkPro"
  "pertyValue\022\024\n\014assignmentId\030\004 \001(\tB\013\n\t_pri"
  "ority\"\327\001\n\021LinkPropertyValue\0220\n\010constant\030"
  "\001 \001(\0132\034.Property.PropertyIdentifierH\000\022+\n"
  "\003ref\030\003 \001(\0132\034.Property.PropertyIdentifier"
  "H\000\022\016\n\004expr\030\004 \001(\tH\000\022\024\n\nuseDefault\030\005 \001(\010H\000"
  "\0220\n\006custom\030\n \001(\0132\036.Property.CustomGenera"
  "torValueH\000B\013\n\tValueType\"X\n\027LinkPropertyD"
  "eclaration\022\017\n\007default\030\002 \001(\t\022,\n\004meta\030\001 \001("
  "\0132\036.Property.LinkPropertyMetadata\"{\n\024Lin"
  "kPropertyMetadata\022(\n\004base\030\001 \001(\0132\032.Proper"
  "ty.PropertyMetadata\0220\n\004edit\030\002 \001(\0132\035.Prop"
  "erty.LinkEditingMetadataH\000\210\001\001B\007\n\005_edit\"}"
  "\n\025LinkGeneratorMetadata\022)\n\004base\030\001 \001(\0132\033."
  "Property.GeneratorMetadata\0220\n\004edit\030\002 \001(\013"
  "2\035.Property.LinkEditingMetadataH\000\210\001\001B\007\n\005"
  "_edit\"\225\001\n\023LinkEditingMetadata\022<\n\013content"
  "Type\030\001 \001(\0132\".Property.LinkContentTypeSpe"
  "cifierH\000\210\001\001\022\034\n\017directToLibrary\030\002 \001(\010H\001\210\001"
  "\001B\016\n\014_contentTypeB\022\n\020_directToLibrary\"\244\003"
  "\n\030LinkContentTypeSpecifier\022A\n\007Texture\030\001 "
  "\001(\0162..Property.LinkContentTypeSpecifier."
  "TextureTypeH\000\022C\n\010Material\030\002 \001(\0162/.Proper"
  "ty.LinkContentTypeSpecifier.MaterialType"
  "H\000\022C\n\010Geometry\030\003 \001(\0162/.Property.LinkCont"
  "entTypeSpecifier.GeometryTypeH\000\"i\n\013Textu"
  "reType\022\017\n\013AllTextures\020\000\022\r\n\tColorMaps\020\001\022\016"
  "\n\nNormalMaps\020\002\022\014\n\010Skyboxes\020\003\022\016\n\nArTracke"
  "rs\020\004\022\014\n\010Profiles\020\005\" \n\014MaterialType\022\020\n\014Al"
  "lMaterials\020\000\"\037\n\014GeometryType\022\017\n\013AnyGeome"
  "try\020\000B\r\n\013ContentType\"\221\002\n\030VectorPropertyA"
  "ssignment\022L\n\006method\030\001 \001(\01627.Property.Vec"
  "torPropertyAssignment.VectorPropertyMeth"
  "odH\000\210\001\001\022\025\n\010priority\030\002 \001(\005H\001\210\001\001\022\024\n\014assign"
  "mentId\030\004 \001(\t\022,\n\005value\030\003 \001(\0132\035.Property.V"
  "ectorPropertyValue\"4\n\024VectorPropertyMeth"
  "od\022\016\n\nOverriding\020\000\022\014\n\010Additive\020\001B\t\n\007_met"
  "hodB\013\n\t_priority\"\214\004\n\023VectorPropertyValue"
  "\022\"\n\010constant\030\001 \001(\0132\016.Common.Float4H\000\022+\n\003"
  "ref\030\002 \001(\0132\034.Property.PropertyIdentifierH"
  "\000\022\016\n\004expr\030\003 \001(\tH\000\022/\n\tbyChannel\030\004 \001(\0132\032.P"
  "roperty.VectorPerChannelH\000\0226\n\tkeyframes\030"
  "\005 \001(\0132!.Property.VectorPropertyKeyframed"
  "H\000\022\024\n\nuseDefault\030\006 \001(\010H\000\0226\n\006interp\030\t \001(\013"
  "2$.Property.VectorPropertyInterpolatorH\000"
  "\0220\n\006custom\030\n \001(\0132\036.Property.CustomGenera"
  "torValueH\000\0226\n\tquadratic\030\013 \001(\0132!.Property"
  ".VectorPropertyQuadraticH\000\0220\n\007uniform\030\014 "
  "\001(\0132\035.Property.ScalarPropertyValueH\000\0224\n\010"
  "approach\030\r \001(\0132 .Property.VectorProperty"
  "ApproachH\000B\013\n\tValueType\"\303\001\n\032VectorProper"
  "tyInterpolator\022(\n\001t\030\004 \001(\0132\035.Property.Sca"
  "larPropertyValue\022+\n\004from\030\001 \001(\0132\035.Propert"
  "y.VectorPropertyValue\022)\n\002to\030\002 \001(\0132\035.Prop"
  "erty.VectorPropertyValue\022#\n\002by\030\003 \001(\0132\027.P"
  "roperty.Interpolation\"\305\001\n\020VectorPerChann"
  "el\022(\n\001x\030\001 \001(\0132\035.Property.ScalarPropertyV"
  "alue\022(\n\001y\030\002 \001(\0132\035.Property.ScalarPropert"
  "yValue\022(\n\001z\030\003 \001(\0132\035.Property.ScalarPrope"
  "rtyValue\022-\n\001w\030\004 \001(\0132\035.Property.ScalarPro"
  "pertyValueH\000\210\001\001B\004\n\002_w\"\327\001\n\027VectorProperty"
  "Quadratic\022(\n\001p\030\001 \001(\0132\035.Property.VectorPr"
  "opertyValue\022(\n\001v\030\002 \001(\0132\035.Property.Vector"
  "PropertyValue\022-\n\001a\030\003 \001(\0132\035.Property.Vect"
  "orPropertyValueH\000\210\001\001\022-\n\001t\030\004 \001(\0132\035.Proper"
  "ty.ScalarPropertyValueH\001\210\001\001B\004\n\002_aB\004\n\002_t\""
  "\316\001\n\026VectorPropertyApproach\022(\n\001t\030\001 \001(\0132\035."
  "Property.ScalarPropertyValue\022)\n\002to\030\002 \001(\013"
  "2\035.Property.VectorPropertyValue\0221\n\ntimeT"
  "oHalf\030\003 \001(\0132\035.Property.ScalarPropertyVal"
  "ue\022,\n\005start\030\004 \001(\0132\035.Property.VectorPrope"
  "rtyValue\"\336\004\n\027VectorPropertyKeyframed\0220\n\004"
  "tSrc\030\010 \001(\0132\035.Property.ScalarPropertyValu"
  "eH\000\210\001\001\022>\n\004keys\030\n \003(\01320.Property.VectorPr"
  "opertyKeyframed.VectorKeyframe\022.\n\007loopin"
  "g\030\013 \001(\0162\035.Property.KeyframeLoopingEnum\022;"
  "\n\ntangentGen\030\014 \001(\0162\'.Property.TangentsAu"
  "tocomputeMethodEnum\022X\n\023interpolationMeth"
  "od\030\r \001(\0162;.Property.VectorPropertyKeyfra"
  "med.VectorInterpolationMethod\032\265\001\n\016Vector"
  "Keyframe\022\t\n\001t\030\001 \001(\002\022*\n\003val\030\002 \001(\0132\035.Prope"
  "rty.VectorPropertyValue\022&\n\ttangentIn\030\003 \001"
  "(\0132\016.Common.Float4H\000\210\001\001\022\'\n\ntangentOut\030\004 "
  "\001(\0132\016.Common.Float4H\001\210\001\001B\014\n\n_tangentInB\r"
  "\n\013_tangentOut\"I\n\031VectorInterpolationMeth"
  "od\022\r\n\tCartesian\020\000\022\r\n\tSpherical\020\001\022\016\n\nQuat"
  "ernion\020\002B\007\n\005_tSrc\"l\n\031VectorPropertyDecla"
  "ration\022\037\n\007default\030\002 \001(\0132\016.Common.Float4\022"
  ".\n\004meta\030\001 \001(\0132 .Property.VectorPropertyM"
  "etadata\"\372\001\n\025VectorEditingMetadata\022G\n\005usa"
  "ge\030\001 \001(\01628.Property.VectorEditingMetadat"
  "a.VectorInterpretationEnum\"\227\001\n\030VectorInt"
  "erpretationEnum\022\t\n\005Point\020\000\022\r\n\tDirection\020"
  "\001\022\n\n\006Eulers\020\002\022\t\n\005Scale\020\003\022\016\n\nQuaternion\020\004"
  "\022\013\n\007Point2D\020\005\022\017\n\013Direction2D\020\006\022\013\n\007Scale2"
  "D\020\007\022\017\n\013OffsetScale\020\n\"\201\001\n\027VectorGenerator"
  "Metadata\022)\n\004base\030\001 \001(\0132\033.Property.Genera"
  "torMetadata\0222\n\004edit\030\002 \001(\0132\037.Property.Vec"
  "torEditingMetadataH\000\210\001\001B\007\n\005_edit\"\177\n\026Vect"
  "orPropertyMetadata\022(\n\004base\030\001 \001(\0132\032.Prope"
  "rty.PropertyMetadata\0222\n\004edit\030\002 \001(\0132\037.Pro"
  "perty.VectorEditingMetadataH\000\210\001\001B\007\n\005_edi"
  "t\"\214\002\n\027ColorPropertyAssignment\022J\n\006method\030"
  "\001 \001(\01625.Property.ColorPropertyAssignment"
  ".ColorPropertyMethodH\000\210\001\001\022\025\n\010priority\030\002 "
  "\001(\005H\001\210\001\001\022\024\n\014assignmentId\030\004 \001(\t\022+\n\005value\030"
  "\003 \001(\0132\034.Property.ColorPropertyValue\"3\n\023C"
  "olorPropertyMethod\022\016\n\nOverriding\020\000\022\014\n\010Ad"
  "ditive\020\001B\t\n\007_methodB\013\n\t_priority\"\235\003\n\022Col"
  "orPropertyValue\022\"\n\010constant\030\001 \001(\0132\016.Comm"
  "on.Color4H\000\022+\n\003ref\030\002 \001(\0132\034.Property.Prop"
  "ertyIdentifierH\000\022.\n\tbyChannel\030\004 \001(\0132\031.Pr"
  "operty.ColorPerChannelH\000\0225\n\tkeyframes\030\005 "
  "\001(\0132 .Property.ColorPropertyKeyframedH\000\022"
  "\016\n\004expr\030\006 \001(\tH\000\022\024\n\nuseDefault\030\007 \001(\010H\000\0225\n"
  "\006interp\030\t \001(\0132#.Property.ColorPropertyIn"
  "terpolatorH\000\0220\n\006custom\030\n \001(\0132\036.Property."
  "CustomGeneratorValueH\000\0223\n\010approach\030\014 \001(\013"
  "2\037.Property.ColorPropertyApproachH\000B\013\n\tV"
  "alueType\"\300\001\n\031ColorPropertyInterpolator\022("
  "\n\001t\030\004 \001(\0132\035.Property.ScalarPropertyValue"
  "\022*\n\004from\030\001 \001(\0132\034.Property.ColorPropertyV"
  "alue\022(\n\002to\030\002 \001(\0132\034.Property.ColorPropert"
  "yValue\022#\n\002by\030\003 \001(\0132\027.Property.Interpolat"
  "ion\"\271\001\n\017ColorPerChannel\022(\n\001r\030\001 \001(\0132\035.Pro"
  "perty.ScalarPropertyValue\022(\n\001g\030\002 \001(\0132\035.P"
  "roperty.ScalarPropertyValue\022(\n\001b\030\003 \001(\0132\035"
  ".Property.ScalarPropertyValue\022(\n\001a\030\004 \001(\013"
  "2\035.Property.ScalarPropertyValue\"\264\003\n\026Colo"
  "rPropertyKeyframed\0220\n\004tSrc\030\010 \001(\0132\035.Prope"
  "rty.ScalarPropertyValueH\000\210\001\001\022<\n\004keys\030\n \003"
  "(\0132..Property.ColorPropertyKeyframed.Col"
  "orKeyframe\022.\n\007looping\030\013 \001(\0162\035.Property.K"
  "eyframeLoopingEnum\022;\n\ntangentGen\030\014 \001(\0162\'"
  ".Property.TangentsAutocomputeMethodEnum\032"
  "\263\001\n\rColorKeyframe\022\t\n\001t\030\001 \001(\002\022)\n\003val\030\002 \001("
  "\0132\034.Property.ColorPropertyValue\022&\n\ttange"
  "ntIn\030\003 \001(\0132\016.Common.Color4H\000\210\001\001\022\'\n\ntange"
  "ntOut\030\004 \001(\0132\016.Common.Color4H\001\210\001\001B\014\n\n_tan"
  "gentInB\r\n\013_tangentOutB\007\n\005_tSrc\"\313\001\n\025Color"
  "PropertyApproach\022(\n\001t\030\001 \001(\0132\035.Property.S"
  "calarPropertyValue\022(\n\002to\030\002 \001(\0132\034.Propert"
  "y.ColorPropertyValue\0221\n\ntimeToHalf\030\003 \001(\013"
  "2\035.Property.ScalarPropertyValue\022+\n\005start"
  "\030\004 \001(\0132\034.Property.ColorPropertyValue\"j\n\030"
  "ColorPropertyDeclaration\022\037\n\007default\030\002 \001("
  "\0132\016.Common.Color4\022-\n\004meta\030\001 \001(\0132\037.Proper"
  "ty.ColorPropertyMetadata\"`\n\024ColorEditing"
  "Metadata\022\025\n\010allowHdr\030\002 \001(\010H\000\210\001\001\022\026\n\tusesA"
  "lpha\030\003 \001(\010H\001\210\001\001B\013\n\t_allowHdrB\014\n\n_usesAlp"
  "ha\"\177\n\026ColorGeneratorMetadata\022)\n\004base\030\001 \001"
  "(\0132\033.Property.GeneratorMetadata\0221\n\004edit\030"
  "\002 \001(\0132\036.Property.ColorEditingMetadataH\000\210"
  "\001\001B\007\n\005_edit\"\211\001\n\025ColorPropertyMetadata\022(\n"
  "\004base\030\001 \001(\0132\032.Property.PropertyMetadata\022"
  "1\n\004edit\030\004 \001(\0132\036.Property.ColorEditingMet"
  "adataH\000\210\001\001B\007\n\005_editJ\004\010\002\020\003J\004\010\003\020\004\"r\n\031Boole"
  "anPropertyAssignment\022\024\n\014assignmentId\030\004 \001"
  "(\t\022-\n\005value\030\003 \001(\0132\036.Property.BooleanProp"
  "ertyValue\022\020\n\010priority\030\002 \001(\005\"\265\002\n\024BooleanP"
  "ropertyValue\022\022\n\010constant\030\001 \001(\010H\000\022+\n\003ref\030"
  "\002 \001(\0132\034.Property.PropertyIdentifierH\000\0227\n"
  "\tkeyframes\030\005 \001(\0132\".Property.BooleanPrope"
  "rtyKeyframedH\000\022\016\n\004expr\030\006 \001(\tH\000\022>\n\tscalar"
  "Cmp\030\007 \001(\0132).Property.BooleanPropertyScal"
  "arComparisonH\000\022\024\n\nuseDefault\030\010 \001(\010H\000\0220\n\006"
  "custom\030\n \001(\0132\036.Property.CustomGeneratorV"
  "alueH\000B\013\n\tValueType\"\222\002\n\030BooleanPropertyK"
  "eyframed\0220\n\004tSrc\030\010 \001(\0132\035.Property.Scalar"
  "PropertyValueH\000\210\001\001\022@\n\004keys\030\n \003(\01322.Prope"
  "rty.BooleanPropertyKeyframed.BooleanKeyf"
  "rame\022.\n\007looping\030\013 \001(\0162\035.Property.Keyfram"
  "eLoopingEnum\032I\n\017BooleanKeyframe\022\t\n\001t\030\001 \001"
  "(\002\022+\n\003val\030\002 \001(\0132\036.Property.BooleanProper"
  "tyValueB\007\n\005_tSrc\"\234\001\n\037BooleanPropertyScal"
  "arComparison\022%\n\003cmp\030\001 \001(\0162\030.Common.Compa"
  "risonMethod\022(\n\001a\030\002 \001(\0132\035.Property.Scalar"
  "PropertyValue\022(\n\001b\030\003 \001(\0132\035.Property.Scal"
  "arPropertyValue\"^\n\032BooleanPropertyDeclar"
  "ation\022\017\n\007default\030\002 \001(\010\022/\n\004meta\030\001 \001(\0132!.P"
  "roperty.BooleanPropertyMetadata\"\030\n\026Boole"
  "anEditingMetadata\"\203\001\n\030BooleanGeneratorMe"
  "tadata\022)\n\004base\030\001 \001(\0132\033.Property.Generato"
  "rMetadata\0223\n\004edit\030\002 \001(\0132 .Property.Boole"
  "anEditingMetadataH\000\210\001\001B\007\n\005_edit\"\201\001\n\027Bool"
  "eanPropertyMetadata\022(\n\004base\030\001 \001(\0132\032.Prop"
  "erty.PropertyMetadata\0223\n\004edit\030\002 \001(\0132 .Pr"
  "operty.BooleanEditingMetadataH\000\210\001\001B\007\n\005_e"
  "dit\"l\n\026JsonPropertyAssignment\022\024\n\014assignm"
  "entId\030\004 \001(\t\022*\n\005value\030\003 \001(\0132\033.Property.Js"
  "onPropertyValue\022\020\n\010priority\030\002 \001(\005\"\275\001\n\021Js"
  "onPropertyValue\022\026\n\014constantJson\030\001 \001(\tH\000\022"
  "+\n\003ref\030\002 \001(\0132\034.Property.PropertyIdentifi"
  "erH\000\022\016\n\004expr\030\003 \001(\tH\000\022\024\n\nuseDefault\030\004 \001(\010"
  "H\000\0220\n\006custom\030\n \001(\0132\036.Property.CustomGene"
  "ratorValueH\000B\013\n\tValueType\"\\\n\027JsonPropert"
  "yDeclaration\022\023\n\013defaultJson\030\002 \001(\t\022,\n\004met"
  "a\030\001 \001(\0132\036.Property.JsonPropertyMetadata\""
  "\025\n\023JsonEditingMetadata\"}\n\025JsonGeneratorM"
  "etadata\022)\n\004base\030\001 \001(\0132\033.Property.Generat"
  "orMetadata\0220\n\004edit\030\002 \001(\0132\035.Property.Json"
  "EditingMetadataH\000\210\001\001B\007\n\005_edit\"{\n\024JsonPro"
  "pertyMetadata\022(\n\004base\030\001 \001(\0132\032.Property.P"
  "ropertyMetadata\0220\n\004edit\030\002 \001(\0132\035.Property"
  ".JsonEditingMetadataH\000\210\001\001B\007\n\005_edit\"\333\004\n\014T"
  "ransformSet\022(\n\003srt\030\001 \001(\0132\031.Property.Tran"
  "sformSetSRTH\000\022(\n\003sqt\030\002 \001(\0132\031.Property.Tr"
  "ansformSetSQTH\000\022,\n\004look\030\003 \001(\0132\034.Property"
  ".TransformSetLookAtH\000\022+\n\003ref\030\005 \001(\0132\034.Pro"
  "perty.PropertyIdentifierH\000\022\016\n\004expr\030\006 \001(\t"
  "H\000\022\024\n\nuseDefault\030\007 \001(\010H\000\022\023\n\tuseSource\030\010 "
  "\001(\010H\000\022:\n\tinterpSrt\030\t \001(\0132%.Property.Tran"
  "sformSetInterpolatorSRTH\000\022:\n\tinterpSqt\030\n"
  " \001(\0132%.Property.TransformSetInterpolator"
  "SQTH\000\022>\n\ninterpLook\030\013 \001(\0132(.Property.Tra"
  "nsformSetInterpolatorLookAtH\000\0220\n\006custom\030"
  "\014 \001(\0132\036.Property.CustomGeneratorValueH\000\022"
  "8\n\013conditional\030\r \001(\0132!.Property.Transfor"
  "mSetConditionalH\000\0222\n\010approach\030\016 \001(\0132\036.Pr"
  "operty.TransformSetApproachH\000B\t\n\007SetType"
  "\"\252\001\n\017TransformSetSRT\022,\n\005scale\030\001 \001(\0132\035.Pr"
  "operty.VectorPropertyValue\0224\n\rrotationEu"
  "ler\030\002 \001(\0132\035.Property.VectorPropertyValue"
  "\0223\n\014transformPos\030\003 \001(\0132\035.Property.Vector"
  "PropertyValue\"\251\001\n\017TransformSetSQT\022,\n\005sca"
  "le\030\001 \001(\0132\035.Property.VectorPropertyValue\022"
  "3\n\014rotationQuat\030\002 \001(\0132\035.Property.VectorP"
  "ropertyValue\0223\n\014transformPos\030\003 \001(\0132\035.Pro"
  "perty.VectorPropertyValue\"\246\001\n\022TransformS"
  "etLookAt\022*\n\003eye\030\001 \001(\0132\035.Property.VectorP"
  "ropertyValue\022-\n\006lookAt\030\002 \001(\0132\035.Property."
  "VectorPropertyValue\022.\n\002up\030\003 \001(\0132\035.Proper"
  "ty.VectorPropertyValueH\000\210\001\001B\005\n\003_up\"\274\001\n\033T"
  "ransformSetInterpolatorSRT\022(\n\001t\030\004 \001(\0132\035."
  "Property.ScalarPropertyValue\022\'\n\004from\030\001 \001"
  "(\0132\031.Property.TransformSetSRT\022%\n\002to\030\002 \001("
  "\0132\031.Property.TransformSetSRT\022#\n\002by\030\003 \001(\013"
  "2\027.Property.Interpolation\"\274\001\n\033TransformS"
  "etInterpolatorSQT\022(\n\001t\030\004 \001(\0132\035.Property."
  "ScalarPropertyValue\022\'\n\004from\030\001 \001(\0132\031.Prop"
  "erty.TransformSetSQT\022%\n\002to\030\002 \001(\0132\031.Prope"
  "rty.TransformSetSQT\022#\n\002by\030\003 \001(\0132\027.Proper"
  "ty.Interpolation\"\305\001\n\036TransformSetInterpo"
  "latorLookAt\022(\n\001t\030\004 \001(\0132\035.Property.Scalar"
  "PropertyValue\022*\n\004from\030\001 \001(\0132\034.Property.T"
  "ransformSetLookAt\022(\n\002to\030\002 \001(\0132\034.Property"
  ".TransformSetLookAt\022#\n\002by\030\003 \001(\0132\027.Proper"
  "ty.Interpolation\"\276\001\n\024TransformSetApproac"
  "h\022(\n\001t\030\001 \001(\0132\035.Property.ScalarPropertyVa"
  "lue\022\"\n\002to\030\002 \001(\0132\026.Property.TransformSet\022"
  "1\n\ntimeToHalf\030\003 \001(\0132\035.Property.ScalarPro"
  "pertyValue\022%\n\005start\030\004 \001(\0132\026.Property.Tra"
  "nsformSet\"\312\001\n\027TransformSetConditional\0221\n"
  "\tcondition\030\001 \001(\0132\036.Property.BooleanPrope"
  "rtyValue\022.\n\ttrueValue\030\002 \001(\0132\026.Property.T"
  "ransformSetH\000\210\001\001\022/\n\nfalseValue\030\003 \001(\0132\026.P"
  "roperty.TransformSetH\001\210\001\001B\014\n\n_trueValueB"
  "\r\n\013_falseValue\"\211\004\n\017TransformUpdate\0227\n\016ad"
  "dTranslation\030\001 \001(\0132\035.Property.TransformU"
  "pdateAddTH\000\0229\n\020addEulerRotation\030\002 \001(\0132\035."
  "Property.TransformUpdateAddRH\000\0228\n\017addQua"
  "tRotation\030\003 \001(\0132\035.Property.TransformUpda"
  "teAddQH\000\022=\n\014uniformScale\030\004 \001(\0132%.Propert"
  "y.TransformUpdateScaleUniformH\000\022C\n\017nonun"
  "iformScale\030\005 \001(\0132(.Property.TransformUpd"
  "ateScaleNonuniformH\000\0222\n\007facePos\030\006 \001(\0132\037."
  "Property.TransformUpdateLookAtH\000\0229\n\007toEu"
  "ler\030\007 \001(\0132&.Property.TransformUpdateRota"
  "teToEulerH\000\0227\n\006toQuat\030\010 \001(\0132%.Property.T"
  "ransformUpdateRotateToQuatH\000\022\016\n\004expr\030\t \001"
  "(\tH\000B\014\n\nUpdateType\"L\n\023TransformUpdateAdd"
  "T\0225\n\016offsetPosition\030\001 \001(\0132\035.Property.Vec"
  "torPropertyValue\"Q\n\023TransformUpdateAddR\022"
  ":\n\023offsetRotationEuler\030\001 \001(\0132\035.Property."
  "VectorPropertyValue\"P\n\023TransformUpdateAd"
  "dQ\0229\n\022offsetRotationQuat\030\001 \001(\0132\035.Propert"
  "y.VectorPropertyValue\"\\\n\033TransformUpdate"
  "ScaleUniform\022=\n\026uniformScaleMultiplier\030\001"
  " \001(\0132\035.Property.ScalarPropertyValue\"b\n\036T"
  "ransformUpdateScaleNonuniform\022@\n\031nonunif"
  "ormScaleMultiplier\030\002 \001(\0132\035.Property.Vect"
  "orPropertyValue\"|\n\025TransformUpdateLookAt"
  "\0224\n\rpercentToMove\030\001 \001(\0132\035.Property.Scala"
  "rPropertyValue\022-\n\006lookAt\030\002 \001(\0132\035.Propert"
  "y.VectorPropertyValue\"\204\001\n\034TransformUpdat"
  "eRotateToEuler\0224\n\rpercentToMove\030\001 \001(\0132\035."
  "Property.ScalarPropertyValue\022.\n\007toEuler\030"
  "\002 \001(\0132\035.Property.VectorPropertyValue\"\202\001\n"
  "\033TransformUpdateRotateToQuat\0224\n\rpercentT"
  "oMove\030\001 \001(\0132\035.Property.ScalarPropertyVal"
  "ue\022-\n\006toQuat\030\002 \001(\0132\035.Property.VectorProp"
  "ertyValue\"\367\001\n\033TransformPropertyAssignmen"
  "t\022\024\n\014assignmentId\030\001 \001(\t\022\030\n\013setPriority\030\002"
  " \001(\005H\001\210\001\001\022\030\n\013modifyOrder\030\003 \001(\005H\002\210\001\001\022*\n\010s"
  "etValue\030\006 \001(\0132\026.Property.TransformSetH\000\022"
  "0\n\013modifyValue\030\007 \001(\0132\031.Property.Transfor"
  "mUpdateH\000B\020\n\016AssignmentTypeB\016\n\014_setPrior"
  "ityB\016\n\014_modifyOrder\"z\n\034TransformProperty"
  "Declaration\022\'\n\007default\030\002 \001(\0132\026.Property."
  "TransformSet\0221\n\004meta\030\001 \001(\0132#.Property.Tr"
  "ansformPropertyMetadata\"\210\001\n\030TransformEdi"
  "tingMetadata\022&\n\031allowSetFromUserTransfor"
  "m\030\001 \001(\010H\000\210\001\001\022\027\n\nallowUnset\030\002 \001(\010H\001\210\001\001B\034\n"
  "\032_allowSetFromUserTransformB\r\n\013_allowUns"
  "et\"\207\001\n\032TransformGeneratorMetadata\022)\n\004bas"
  "e\030\001 \001(\0132\033.Property.GeneratorMetadata\0225\n\004"
  "edit\030\002 \001(\0132\".Property.TransformEditingMe"
  "tadataH\000\210\001\001B\007\n\005_edit\"\205\001\n\031TransformProper"
  "tyMetadata\022(\n\004base\030\001 \001(\0132\032.Property.Prop"
  "ertyMetadata\0225\n\004edit\030\002 \001(\0132\".Property.Tr"
  "ansformEditingMetadataH\000\210\001\001B\007\n\005_edit\"\241\001\n"
  "\033CustomGeneratorSubGenScalar\0225\n\tgenerato"
  "r\030\001 \001(\0132\035.Property.ScalarPropertyValueH\000"
  "\210\001\001\0224\n\004meta\030\002 \001(\0132!.Property.ScalarGener"
  "atorMetadataH\001\210\001\001B\014\n\n_generatorB\007\n\005_meta"
  "\"\241\001\n\033CustomGeneratorSubGenString\0225\n\tgene"
  "rator\030\001 \001(\0132\035.Property.StringPropertyVal"
  "ueH\000\210\001\001\0224\n\004meta\030\002 \001(\0132!.Property.StringG"
  "eneratorMetadataH\001\210\001\001B\014\n\n_generatorB\007\n\005_"
  "meta\"\233\001\n\031CustomGeneratorSubGenLink\0223\n\tge"
  "nerator\030\001 \001(\0132\033.Property.LinkPropertyVal"
  "ueH\000\210\001\001\0222\n\004meta\030\002 \001(\0132\037.Property.LinkGen"
  "eratorMetadataH\001\210\001\001B\014\n\n_generatorB\007\n\005_me"
  "ta\"\241\001\n\033CustomGeneratorSubGenVector\0225\n\tge"
  "nerator\030\001 \001(\0132\035.Property.VectorPropertyV"
  "alueH\000\210\001\001\0224\n\004meta\030\002 \001(\0132!.Property.Vecto"
  "rGeneratorMetadataH\001\210\001\001B\014\n\n_generatorB\007\n"
  "\005_meta\"\236\001\n\032CustomGeneratorSubGenColor\0224\n"
  "\tgenerator\030\001 \001(\0132\034.Property.ColorPropert"
  "yValueH\000\210\001\001\0223\n\004meta\030\002 \001(\0132 .Property.Col"
  "orGeneratorMetadataH\001\210\001\001B\014\n\n_generatorB\007"
  "\n\005_meta\"\244\001\n\034CustomGeneratorSubGenBoolean"
  "\0226\n\tgenerator\030\001 \001(\0132\036.Property.BooleanPr"
  "opertyValueH\000\210\001\001\0225\n\004meta\030\002 \001(\0132\".Propert"
  "y.BooleanGeneratorMetadataH\001\210\001\001B\014\n\n_gene"
  "ratorB\007\n\005_meta\"\233\001\n\031CustomGeneratorSubGen"
  "Json\0223\n\tgenerator\030\001 \001(\0132\033.Property.JsonP"
  "ropertyValueH\000\210\001\001\0222\n\004meta\030\002 \001(\0132\037.Proper"
  "ty.JsonGeneratorMetadataH\001\210\001\001B\014\n\n_genera"
  "torB\007\n\005_meta\"\240\001\n\036CustomGeneratorSubGenTr"
  "ansform\022.\n\tgenerator\030\001 \001(\0132\026.Property.Tr"
  "ansformSetH\000\210\001\001\0227\n\004meta\030\002 \001(\0132$.Property"
  ".TransformGeneratorMetadataH\001\210\001\001B\014\n\n_gen"
  "eratorB\007\n\005_meta\"\353\003\n\025CustomGeneratorSubGe"
  "n\0227\n\006scalar\030\002 \001(\0132%.Property.CustomGener"
  "atorSubGenScalarH\000\0227\n\006string\030\003 \001(\0132%.Pro"
  "perty.CustomGeneratorSubGenStringH\000\0223\n\004l"
  "ink\030\t \001(\0132#.Property.CustomGeneratorSubG"
  "enLinkH\000\0227\n\006vector\030\004 \001(\0132%.Property.Cust"
  "omGeneratorSubGenVectorH\000\0225\n\005color\030\005 \001(\013"
  "2$.Property.CustomGeneratorSubGenColorH\000"
  "\0229\n\007boolean\030\006 \001(\0132&.Property.CustomGener"
  "atorSubGenBooleanH\000\0223\n\004json\030\007 \001(\0132#.Prop"
  "erty.CustomGeneratorSubGenJsonH\000\022=\n\ttran"
  "sform\030\010 \001(\0132(.Property.CustomGeneratorSu"
  "bGenTransformH\000B\014\n\nSubGenType\"Z\n\024CustomG"
  "eneratorValue\022\020\n\010customId\030\001 \001(\t\0220\n\007subGe"
  "ns\030\002 \003(\0132\037.Property.CustomGeneratorSubGe"
  "n*F\n\023KeyframeLoopingEnum\022\t\n\005Clamp\020\000\022\010\n\004L"
  "oop\020\001\022\016\n\nLoopOffset\020\002\022\n\n\006Mirror\020\003*@\n\035Tan"
  "gentsAutocomputeMethodEnum\022\010\n\004Zero\020\000\022\n\n\006"
  "Linear\020\001\022\t\n\005Cubic\020\002B\036\252\002\033Collab.Proxy.Com"
  "m.LiveTypesb\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_properties_2eproto_deps[1] = {
  &::descriptor_table_common_2eproto,
};
static ::_pbi::once_flag descriptor_table_properties_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_properties_2eproto = {
    false, false, 20259, descriptor_table_protodef_properties_2eproto,
    "properties.proto",
    &descriptor_table_properties_2eproto_once, descriptor_table_properties_2eproto_deps, 1, 105,
    schemas, file_default_instances, TableStruct_properties_2eproto::offsets,
    file_level_metadata_properties_2eproto, file_level_enum_descriptors_properties_2eproto,
    file_level_service_descriptors_properties_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_properties_2eproto_getter() {
  return &descriptor_table_properties_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_properties_2eproto(&descriptor_table_properties_2eproto);
namespace Property {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PropertyMetadata_PropertySync_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_properties_2eproto);
  return file_level_enum_descriptors_properties_2eproto[0];
}
bool PropertyMetadata_PropertySync_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr PropertyMetadata_PropertySync PropertyMetadata::Full;
constexpr PropertyMetadata_PropertySync PropertyMetadata::Transient;
constexpr PropertyMetadata_PropertySync PropertyMetadata::Local;
constexpr PropertyMetadata_PropertySync PropertyMetadata::SyncedOnly;
constexpr PropertyMetadata_PropertySync PropertyMetadata::PropertySync_MIN;
constexpr PropertyMetadata_PropertySync PropertyMetadata::PropertySync_MAX;
constexpr int PropertyMetadata::PropertySync_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ScalarPropertyAssignment_ScalarPropertyMethod_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_properties_2eproto);
  return file_level_enum_descriptors_properties_2eproto[1];
}
bool ScalarPropertyAssignment_ScalarPropertyMethod_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr ScalarPropertyAssignment_ScalarPropertyMethod ScalarPropertyAssignment::Overriding;
constexpr ScalarPropertyAssignment_ScalarPropertyMethod ScalarPropertyAssignment::Additive;
constexpr ScalarPropertyAssignment_ScalarPropertyMethod ScalarPropertyAssignment::ScalarPropertyMethod_MIN;
constexpr ScalarPropertyAssignment_ScalarPropertyMethod ScalarPropertyAssignment::ScalarPropertyMethod_MAX;
constexpr int ScalarPropertyAssignment::ScalarPropertyMethod_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ScalarEditingMetadata_ScalarInterpretationEnum_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_properties_2eproto);
  return file_level_enum_descriptors_properties_2eproto[2];
}
bool ScalarEditingMetadata_ScalarInterpretationEnum_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr ScalarEditingMetadata_ScalarInterpretationEnum ScalarEditingMetadata::Standard;
constexpr ScalarEditingMetadata_ScalarInterpretationEnum ScalarEditingMetadata::Time;
constexpr ScalarEditingMetadata_ScalarInterpretationEnum ScalarEditingMetadata::Playback;
constexpr ScalarEditingMetadata_ScalarInterpretationEnum ScalarEditingMetadata::Scaler;
constexpr ScalarEditingMetadata_ScalarInterpretationEnum ScalarEditingMetadata::ScalarInterpretationEnum_MIN;
constexpr ScalarEditingMetadata_ScalarInterpretationEnum ScalarEditingMetadata::ScalarInterpretationEnum_MAX;
constexpr int ScalarEditingMetadata::ScalarInterpretationEnum_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* LinkContentTypeSpecifier_TextureType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_properties_2eproto);
  return file_level_enum_descriptors_properties_2eproto[3];
}
bool LinkContentTypeSpecifier_TextureType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr LinkContentTypeSpecifier_TextureType LinkContentTypeSpecifier::AllTextures;
constexpr LinkContentTypeSpecifier_TextureType LinkContentTypeSpecifier::ColorMaps;
constexpr LinkContentTypeSpecifier_TextureType LinkContentTypeSpecifier::NormalMaps;
constexpr LinkContentTypeSpecifier_TextureType LinkContentTypeSpecifier::Skyboxes;
constexpr LinkContentTypeSpecifier_TextureType LinkContentTypeSpecifier::ArTrackers;
constexpr LinkContentTypeSpecifier_TextureType LinkContentTypeSpecifier::Profiles;
constexpr LinkContentTypeSpecifier_TextureType LinkContentTypeSpecifier::TextureType_MIN;
constexpr LinkContentTypeSpecifier_TextureType LinkContentTypeSpecifier::TextureType_MAX;
constexpr int LinkContentTypeSpecifier::TextureType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* LinkContentTypeSpecifier_MaterialType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_properties_2eproto);
  return file_level_enum_descriptors_properties_2eproto[4];
}
bool LinkContentTypeSpecifier_MaterialType_IsValid(int value) {
  switch (value) {
    case 0:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr LinkContentTypeSpecifier_MaterialType LinkContentTypeSpecifier::AllMaterials;
constexpr LinkContentTypeSpecifier_MaterialType LinkContentTypeSpecifier::MaterialType_MIN;
constexpr LinkContentTypeSpecifier_MaterialType LinkContentTypeSpecifier::MaterialType_MAX;
constexpr int LinkContentTypeSpecifier::MaterialType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* LinkContentTypeSpecifier_GeometryType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_properties_2eproto);
  return file_level_enum_descriptors_properties_2eproto[5];
}
bool LinkContentTypeSpecifier_GeometryType_IsValid(int value) {
  switch (value) {
    case 0:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr LinkContentTypeSpecifier_GeometryType LinkContentTypeSpecifier::AnyGeometry;
constexpr LinkContentTypeSpecifier_GeometryType LinkContentTypeSpecifier::GeometryType_MIN;
constexpr LinkContentTypeSpecifier_GeometryType LinkContentTypeSpecifier::GeometryType_MAX;
constexpr int LinkContentTypeSpecifier::GeometryType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* VectorPropertyAssignment_VectorPropertyMethod_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_properties_2eproto);
  return file_level_enum_descriptors_properties_2eproto[6];
}
bool VectorPropertyAssignment_VectorPropertyMethod_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr VectorPropertyAssignment_VectorPropertyMethod VectorPropertyAssignment::Overriding;
constexpr VectorPropertyAssignment_VectorPropertyMethod VectorPropertyAssignment::Additive;
constexpr VectorPropertyAssignment_VectorPropertyMethod VectorPropertyAssignment::VectorPropertyMethod_MIN;
constexpr VectorPropertyAssignment_VectorPropertyMethod VectorPropertyAssignment::VectorPropertyMethod_MAX;
constexpr int VectorPropertyAssignment::VectorPropertyMethod_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* VectorPropertyKeyframed_VectorInterpolationMethod_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_properties_2eproto);
  return file_level_enum_descriptors_properties_2eproto[7];
}
bool VectorPropertyKeyframed_VectorInterpolationMethod_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr VectorPropertyKeyframed_VectorInterpolationMethod VectorPropertyKeyframed::Cartesian;
constexpr VectorPropertyKeyframed_VectorInterpolationMethod VectorPropertyKeyframed::Spherical;
constexpr VectorPropertyKeyframed_VectorInterpolationMethod VectorPropertyKeyframed::Quaternion;
constexpr VectorPropertyKeyframed_VectorInterpolationMethod VectorPropertyKeyframed::VectorInterpolationMethod_MIN;
constexpr VectorPropertyKeyframed_VectorInterpolationMethod VectorPropertyKeyframed::VectorInterpolationMethod_MAX;
constexpr int VectorPropertyKeyframed::VectorInterpolationMethod_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* VectorEditingMetadata_VectorInterpretationEnum_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_properties_2eproto);
  return file_level_enum_descriptors_properties_2eproto[8];
}
bool VectorEditingMetadata_VectorInterpretationEnum_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 10:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr VectorEditingMetadata_VectorInterpretationEnum VectorEditingMetadata::Point;
constexpr VectorEditingMetadata_VectorInterpretationEnum VectorEditingMetadata::Direction;
constexpr VectorEditingMetadata_VectorInterpretationEnum VectorEditingMetadata::Eulers;
constexpr VectorEditingMetadata_VectorInterpretationEnum VectorEditingMetadata::Scale;
constexpr VectorEditingMetadata_VectorInterpretationEnum VectorEditingMetadata::Quaternion;
constexpr VectorEditingMetadata_VectorInterpretationEnum VectorEditingMetadata::Point2D;
constexpr VectorEditingMetadata_VectorInterpretationEnum VectorEditingMetadata::Direction2D;
constexpr VectorEditingMetadata_VectorInterpretationEnum VectorEditingMetadata::Scale2D;
constexpr VectorEditingMetadata_VectorInterpretationEnum VectorEditingMetadata::OffsetScale;
constexpr VectorEditingMetadata_VectorInterpretationEnum VectorEditingMetadata::VectorInterpretationEnum_MIN;
constexpr VectorEditingMetadata_VectorInterpretationEnum VectorEditingMetadata::VectorInterpretationEnum_MAX;
constexpr int VectorEditingMetadata::VectorInterpretationEnum_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ColorPropertyAssignment_ColorPropertyMethod_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_properties_2eproto);
  return file_level_enum_descriptors_properties_2eproto[9];
}
bool ColorPropertyAssignment_ColorPropertyMethod_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr ColorPropertyAssignment_ColorPropertyMethod ColorPropertyAssignment::Overriding;
constexpr ColorPropertyAssignment_ColorPropertyMethod ColorPropertyAssignment::Additive;
constexpr ColorPropertyAssignment_ColorPropertyMethod ColorPropertyAssignment::ColorPropertyMethod_MIN;
constexpr ColorPropertyAssignment_ColorPropertyMethod ColorPropertyAssignment::ColorPropertyMethod_MAX;
constexpr int ColorPropertyAssignment::ColorPropertyMethod_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* KeyframeLoopingEnum_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_properties_2eproto);
  return file_level_enum_descriptors_properties_2eproto[10];
}
bool KeyframeLoopingEnum_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* TangentsAutocomputeMethodEnum_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_properties_2eproto);
  return file_level_enum_descriptors_properties_2eproto[11];
}
bool TangentsAutocomputeMethodEnum_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class PropertyIdentifier::_Internal {
 public:
};

PropertyIdentifier::PropertyIdentifier(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.PropertyIdentifier)
}
PropertyIdentifier::PropertyIdentifier(const PropertyIdentifier& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PropertyIdentifier* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    _this->_impl_.id_.Set(from._internal_id(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:Property.PropertyIdentifier)
}

inline void PropertyIdentifier::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

PropertyIdentifier::~PropertyIdentifier() {
  // @@protoc_insertion_point(destructor:Property.PropertyIdentifier)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PropertyIdentifier::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.id_.Destroy();
}

void PropertyIdentifier::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PropertyIdentifier::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.PropertyIdentifier)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PropertyIdentifier::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "Property.PropertyIdentifier.id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PropertyIdentifier::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.PropertyIdentifier)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Property.PropertyIdentifier.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.PropertyIdentifier)
  return target;
}

size_t PropertyIdentifier::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.PropertyIdentifier)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PropertyIdentifier::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PropertyIdentifier::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PropertyIdentifier::GetClassData() const { return &_class_data_; }


void PropertyIdentifier::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PropertyIdentifier*>(&to_msg);
  auto& from = static_cast<const PropertyIdentifier&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.PropertyIdentifier)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PropertyIdentifier::CopyFrom(const PropertyIdentifier& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.PropertyIdentifier)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PropertyIdentifier::IsInitialized() const {
  return true;
}

void PropertyIdentifier::InternalSwap(PropertyIdentifier* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.id_, lhs_arena,
      &other->_impl_.id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata PropertyIdentifier::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[0]);
}

// ===================================================================

class AnyPropertyValue::_Internal {
 public:
  static const ::Property::ScalarPropertyValue& scalar(const AnyPropertyValue* msg);
  static const ::Property::StringPropertyValue& string(const AnyPropertyValue* msg);
  static const ::Property::VectorPropertyValue& vector(const AnyPropertyValue* msg);
  static const ::Property::ColorPropertyValue& color(const AnyPropertyValue* msg);
  static const ::Property::TransformSet& transform(const AnyPropertyValue* msg);
  static const ::Property::TransformUpdate& transupdate(const AnyPropertyValue* msg);
  static const ::Property::BooleanPropertyValue& bool_(const AnyPropertyValue* msg);
  static const ::Property::JsonPropertyValue& json(const AnyPropertyValue* msg);
  static const ::Property::LinkPropertyValue& link(const AnyPropertyValue* msg);
};

const ::Property::ScalarPropertyValue&
AnyPropertyValue::_Internal::scalar(const AnyPropertyValue* msg) {
  return *msg->_impl_.PropertyType_.scalar_;
}
const ::Property::StringPropertyValue&
AnyPropertyValue::_Internal::string(const AnyPropertyValue* msg) {
  return *msg->_impl_.PropertyType_.string_;
}
const ::Property::VectorPropertyValue&
AnyPropertyValue::_Internal::vector(const AnyPropertyValue* msg) {
  return *msg->_impl_.PropertyType_.vector_;
}
const ::Property::ColorPropertyValue&
AnyPropertyValue::_Internal::color(const AnyPropertyValue* msg) {
  return *msg->_impl_.PropertyType_.color_;
}
const ::Property::TransformSet&
AnyPropertyValue::_Internal::transform(const AnyPropertyValue* msg) {
  return *msg->_impl_.PropertyType_.transform_;
}
const ::Property::TransformUpdate&
AnyPropertyValue::_Internal::transupdate(const AnyPropertyValue* msg) {
  return *msg->_impl_.PropertyType_.transupdate_;
}
const ::Property::BooleanPropertyValue&
AnyPropertyValue::_Internal::bool_(const AnyPropertyValue* msg) {
  return *msg->_impl_.PropertyType_.bool__;
}
const ::Property::JsonPropertyValue&
AnyPropertyValue::_Internal::json(const AnyPropertyValue* msg) {
  return *msg->_impl_.PropertyType_.json_;
}
const ::Property::LinkPropertyValue&
AnyPropertyValue::_Internal::link(const AnyPropertyValue* msg) {
  return *msg->_impl_.PropertyType_.link_;
}
void AnyPropertyValue::set_allocated_scalar(::Property::ScalarPropertyValue* scalar) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_PropertyType();
  if (scalar) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(scalar);
    if (message_arena != submessage_arena) {
      scalar = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, scalar, submessage_arena);
    }
    set_has_scalar();
    _impl_.PropertyType_.scalar_ = scalar;
  }
  // @@protoc_insertion_point(field_set_allocated:Property.AnyPropertyValue.scalar)
}
void AnyPropertyValue::set_allocated_string(::Property::StringPropertyValue* string) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_PropertyType();
  if (string) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(string);
    if (message_arena != submessage_arena) {
      string = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, string, submessage_arena);
    }
    set_has_string();
    _impl_.PropertyType_.string_ = string;
  }
  // @@protoc_insertion_point(field_set_allocated:Property.AnyPropertyValue.string)
}
void AnyPropertyValue::set_allocated_vector(::Property::VectorPropertyValue* vector) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_PropertyType();
  if (vector) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(vector);
    if (message_arena != submessage_arena) {
      vector = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, vector, submessage_arena);
    }
    set_has_vector();
    _impl_.PropertyType_.vector_ = vector;
  }
  // @@protoc_insertion_point(field_set_allocated:Property.AnyPropertyValue.vector)
}
void AnyPropertyValue::set_allocated_color(::Property::ColorPropertyValue* color) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_PropertyType();
  if (color) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(color);
    if (message_arena != submessage_arena) {
      color = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, color, submessage_arena);
    }
    set_has_color();
    _impl_.PropertyType_.color_ = color;
  }
  // @@protoc_insertion_point(field_set_allocated:Property.AnyPropertyValue.color)
}
void AnyPropertyValue::set_allocated_transform(::Property::TransformSet* transform) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_PropertyType();
  if (transform) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(transform);
    if (message_arena != submessage_arena) {
      transform = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, transform, submessage_arena);
    }
    set_has_transform();
    _impl_.PropertyType_.transform_ = transform;
  }
  // @@protoc_insertion_point(field_set_allocated:Property.AnyPropertyValue.transform)
}
void AnyPropertyValue::set_allocated_transupdate(::Property::TransformUpdate* transupdate) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_PropertyType();
  if (transupdate) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(transupdate);
    if (message_arena != submessage_arena) {
      transupdate = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, transupdate, submessage_arena);
    }
    set_has_transupdate();
    _impl_.PropertyType_.transupdate_ = transupdate;
  }
  // @@protoc_insertion_point(field_set_allocated:Property.AnyPropertyValue.transUpdate)
}
void AnyPropertyValue::set_allocated_bool_(::Property::BooleanPropertyValue* bool_) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_PropertyType();
  if (bool_) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(bool_);
    if (message_arena != submessage_arena) {
      bool_ = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, bool_, submessage_arena);
    }
    set_has_bool_();
    _impl_.PropertyType_.bool__ = bool_;
  }
  // @@protoc_insertion_point(field_set_allocated:Property.AnyPropertyValue.bool)
}
void AnyPropertyValue::set_allocated_json(::Property::JsonPropertyValue* json) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_PropertyType();
  if (json) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(json);
    if (message_arena != submessage_arena) {
      json = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, json, submessage_arena);
    }
    set_has_json();
    _impl_.PropertyType_.json_ = json;
  }
  // @@protoc_insertion_point(field_set_allocated:Property.AnyPropertyValue.json)
}
void AnyPropertyValue::set_allocated_link(::Property::LinkPropertyValue* link) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_PropertyType();
  if (link) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(link);
    if (message_arena != submessage_arena) {
      link = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, link, submessage_arena);
    }
    set_has_link();
    _impl_.PropertyType_.link_ = link;
  }
  // @@protoc_insertion_point(field_set_allocated:Property.AnyPropertyValue.link)
}
AnyPropertyValue::AnyPropertyValue(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.AnyPropertyValue)
}
AnyPropertyValue::AnyPropertyValue(const AnyPropertyValue& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AnyPropertyValue* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.PropertyType_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_PropertyType();
  switch (from.PropertyType_case()) {
    case kScalar: {
      _this->_internal_mutable_scalar()->::Property::ScalarPropertyValue::MergeFrom(
          from._internal_scalar());
      break;
    }
    case kString: {
      _this->_internal_mutable_string()->::Property::StringPropertyValue::MergeFrom(
          from._internal_string());
      break;
    }
    case kVector: {
      _this->_internal_mutable_vector()->::Property::VectorPropertyValue::MergeFrom(
          from._internal_vector());
      break;
    }
    case kColor: {
      _this->_internal_mutable_color()->::Property::ColorPropertyValue::MergeFrom(
          from._internal_color());
      break;
    }
    case kTransform: {
      _this->_internal_mutable_transform()->::Property::TransformSet::MergeFrom(
          from._internal_transform());
      break;
    }
    case kTransUpdate: {
      _this->_internal_mutable_transupdate()->::Property::TransformUpdate::MergeFrom(
          from._internal_transupdate());
      break;
    }
    case kBool: {
      _this->_internal_mutable_bool_()->::Property::BooleanPropertyValue::MergeFrom(
          from._internal_bool_());
      break;
    }
    case kJson: {
      _this->_internal_mutable_json()->::Property::JsonPropertyValue::MergeFrom(
          from._internal_json());
      break;
    }
    case kLink: {
      _this->_internal_mutable_link()->::Property::LinkPropertyValue::MergeFrom(
          from._internal_link());
      break;
    }
    case PROPERTYTYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:Property.AnyPropertyValue)
}

inline void AnyPropertyValue::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.PropertyType_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  clear_has_PropertyType();
}

AnyPropertyValue::~AnyPropertyValue() {
  // @@protoc_insertion_point(destructor:Property.AnyPropertyValue)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AnyPropertyValue::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_PropertyType()) {
    clear_PropertyType();
  }
}

void AnyPropertyValue::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AnyPropertyValue::clear_PropertyType() {
// @@protoc_insertion_point(one_of_clear_start:Property.AnyPropertyValue)
  switch (PropertyType_case()) {
    case kScalar: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.PropertyType_.scalar_;
      }
      break;
    }
    case kString: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.PropertyType_.string_;
      }
      break;
    }
    case kVector: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.PropertyType_.vector_;
      }
      break;
    }
    case kColor: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.PropertyType_.color_;
      }
      break;
    }
    case kTransform: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.PropertyType_.transform_;
      }
      break;
    }
    case kTransUpdate: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.PropertyType_.transupdate_;
      }
      break;
    }
    case kBool: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.PropertyType_.bool__;
      }
      break;
    }
    case kJson: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.PropertyType_.json_;
      }
      break;
    }
    case kLink: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.PropertyType_.link_;
      }
      break;
    }
    case PROPERTYTYPE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = PROPERTYTYPE_NOT_SET;
}


void AnyPropertyValue::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.AnyPropertyValue)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_PropertyType();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AnyPropertyValue::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Property.ScalarPropertyValue scalar = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_scalar(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.StringPropertyValue string = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_string(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.VectorPropertyValue vector = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_vector(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.ColorPropertyValue color = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_color(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.TransformSet transform = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_transform(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.TransformUpdate transUpdate = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_transupdate(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.BooleanPropertyValue bool = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_bool_(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.JsonPropertyValue json = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_json(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.LinkPropertyValue link = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_link(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AnyPropertyValue::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.AnyPropertyValue)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Property.ScalarPropertyValue scalar = 1;
  if (_internal_has_scalar()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::scalar(this),
        _Internal::scalar(this).GetCachedSize(), target, stream);
  }

  // .Property.StringPropertyValue string = 2;
  if (_internal_has_string()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::string(this),
        _Internal::string(this).GetCachedSize(), target, stream);
  }

  // .Property.VectorPropertyValue vector = 3;
  if (_internal_has_vector()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::vector(this),
        _Internal::vector(this).GetCachedSize(), target, stream);
  }

  // .Property.ColorPropertyValue color = 4;
  if (_internal_has_color()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::color(this),
        _Internal::color(this).GetCachedSize(), target, stream);
  }

  // .Property.TransformSet transform = 5;
  if (_internal_has_transform()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::transform(this),
        _Internal::transform(this).GetCachedSize(), target, stream);
  }

  // .Property.TransformUpdate transUpdate = 6;
  if (_internal_has_transupdate()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::transupdate(this),
        _Internal::transupdate(this).GetCachedSize(), target, stream);
  }

  // .Property.BooleanPropertyValue bool = 7;
  if (_internal_has_bool_()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::bool_(this),
        _Internal::bool_(this).GetCachedSize(), target, stream);
  }

  // .Property.JsonPropertyValue json = 9;
  if (_internal_has_json()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(9, _Internal::json(this),
        _Internal::json(this).GetCachedSize(), target, stream);
  }

  // .Property.LinkPropertyValue link = 10;
  if (_internal_has_link()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(10, _Internal::link(this),
        _Internal::link(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.AnyPropertyValue)
  return target;
}

size_t AnyPropertyValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.AnyPropertyValue)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (PropertyType_case()) {
    // .Property.ScalarPropertyValue scalar = 1;
    case kScalar: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.PropertyType_.scalar_);
      break;
    }
    // .Property.StringPropertyValue string = 2;
    case kString: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.PropertyType_.string_);
      break;
    }
    // .Property.VectorPropertyValue vector = 3;
    case kVector: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.PropertyType_.vector_);
      break;
    }
    // .Property.ColorPropertyValue color = 4;
    case kColor: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.PropertyType_.color_);
      break;
    }
    // .Property.TransformSet transform = 5;
    case kTransform: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.PropertyType_.transform_);
      break;
    }
    // .Property.TransformUpdate transUpdate = 6;
    case kTransUpdate: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.PropertyType_.transupdate_);
      break;
    }
    // .Property.BooleanPropertyValue bool = 7;
    case kBool: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.PropertyType_.bool__);
      break;
    }
    // .Property.JsonPropertyValue json = 9;
    case kJson: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.PropertyType_.json_);
      break;
    }
    // .Property.LinkPropertyValue link = 10;
    case kLink: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.PropertyType_.link_);
      break;
    }
    case PROPERTYTYPE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AnyPropertyValue::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AnyPropertyValue::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AnyPropertyValue::GetClassData() const { return &_class_data_; }


void AnyPropertyValue::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AnyPropertyValue*>(&to_msg);
  auto& from = static_cast<const AnyPropertyValue&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.AnyPropertyValue)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.PropertyType_case()) {
    case kScalar: {
      _this->_internal_mutable_scalar()->::Property::ScalarPropertyValue::MergeFrom(
          from._internal_scalar());
      break;
    }
    case kString: {
      _this->_internal_mutable_string()->::Property::StringPropertyValue::MergeFrom(
          from._internal_string());
      break;
    }
    case kVector: {
      _this->_internal_mutable_vector()->::Property::VectorPropertyValue::MergeFrom(
          from._internal_vector());
      break;
    }
    case kColor: {
      _this->_internal_mutable_color()->::Property::ColorPropertyValue::MergeFrom(
          from._internal_color());
      break;
    }
    case kTransform: {
      _this->_internal_mutable_transform()->::Property::TransformSet::MergeFrom(
          from._internal_transform());
      break;
    }
    case kTransUpdate: {
      _this->_internal_mutable_transupdate()->::Property::TransformUpdate::MergeFrom(
          from._internal_transupdate());
      break;
    }
    case kBool: {
      _this->_internal_mutable_bool_()->::Property::BooleanPropertyValue::MergeFrom(
          from._internal_bool_());
      break;
    }
    case kJson: {
      _this->_internal_mutable_json()->::Property::JsonPropertyValue::MergeFrom(
          from._internal_json());
      break;
    }
    case kLink: {
      _this->_internal_mutable_link()->::Property::LinkPropertyValue::MergeFrom(
          from._internal_link());
      break;
    }
    case PROPERTYTYPE_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AnyPropertyValue::CopyFrom(const AnyPropertyValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.AnyPropertyValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AnyPropertyValue::IsInitialized() const {
  return true;
}

void AnyPropertyValue::InternalSwap(AnyPropertyValue* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.PropertyType_, other->_impl_.PropertyType_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata AnyPropertyValue::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[1]);
}

// ===================================================================

class GeneratorMetadata::_Internal {
 public:
  using HasBits = decltype(std::declval<GeneratorMetadata>()._impl_._has_bits_);
  static void set_has_description(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_hidden(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

GeneratorMetadata::GeneratorMetadata(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.GeneratorMetadata)
}
GeneratorMetadata::GeneratorMetadata(const GeneratorMetadata& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GeneratorMetadata* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.name_){}
    , decltype(_impl_.description_){}
    , decltype(_impl_.hidden_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_description()) {
    _this->_impl_.description_.Set(from._internal_description(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.hidden_ = from._impl_.hidden_;
  // @@protoc_insertion_point(copy_constructor:Property.GeneratorMetadata)
}

inline void GeneratorMetadata::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.name_){}
    , decltype(_impl_.description_){}
    , decltype(_impl_.hidden_){false}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GeneratorMetadata::~GeneratorMetadata() {
  // @@protoc_insertion_point(destructor:Property.GeneratorMetadata)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GeneratorMetadata::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  _impl_.description_.Destroy();
}

void GeneratorMetadata::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GeneratorMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.GeneratorMetadata)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.description_.ClearNonDefaultToEmpty();
  }
  _impl_.hidden_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GeneratorMetadata::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "Property.GeneratorMetadata.name"));
        } else
          goto handle_unusual;
        continue;
      // optional string description = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_description();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "Property.GeneratorMetadata.description"));
        } else
          goto handle_unusual;
        continue;
      // optional bool hidden = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_hidden(&has_bits);
          _impl_.hidden_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GeneratorMetadata::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.GeneratorMetadata)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Property.GeneratorMetadata.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // optional string description = 2;
  if (_internal_has_description()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Property.GeneratorMetadata.description");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_description(), target);
  }

  // optional bool hidden = 3;
  if (_internal_has_hidden()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_hidden(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.GeneratorMetadata)
  return target;
}

size_t GeneratorMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.GeneratorMetadata)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string description = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_description());
    }

    // optional bool hidden = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 1;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GeneratorMetadata::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GeneratorMetadata::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GeneratorMetadata::GetClassData() const { return &_class_data_; }


void GeneratorMetadata::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GeneratorMetadata*>(&to_msg);
  auto& from = static_cast<const GeneratorMetadata&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.GeneratorMetadata)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_description(from._internal_description());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.hidden_ = from._impl_.hidden_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GeneratorMetadata::CopyFrom(const GeneratorMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.GeneratorMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GeneratorMetadata::IsInitialized() const {
  return true;
}

void GeneratorMetadata::InternalSwap(GeneratorMetadata* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.description_, lhs_arena,
      &other->_impl_.description_, rhs_arena
  );
  swap(_impl_.hidden_, other->_impl_.hidden_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GeneratorMetadata::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[2]);
}

// ===================================================================

class PropertyMetadata::_Internal {
 public:
  using HasBits = decltype(std::declval<PropertyMetadata>()._impl_._has_bits_);
  static void set_has_category(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_categoryorder(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_isreadonly(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_internalorder(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_syncmethod(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_isadvanced(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static const ::Property::BooleanPropertyValue& uivisibility(const PropertyMetadata* msg);
  static void set_has_uivisibility(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::Property::BooleanPropertyValue&
PropertyMetadata::_Internal::uivisibility(const PropertyMetadata* msg) {
  return *msg->_impl_.uivisibility_;
}
PropertyMetadata::PropertyMetadata(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.PropertyMetadata)
}
PropertyMetadata::PropertyMetadata(const PropertyMetadata& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PropertyMetadata* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.name_){}
    , decltype(_impl_.category_){}
    , decltype(_impl_.description_){}
    , decltype(_impl_.uivisibility_){nullptr}
    , decltype(_impl_.categoryorder_){}
    , decltype(_impl_.internalorder_){}
    , decltype(_impl_.isreadonly_){}
    , decltype(_impl_.isadvanced_){}
    , decltype(_impl_.syncmethod_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.category_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.category_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_category()) {
    _this->_impl_.category_.Set(from._internal_category(), 
      _this->GetArenaForAllocation());
  }
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_description().empty()) {
    _this->_impl_.description_.Set(from._internal_description(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_uivisibility()) {
    _this->_impl_.uivisibility_ = new ::Property::BooleanPropertyValue(*from._impl_.uivisibility_);
  }
  ::memcpy(&_impl_.categoryorder_, &from._impl_.categoryorder_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.syncmethod_) -
    reinterpret_cast<char*>(&_impl_.categoryorder_)) + sizeof(_impl_.syncmethod_));
  // @@protoc_insertion_point(copy_constructor:Property.PropertyMetadata)
}

inline void PropertyMetadata::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.name_){}
    , decltype(_impl_.category_){}
    , decltype(_impl_.description_){}
    , decltype(_impl_.uivisibility_){nullptr}
    , decltype(_impl_.categoryorder_){0}
    , decltype(_impl_.internalorder_){0}
    , decltype(_impl_.isreadonly_){false}
    , decltype(_impl_.isadvanced_){false}
    , decltype(_impl_.syncmethod_){0}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.category_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.category_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

PropertyMetadata::~PropertyMetadata() {
  // @@protoc_insertion_point(destructor:Property.PropertyMetadata)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PropertyMetadata::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  _impl_.category_.Destroy();
  _impl_.description_.Destroy();
  if (this != internal_default_instance()) delete _impl_.uivisibility_;
}

void PropertyMetadata::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PropertyMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.PropertyMetadata)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.category_.ClearNonDefaultToEmpty();
  }
  _impl_.description_.ClearToEmpty();
  if (cached_has_bits & 0x00000002u) {
    GOOGLE_DCHECK(_impl_.uivisibility_ != nullptr);
    _impl_.uivisibility_->Clear();
  }
  if (cached_has_bits & 0x0000007cu) {
    ::memset(&_impl_.categoryorder_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.syncmethod_) -
        reinterpret_cast<char*>(&_impl_.categoryorder_)) + sizeof(_impl_.syncmethod_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PropertyMetadata::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "Property.PropertyMetadata.name"));
        } else
          goto handle_unusual;
        continue;
      // optional string category = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_category();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "Property.PropertyMetadata.category"));
        } else
          goto handle_unusual;
        continue;
      // string description = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_description();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "Property.PropertyMetadata.description"));
        } else
          goto handle_unusual;
        continue;
      // optional bool isReadonly = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _Internal::set_has_isreadonly(&has_bits);
          _impl_.isreadonly_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional float categoryOrder = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 53)) {
          _Internal::set_has_categoryorder(&has_bits);
          _impl_.categoryorder_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // optional float internalOrder = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 61)) {
          _Internal::set_has_internalorder(&has_bits);
          _impl_.internalorder_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // optional .Property.PropertyMetadata.PropertySync syncMethod = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_syncmethod(static_cast<::Property::PropertyMetadata_PropertySync>(val));
        } else
          goto handle_unusual;
        continue;
      // optional bool isAdvanced = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          _Internal::set_has_isadvanced(&has_bits);
          _impl_.isadvanced_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .Property.BooleanPropertyValue uiVisibility = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_uivisibility(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PropertyMetadata::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.PropertyMetadata)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Property.PropertyMetadata.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // optional string category = 2;
  if (_internal_has_category()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_category().data(), static_cast<int>(this->_internal_category().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Property.PropertyMetadata.category");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_category(), target);
  }

  // string description = 3;
  if (!this->_internal_description().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Property.PropertyMetadata.description");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_description(), target);
  }

  // optional bool isReadonly = 5;
  if (_internal_has_isreadonly()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(5, this->_internal_isreadonly(), target);
  }

  // optional float categoryOrder = 6;
  if (_internal_has_categoryorder()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(6, this->_internal_categoryorder(), target);
  }

  // optional float internalOrder = 7;
  if (_internal_has_internalorder()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(7, this->_internal_internalorder(), target);
  }

  // optional .Property.PropertyMetadata.PropertySync syncMethod = 8;
  if (_internal_has_syncmethod()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      8, this->_internal_syncmethod(), target);
  }

  // optional bool isAdvanced = 9;
  if (_internal_has_isadvanced()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(9, this->_internal_isadvanced(), target);
  }

  // optional .Property.BooleanPropertyValue uiVisibility = 10;
  if (_internal_has_uivisibility()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(10, _Internal::uivisibility(this),
        _Internal::uivisibility(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.PropertyMetadata)
  return target;
}

size_t PropertyMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.PropertyMetadata)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // optional string category = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_category());
  }

  // string description = 3;
  if (!this->_internal_description().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  if (cached_has_bits & 0x0000007eu) {
    // optional .Property.BooleanPropertyValue uiVisibility = 10;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.uivisibility_);
    }

    // optional float categoryOrder = 6;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 4;
    }

    // optional float internalOrder = 7;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 4;
    }

    // optional bool isReadonly = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + 1;
    }

    // optional bool isAdvanced = 9;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 + 1;
    }

    // optional .Property.PropertyMetadata.PropertySync syncMethod = 8;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_syncmethod());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PropertyMetadata::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PropertyMetadata::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PropertyMetadata::GetClassData() const { return &_class_data_; }


void PropertyMetadata::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PropertyMetadata*>(&to_msg);
  auto& from = static_cast<const PropertyMetadata&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.PropertyMetadata)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (from._internal_has_category()) {
    _this->_internal_set_category(from._internal_category());
  }
  if (!from._internal_description().empty()) {
    _this->_internal_set_description(from._internal_description());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007eu) {
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_uivisibility()->::Property::BooleanPropertyValue::MergeFrom(
          from._internal_uivisibility());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.categoryorder_ = from._impl_.categoryorder_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.internalorder_ = from._impl_.internalorder_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.isreadonly_ = from._impl_.isreadonly_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.isadvanced_ = from._impl_.isadvanced_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.syncmethod_ = from._impl_.syncmethod_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PropertyMetadata::CopyFrom(const PropertyMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.PropertyMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PropertyMetadata::IsInitialized() const {
  return true;
}

void PropertyMetadata::InternalSwap(PropertyMetadata* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.category_, lhs_arena,
      &other->_impl_.category_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.description_, lhs_arena,
      &other->_impl_.description_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PropertyMetadata, _impl_.syncmethod_)
      + sizeof(PropertyMetadata::_impl_.syncmethod_)
      - PROTOBUF_FIELD_OFFSET(PropertyMetadata, _impl_.uivisibility_)>(
          reinterpret_cast<char*>(&_impl_.uivisibility_),
          reinterpret_cast<char*>(&other->_impl_.uivisibility_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PropertyMetadata::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[3]);
}

// ===================================================================

class AnyPropertyDeclaration::_Internal {
 public:
  static const ::Property::ScalarPropertyDeclaration& scalar(const AnyPropertyDeclaration* msg);
  static const ::Property::StringPropertyDeclaration& string(const AnyPropertyDeclaration* msg);
  static const ::Property::VectorPropertyDeclaration& vector(const AnyPropertyDeclaration* msg);
  static const ::Property::ColorPropertyDeclaration& color(const AnyPropertyDeclaration* msg);
  static const ::Property::TransformPropertyDeclaration& transform(const AnyPropertyDeclaration* msg);
  static const ::Property::BooleanPropertyDeclaration& boolean(const AnyPropertyDeclaration* msg);
  static const ::Property::JsonPropertyDeclaration& json(const AnyPropertyDeclaration* msg);
  static const ::Property::LinkPropertyDeclaration& link(const AnyPropertyDeclaration* msg);
};

const ::Property::ScalarPropertyDeclaration&
AnyPropertyDeclaration::_Internal::scalar(const AnyPropertyDeclaration* msg) {
  return *msg->_impl_.ValueType_.scalar_;
}
const ::Property::StringPropertyDeclaration&
AnyPropertyDeclaration::_Internal::string(const AnyPropertyDeclaration* msg) {
  return *msg->_impl_.ValueType_.string_;
}
const ::Property::VectorPropertyDeclaration&
AnyPropertyDeclaration::_Internal::vector(const AnyPropertyDeclaration* msg) {
  return *msg->_impl_.ValueType_.vector_;
}
const ::Property::ColorPropertyDeclaration&
AnyPropertyDeclaration::_Internal::color(const AnyPropertyDeclaration* msg) {
  return *msg->_impl_.ValueType_.color_;
}
const ::Property::TransformPropertyDeclaration&
AnyPropertyDeclaration::_Internal::transform(const AnyPropertyDeclaration* msg) {
  return *msg->_impl_.ValueType_.transform_;
}
const ::Property::BooleanPropertyDeclaration&
AnyPropertyDeclaration::_Internal::boolean(const AnyPropertyDeclaration* msg) {
  return *msg->_impl_.ValueType_.boolean_;
}
const ::Property::JsonPropertyDeclaration&
AnyPropertyDeclaration::_Internal::json(const AnyPropertyDeclaration* msg) {
  return *msg->_impl_.ValueType_.json_;
}
const ::Property::LinkPropertyDeclaration&
AnyPropertyDeclaration::_Internal::link(const AnyPropertyDeclaration* msg) {
  return *msg->_impl_.ValueType_.link_;
}
void AnyPropertyDeclaration::set_allocated_scalar(::Property::ScalarPropertyDeclaration* scalar) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_ValueType();
  if (scalar) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(scalar);
    if (message_arena != submessage_arena) {
      scalar = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, scalar, submessage_arena);
    }
    set_has_scalar();
    _impl_.ValueType_.scalar_ = scalar;
  }
  // @@protoc_insertion_point(field_set_allocated:Property.AnyPropertyDeclaration.scalar)
}
void AnyPropertyDeclaration::set_allocated_string(::Property::StringPropertyDeclaration* string) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_ValueType();
  if (string) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(string);
    if (message_arena != submessage_arena) {
      string = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, string, submessage_arena);
    }
    set_has_string();
    _impl_.ValueType_.string_ = string;
  }
  // @@protoc_insertion_point(field_set_allocated:Property.AnyPropertyDeclaration.string)
}
void AnyPropertyDeclaration::set_allocated_vector(::Property::VectorPropertyDeclaration* vector) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_ValueType();
  if (vector) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(vector);
    if (message_arena != submessage_arena) {
      vector = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, vector, submessage_arena);
    }
    set_has_vector();
    _impl_.ValueType_.vector_ = vector;
  }
  // @@protoc_insertion_point(field_set_allocated:Property.AnyPropertyDeclaration.vector)
}
void AnyPropertyDeclaration::set_allocated_color(::Property::ColorPropertyDeclaration* color) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_ValueType();
  if (color) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(color);
    if (message_arena != submessage_arena) {
      color = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, color, submessage_arena);
    }
    set_has_color();
    _impl_.ValueType_.color_ = color;
  }
  // @@protoc_insertion_point(field_set_allocated:Property.AnyPropertyDeclaration.color)
}
void AnyPropertyDeclaration::set_allocated_transform(::Property::TransformPropertyDeclaration* transform) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_ValueType();
  if (transform) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(transform);
    if (message_arena != submessage_arena) {
      transform = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, transform, submessage_arena);
    }
    set_has_transform();
    _impl_.ValueType_.transform_ = transform;
  }
  // @@protoc_insertion_point(field_set_allocated:Property.AnyPropertyDeclaration.transform)
}
void AnyPropertyDeclaration::set_allocated_boolean(::Property::BooleanPropertyDeclaration* boolean) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_ValueType();
  if (boolean) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(boolean);
    if (message_arena != submessage_arena) {
      boolean = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, boolean, submessage_arena);
    }
    set_has_boolean();
    _impl_.ValueType_.boolean_ = boolean;
  }
  // @@protoc_insertion_point(field_set_allocated:Property.AnyPropertyDeclaration.boolean)
}
void AnyPropertyDeclaration::set_allocated_json(::Property::JsonPropertyDeclaration* json) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_ValueType();
  if (json) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(json);
    if (message_arena != submessage_arena) {
      json = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, json, submessage_arena);
    }
    set_has_json();
    _impl_.ValueType_.json_ = json;
  }
  // @@protoc_insertion_point(field_set_allocated:Property.AnyPropertyDeclaration.json)
}
void AnyPropertyDeclaration::set_allocated_link(::Property::LinkPropertyDeclaration* link) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_ValueType();
  if (link) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(link);
    if (message_arena != submessage_arena) {
      link = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, link, submessage_arena);
    }
    set_has_link();
    _impl_.ValueType_.link_ = link;
  }
  // @@protoc_insertion_point(field_set_allocated:Property.AnyPropertyDeclaration.link)
}
AnyPropertyDeclaration::AnyPropertyDeclaration(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.AnyPropertyDeclaration)
}
AnyPropertyDeclaration::AnyPropertyDeclaration(const AnyPropertyDeclaration& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AnyPropertyDeclaration* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ValueType_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_ValueType();
  switch (from.ValueType_case()) {
    case kScalar: {
      _this->_internal_mutable_scalar()->::Property::ScalarPropertyDeclaration::MergeFrom(
          from._internal_scalar());
      break;
    }
    case kString: {
      _this->_internal_mutable_string()->::Property::StringPropertyDeclaration::MergeFrom(
          from._internal_string());
      break;
    }
    case kVector: {
      _this->_internal_mutable_vector()->::Property::VectorPropertyDeclaration::MergeFrom(
          from._internal_vector());
      break;
    }
    case kColor: {
      _this->_internal_mutable_color()->::Property::ColorPropertyDeclaration::MergeFrom(
          from._internal_color());
      break;
    }
    case kTransform: {
      _this->_internal_mutable_transform()->::Property::TransformPropertyDeclaration::MergeFrom(
          from._internal_transform());
      break;
    }
    case kBoolean: {
      _this->_internal_mutable_boolean()->::Property::BooleanPropertyDeclaration::MergeFrom(
          from._internal_boolean());
      break;
    }
    case kJson: {
      _this->_internal_mutable_json()->::Property::JsonPropertyDeclaration::MergeFrom(
          from._internal_json());
      break;
    }
    case kLink: {
      _this->_internal_mutable_link()->::Property::LinkPropertyDeclaration::MergeFrom(
          from._internal_link());
      break;
    }
    case VALUETYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:Property.AnyPropertyDeclaration)
}

inline void AnyPropertyDeclaration::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ValueType_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  clear_has_ValueType();
}

AnyPropertyDeclaration::~AnyPropertyDeclaration() {
  // @@protoc_insertion_point(destructor:Property.AnyPropertyDeclaration)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AnyPropertyDeclaration::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_ValueType()) {
    clear_ValueType();
  }
}

void AnyPropertyDeclaration::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AnyPropertyDeclaration::clear_ValueType() {
// @@protoc_insertion_point(one_of_clear_start:Property.AnyPropertyDeclaration)
  switch (ValueType_case()) {
    case kScalar: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.ValueType_.scalar_;
      }
      break;
    }
    case kString: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.ValueType_.string_;
      }
      break;
    }
    case kVector: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.ValueType_.vector_;
      }
      break;
    }
    case kColor: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.ValueType_.color_;
      }
      break;
    }
    case kTransform: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.ValueType_.transform_;
      }
      break;
    }
    case kBoolean: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.ValueType_.boolean_;
      }
      break;
    }
    case kJson: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.ValueType_.json_;
      }
      break;
    }
    case kLink: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.ValueType_.link_;
      }
      break;
    }
    case VALUETYPE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = VALUETYPE_NOT_SET;
}


void AnyPropertyDeclaration::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.AnyPropertyDeclaration)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_ValueType();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AnyPropertyDeclaration::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Property.ScalarPropertyDeclaration scalar = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_scalar(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.StringPropertyDeclaration string = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_string(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.VectorPropertyDeclaration vector = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_vector(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.ColorPropertyDeclaration color = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_color(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.TransformPropertyDeclaration transform = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_transform(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.BooleanPropertyDeclaration boolean = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_boolean(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.JsonPropertyDeclaration json = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_json(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.LinkPropertyDeclaration link = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_link(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AnyPropertyDeclaration::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.AnyPropertyDeclaration)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Property.ScalarPropertyDeclaration scalar = 2;
  if (_internal_has_scalar()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::scalar(this),
        _Internal::scalar(this).GetCachedSize(), target, stream);
  }

  // .Property.StringPropertyDeclaration string = 3;
  if (_internal_has_string()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::string(this),
        _Internal::string(this).GetCachedSize(), target, stream);
  }

  // .Property.VectorPropertyDeclaration vector = 4;
  if (_internal_has_vector()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::vector(this),
        _Internal::vector(this).GetCachedSize(), target, stream);
  }

  // .Property.ColorPropertyDeclaration color = 5;
  if (_internal_has_color()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::color(this),
        _Internal::color(this).GetCachedSize(), target, stream);
  }

  // .Property.TransformPropertyDeclaration transform = 6;
  if (_internal_has_transform()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::transform(this),
        _Internal::transform(this).GetCachedSize(), target, stream);
  }

  // .Property.BooleanPropertyDeclaration boolean = 7;
  if (_internal_has_boolean()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::boolean(this),
        _Internal::boolean(this).GetCachedSize(), target, stream);
  }

  // .Property.JsonPropertyDeclaration json = 9;
  if (_internal_has_json()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(9, _Internal::json(this),
        _Internal::json(this).GetCachedSize(), target, stream);
  }

  // .Property.LinkPropertyDeclaration link = 10;
  if (_internal_has_link()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(10, _Internal::link(this),
        _Internal::link(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.AnyPropertyDeclaration)
  return target;
}

size_t AnyPropertyDeclaration::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.AnyPropertyDeclaration)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (ValueType_case()) {
    // .Property.ScalarPropertyDeclaration scalar = 2;
    case kScalar: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.ValueType_.scalar_);
      break;
    }
    // .Property.StringPropertyDeclaration string = 3;
    case kString: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.ValueType_.string_);
      break;
    }
    // .Property.VectorPropertyDeclaration vector = 4;
    case kVector: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.ValueType_.vector_);
      break;
    }
    // .Property.ColorPropertyDeclaration color = 5;
    case kColor: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.ValueType_.color_);
      break;
    }
    // .Property.TransformPropertyDeclaration transform = 6;
    case kTransform: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.ValueType_.transform_);
      break;
    }
    // .Property.BooleanPropertyDeclaration boolean = 7;
    case kBoolean: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.ValueType_.boolean_);
      break;
    }
    // .Property.JsonPropertyDeclaration json = 9;
    case kJson: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.ValueType_.json_);
      break;
    }
    // .Property.LinkPropertyDeclaration link = 10;
    case kLink: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.ValueType_.link_);
      break;
    }
    case VALUETYPE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AnyPropertyDeclaration::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AnyPropertyDeclaration::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AnyPropertyDeclaration::GetClassData() const { return &_class_data_; }


void AnyPropertyDeclaration::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AnyPropertyDeclaration*>(&to_msg);
  auto& from = static_cast<const AnyPropertyDeclaration&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.AnyPropertyDeclaration)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.ValueType_case()) {
    case kScalar: {
      _this->_internal_mutable_scalar()->::Property::ScalarPropertyDeclaration::MergeFrom(
          from._internal_scalar());
      break;
    }
    case kString: {
      _this->_internal_mutable_string()->::Property::StringPropertyDeclaration::MergeFrom(
          from._internal_string());
      break;
    }
    case kVector: {
      _this->_internal_mutable_vector()->::Property::VectorPropertyDeclaration::MergeFrom(
          from._internal_vector());
      break;
    }
    case kColor: {
      _this->_internal_mutable_color()->::Property::ColorPropertyDeclaration::MergeFrom(
          from._internal_color());
      break;
    }
    case kTransform: {
      _this->_internal_mutable_transform()->::Property::TransformPropertyDeclaration::MergeFrom(
          from._internal_transform());
      break;
    }
    case kBoolean: {
      _this->_internal_mutable_boolean()->::Property::BooleanPropertyDeclaration::MergeFrom(
          from._internal_boolean());
      break;
    }
    case kJson: {
      _this->_internal_mutable_json()->::Property::JsonPropertyDeclaration::MergeFrom(
          from._internal_json());
      break;
    }
    case kLink: {
      _this->_internal_mutable_link()->::Property::LinkPropertyDeclaration::MergeFrom(
          from._internal_link());
      break;
    }
    case VALUETYPE_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AnyPropertyDeclaration::CopyFrom(const AnyPropertyDeclaration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.AnyPropertyDeclaration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AnyPropertyDeclaration::IsInitialized() const {
  return true;
}

void AnyPropertyDeclaration::InternalSwap(AnyPropertyDeclaration* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.ValueType_, other->_impl_.ValueType_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata AnyPropertyDeclaration::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[4]);
}

// ===================================================================

class Interpolation::_Internal {
 public:
  using HasBits = decltype(std::declval<Interpolation>()._impl_._has_bits_);
  static void set_has_easeout(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_easein(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_duration(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_delay(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

Interpolation::Interpolation(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.Interpolation)
}
Interpolation::Interpolation(const Interpolation& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Interpolation* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.easeout_){}
    , decltype(_impl_.easein_){}
    , decltype(_impl_.duration_){}
    , decltype(_impl_.delay_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.easeout_, &from._impl_.easeout_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.delay_) -
    reinterpret_cast<char*>(&_impl_.easeout_)) + sizeof(_impl_.delay_));
  // @@protoc_insertion_point(copy_constructor:Property.Interpolation)
}

inline void Interpolation::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.easeout_){0}
    , decltype(_impl_.easein_){0}
    , decltype(_impl_.duration_){0}
    , decltype(_impl_.delay_){0}
  };
}

Interpolation::~Interpolation() {
  // @@protoc_insertion_point(destructor:Property.Interpolation)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Interpolation::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Interpolation::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Interpolation::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.Interpolation)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&_impl_.easeout_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.delay_) -
        reinterpret_cast<char*>(&_impl_.easeout_)) + sizeof(_impl_.delay_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Interpolation::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional float easeOut = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 13)) {
          _Internal::set_has_easeout(&has_bits);
          _impl_.easeout_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // optional float easeIn = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 21)) {
          _Internal::set_has_easein(&has_bits);
          _impl_.easein_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // optional float duration = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 29)) {
          _Internal::set_has_duration(&has_bits);
          _impl_.duration_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // optional float delay = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 37)) {
          _Internal::set_has_delay(&has_bits);
          _impl_.delay_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Interpolation::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.Interpolation)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional float easeOut = 1;
  if (_internal_has_easeout()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(1, this->_internal_easeout(), target);
  }

  // optional float easeIn = 2;
  if (_internal_has_easein()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(2, this->_internal_easein(), target);
  }

  // optional float duration = 3;
  if (_internal_has_duration()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(3, this->_internal_duration(), target);
  }

  // optional float delay = 4;
  if (_internal_has_delay()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(4, this->_internal_delay(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.Interpolation)
  return target;
}

size_t Interpolation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.Interpolation)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional float easeOut = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 4;
    }

    // optional float easeIn = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 4;
    }

    // optional float duration = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 4;
    }

    // optional float delay = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 4;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Interpolation::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Interpolation::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Interpolation::GetClassData() const { return &_class_data_; }


void Interpolation::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Interpolation*>(&to_msg);
  auto& from = static_cast<const Interpolation&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.Interpolation)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.easeout_ = from._impl_.easeout_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.easein_ = from._impl_.easein_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.duration_ = from._impl_.duration_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.delay_ = from._impl_.delay_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Interpolation::CopyFrom(const Interpolation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.Interpolation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Interpolation::IsInitialized() const {
  return true;
}

void Interpolation::InternalSwap(Interpolation* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Interpolation, _impl_.delay_)
      + sizeof(Interpolation::_impl_.delay_)
      - PROTOBUF_FIELD_OFFSET(Interpolation, _impl_.easeout_)>(
          reinterpret_cast<char*>(&_impl_.easeout_),
          reinterpret_cast<char*>(&other->_impl_.easeout_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Interpolation::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[5]);
}

// ===================================================================

class ScalarPropertyAssignment::_Internal {
 public:
  using HasBits = decltype(std::declval<ScalarPropertyAssignment>()._impl_._has_bits_);
  static void set_has_method(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_overridingpriority(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::Property::ScalarPropertyValue& value(const ScalarPropertyAssignment* msg);
};

const ::Property::ScalarPropertyValue&
ScalarPropertyAssignment::_Internal::value(const ScalarPropertyAssignment* msg) {
  return *msg->_impl_.value_;
}
ScalarPropertyAssignment::ScalarPropertyAssignment(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.ScalarPropertyAssignment)
}
ScalarPropertyAssignment::ScalarPropertyAssignment(const ScalarPropertyAssignment& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ScalarPropertyAssignment* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.assignmentid_){}
    , decltype(_impl_.value_){nullptr}
    , decltype(_impl_.method_){}
    , decltype(_impl_.overridingpriority_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.assignmentid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.assignmentid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_assignmentid().empty()) {
    _this->_impl_.assignmentid_.Set(from._internal_assignmentid(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_value()) {
    _this->_impl_.value_ = new ::Property::ScalarPropertyValue(*from._impl_.value_);
  }
  ::memcpy(&_impl_.method_, &from._impl_.method_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.overridingpriority_) -
    reinterpret_cast<char*>(&_impl_.method_)) + sizeof(_impl_.overridingpriority_));
  // @@protoc_insertion_point(copy_constructor:Property.ScalarPropertyAssignment)
}

inline void ScalarPropertyAssignment::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.assignmentid_){}
    , decltype(_impl_.value_){nullptr}
    , decltype(_impl_.method_){0}
    , decltype(_impl_.overridingpriority_){0}
  };
  _impl_.assignmentid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.assignmentid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ScalarPropertyAssignment::~ScalarPropertyAssignment() {
  // @@protoc_insertion_point(destructor:Property.ScalarPropertyAssignment)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ScalarPropertyAssignment::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.assignmentid_.Destroy();
  if (this != internal_default_instance()) delete _impl_.value_;
}

void ScalarPropertyAssignment::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ScalarPropertyAssignment::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.ScalarPropertyAssignment)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.assignmentid_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.value_ != nullptr) {
    delete _impl_.value_;
  }
  _impl_.value_ = nullptr;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.method_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.overridingpriority_) -
        reinterpret_cast<char*>(&_impl_.method_)) + sizeof(_impl_.overridingpriority_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ScalarPropertyAssignment::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .Property.ScalarPropertyAssignment.ScalarPropertyMethod method = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_method(static_cast<::Property::ScalarPropertyAssignment_ScalarPropertyMethod>(val));
        } else
          goto handle_unusual;
        continue;
      // optional int32 overridingPriority = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_overridingpriority(&has_bits);
          _impl_.overridingpriority_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.ScalarPropertyValue value = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_value(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string assignmentId = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_assignmentid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "Property.ScalarPropertyAssignment.assignmentId"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ScalarPropertyAssignment::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.ScalarPropertyAssignment)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional .Property.ScalarPropertyAssignment.ScalarPropertyMethod method = 1;
  if (_internal_has_method()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_method(), target);
  }

  // optional int32 overridingPriority = 2;
  if (_internal_has_overridingpriority()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_overridingpriority(), target);
  }

  // .Property.ScalarPropertyValue value = 3;
  if (this->_internal_has_value()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::value(this),
        _Internal::value(this).GetCachedSize(), target, stream);
  }

  // string assignmentId = 4;
  if (!this->_internal_assignmentid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_assignmentid().data(), static_cast<int>(this->_internal_assignmentid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Property.ScalarPropertyAssignment.assignmentId");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_assignmentid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.ScalarPropertyAssignment)
  return target;
}

size_t ScalarPropertyAssignment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.ScalarPropertyAssignment)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string assignmentId = 4;
  if (!this->_internal_assignmentid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_assignmentid());
  }

  // .Property.ScalarPropertyValue value = 3;
  if (this->_internal_has_value()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.value_);
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .Property.ScalarPropertyAssignment.ScalarPropertyMethod method = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_method());
    }

    // optional int32 overridingPriority = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_overridingpriority());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ScalarPropertyAssignment::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ScalarPropertyAssignment::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ScalarPropertyAssignment::GetClassData() const { return &_class_data_; }


void ScalarPropertyAssignment::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ScalarPropertyAssignment*>(&to_msg);
  auto& from = static_cast<const ScalarPropertyAssignment&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.ScalarPropertyAssignment)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_assignmentid().empty()) {
    _this->_internal_set_assignmentid(from._internal_assignmentid());
  }
  if (from._internal_has_value()) {
    _this->_internal_mutable_value()->::Property::ScalarPropertyValue::MergeFrom(
        from._internal_value());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.method_ = from._impl_.method_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.overridingpriority_ = from._impl_.overridingpriority_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ScalarPropertyAssignment::CopyFrom(const ScalarPropertyAssignment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.ScalarPropertyAssignment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScalarPropertyAssignment::IsInitialized() const {
  return true;
}

void ScalarPropertyAssignment::InternalSwap(ScalarPropertyAssignment* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.assignmentid_, lhs_arena,
      &other->_impl_.assignmentid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ScalarPropertyAssignment, _impl_.overridingpriority_)
      + sizeof(ScalarPropertyAssignment::_impl_.overridingpriority_)
      - PROTOBUF_FIELD_OFFSET(ScalarPropertyAssignment, _impl_.value_)>(
          reinterpret_cast<char*>(&_impl_.value_),
          reinterpret_cast<char*>(&other->_impl_.value_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ScalarPropertyAssignment::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[6]);
}

// ===================================================================

class ScalarPropertyValue::_Internal {
 public:
  static const ::Property::PropertyIdentifier& ref(const ScalarPropertyValue* msg);
  static const ::Property::ScalarPropertyKeyframed& keyframes(const ScalarPropertyValue* msg);
  static const ::Property::ScalarPropertyPulse& pulse(const ScalarPropertyValue* msg);
  static const ::Property::ScalarPropertyPlayback& playback(const ScalarPropertyValue* msg);
  static const ::Property::ScalarPropertyPlaybackBasic& playbackbasic(const ScalarPropertyValue* msg);
  static const ::Property::ScalarPropertyInterpolator& interp(const ScalarPropertyValue* msg);
  static const ::Property::CustomGeneratorValue& custom(const ScalarPropertyValue* msg);
  static const ::Property::ScalarPropertyApproach& approach(const ScalarPropertyValue* msg);
};

const ::Property::PropertyIdentifier&
ScalarPropertyValue::_Internal::ref(const ScalarPropertyValue* msg) {
  return *msg->_impl_.ValueType_.ref_;
}
const ::Property::ScalarPropertyKeyframed&
ScalarPropertyValue::_Internal::keyframes(const ScalarPropertyValue* msg) {
  return *msg->_impl_.ValueType_.keyframes_;
}
const ::Property::ScalarPropertyPulse&
ScalarPropertyValue::_Internal::pulse(const ScalarPropertyValue* msg) {
  return *msg->_impl_.ValueType_.pulse_;
}
const ::Property::ScalarPropertyPlayback&
ScalarPropertyValue::_Internal::playback(const ScalarPropertyValue* msg) {
  return *msg->_impl_.ValueType_.playback_;
}
const ::Property::ScalarPropertyPlaybackBasic&
ScalarPropertyValue::_Internal::playbackbasic(const ScalarPropertyValue* msg) {
  return *msg->_impl_.ValueType_.playbackbasic_;
}
const ::Property::ScalarPropertyInterpolator&
ScalarPropertyValue::_Internal::interp(const ScalarPropertyValue* msg) {
  return *msg->_impl_.ValueType_.interp_;
}
const ::Property::CustomGeneratorValue&
ScalarPropertyValue::_Internal::custom(const ScalarPropertyValue* msg) {
  return *msg->_impl_.ValueType_.custom_;
}
const ::Property::ScalarPropertyApproach&
ScalarPropertyValue::_Internal::approach(const ScalarPropertyValue* msg) {
  return *msg->_impl_.ValueType_.approach_;
}
void ScalarPropertyValue::set_allocated_ref(::Property::PropertyIdentifier* ref) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_ValueType();
  if (ref) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(ref);
    if (message_arena != submessage_arena) {
      ref = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ref, submessage_arena);
    }
    set_has_ref();
    _impl_.ValueType_.ref_ = ref;
  }
  // @@protoc_insertion_point(field_set_allocated:Property.ScalarPropertyValue.ref)
}
void ScalarPropertyValue::set_allocated_keyframes(::Property::ScalarPropertyKeyframed* keyframes) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_ValueType();
  if (keyframes) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(keyframes);
    if (message_arena != submessage_arena) {
      keyframes = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, keyframes, submessage_arena);
    }
    set_has_keyframes();
    _impl_.ValueType_.keyframes_ = keyframes;
  }
  // @@protoc_insertion_point(field_set_allocated:Property.ScalarPropertyValue.keyframes)
}
void ScalarPropertyValue::set_allocated_pulse(::Property::ScalarPropertyPulse* pulse) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_ValueType();
  if (pulse) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(pulse);
    if (message_arena != submessage_arena) {
      pulse = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, pulse, submessage_arena);
    }
    set_has_pulse();
    _impl_.ValueType_.pulse_ = pulse;
  }
  // @@protoc_insertion_point(field_set_allocated:Property.ScalarPropertyValue.pulse)
}
void ScalarPropertyValue::set_allocated_playback(::Property::ScalarPropertyPlayback* playback) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_ValueType();
  if (playback) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(playback);
    if (message_arena != submessage_arena) {
      playback = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, playback, submessage_arena);
    }
    set_has_playback();
    _impl_.ValueType_.playback_ = playback;
  }
  // @@protoc_insertion_point(field_set_allocated:Property.ScalarPropertyValue.playback)
}
void ScalarPropertyValue::set_allocated_playbackbasic(::Property::ScalarPropertyPlaybackBasic* playbackbasic) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_ValueType();
  if (playbackbasic) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(playbackbasic);
    if (message_arena != submessage_arena) {
      playbackbasic = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, playbackbasic, submessage_arena);
    }
    set_has_playbackbasic();
    _impl_.ValueType_.playbackbasic_ = playbackbasic;
  }
  // @@protoc_insertion_point(field_set_allocated:Property.ScalarPropertyValue.playbackBasic)
}
void ScalarPropertyValue::set_allocated_interp(::Property::ScalarPropertyInterpolator* interp) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_ValueType();
  if (interp) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(interp);
    if (message_arena != submessage_arena) {
      interp = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, interp, submessage_arena);
    }
    set_has_interp();
    _impl_.ValueType_.interp_ = interp;
  }
  // @@protoc_insertion_point(field_set_allocated:Property.ScalarPropertyValue.interp)
}
void ScalarPropertyValue::set_allocated_custom(::Property::CustomGeneratorValue* custom) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_ValueType();
  if (custom) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(custom);
    if (message_arena != submessage_arena) {
      custom = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, custom, submessage_arena);
    }
    set_has_custom();
    _impl_.ValueType_.custom_ = custom;
  }
  // @@protoc_insertion_point(field_set_allocated:Property.ScalarPropertyValue.custom)
}
void ScalarPropertyValue::set_allocated_approach(::Property::ScalarPropertyApproach* approach) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_ValueType();
  if (approach) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(approach);
    if (message_arena != submessage_arena) {
      approach = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, approach, submessage_arena);
    }
    set_has_approach();
    _impl_.ValueType_.approach_ = approach;
  }
  // @@protoc_insertion_point(field_set_allocated:Property.ScalarPropertyValue.approach)
}
ScalarPropertyValue::ScalarPropertyValue(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.ScalarPropertyValue)
}
ScalarPropertyValue::ScalarPropertyValue(const ScalarPropertyValue& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ScalarPropertyValue* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ValueType_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_ValueType();
  switch (from.ValueType_case()) {
    case kConstant: {
      _this->_internal_set_constant(from._internal_constant());
      break;
    }
    case kRef: {
      _this->_internal_mutable_ref()->::Property::PropertyIdentifier::MergeFrom(
          from._internal_ref());
      break;
    }
    case kExpr: {
      _this->_internal_set_expr(from._internal_expr());
      break;
    }
    case kKeyframes: {
      _this->_internal_mutable_keyframes()->::Property::ScalarPropertyKeyframed::MergeFrom(
          from._internal_keyframes());
      break;
    }
    case kUseDefault: {
      _this->_internal_set_usedefault(from._internal_usedefault());
      break;
    }
    case kPulse: {
      _this->_internal_mutable_pulse()->::Property::ScalarPropertyPulse::MergeFrom(
          from._internal_pulse());
      break;
    }
    case kPlayback: {
      _this->_internal_mutable_playback()->::Property::ScalarPropertyPlayback::MergeFrom(
          from._internal_playback());
      break;
    }
    case kPlaybackBasic: {
      _this->_internal_mutable_playbackbasic()->::Property::ScalarPropertyPlaybackBasic::MergeFrom(
          from._internal_playbackbasic());
      break;
    }
    case kInterp: {
      _this->_internal_mutable_interp()->::Property::ScalarPropertyInterpolator::MergeFrom(
          from._internal_interp());
      break;
    }
    case kCustom: {
      _this->_internal_mutable_custom()->::Property::CustomGeneratorValue::MergeFrom(
          from._internal_custom());
      break;
    }
    case kApproach: {
      _this->_internal_mutable_approach()->::Property::ScalarPropertyApproach::MergeFrom(
          from._internal_approach());
      break;
    }
    case VALUETYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:Property.ScalarPropertyValue)
}

inline void ScalarPropertyValue::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ValueType_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  clear_has_ValueType();
}

ScalarPropertyValue::~ScalarPropertyValue() {
  // @@protoc_insertion_point(destructor:Property.ScalarPropertyValue)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ScalarPropertyValue::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_ValueType()) {
    clear_ValueType();
  }
}

void ScalarPropertyValue::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ScalarPropertyValue::clear_ValueType() {
// @@protoc_insertion_point(one_of_clear_start:Property.ScalarPropertyValue)
  switch (ValueType_case()) {
    case kConstant: {
      // No need to clear
      break;
    }
    case kRef: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.ValueType_.ref_;
      }
      break;
    }
    case kExpr: {
      _impl_.ValueType_.expr_.Destroy();
      break;
    }
    case kKeyframes: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.ValueType_.keyframes_;
      }
      break;
    }
    case kUseDefault: {
      // No need to clear
      break;
    }
    case kPulse: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.ValueType_.pulse_;
      }
      break;
    }
    case kPlayback: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.ValueType_.playback_;
      }
      break;
    }
    case kPlaybackBasic: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.ValueType_.playbackbasic_;
      }
      break;
    }
    case kInterp: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.ValueType_.interp_;
      }
      break;
    }
    case kCustom: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.ValueType_.custom_;
      }
      break;
    }
    case kApproach: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.ValueType_.approach_;
      }
      break;
    }
    case VALUETYPE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = VALUETYPE_NOT_SET;
}


void ScalarPropertyValue::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.ScalarPropertyValue)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_ValueType();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ScalarPropertyValue::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // float constant = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 13)) {
          _internal_set_constant(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr));
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // .Property.PropertyIdentifier ref = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_ref(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string expr = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_expr();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "Property.ScalarPropertyValue.expr"));
        } else
          goto handle_unusual;
        continue;
      // .Property.ScalarPropertyKeyframed keyframes = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_keyframes(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool useDefault = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _internal_set_usedefault(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.ScalarPropertyPulse pulse = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_pulse(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.ScalarPropertyPlayback playback = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_playback(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.ScalarPropertyPlaybackBasic playbackBasic = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_playbackbasic(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.ScalarPropertyInterpolator interp = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_interp(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.CustomGeneratorValue custom = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_custom(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.ScalarPropertyApproach approach = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_approach(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ScalarPropertyValue::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.ScalarPropertyValue)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // float constant = 1;
  if (_internal_has_constant()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(1, this->_internal_constant(), target);
  }

  // .Property.PropertyIdentifier ref = 2;
  if (_internal_has_ref()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::ref(this),
        _Internal::ref(this).GetCachedSize(), target, stream);
  }

  // string expr = 3;
  if (_internal_has_expr()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_expr().data(), static_cast<int>(this->_internal_expr().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Property.ScalarPropertyValue.expr");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_expr(), target);
  }

  // .Property.ScalarPropertyKeyframed keyframes = 4;
  if (_internal_has_keyframes()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::keyframes(this),
        _Internal::keyframes(this).GetCachedSize(), target, stream);
  }

  // bool useDefault = 5;
  if (_internal_has_usedefault()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(5, this->_internal_usedefault(), target);
  }

  // .Property.ScalarPropertyPulse pulse = 6;
  if (_internal_has_pulse()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::pulse(this),
        _Internal::pulse(this).GetCachedSize(), target, stream);
  }

  // .Property.ScalarPropertyPlayback playback = 7;
  if (_internal_has_playback()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::playback(this),
        _Internal::playback(this).GetCachedSize(), target, stream);
  }

  // .Property.ScalarPropertyPlaybackBasic playbackBasic = 8;
  if (_internal_has_playbackbasic()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(8, _Internal::playbackbasic(this),
        _Internal::playbackbasic(this).GetCachedSize(), target, stream);
  }

  // .Property.ScalarPropertyInterpolator interp = 9;
  if (_internal_has_interp()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(9, _Internal::interp(this),
        _Internal::interp(this).GetCachedSize(), target, stream);
  }

  // .Property.CustomGeneratorValue custom = 10;
  if (_internal_has_custom()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(10, _Internal::custom(this),
        _Internal::custom(this).GetCachedSize(), target, stream);
  }

  // .Property.ScalarPropertyApproach approach = 11;
  if (_internal_has_approach()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(11, _Internal::approach(this),
        _Internal::approach(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.ScalarPropertyValue)
  return target;
}

size_t ScalarPropertyValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.ScalarPropertyValue)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (ValueType_case()) {
    // float constant = 1;
    case kConstant: {
      total_size += 1 + 4;
      break;
    }
    // .Property.PropertyIdentifier ref = 2;
    case kRef: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.ValueType_.ref_);
      break;
    }
    // string expr = 3;
    case kExpr: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_expr());
      break;
    }
    // .Property.ScalarPropertyKeyframed keyframes = 4;
    case kKeyframes: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.ValueType_.keyframes_);
      break;
    }
    // bool useDefault = 5;
    case kUseDefault: {
      total_size += 1 + 1;
      break;
    }
    // .Property.ScalarPropertyPulse pulse = 6;
    case kPulse: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.ValueType_.pulse_);
      break;
    }
    // .Property.ScalarPropertyPlayback playback = 7;
    case kPlayback: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.ValueType_.playback_);
      break;
    }
    // .Property.ScalarPropertyPlaybackBasic playbackBasic = 8;
    case kPlaybackBasic: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.ValueType_.playbackbasic_);
      break;
    }
    // .Property.ScalarPropertyInterpolator interp = 9;
    case kInterp: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.ValueType_.interp_);
      break;
    }
    // .Property.CustomGeneratorValue custom = 10;
    case kCustom: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.ValueType_.custom_);
      break;
    }
    // .Property.ScalarPropertyApproach approach = 11;
    case kApproach: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.ValueType_.approach_);
      break;
    }
    case VALUETYPE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ScalarPropertyValue::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ScalarPropertyValue::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ScalarPropertyValue::GetClassData() const { return &_class_data_; }


void ScalarPropertyValue::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ScalarPropertyValue*>(&to_msg);
  auto& from = static_cast<const ScalarPropertyValue&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.ScalarPropertyValue)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.ValueType_case()) {
    case kConstant: {
      _this->_internal_set_constant(from._internal_constant());
      break;
    }
    case kRef: {
      _this->_internal_mutable_ref()->::Property::PropertyIdentifier::MergeFrom(
          from._internal_ref());
      break;
    }
    case kExpr: {
      _this->_internal_set_expr(from._internal_expr());
      break;
    }
    case kKeyframes: {
      _this->_internal_mutable_keyframes()->::Property::ScalarPropertyKeyframed::MergeFrom(
          from._internal_keyframes());
      break;
    }
    case kUseDefault: {
      _this->_internal_set_usedefault(from._internal_usedefault());
      break;
    }
    case kPulse: {
      _this->_internal_mutable_pulse()->::Property::ScalarPropertyPulse::MergeFrom(
          from._internal_pulse());
      break;
    }
    case kPlayback: {
      _this->_internal_mutable_playback()->::Property::ScalarPropertyPlayback::MergeFrom(
          from._internal_playback());
      break;
    }
    case kPlaybackBasic: {
      _this->_internal_mutable_playbackbasic()->::Property::ScalarPropertyPlaybackBasic::MergeFrom(
          from._internal_playbackbasic());
      break;
    }
    case kInterp: {
      _this->_internal_mutable_interp()->::Property::ScalarPropertyInterpolator::MergeFrom(
          from._internal_interp());
      break;
    }
    case kCustom: {
      _this->_internal_mutable_custom()->::Property::CustomGeneratorValue::MergeFrom(
          from._internal_custom());
      break;
    }
    case kApproach: {
      _this->_internal_mutable_approach()->::Property::ScalarPropertyApproach::MergeFrom(
          from._internal_approach());
      break;
    }
    case VALUETYPE_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ScalarPropertyValue::CopyFrom(const ScalarPropertyValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.ScalarPropertyValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScalarPropertyValue::IsInitialized() const {
  return true;
}

void ScalarPropertyValue::InternalSwap(ScalarPropertyValue* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.ValueType_, other->_impl_.ValueType_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata ScalarPropertyValue::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[7]);
}

// ===================================================================

class ScalarPropertyInterpolator::_Internal {
 public:
  static const ::Property::ScalarPropertyValue& t(const ScalarPropertyInterpolator* msg);
  static const ::Property::ScalarPropertyValue& from(const ScalarPropertyInterpolator* msg);
  static const ::Property::ScalarPropertyValue& to(const ScalarPropertyInterpolator* msg);
  static const ::Property::Interpolation& by(const ScalarPropertyInterpolator* msg);
};

const ::Property::ScalarPropertyValue&
ScalarPropertyInterpolator::_Internal::t(const ScalarPropertyInterpolator* msg) {
  return *msg->_impl_.t_;
}
const ::Property::ScalarPropertyValue&
ScalarPropertyInterpolator::_Internal::from(const ScalarPropertyInterpolator* msg) {
  return *msg->_impl_.from_;
}
const ::Property::ScalarPropertyValue&
ScalarPropertyInterpolator::_Internal::to(const ScalarPropertyInterpolator* msg) {
  return *msg->_impl_.to_;
}
const ::Property::Interpolation&
ScalarPropertyInterpolator::_Internal::by(const ScalarPropertyInterpolator* msg) {
  return *msg->_impl_.by_;
}
ScalarPropertyInterpolator::ScalarPropertyInterpolator(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.ScalarPropertyInterpolator)
}
ScalarPropertyInterpolator::ScalarPropertyInterpolator(const ScalarPropertyInterpolator& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ScalarPropertyInterpolator* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.from_){nullptr}
    , decltype(_impl_.to_){nullptr}
    , decltype(_impl_.by_){nullptr}
    , decltype(_impl_.t_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_from()) {
    _this->_impl_.from_ = new ::Property::ScalarPropertyValue(*from._impl_.from_);
  }
  if (from._internal_has_to()) {
    _this->_impl_.to_ = new ::Property::ScalarPropertyValue(*from._impl_.to_);
  }
  if (from._internal_has_by()) {
    _this->_impl_.by_ = new ::Property::Interpolation(*from._impl_.by_);
  }
  if (from._internal_has_t()) {
    _this->_impl_.t_ = new ::Property::ScalarPropertyValue(*from._impl_.t_);
  }
  // @@protoc_insertion_point(copy_constructor:Property.ScalarPropertyInterpolator)
}

inline void ScalarPropertyInterpolator::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.from_){nullptr}
    , decltype(_impl_.to_){nullptr}
    , decltype(_impl_.by_){nullptr}
    , decltype(_impl_.t_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ScalarPropertyInterpolator::~ScalarPropertyInterpolator() {
  // @@protoc_insertion_point(destructor:Property.ScalarPropertyInterpolator)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ScalarPropertyInterpolator::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.from_;
  if (this != internal_default_instance()) delete _impl_.to_;
  if (this != internal_default_instance()) delete _impl_.by_;
  if (this != internal_default_instance()) delete _impl_.t_;
}

void ScalarPropertyInterpolator::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ScalarPropertyInterpolator::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.ScalarPropertyInterpolator)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.from_ != nullptr) {
    delete _impl_.from_;
  }
  _impl_.from_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.to_ != nullptr) {
    delete _impl_.to_;
  }
  _impl_.to_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.by_ != nullptr) {
    delete _impl_.by_;
  }
  _impl_.by_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.t_ != nullptr) {
    delete _impl_.t_;
  }
  _impl_.t_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ScalarPropertyInterpolator::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Property.ScalarPropertyValue from = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_from(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.ScalarPropertyValue to = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_to(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.Interpolation by = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_by(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.ScalarPropertyValue t = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_t(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ScalarPropertyInterpolator::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.ScalarPropertyInterpolator)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Property.ScalarPropertyValue from = 1;
  if (this->_internal_has_from()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::from(this),
        _Internal::from(this).GetCachedSize(), target, stream);
  }

  // .Property.ScalarPropertyValue to = 2;
  if (this->_internal_has_to()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::to(this),
        _Internal::to(this).GetCachedSize(), target, stream);
  }

  // .Property.Interpolation by = 3;
  if (this->_internal_has_by()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::by(this),
        _Internal::by(this).GetCachedSize(), target, stream);
  }

  // .Property.ScalarPropertyValue t = 4;
  if (this->_internal_has_t()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::t(this),
        _Internal::t(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.ScalarPropertyInterpolator)
  return target;
}

size_t ScalarPropertyInterpolator::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.ScalarPropertyInterpolator)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Property.ScalarPropertyValue from = 1;
  if (this->_internal_has_from()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.from_);
  }

  // .Property.ScalarPropertyValue to = 2;
  if (this->_internal_has_to()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.to_);
  }

  // .Property.Interpolation by = 3;
  if (this->_internal_has_by()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.by_);
  }

  // .Property.ScalarPropertyValue t = 4;
  if (this->_internal_has_t()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.t_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ScalarPropertyInterpolator::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ScalarPropertyInterpolator::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ScalarPropertyInterpolator::GetClassData() const { return &_class_data_; }


void ScalarPropertyInterpolator::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ScalarPropertyInterpolator*>(&to_msg);
  auto& from = static_cast<const ScalarPropertyInterpolator&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.ScalarPropertyInterpolator)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_from()) {
    _this->_internal_mutable_from()->::Property::ScalarPropertyValue::MergeFrom(
        from._internal_from());
  }
  if (from._internal_has_to()) {
    _this->_internal_mutable_to()->::Property::ScalarPropertyValue::MergeFrom(
        from._internal_to());
  }
  if (from._internal_has_by()) {
    _this->_internal_mutable_by()->::Property::Interpolation::MergeFrom(
        from._internal_by());
  }
  if (from._internal_has_t()) {
    _this->_internal_mutable_t()->::Property::ScalarPropertyValue::MergeFrom(
        from._internal_t());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ScalarPropertyInterpolator::CopyFrom(const ScalarPropertyInterpolator& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.ScalarPropertyInterpolator)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScalarPropertyInterpolator::IsInitialized() const {
  return true;
}

void ScalarPropertyInterpolator::InternalSwap(ScalarPropertyInterpolator* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ScalarPropertyInterpolator, _impl_.t_)
      + sizeof(ScalarPropertyInterpolator::_impl_.t_)
      - PROTOBUF_FIELD_OFFSET(ScalarPropertyInterpolator, _impl_.from_)>(
          reinterpret_cast<char*>(&_impl_.from_),
          reinterpret_cast<char*>(&other->_impl_.from_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ScalarPropertyInterpolator::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[8]);
}

// ===================================================================

class ScalarPropertyPulse::_Internal {
 public:
  static const ::Property::ScalarPropertyValue& tsrc(const ScalarPropertyPulse* msg);
  static const ::Property::ScalarPropertyValue& length(const ScalarPropertyPulse* msg);
  static const ::Property::ScalarPropertyValue& min(const ScalarPropertyPulse* msg);
  static const ::Property::ScalarPropertyValue& max(const ScalarPropertyPulse* msg);
};

const ::Property::ScalarPropertyValue&
ScalarPropertyPulse::_Internal::tsrc(const ScalarPropertyPulse* msg) {
  return *msg->_impl_.tsrc_;
}
const ::Property::ScalarPropertyValue&
ScalarPropertyPulse::_Internal::length(const ScalarPropertyPulse* msg) {
  return *msg->_impl_.length_;
}
const ::Property::ScalarPropertyValue&
ScalarPropertyPulse::_Internal::min(const ScalarPropertyPulse* msg) {
  return *msg->_impl_.min_;
}
const ::Property::ScalarPropertyValue&
ScalarPropertyPulse::_Internal::max(const ScalarPropertyPulse* msg) {
  return *msg->_impl_.max_;
}
ScalarPropertyPulse::ScalarPropertyPulse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.ScalarPropertyPulse)
}
ScalarPropertyPulse::ScalarPropertyPulse(const ScalarPropertyPulse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ScalarPropertyPulse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.tsrc_){nullptr}
    , decltype(_impl_.length_){nullptr}
    , decltype(_impl_.min_){nullptr}
    , decltype(_impl_.max_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_tsrc()) {
    _this->_impl_.tsrc_ = new ::Property::ScalarPropertyValue(*from._impl_.tsrc_);
  }
  if (from._internal_has_length()) {
    _this->_impl_.length_ = new ::Property::ScalarPropertyValue(*from._impl_.length_);
  }
  if (from._internal_has_min()) {
    _this->_impl_.min_ = new ::Property::ScalarPropertyValue(*from._impl_.min_);
  }
  if (from._internal_has_max()) {
    _this->_impl_.max_ = new ::Property::ScalarPropertyValue(*from._impl_.max_);
  }
  // @@protoc_insertion_point(copy_constructor:Property.ScalarPropertyPulse)
}

inline void ScalarPropertyPulse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.tsrc_){nullptr}
    , decltype(_impl_.length_){nullptr}
    , decltype(_impl_.min_){nullptr}
    , decltype(_impl_.max_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ScalarPropertyPulse::~ScalarPropertyPulse() {
  // @@protoc_insertion_point(destructor:Property.ScalarPropertyPulse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ScalarPropertyPulse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.tsrc_;
  if (this != internal_default_instance()) delete _impl_.length_;
  if (this != internal_default_instance()) delete _impl_.min_;
  if (this != internal_default_instance()) delete _impl_.max_;
}

void ScalarPropertyPulse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ScalarPropertyPulse::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.ScalarPropertyPulse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.tsrc_ != nullptr) {
    delete _impl_.tsrc_;
  }
  _impl_.tsrc_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.length_ != nullptr) {
    delete _impl_.length_;
  }
  _impl_.length_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.min_ != nullptr) {
    delete _impl_.min_;
  }
  _impl_.min_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.max_ != nullptr) {
    delete _impl_.max_;
  }
  _impl_.max_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ScalarPropertyPulse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Property.ScalarPropertyValue tSrc = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_tsrc(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.ScalarPropertyValue length = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_length(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.ScalarPropertyValue min = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_min(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.ScalarPropertyValue max = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_max(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ScalarPropertyPulse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.ScalarPropertyPulse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Property.ScalarPropertyValue tSrc = 1;
  if (this->_internal_has_tsrc()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::tsrc(this),
        _Internal::tsrc(this).GetCachedSize(), target, stream);
  }

  // .Property.ScalarPropertyValue length = 2;
  if (this->_internal_has_length()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::length(this),
        _Internal::length(this).GetCachedSize(), target, stream);
  }

  // .Property.ScalarPropertyValue min = 3;
  if (this->_internal_has_min()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::min(this),
        _Internal::min(this).GetCachedSize(), target, stream);
  }

  // .Property.ScalarPropertyValue max = 4;
  if (this->_internal_has_max()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::max(this),
        _Internal::max(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.ScalarPropertyPulse)
  return target;
}

size_t ScalarPropertyPulse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.ScalarPropertyPulse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Property.ScalarPropertyValue tSrc = 1;
  if (this->_internal_has_tsrc()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.tsrc_);
  }

  // .Property.ScalarPropertyValue length = 2;
  if (this->_internal_has_length()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.length_);
  }

  // .Property.ScalarPropertyValue min = 3;
  if (this->_internal_has_min()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.min_);
  }

  // .Property.ScalarPropertyValue max = 4;
  if (this->_internal_has_max()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.max_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ScalarPropertyPulse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ScalarPropertyPulse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ScalarPropertyPulse::GetClassData() const { return &_class_data_; }


void ScalarPropertyPulse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ScalarPropertyPulse*>(&to_msg);
  auto& from = static_cast<const ScalarPropertyPulse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.ScalarPropertyPulse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_tsrc()) {
    _this->_internal_mutable_tsrc()->::Property::ScalarPropertyValue::MergeFrom(
        from._internal_tsrc());
  }
  if (from._internal_has_length()) {
    _this->_internal_mutable_length()->::Property::ScalarPropertyValue::MergeFrom(
        from._internal_length());
  }
  if (from._internal_has_min()) {
    _this->_internal_mutable_min()->::Property::ScalarPropertyValue::MergeFrom(
        from._internal_min());
  }
  if (from._internal_has_max()) {
    _this->_internal_mutable_max()->::Property::ScalarPropertyValue::MergeFrom(
        from._internal_max());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ScalarPropertyPulse::CopyFrom(const ScalarPropertyPulse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.ScalarPropertyPulse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScalarPropertyPulse::IsInitialized() const {
  return true;
}

void ScalarPropertyPulse::InternalSwap(ScalarPropertyPulse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ScalarPropertyPulse, _impl_.max_)
      + sizeof(ScalarPropertyPulse::_impl_.max_)
      - PROTOBUF_FIELD_OFFSET(ScalarPropertyPulse, _impl_.tsrc_)>(
          reinterpret_cast<char*>(&_impl_.tsrc_),
          reinterpret_cast<char*>(&other->_impl_.tsrc_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ScalarPropertyPulse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[9]);
}

// ===================================================================

class ScalarPropertyPlaybackBasic::_Internal {
 public:
};

ScalarPropertyPlaybackBasic::ScalarPropertyPlaybackBasic(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.ScalarPropertyPlaybackBasic)
}
ScalarPropertyPlaybackBasic::ScalarPropertyPlaybackBasic(const ScalarPropertyPlaybackBasic& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ScalarPropertyPlaybackBasic* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.starttime_){}
    , decltype(_impl_.playing_){}
    , decltype(_impl_.speedwhileplaying_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.starttime_, &from._impl_.starttime_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.speedwhileplaying_) -
    reinterpret_cast<char*>(&_impl_.starttime_)) + sizeof(_impl_.speedwhileplaying_));
  // @@protoc_insertion_point(copy_constructor:Property.ScalarPropertyPlaybackBasic)
}

inline void ScalarPropertyPlaybackBasic::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.starttime_){0}
    , decltype(_impl_.playing_){false}
    , decltype(_impl_.speedwhileplaying_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ScalarPropertyPlaybackBasic::~ScalarPropertyPlaybackBasic() {
  // @@protoc_insertion_point(destructor:Property.ScalarPropertyPlaybackBasic)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ScalarPropertyPlaybackBasic::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ScalarPropertyPlaybackBasic::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ScalarPropertyPlaybackBasic::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.ScalarPropertyPlaybackBasic)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.starttime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.speedwhileplaying_) -
      reinterpret_cast<char*>(&_impl_.starttime_)) + sizeof(_impl_.speedwhileplaying_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ScalarPropertyPlaybackBasic::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // float startTime = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 21)) {
          _impl_.starttime_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // bool playing = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.playing_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // float speedWhilePlaying = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 37)) {
          _impl_.speedwhileplaying_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ScalarPropertyPlaybackBasic::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.ScalarPropertyPlaybackBasic)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // float startTime = 2;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_starttime = this->_internal_starttime();
  uint32_t raw_starttime;
  memcpy(&raw_starttime, &tmp_starttime, sizeof(tmp_starttime));
  if (raw_starttime != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(2, this->_internal_starttime(), target);
  }

  // bool playing = 3;
  if (this->_internal_playing() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_playing(), target);
  }

  // float speedWhilePlaying = 4;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_speedwhileplaying = this->_internal_speedwhileplaying();
  uint32_t raw_speedwhileplaying;
  memcpy(&raw_speedwhileplaying, &tmp_speedwhileplaying, sizeof(tmp_speedwhileplaying));
  if (raw_speedwhileplaying != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(4, this->_internal_speedwhileplaying(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.ScalarPropertyPlaybackBasic)
  return target;
}

size_t ScalarPropertyPlaybackBasic::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.ScalarPropertyPlaybackBasic)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float startTime = 2;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_starttime = this->_internal_starttime();
  uint32_t raw_starttime;
  memcpy(&raw_starttime, &tmp_starttime, sizeof(tmp_starttime));
  if (raw_starttime != 0) {
    total_size += 1 + 4;
  }

  // bool playing = 3;
  if (this->_internal_playing() != 0) {
    total_size += 1 + 1;
  }

  // float speedWhilePlaying = 4;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_speedwhileplaying = this->_internal_speedwhileplaying();
  uint32_t raw_speedwhileplaying;
  memcpy(&raw_speedwhileplaying, &tmp_speedwhileplaying, sizeof(tmp_speedwhileplaying));
  if (raw_speedwhileplaying != 0) {
    total_size += 1 + 4;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ScalarPropertyPlaybackBasic::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ScalarPropertyPlaybackBasic::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ScalarPropertyPlaybackBasic::GetClassData() const { return &_class_data_; }


void ScalarPropertyPlaybackBasic::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ScalarPropertyPlaybackBasic*>(&to_msg);
  auto& from = static_cast<const ScalarPropertyPlaybackBasic&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.ScalarPropertyPlaybackBasic)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_starttime = from._internal_starttime();
  uint32_t raw_starttime;
  memcpy(&raw_starttime, &tmp_starttime, sizeof(tmp_starttime));
  if (raw_starttime != 0) {
    _this->_internal_set_starttime(from._internal_starttime());
  }
  if (from._internal_playing() != 0) {
    _this->_internal_set_playing(from._internal_playing());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_speedwhileplaying = from._internal_speedwhileplaying();
  uint32_t raw_speedwhileplaying;
  memcpy(&raw_speedwhileplaying, &tmp_speedwhileplaying, sizeof(tmp_speedwhileplaying));
  if (raw_speedwhileplaying != 0) {
    _this->_internal_set_speedwhileplaying(from._internal_speedwhileplaying());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ScalarPropertyPlaybackBasic::CopyFrom(const ScalarPropertyPlaybackBasic& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.ScalarPropertyPlaybackBasic)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScalarPropertyPlaybackBasic::IsInitialized() const {
  return true;
}

void ScalarPropertyPlaybackBasic::InternalSwap(ScalarPropertyPlaybackBasic* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ScalarPropertyPlaybackBasic, _impl_.speedwhileplaying_)
      + sizeof(ScalarPropertyPlaybackBasic::_impl_.speedwhileplaying_)
      - PROTOBUF_FIELD_OFFSET(ScalarPropertyPlaybackBasic, _impl_.starttime_)>(
          reinterpret_cast<char*>(&_impl_.starttime_),
          reinterpret_cast<char*>(&other->_impl_.starttime_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ScalarPropertyPlaybackBasic::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[10]);
}

// ===================================================================

class ScalarPropertyPlayback::_Internal {
 public:
  static const ::Property::ScalarPropertyValue& tsrc(const ScalarPropertyPlayback* msg);
  static const ::Property::ScalarPropertyValue& starttime(const ScalarPropertyPlayback* msg);
  static const ::Property::BooleanPropertyValue& playing(const ScalarPropertyPlayback* msg);
};

const ::Property::ScalarPropertyValue&
ScalarPropertyPlayback::_Internal::tsrc(const ScalarPropertyPlayback* msg) {
  return *msg->_impl_.tsrc_;
}
const ::Property::ScalarPropertyValue&
ScalarPropertyPlayback::_Internal::starttime(const ScalarPropertyPlayback* msg) {
  return *msg->_impl_.starttime_;
}
const ::Property::BooleanPropertyValue&
ScalarPropertyPlayback::_Internal::playing(const ScalarPropertyPlayback* msg) {
  return *msg->_impl_.playing_;
}
ScalarPropertyPlayback::ScalarPropertyPlayback(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.ScalarPropertyPlayback)
}
ScalarPropertyPlayback::ScalarPropertyPlayback(const ScalarPropertyPlayback& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ScalarPropertyPlayback* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.tsrc_){nullptr}
    , decltype(_impl_.starttime_){nullptr}
    , decltype(_impl_.playing_){nullptr}
    , decltype(_impl_.speedwhileplaying_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_tsrc()) {
    _this->_impl_.tsrc_ = new ::Property::ScalarPropertyValue(*from._impl_.tsrc_);
  }
  if (from._internal_has_starttime()) {
    _this->_impl_.starttime_ = new ::Property::ScalarPropertyValue(*from._impl_.starttime_);
  }
  if (from._internal_has_playing()) {
    _this->_impl_.playing_ = new ::Property::BooleanPropertyValue(*from._impl_.playing_);
  }
  _this->_impl_.speedwhileplaying_ = from._impl_.speedwhileplaying_;
  // @@protoc_insertion_point(copy_constructor:Property.ScalarPropertyPlayback)
}

inline void ScalarPropertyPlayback::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.tsrc_){nullptr}
    , decltype(_impl_.starttime_){nullptr}
    , decltype(_impl_.playing_){nullptr}
    , decltype(_impl_.speedwhileplaying_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ScalarPropertyPlayback::~ScalarPropertyPlayback() {
  // @@protoc_insertion_point(destructor:Property.ScalarPropertyPlayback)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ScalarPropertyPlayback::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.tsrc_;
  if (this != internal_default_instance()) delete _impl_.starttime_;
  if (this != internal_default_instance()) delete _impl_.playing_;
}

void ScalarPropertyPlayback::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ScalarPropertyPlayback::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.ScalarPropertyPlayback)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.tsrc_ != nullptr) {
    delete _impl_.tsrc_;
  }
  _impl_.tsrc_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.starttime_ != nullptr) {
    delete _impl_.starttime_;
  }
  _impl_.starttime_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.playing_ != nullptr) {
    delete _impl_.playing_;
  }
  _impl_.playing_ = nullptr;
  _impl_.speedwhileplaying_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ScalarPropertyPlayback::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Property.ScalarPropertyValue tSrc = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_tsrc(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.ScalarPropertyValue startTime = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_starttime(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.BooleanPropertyValue playing = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_playing(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // float speedWhilePlaying = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 37)) {
          _impl_.speedwhileplaying_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ScalarPropertyPlayback::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.ScalarPropertyPlayback)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Property.ScalarPropertyValue tSrc = 1;
  if (this->_internal_has_tsrc()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::tsrc(this),
        _Internal::tsrc(this).GetCachedSize(), target, stream);
  }

  // .Property.ScalarPropertyValue startTime = 2;
  if (this->_internal_has_starttime()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::starttime(this),
        _Internal::starttime(this).GetCachedSize(), target, stream);
  }

  // .Property.BooleanPropertyValue playing = 3;
  if (this->_internal_has_playing()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::playing(this),
        _Internal::playing(this).GetCachedSize(), target, stream);
  }

  // float speedWhilePlaying = 4;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_speedwhileplaying = this->_internal_speedwhileplaying();
  uint32_t raw_speedwhileplaying;
  memcpy(&raw_speedwhileplaying, &tmp_speedwhileplaying, sizeof(tmp_speedwhileplaying));
  if (raw_speedwhileplaying != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(4, this->_internal_speedwhileplaying(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.ScalarPropertyPlayback)
  return target;
}

size_t ScalarPropertyPlayback::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.ScalarPropertyPlayback)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Property.ScalarPropertyValue tSrc = 1;
  if (this->_internal_has_tsrc()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.tsrc_);
  }

  // .Property.ScalarPropertyValue startTime = 2;
  if (this->_internal_has_starttime()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.starttime_);
  }

  // .Property.BooleanPropertyValue playing = 3;
  if (this->_internal_has_playing()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.playing_);
  }

  // float speedWhilePlaying = 4;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_speedwhileplaying = this->_internal_speedwhileplaying();
  uint32_t raw_speedwhileplaying;
  memcpy(&raw_speedwhileplaying, &tmp_speedwhileplaying, sizeof(tmp_speedwhileplaying));
  if (raw_speedwhileplaying != 0) {
    total_size += 1 + 4;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ScalarPropertyPlayback::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ScalarPropertyPlayback::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ScalarPropertyPlayback::GetClassData() const { return &_class_data_; }


void ScalarPropertyPlayback::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ScalarPropertyPlayback*>(&to_msg);
  auto& from = static_cast<const ScalarPropertyPlayback&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.ScalarPropertyPlayback)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_tsrc()) {
    _this->_internal_mutable_tsrc()->::Property::ScalarPropertyValue::MergeFrom(
        from._internal_tsrc());
  }
  if (from._internal_has_starttime()) {
    _this->_internal_mutable_starttime()->::Property::ScalarPropertyValue::MergeFrom(
        from._internal_starttime());
  }
  if (from._internal_has_playing()) {
    _this->_internal_mutable_playing()->::Property::BooleanPropertyValue::MergeFrom(
        from._internal_playing());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_speedwhileplaying = from._internal_speedwhileplaying();
  uint32_t raw_speedwhileplaying;
  memcpy(&raw_speedwhileplaying, &tmp_speedwhileplaying, sizeof(tmp_speedwhileplaying));
  if (raw_speedwhileplaying != 0) {
    _this->_internal_set_speedwhileplaying(from._internal_speedwhileplaying());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ScalarPropertyPlayback::CopyFrom(const ScalarPropertyPlayback& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.ScalarPropertyPlayback)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScalarPropertyPlayback::IsInitialized() const {
  return true;
}

void ScalarPropertyPlayback::InternalSwap(ScalarPropertyPlayback* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ScalarPropertyPlayback, _impl_.speedwhileplaying_)
      + sizeof(ScalarPropertyPlayback::_impl_.speedwhileplaying_)
      - PROTOBUF_FIELD_OFFSET(ScalarPropertyPlayback, _impl_.tsrc_)>(
          reinterpret_cast<char*>(&_impl_.tsrc_),
          reinterpret_cast<char*>(&other->_impl_.tsrc_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ScalarPropertyPlayback::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[11]);
}

// ===================================================================

class ScalarPropertyKeyframed_ScalarKeyframe::_Internal {
 public:
  using HasBits = decltype(std::declval<ScalarPropertyKeyframed_ScalarKeyframe>()._impl_._has_bits_);
  static const ::Property::ScalarPropertyValue& val(const ScalarPropertyKeyframed_ScalarKeyframe* msg);
  static void set_has_tangentin(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_tangentout(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::Property::ScalarPropertyValue&
ScalarPropertyKeyframed_ScalarKeyframe::_Internal::val(const ScalarPropertyKeyframed_ScalarKeyframe* msg) {
  return *msg->_impl_.val_;
}
ScalarPropertyKeyframed_ScalarKeyframe::ScalarPropertyKeyframed_ScalarKeyframe(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.ScalarPropertyKeyframed.ScalarKeyframe)
}
ScalarPropertyKeyframed_ScalarKeyframe::ScalarPropertyKeyframed_ScalarKeyframe(const ScalarPropertyKeyframed_ScalarKeyframe& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ScalarPropertyKeyframed_ScalarKeyframe* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.val_){nullptr}
    , decltype(_impl_.t_){}
    , decltype(_impl_.tangentin_){}
    , decltype(_impl_.tangentout_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_val()) {
    _this->_impl_.val_ = new ::Property::ScalarPropertyValue(*from._impl_.val_);
  }
  ::memcpy(&_impl_.t_, &from._impl_.t_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.tangentout_) -
    reinterpret_cast<char*>(&_impl_.t_)) + sizeof(_impl_.tangentout_));
  // @@protoc_insertion_point(copy_constructor:Property.ScalarPropertyKeyframed.ScalarKeyframe)
}

inline void ScalarPropertyKeyframed_ScalarKeyframe::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.val_){nullptr}
    , decltype(_impl_.t_){0}
    , decltype(_impl_.tangentin_){0}
    , decltype(_impl_.tangentout_){0}
  };
}

ScalarPropertyKeyframed_ScalarKeyframe::~ScalarPropertyKeyframed_ScalarKeyframe() {
  // @@protoc_insertion_point(destructor:Property.ScalarPropertyKeyframed.ScalarKeyframe)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ScalarPropertyKeyframed_ScalarKeyframe::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.val_;
}

void ScalarPropertyKeyframed_ScalarKeyframe::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ScalarPropertyKeyframed_ScalarKeyframe::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.ScalarPropertyKeyframed.ScalarKeyframe)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.val_ != nullptr) {
    delete _impl_.val_;
  }
  _impl_.val_ = nullptr;
  _impl_.t_ = 0;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.tangentin_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.tangentout_) -
        reinterpret_cast<char*>(&_impl_.tangentin_)) + sizeof(_impl_.tangentout_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ScalarPropertyKeyframed_ScalarKeyframe::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // float t = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 13)) {
          _impl_.t_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // .Property.ScalarPropertyValue val = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_val(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional float tangentIn = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 29)) {
          _Internal::set_has_tangentin(&has_bits);
          _impl_.tangentin_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // optional float tangentOut = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 37)) {
          _Internal::set_has_tangentout(&has_bits);
          _impl_.tangentout_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ScalarPropertyKeyframed_ScalarKeyframe::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.ScalarPropertyKeyframed.ScalarKeyframe)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // float t = 1;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_t = this->_internal_t();
  uint32_t raw_t;
  memcpy(&raw_t, &tmp_t, sizeof(tmp_t));
  if (raw_t != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(1, this->_internal_t(), target);
  }

  // .Property.ScalarPropertyValue val = 2;
  if (this->_internal_has_val()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::val(this),
        _Internal::val(this).GetCachedSize(), target, stream);
  }

  // optional float tangentIn = 3;
  if (_internal_has_tangentin()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(3, this->_internal_tangentin(), target);
  }

  // optional float tangentOut = 4;
  if (_internal_has_tangentout()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(4, this->_internal_tangentout(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.ScalarPropertyKeyframed.ScalarKeyframe)
  return target;
}

size_t ScalarPropertyKeyframed_ScalarKeyframe::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.ScalarPropertyKeyframed.ScalarKeyframe)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Property.ScalarPropertyValue val = 2;
  if (this->_internal_has_val()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.val_);
  }

  // float t = 1;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_t = this->_internal_t();
  uint32_t raw_t;
  memcpy(&raw_t, &tmp_t, sizeof(tmp_t));
  if (raw_t != 0) {
    total_size += 1 + 4;
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional float tangentIn = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 4;
    }

    // optional float tangentOut = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 4;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ScalarPropertyKeyframed_ScalarKeyframe::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ScalarPropertyKeyframed_ScalarKeyframe::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ScalarPropertyKeyframed_ScalarKeyframe::GetClassData() const { return &_class_data_; }


void ScalarPropertyKeyframed_ScalarKeyframe::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ScalarPropertyKeyframed_ScalarKeyframe*>(&to_msg);
  auto& from = static_cast<const ScalarPropertyKeyframed_ScalarKeyframe&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.ScalarPropertyKeyframed.ScalarKeyframe)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_val()) {
    _this->_internal_mutable_val()->::Property::ScalarPropertyValue::MergeFrom(
        from._internal_val());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_t = from._internal_t();
  uint32_t raw_t;
  memcpy(&raw_t, &tmp_t, sizeof(tmp_t));
  if (raw_t != 0) {
    _this->_internal_set_t(from._internal_t());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.tangentin_ = from._impl_.tangentin_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.tangentout_ = from._impl_.tangentout_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ScalarPropertyKeyframed_ScalarKeyframe::CopyFrom(const ScalarPropertyKeyframed_ScalarKeyframe& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.ScalarPropertyKeyframed.ScalarKeyframe)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScalarPropertyKeyframed_ScalarKeyframe::IsInitialized() const {
  return true;
}

void ScalarPropertyKeyframed_ScalarKeyframe::InternalSwap(ScalarPropertyKeyframed_ScalarKeyframe* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ScalarPropertyKeyframed_ScalarKeyframe, _impl_.tangentout_)
      + sizeof(ScalarPropertyKeyframed_ScalarKeyframe::_impl_.tangentout_)
      - PROTOBUF_FIELD_OFFSET(ScalarPropertyKeyframed_ScalarKeyframe, _impl_.val_)>(
          reinterpret_cast<char*>(&_impl_.val_),
          reinterpret_cast<char*>(&other->_impl_.val_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ScalarPropertyKeyframed_ScalarKeyframe::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[12]);
}

// ===================================================================

class ScalarPropertyKeyframed::_Internal {
 public:
  using HasBits = decltype(std::declval<ScalarPropertyKeyframed>()._impl_._has_bits_);
  static const ::Property::ScalarPropertyValue& tsrc(const ScalarPropertyKeyframed* msg);
  static void set_has_tsrc(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::Property::ScalarPropertyValue&
ScalarPropertyKeyframed::_Internal::tsrc(const ScalarPropertyKeyframed* msg) {
  return *msg->_impl_.tsrc_;
}
ScalarPropertyKeyframed::ScalarPropertyKeyframed(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.ScalarPropertyKeyframed)
}
ScalarPropertyKeyframed::ScalarPropertyKeyframed(const ScalarPropertyKeyframed& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ScalarPropertyKeyframed* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.keys_){from._impl_.keys_}
    , decltype(_impl_.tsrc_){nullptr}
    , decltype(_impl_.looping_){}
    , decltype(_impl_.tangentgen_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_tsrc()) {
    _this->_impl_.tsrc_ = new ::Property::ScalarPropertyValue(*from._impl_.tsrc_);
  }
  ::memcpy(&_impl_.looping_, &from._impl_.looping_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.tangentgen_) -
    reinterpret_cast<char*>(&_impl_.looping_)) + sizeof(_impl_.tangentgen_));
  // @@protoc_insertion_point(copy_constructor:Property.ScalarPropertyKeyframed)
}

inline void ScalarPropertyKeyframed::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.keys_){arena}
    , decltype(_impl_.tsrc_){nullptr}
    , decltype(_impl_.looping_){0}
    , decltype(_impl_.tangentgen_){0}
  };
}

ScalarPropertyKeyframed::~ScalarPropertyKeyframed() {
  // @@protoc_insertion_point(destructor:Property.ScalarPropertyKeyframed)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ScalarPropertyKeyframed::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.keys_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.tsrc_;
}

void ScalarPropertyKeyframed::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ScalarPropertyKeyframed::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.ScalarPropertyKeyframed)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.keys_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.tsrc_ != nullptr);
    _impl_.tsrc_->Clear();
  }
  ::memset(&_impl_.looping_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.tangentgen_) -
      reinterpret_cast<char*>(&_impl_.looping_)) + sizeof(_impl_.tangentgen_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ScalarPropertyKeyframed::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .Property.ScalarPropertyValue tSrc = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_tsrc(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .Property.ScalarPropertyKeyframed.ScalarKeyframe keys = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_keys(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<82>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .Property.KeyframeLoopingEnum looping = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 88)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_looping(static_cast<::Property::KeyframeLoopingEnum>(val));
        } else
          goto handle_unusual;
        continue;
      // .Property.TangentsAutocomputeMethodEnum tangentGen = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 96)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_tangentgen(static_cast<::Property::TangentsAutocomputeMethodEnum>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ScalarPropertyKeyframed::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.ScalarPropertyKeyframed)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional .Property.ScalarPropertyValue tSrc = 8;
  if (_internal_has_tsrc()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(8, _Internal::tsrc(this),
        _Internal::tsrc(this).GetCachedSize(), target, stream);
  }

  // repeated .Property.ScalarPropertyKeyframed.ScalarKeyframe keys = 10;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_keys_size()); i < n; i++) {
    const auto& repfield = this->_internal_keys(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(10, repfield, repfield.GetCachedSize(), target, stream);
  }

  // .Property.KeyframeLoopingEnum looping = 11;
  if (this->_internal_looping() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      11, this->_internal_looping(), target);
  }

  // .Property.TangentsAutocomputeMethodEnum tangentGen = 12;
  if (this->_internal_tangentgen() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      12, this->_internal_tangentgen(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.ScalarPropertyKeyframed)
  return target;
}

size_t ScalarPropertyKeyframed::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.ScalarPropertyKeyframed)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Property.ScalarPropertyKeyframed.ScalarKeyframe keys = 10;
  total_size += 1UL * this->_internal_keys_size();
  for (const auto& msg : this->_impl_.keys_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // optional .Property.ScalarPropertyValue tSrc = 8;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.tsrc_);
  }

  // .Property.KeyframeLoopingEnum looping = 11;
  if (this->_internal_looping() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_looping());
  }

  // .Property.TangentsAutocomputeMethodEnum tangentGen = 12;
  if (this->_internal_tangentgen() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_tangentgen());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ScalarPropertyKeyframed::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ScalarPropertyKeyframed::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ScalarPropertyKeyframed::GetClassData() const { return &_class_data_; }


void ScalarPropertyKeyframed::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ScalarPropertyKeyframed*>(&to_msg);
  auto& from = static_cast<const ScalarPropertyKeyframed&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.ScalarPropertyKeyframed)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.keys_.MergeFrom(from._impl_.keys_);
  if (from._internal_has_tsrc()) {
    _this->_internal_mutable_tsrc()->::Property::ScalarPropertyValue::MergeFrom(
        from._internal_tsrc());
  }
  if (from._internal_looping() != 0) {
    _this->_internal_set_looping(from._internal_looping());
  }
  if (from._internal_tangentgen() != 0) {
    _this->_internal_set_tangentgen(from._internal_tangentgen());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ScalarPropertyKeyframed::CopyFrom(const ScalarPropertyKeyframed& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.ScalarPropertyKeyframed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScalarPropertyKeyframed::IsInitialized() const {
  return true;
}

void ScalarPropertyKeyframed::InternalSwap(ScalarPropertyKeyframed* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.keys_.InternalSwap(&other->_impl_.keys_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ScalarPropertyKeyframed, _impl_.tangentgen_)
      + sizeof(ScalarPropertyKeyframed::_impl_.tangentgen_)
      - PROTOBUF_FIELD_OFFSET(ScalarPropertyKeyframed, _impl_.tsrc_)>(
          reinterpret_cast<char*>(&_impl_.tsrc_),
          reinterpret_cast<char*>(&other->_impl_.tsrc_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ScalarPropertyKeyframed::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[13]);
}

// ===================================================================

class ScalarPropertyApproach::_Internal {
 public:
  static const ::Property::ScalarPropertyValue& t(const ScalarPropertyApproach* msg);
  static const ::Property::ScalarPropertyValue& to(const ScalarPropertyApproach* msg);
  static const ::Property::ScalarPropertyValue& timetohalf(const ScalarPropertyApproach* msg);
  static const ::Property::ScalarPropertyValue& start(const ScalarPropertyApproach* msg);
};

const ::Property::ScalarPropertyValue&
ScalarPropertyApproach::_Internal::t(const ScalarPropertyApproach* msg) {
  return *msg->_impl_.t_;
}
const ::Property::ScalarPropertyValue&
ScalarPropertyApproach::_Internal::to(const ScalarPropertyApproach* msg) {
  return *msg->_impl_.to_;
}
const ::Property::ScalarPropertyValue&
ScalarPropertyApproach::_Internal::timetohalf(const ScalarPropertyApproach* msg) {
  return *msg->_impl_.timetohalf_;
}
const ::Property::ScalarPropertyValue&
ScalarPropertyApproach::_Internal::start(const ScalarPropertyApproach* msg) {
  return *msg->_impl_.start_;
}
ScalarPropertyApproach::ScalarPropertyApproach(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.ScalarPropertyApproach)
}
ScalarPropertyApproach::ScalarPropertyApproach(const ScalarPropertyApproach& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ScalarPropertyApproach* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.t_){nullptr}
    , decltype(_impl_.to_){nullptr}
    , decltype(_impl_.timetohalf_){nullptr}
    , decltype(_impl_.start_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_t()) {
    _this->_impl_.t_ = new ::Property::ScalarPropertyValue(*from._impl_.t_);
  }
  if (from._internal_has_to()) {
    _this->_impl_.to_ = new ::Property::ScalarPropertyValue(*from._impl_.to_);
  }
  if (from._internal_has_timetohalf()) {
    _this->_impl_.timetohalf_ = new ::Property::ScalarPropertyValue(*from._impl_.timetohalf_);
  }
  if (from._internal_has_start()) {
    _this->_impl_.start_ = new ::Property::ScalarPropertyValue(*from._impl_.start_);
  }
  // @@protoc_insertion_point(copy_constructor:Property.ScalarPropertyApproach)
}

inline void ScalarPropertyApproach::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.t_){nullptr}
    , decltype(_impl_.to_){nullptr}
    , decltype(_impl_.timetohalf_){nullptr}
    , decltype(_impl_.start_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ScalarPropertyApproach::~ScalarPropertyApproach() {
  // @@protoc_insertion_point(destructor:Property.ScalarPropertyApproach)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ScalarPropertyApproach::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.t_;
  if (this != internal_default_instance()) delete _impl_.to_;
  if (this != internal_default_instance()) delete _impl_.timetohalf_;
  if (this != internal_default_instance()) delete _impl_.start_;
}

void ScalarPropertyApproach::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ScalarPropertyApproach::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.ScalarPropertyApproach)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.t_ != nullptr) {
    delete _impl_.t_;
  }
  _impl_.t_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.to_ != nullptr) {
    delete _impl_.to_;
  }
  _impl_.to_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.timetohalf_ != nullptr) {
    delete _impl_.timetohalf_;
  }
  _impl_.timetohalf_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.start_ != nullptr) {
    delete _impl_.start_;
  }
  _impl_.start_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ScalarPropertyApproach::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Property.ScalarPropertyValue t = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_t(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.ScalarPropertyValue to = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_to(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.ScalarPropertyValue timeToHalf = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_timetohalf(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.ScalarPropertyValue start = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_start(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ScalarPropertyApproach::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.ScalarPropertyApproach)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Property.ScalarPropertyValue t = 1;
  if (this->_internal_has_t()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::t(this),
        _Internal::t(this).GetCachedSize(), target, stream);
  }

  // .Property.ScalarPropertyValue to = 2;
  if (this->_internal_has_to()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::to(this),
        _Internal::to(this).GetCachedSize(), target, stream);
  }

  // .Property.ScalarPropertyValue timeToHalf = 3;
  if (this->_internal_has_timetohalf()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::timetohalf(this),
        _Internal::timetohalf(this).GetCachedSize(), target, stream);
  }

  // .Property.ScalarPropertyValue start = 4;
  if (this->_internal_has_start()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::start(this),
        _Internal::start(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.ScalarPropertyApproach)
  return target;
}

size_t ScalarPropertyApproach::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.ScalarPropertyApproach)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Property.ScalarPropertyValue t = 1;
  if (this->_internal_has_t()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.t_);
  }

  // .Property.ScalarPropertyValue to = 2;
  if (this->_internal_has_to()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.to_);
  }

  // .Property.ScalarPropertyValue timeToHalf = 3;
  if (this->_internal_has_timetohalf()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.timetohalf_);
  }

  // .Property.ScalarPropertyValue start = 4;
  if (this->_internal_has_start()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.start_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ScalarPropertyApproach::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ScalarPropertyApproach::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ScalarPropertyApproach::GetClassData() const { return &_class_data_; }


void ScalarPropertyApproach::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ScalarPropertyApproach*>(&to_msg);
  auto& from = static_cast<const ScalarPropertyApproach&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.ScalarPropertyApproach)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_t()) {
    _this->_internal_mutable_t()->::Property::ScalarPropertyValue::MergeFrom(
        from._internal_t());
  }
  if (from._internal_has_to()) {
    _this->_internal_mutable_to()->::Property::ScalarPropertyValue::MergeFrom(
        from._internal_to());
  }
  if (from._internal_has_timetohalf()) {
    _this->_internal_mutable_timetohalf()->::Property::ScalarPropertyValue::MergeFrom(
        from._internal_timetohalf());
  }
  if (from._internal_has_start()) {
    _this->_internal_mutable_start()->::Property::ScalarPropertyValue::MergeFrom(
        from._internal_start());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ScalarPropertyApproach::CopyFrom(const ScalarPropertyApproach& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.ScalarPropertyApproach)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScalarPropertyApproach::IsInitialized() const {
  return true;
}

void ScalarPropertyApproach::InternalSwap(ScalarPropertyApproach* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ScalarPropertyApproach, _impl_.start_)
      + sizeof(ScalarPropertyApproach::_impl_.start_)
      - PROTOBUF_FIELD_OFFSET(ScalarPropertyApproach, _impl_.t_)>(
          reinterpret_cast<char*>(&_impl_.t_),
          reinterpret_cast<char*>(&other->_impl_.t_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ScalarPropertyApproach::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[14]);
}

// ===================================================================

class ScalarPropertyDeclaration::_Internal {
 public:
  static const ::Property::ScalarPropertyMetadata& meta(const ScalarPropertyDeclaration* msg);
};

const ::Property::ScalarPropertyMetadata&
ScalarPropertyDeclaration::_Internal::meta(const ScalarPropertyDeclaration* msg) {
  return *msg->_impl_.meta_;
}
ScalarPropertyDeclaration::ScalarPropertyDeclaration(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.ScalarPropertyDeclaration)
}
ScalarPropertyDeclaration::ScalarPropertyDeclaration(const ScalarPropertyDeclaration& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ScalarPropertyDeclaration* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.meta_){nullptr}
    , decltype(_impl_.default__){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_meta()) {
    _this->_impl_.meta_ = new ::Property::ScalarPropertyMetadata(*from._impl_.meta_);
  }
  _this->_impl_.default__ = from._impl_.default__;
  // @@protoc_insertion_point(copy_constructor:Property.ScalarPropertyDeclaration)
}

inline void ScalarPropertyDeclaration::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.meta_){nullptr}
    , decltype(_impl_.default__){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ScalarPropertyDeclaration::~ScalarPropertyDeclaration() {
  // @@protoc_insertion_point(destructor:Property.ScalarPropertyDeclaration)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ScalarPropertyDeclaration::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.meta_;
}

void ScalarPropertyDeclaration::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ScalarPropertyDeclaration::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.ScalarPropertyDeclaration)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.meta_ != nullptr) {
    delete _impl_.meta_;
  }
  _impl_.meta_ = nullptr;
  _impl_.default__ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ScalarPropertyDeclaration::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Property.ScalarPropertyMetadata meta = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_meta(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // float default = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 21)) {
          _impl_.default__ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ScalarPropertyDeclaration::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.ScalarPropertyDeclaration)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Property.ScalarPropertyMetadata meta = 1;
  if (this->_internal_has_meta()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::meta(this),
        _Internal::meta(this).GetCachedSize(), target, stream);
  }

  // float default = 2;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_default_ = this->_internal_default_();
  uint32_t raw_default_;
  memcpy(&raw_default_, &tmp_default_, sizeof(tmp_default_));
  if (raw_default_ != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(2, this->_internal_default_(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.ScalarPropertyDeclaration)
  return target;
}

size_t ScalarPropertyDeclaration::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.ScalarPropertyDeclaration)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Property.ScalarPropertyMetadata meta = 1;
  if (this->_internal_has_meta()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.meta_);
  }

  // float default = 2;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_default_ = this->_internal_default_();
  uint32_t raw_default_;
  memcpy(&raw_default_, &tmp_default_, sizeof(tmp_default_));
  if (raw_default_ != 0) {
    total_size += 1 + 4;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ScalarPropertyDeclaration::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ScalarPropertyDeclaration::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ScalarPropertyDeclaration::GetClassData() const { return &_class_data_; }


void ScalarPropertyDeclaration::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ScalarPropertyDeclaration*>(&to_msg);
  auto& from = static_cast<const ScalarPropertyDeclaration&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.ScalarPropertyDeclaration)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_meta()) {
    _this->_internal_mutable_meta()->::Property::ScalarPropertyMetadata::MergeFrom(
        from._internal_meta());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_default_ = from._internal_default_();
  uint32_t raw_default_;
  memcpy(&raw_default_, &tmp_default_, sizeof(tmp_default_));
  if (raw_default_ != 0) {
    _this->_internal_set_default_(from._internal_default_());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ScalarPropertyDeclaration::CopyFrom(const ScalarPropertyDeclaration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.ScalarPropertyDeclaration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScalarPropertyDeclaration::IsInitialized() const {
  return true;
}

void ScalarPropertyDeclaration::InternalSwap(ScalarPropertyDeclaration* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ScalarPropertyDeclaration, _impl_.default__)
      + sizeof(ScalarPropertyDeclaration::_impl_.default__)
      - PROTOBUF_FIELD_OFFSET(ScalarPropertyDeclaration, _impl_.meta_)>(
          reinterpret_cast<char*>(&_impl_.meta_),
          reinterpret_cast<char*>(&other->_impl_.meta_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ScalarPropertyDeclaration::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[15]);
}

// ===================================================================

class ScalarEditingMetadata::_Internal {
 public:
  using HasBits = decltype(std::declval<ScalarEditingMetadata>()._impl_._has_bits_);
  static void set_has_scalartype(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_uiincrement(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_uiminimum(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_uimaximum(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_playbacklengthref(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

ScalarEditingMetadata::ScalarEditingMetadata(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.ScalarEditingMetadata)
}
ScalarEditingMetadata::ScalarEditingMetadata(const ScalarEditingMetadata& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ScalarEditingMetadata* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.playbacklengthref_){}
    , decltype(_impl_.scalartype_){}
    , decltype(_impl_.uiincrement_){}
    , decltype(_impl_.uiminimum_){}
    , decltype(_impl_.uimaximum_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.playbacklengthref_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.playbacklengthref_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_playbacklengthref()) {
    _this->_impl_.playbacklengthref_.Set(from._internal_playbacklengthref(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.scalartype_, &from._impl_.scalartype_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.uimaximum_) -
    reinterpret_cast<char*>(&_impl_.scalartype_)) + sizeof(_impl_.uimaximum_));
  // @@protoc_insertion_point(copy_constructor:Property.ScalarEditingMetadata)
}

inline void ScalarEditingMetadata::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.playbacklengthref_){}
    , decltype(_impl_.scalartype_){0}
    , decltype(_impl_.uiincrement_){0}
    , decltype(_impl_.uiminimum_){0}
    , decltype(_impl_.uimaximum_){0}
  };
  _impl_.playbacklengthref_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.playbacklengthref_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ScalarEditingMetadata::~ScalarEditingMetadata() {
  // @@protoc_insertion_point(destructor:Property.ScalarEditingMetadata)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ScalarEditingMetadata::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.playbacklengthref_.Destroy();
}

void ScalarEditingMetadata::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ScalarEditingMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.ScalarEditingMetadata)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.playbacklengthref_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x0000001eu) {
    ::memset(&_impl_.scalartype_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.uimaximum_) -
        reinterpret_cast<char*>(&_impl_.scalartype_)) + sizeof(_impl_.uimaximum_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ScalarEditingMetadata::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .Property.ScalarEditingMetadata.ScalarInterpretationEnum scalarType = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_scalartype(static_cast<::Property::ScalarEditingMetadata_ScalarInterpretationEnum>(val));
        } else
          goto handle_unusual;
        continue;
      // optional float uiIncrement = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 21)) {
          _Internal::set_has_uiincrement(&has_bits);
          _impl_.uiincrement_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // optional float uiMinimum = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 29)) {
          _Internal::set_has_uiminimum(&has_bits);
          _impl_.uiminimum_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // optional float uiMaximum = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 37)) {
          _Internal::set_has_uimaximum(&has_bits);
          _impl_.uimaximum_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // optional string playbackLengthRef = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_playbacklengthref();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "Property.ScalarEditingMetadata.playbackLengthRef"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ScalarEditingMetadata::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.ScalarEditingMetadata)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional .Property.ScalarEditingMetadata.ScalarInterpretationEnum scalarType = 1;
  if (_internal_has_scalartype()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_scalartype(), target);
  }

  // optional float uiIncrement = 2;
  if (_internal_has_uiincrement()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(2, this->_internal_uiincrement(), target);
  }

  // optional float uiMinimum = 3;
  if (_internal_has_uiminimum()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(3, this->_internal_uiminimum(), target);
  }

  // optional float uiMaximum = 4;
  if (_internal_has_uimaximum()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(4, this->_internal_uimaximum(), target);
  }

  // optional string playbackLengthRef = 5;
  if (_internal_has_playbacklengthref()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_playbacklengthref().data(), static_cast<int>(this->_internal_playbacklengthref().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Property.ScalarEditingMetadata.playbackLengthRef");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_playbacklengthref(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.ScalarEditingMetadata)
  return target;
}

size_t ScalarEditingMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.ScalarEditingMetadata)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional string playbackLengthRef = 5;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_playbacklengthref());
    }

    // optional .Property.ScalarEditingMetadata.ScalarInterpretationEnum scalarType = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_scalartype());
    }

    // optional float uiIncrement = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 4;
    }

    // optional float uiMinimum = 3;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 4;
    }

    // optional float uiMaximum = 4;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + 4;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ScalarEditingMetadata::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ScalarEditingMetadata::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ScalarEditingMetadata::GetClassData() const { return &_class_data_; }


void ScalarEditingMetadata::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ScalarEditingMetadata*>(&to_msg);
  auto& from = static_cast<const ScalarEditingMetadata&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.ScalarEditingMetadata)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_playbacklengthref(from._internal_playbacklengthref());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.scalartype_ = from._impl_.scalartype_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.uiincrement_ = from._impl_.uiincrement_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.uiminimum_ = from._impl_.uiminimum_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.uimaximum_ = from._impl_.uimaximum_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ScalarEditingMetadata::CopyFrom(const ScalarEditingMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.ScalarEditingMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScalarEditingMetadata::IsInitialized() const {
  return true;
}

void ScalarEditingMetadata::InternalSwap(ScalarEditingMetadata* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.playbacklengthref_, lhs_arena,
      &other->_impl_.playbacklengthref_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ScalarEditingMetadata, _impl_.uimaximum_)
      + sizeof(ScalarEditingMetadata::_impl_.uimaximum_)
      - PROTOBUF_FIELD_OFFSET(ScalarEditingMetadata, _impl_.scalartype_)>(
          reinterpret_cast<char*>(&_impl_.scalartype_),
          reinterpret_cast<char*>(&other->_impl_.scalartype_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ScalarEditingMetadata::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[16]);
}

// ===================================================================

class ScalarGeneratorMetadata::_Internal {
 public:
  static const ::Property::GeneratorMetadata& base(const ScalarGeneratorMetadata* msg);
  static const ::Property::ScalarEditingMetadata& edit(const ScalarGeneratorMetadata* msg);
};

const ::Property::GeneratorMetadata&
ScalarGeneratorMetadata::_Internal::base(const ScalarGeneratorMetadata* msg) {
  return *msg->_impl_.base_;
}
const ::Property::ScalarEditingMetadata&
ScalarGeneratorMetadata::_Internal::edit(const ScalarGeneratorMetadata* msg) {
  return *msg->_impl_.edit_;
}
ScalarGeneratorMetadata::ScalarGeneratorMetadata(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.ScalarGeneratorMetadata)
}
ScalarGeneratorMetadata::ScalarGeneratorMetadata(const ScalarGeneratorMetadata& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ScalarGeneratorMetadata* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.base_){nullptr}
    , decltype(_impl_.edit_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_base()) {
    _this->_impl_.base_ = new ::Property::GeneratorMetadata(*from._impl_.base_);
  }
  if (from._internal_has_edit()) {
    _this->_impl_.edit_ = new ::Property::ScalarEditingMetadata(*from._impl_.edit_);
  }
  // @@protoc_insertion_point(copy_constructor:Property.ScalarGeneratorMetadata)
}

inline void ScalarGeneratorMetadata::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.base_){nullptr}
    , decltype(_impl_.edit_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ScalarGeneratorMetadata::~ScalarGeneratorMetadata() {
  // @@protoc_insertion_point(destructor:Property.ScalarGeneratorMetadata)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ScalarGeneratorMetadata::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.base_;
  if (this != internal_default_instance()) delete _impl_.edit_;
}

void ScalarGeneratorMetadata::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ScalarGeneratorMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.ScalarGeneratorMetadata)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.base_ != nullptr) {
    delete _impl_.base_;
  }
  _impl_.base_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.edit_ != nullptr) {
    delete _impl_.edit_;
  }
  _impl_.edit_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ScalarGeneratorMetadata::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Property.GeneratorMetadata base = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_base(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.ScalarEditingMetadata edit = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_edit(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ScalarGeneratorMetadata::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.ScalarGeneratorMetadata)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Property.GeneratorMetadata base = 1;
  if (this->_internal_has_base()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::base(this),
        _Internal::base(this).GetCachedSize(), target, stream);
  }

  // .Property.ScalarEditingMetadata edit = 2;
  if (this->_internal_has_edit()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::edit(this),
        _Internal::edit(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.ScalarGeneratorMetadata)
  return target;
}

size_t ScalarGeneratorMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.ScalarGeneratorMetadata)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Property.GeneratorMetadata base = 1;
  if (this->_internal_has_base()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.base_);
  }

  // .Property.ScalarEditingMetadata edit = 2;
  if (this->_internal_has_edit()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.edit_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ScalarGeneratorMetadata::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ScalarGeneratorMetadata::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ScalarGeneratorMetadata::GetClassData() const { return &_class_data_; }


void ScalarGeneratorMetadata::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ScalarGeneratorMetadata*>(&to_msg);
  auto& from = static_cast<const ScalarGeneratorMetadata&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.ScalarGeneratorMetadata)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_base()) {
    _this->_internal_mutable_base()->::Property::GeneratorMetadata::MergeFrom(
        from._internal_base());
  }
  if (from._internal_has_edit()) {
    _this->_internal_mutable_edit()->::Property::ScalarEditingMetadata::MergeFrom(
        from._internal_edit());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ScalarGeneratorMetadata::CopyFrom(const ScalarGeneratorMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.ScalarGeneratorMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScalarGeneratorMetadata::IsInitialized() const {
  return true;
}

void ScalarGeneratorMetadata::InternalSwap(ScalarGeneratorMetadata* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ScalarGeneratorMetadata, _impl_.edit_)
      + sizeof(ScalarGeneratorMetadata::_impl_.edit_)
      - PROTOBUF_FIELD_OFFSET(ScalarGeneratorMetadata, _impl_.base_)>(
          reinterpret_cast<char*>(&_impl_.base_),
          reinterpret_cast<char*>(&other->_impl_.base_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ScalarGeneratorMetadata::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[17]);
}

// ===================================================================

class ScalarPropertyMetadata::_Internal {
 public:
  static const ::Property::PropertyMetadata& base(const ScalarPropertyMetadata* msg);
  static const ::Property::ScalarEditingMetadata& edit(const ScalarPropertyMetadata* msg);
};

const ::Property::PropertyMetadata&
ScalarPropertyMetadata::_Internal::base(const ScalarPropertyMetadata* msg) {
  return *msg->_impl_.base_;
}
const ::Property::ScalarEditingMetadata&
ScalarPropertyMetadata::_Internal::edit(const ScalarPropertyMetadata* msg) {
  return *msg->_impl_.edit_;
}
ScalarPropertyMetadata::ScalarPropertyMetadata(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.ScalarPropertyMetadata)
}
ScalarPropertyMetadata::ScalarPropertyMetadata(const ScalarPropertyMetadata& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ScalarPropertyMetadata* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.base_){nullptr}
    , decltype(_impl_.edit_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_base()) {
    _this->_impl_.base_ = new ::Property::PropertyMetadata(*from._impl_.base_);
  }
  if (from._internal_has_edit()) {
    _this->_impl_.edit_ = new ::Property::ScalarEditingMetadata(*from._impl_.edit_);
  }
  // @@protoc_insertion_point(copy_constructor:Property.ScalarPropertyMetadata)
}

inline void ScalarPropertyMetadata::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.base_){nullptr}
    , decltype(_impl_.edit_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ScalarPropertyMetadata::~ScalarPropertyMetadata() {
  // @@protoc_insertion_point(destructor:Property.ScalarPropertyMetadata)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ScalarPropertyMetadata::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.base_;
  if (this != internal_default_instance()) delete _impl_.edit_;
}

void ScalarPropertyMetadata::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ScalarPropertyMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.ScalarPropertyMetadata)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.base_ != nullptr) {
    delete _impl_.base_;
  }
  _impl_.base_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.edit_ != nullptr) {
    delete _impl_.edit_;
  }
  _impl_.edit_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ScalarPropertyMetadata::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Property.PropertyMetadata base = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_base(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.ScalarEditingMetadata edit = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_edit(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ScalarPropertyMetadata::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.ScalarPropertyMetadata)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Property.PropertyMetadata base = 1;
  if (this->_internal_has_base()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::base(this),
        _Internal::base(this).GetCachedSize(), target, stream);
  }

  // .Property.ScalarEditingMetadata edit = 5;
  if (this->_internal_has_edit()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::edit(this),
        _Internal::edit(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.ScalarPropertyMetadata)
  return target;
}

size_t ScalarPropertyMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.ScalarPropertyMetadata)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Property.PropertyMetadata base = 1;
  if (this->_internal_has_base()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.base_);
  }

  // .Property.ScalarEditingMetadata edit = 5;
  if (this->_internal_has_edit()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.edit_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ScalarPropertyMetadata::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ScalarPropertyMetadata::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ScalarPropertyMetadata::GetClassData() const { return &_class_data_; }


void ScalarPropertyMetadata::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ScalarPropertyMetadata*>(&to_msg);
  auto& from = static_cast<const ScalarPropertyMetadata&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.ScalarPropertyMetadata)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_base()) {
    _this->_internal_mutable_base()->::Property::PropertyMetadata::MergeFrom(
        from._internal_base());
  }
  if (from._internal_has_edit()) {
    _this->_internal_mutable_edit()->::Property::ScalarEditingMetadata::MergeFrom(
        from._internal_edit());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ScalarPropertyMetadata::CopyFrom(const ScalarPropertyMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.ScalarPropertyMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScalarPropertyMetadata::IsInitialized() const {
  return true;
}

void ScalarPropertyMetadata::InternalSwap(ScalarPropertyMetadata* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ScalarPropertyMetadata, _impl_.edit_)
      + sizeof(ScalarPropertyMetadata::_impl_.edit_)
      - PROTOBUF_FIELD_OFFSET(ScalarPropertyMetadata, _impl_.base_)>(
          reinterpret_cast<char*>(&_impl_.base_),
          reinterpret_cast<char*>(&other->_impl_.base_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ScalarPropertyMetadata::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[18]);
}

// ===================================================================

class StringPropertyAssignment::_Internal {
 public:
  using HasBits = decltype(std::declval<StringPropertyAssignment>()._impl_._has_bits_);
  static void set_has_priority(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::Property::StringPropertyValue& value(const StringPropertyAssignment* msg);
};

const ::Property::StringPropertyValue&
StringPropertyAssignment::_Internal::value(const StringPropertyAssignment* msg) {
  return *msg->_impl_.value_;
}
StringPropertyAssignment::StringPropertyAssignment(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.StringPropertyAssignment)
}
StringPropertyAssignment::StringPropertyAssignment(const StringPropertyAssignment& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  StringPropertyAssignment* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.assignmentid_){}
    , decltype(_impl_.value_){nullptr}
    , decltype(_impl_.priority_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.assignmentid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.assignmentid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_assignmentid().empty()) {
    _this->_impl_.assignmentid_.Set(from._internal_assignmentid(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_value()) {
    _this->_impl_.value_ = new ::Property::StringPropertyValue(*from._impl_.value_);
  }
  _this->_impl_.priority_ = from._impl_.priority_;
  // @@protoc_insertion_point(copy_constructor:Property.StringPropertyAssignment)
}

inline void StringPropertyAssignment::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.assignmentid_){}
    , decltype(_impl_.value_){nullptr}
    , decltype(_impl_.priority_){0}
  };
  _impl_.assignmentid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.assignmentid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

StringPropertyAssignment::~StringPropertyAssignment() {
  // @@protoc_insertion_point(destructor:Property.StringPropertyAssignment)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void StringPropertyAssignment::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.assignmentid_.Destroy();
  if (this != internal_default_instance()) delete _impl_.value_;
}

void StringPropertyAssignment::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void StringPropertyAssignment::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.StringPropertyAssignment)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.assignmentid_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.value_ != nullptr) {
    delete _impl_.value_;
  }
  _impl_.value_ = nullptr;
  _impl_.priority_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StringPropertyAssignment::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional int32 priority = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_priority(&has_bits);
          _impl_.priority_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.StringPropertyValue value = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_value(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string assignmentId = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_assignmentid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "Property.StringPropertyAssignment.assignmentId"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StringPropertyAssignment::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.StringPropertyAssignment)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional int32 priority = 2;
  if (_internal_has_priority()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_priority(), target);
  }

  // .Property.StringPropertyValue value = 3;
  if (this->_internal_has_value()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::value(this),
        _Internal::value(this).GetCachedSize(), target, stream);
  }

  // string assignmentId = 4;
  if (!this->_internal_assignmentid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_assignmentid().data(), static_cast<int>(this->_internal_assignmentid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Property.StringPropertyAssignment.assignmentId");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_assignmentid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.StringPropertyAssignment)
  return target;
}

size_t StringPropertyAssignment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.StringPropertyAssignment)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string assignmentId = 4;
  if (!this->_internal_assignmentid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_assignmentid());
  }

  // .Property.StringPropertyValue value = 3;
  if (this->_internal_has_value()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.value_);
  }

  // optional int32 priority = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_priority());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StringPropertyAssignment::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    StringPropertyAssignment::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StringPropertyAssignment::GetClassData() const { return &_class_data_; }


void StringPropertyAssignment::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<StringPropertyAssignment*>(&to_msg);
  auto& from = static_cast<const StringPropertyAssignment&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.StringPropertyAssignment)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_assignmentid().empty()) {
    _this->_internal_set_assignmentid(from._internal_assignmentid());
  }
  if (from._internal_has_value()) {
    _this->_internal_mutable_value()->::Property::StringPropertyValue::MergeFrom(
        from._internal_value());
  }
  if (from._internal_has_priority()) {
    _this->_internal_set_priority(from._internal_priority());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StringPropertyAssignment::CopyFrom(const StringPropertyAssignment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.StringPropertyAssignment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StringPropertyAssignment::IsInitialized() const {
  return true;
}

void StringPropertyAssignment::InternalSwap(StringPropertyAssignment* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.assignmentid_, lhs_arena,
      &other->_impl_.assignmentid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StringPropertyAssignment, _impl_.priority_)
      + sizeof(StringPropertyAssignment::_impl_.priority_)
      - PROTOBUF_FIELD_OFFSET(StringPropertyAssignment, _impl_.value_)>(
          reinterpret_cast<char*>(&_impl_.value_),
          reinterpret_cast<char*>(&other->_impl_.value_));
}

::PROTOBUF_NAMESPACE_ID::Metadata StringPropertyAssignment::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[19]);
}

// ===================================================================

class StringPropertyValue::_Internal {
 public:
  static const ::Property::StringPropertyFormatted& formatted(const StringPropertyValue* msg);
  static const ::Property::PropertyIdentifier& ref(const StringPropertyValue* msg);
  static const ::Property::CustomGeneratorValue& custom(const StringPropertyValue* msg);
};

const ::Property::StringPropertyFormatted&
StringPropertyValue::_Internal::formatted(const StringPropertyValue* msg) {
  return *msg->_impl_.ValueType_.formatted_;
}
const ::Property::PropertyIdentifier&
StringPropertyValue::_Internal::ref(const StringPropertyValue* msg) {
  return *msg->_impl_.ValueType_.ref_;
}
const ::Property::CustomGeneratorValue&
StringPropertyValue::_Internal::custom(const StringPropertyValue* msg) {
  return *msg->_impl_.ValueType_.custom_;
}
void StringPropertyValue::set_allocated_formatted(::Property::StringPropertyFormatted* formatted) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_ValueType();
  if (formatted) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(formatted);
    if (message_arena != submessage_arena) {
      formatted = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, formatted, submessage_arena);
    }
    set_has_formatted();
    _impl_.ValueType_.formatted_ = formatted;
  }
  // @@protoc_insertion_point(field_set_allocated:Property.StringPropertyValue.formatted)
}
void StringPropertyValue::set_allocated_ref(::Property::PropertyIdentifier* ref) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_ValueType();
  if (ref) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(ref);
    if (message_arena != submessage_arena) {
      ref = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ref, submessage_arena);
    }
    set_has_ref();
    _impl_.ValueType_.ref_ = ref;
  }
  // @@protoc_insertion_point(field_set_allocated:Property.StringPropertyValue.ref)
}
void StringPropertyValue::set_allocated_custom(::Property::CustomGeneratorValue* custom) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_ValueType();
  if (custom) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(custom);
    if (message_arena != submessage_arena) {
      custom = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, custom, submessage_arena);
    }
    set_has_custom();
    _impl_.ValueType_.custom_ = custom;
  }
  // @@protoc_insertion_point(field_set_allocated:Property.StringPropertyValue.custom)
}
StringPropertyValue::StringPropertyValue(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.StringPropertyValue)
}
StringPropertyValue::StringPropertyValue(const StringPropertyValue& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  StringPropertyValue* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ValueType_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_ValueType();
  switch (from.ValueType_case()) {
    case kConstant: {
      _this->_internal_set_constant(from._internal_constant());
      break;
    }
    case kFormatted: {
      _this->_internal_mutable_formatted()->::Property::StringPropertyFormatted::MergeFrom(
          from._internal_formatted());
      break;
    }
    case kRef: {
      _this->_internal_mutable_ref()->::Property::PropertyIdentifier::MergeFrom(
          from._internal_ref());
      break;
    }
    case kExpr: {
      _this->_internal_set_expr(from._internal_expr());
      break;
    }
    case kUseDefault: {
      _this->_internal_set_usedefault(from._internal_usedefault());
      break;
    }
    case kCustom: {
      _this->_internal_mutable_custom()->::Property::CustomGeneratorValue::MergeFrom(
          from._internal_custom());
      break;
    }
    case VALUETYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:Property.StringPropertyValue)
}

inline void StringPropertyValue::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ValueType_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  clear_has_ValueType();
}

StringPropertyValue::~StringPropertyValue() {
  // @@protoc_insertion_point(destructor:Property.StringPropertyValue)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void StringPropertyValue::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_ValueType()) {
    clear_ValueType();
  }
}

void StringPropertyValue::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void StringPropertyValue::clear_ValueType() {
// @@protoc_insertion_point(one_of_clear_start:Property.StringPropertyValue)
  switch (ValueType_case()) {
    case kConstant: {
      _impl_.ValueType_.constant_.Destroy();
      break;
    }
    case kFormatted: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.ValueType_.formatted_;
      }
      break;
    }
    case kRef: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.ValueType_.ref_;
      }
      break;
    }
    case kExpr: {
      _impl_.ValueType_.expr_.Destroy();
      break;
    }
    case kUseDefault: {
      // No need to clear
      break;
    }
    case kCustom: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.ValueType_.custom_;
      }
      break;
    }
    case VALUETYPE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = VALUETYPE_NOT_SET;
}


void StringPropertyValue::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.StringPropertyValue)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_ValueType();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StringPropertyValue::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string constant = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_constant();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "Property.StringPropertyValue.constant"));
        } else
          goto handle_unusual;
        continue;
      // .Property.StringPropertyFormatted formatted = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_formatted(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.PropertyIdentifier ref = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_ref(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string expr = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_expr();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "Property.StringPropertyValue.expr"));
        } else
          goto handle_unusual;
        continue;
      // bool useDefault = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _internal_set_usedefault(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.CustomGeneratorValue custom = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_custom(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StringPropertyValue::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.StringPropertyValue)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string constant = 1;
  if (_internal_has_constant()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_constant().data(), static_cast<int>(this->_internal_constant().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Property.StringPropertyValue.constant");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_constant(), target);
  }

  // .Property.StringPropertyFormatted formatted = 2;
  if (_internal_has_formatted()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::formatted(this),
        _Internal::formatted(this).GetCachedSize(), target, stream);
  }

  // .Property.PropertyIdentifier ref = 3;
  if (_internal_has_ref()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::ref(this),
        _Internal::ref(this).GetCachedSize(), target, stream);
  }

  // string expr = 4;
  if (_internal_has_expr()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_expr().data(), static_cast<int>(this->_internal_expr().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Property.StringPropertyValue.expr");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_expr(), target);
  }

  // bool useDefault = 5;
  if (_internal_has_usedefault()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(5, this->_internal_usedefault(), target);
  }

  // .Property.CustomGeneratorValue custom = 10;
  if (_internal_has_custom()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(10, _Internal::custom(this),
        _Internal::custom(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.StringPropertyValue)
  return target;
}

size_t StringPropertyValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.StringPropertyValue)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (ValueType_case()) {
    // string constant = 1;
    case kConstant: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_constant());
      break;
    }
    // .Property.StringPropertyFormatted formatted = 2;
    case kFormatted: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.ValueType_.formatted_);
      break;
    }
    // .Property.PropertyIdentifier ref = 3;
    case kRef: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.ValueType_.ref_);
      break;
    }
    // string expr = 4;
    case kExpr: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_expr());
      break;
    }
    // bool useDefault = 5;
    case kUseDefault: {
      total_size += 1 + 1;
      break;
    }
    // .Property.CustomGeneratorValue custom = 10;
    case kCustom: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.ValueType_.custom_);
      break;
    }
    case VALUETYPE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StringPropertyValue::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    StringPropertyValue::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StringPropertyValue::GetClassData() const { return &_class_data_; }


void StringPropertyValue::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<StringPropertyValue*>(&to_msg);
  auto& from = static_cast<const StringPropertyValue&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.StringPropertyValue)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.ValueType_case()) {
    case kConstant: {
      _this->_internal_set_constant(from._internal_constant());
      break;
    }
    case kFormatted: {
      _this->_internal_mutable_formatted()->::Property::StringPropertyFormatted::MergeFrom(
          from._internal_formatted());
      break;
    }
    case kRef: {
      _this->_internal_mutable_ref()->::Property::PropertyIdentifier::MergeFrom(
          from._internal_ref());
      break;
    }
    case kExpr: {
      _this->_internal_set_expr(from._internal_expr());
      break;
    }
    case kUseDefault: {
      _this->_internal_set_usedefault(from._internal_usedefault());
      break;
    }
    case kCustom: {
      _this->_internal_mutable_custom()->::Property::CustomGeneratorValue::MergeFrom(
          from._internal_custom());
      break;
    }
    case VALUETYPE_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StringPropertyValue::CopyFrom(const StringPropertyValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.StringPropertyValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StringPropertyValue::IsInitialized() const {
  return true;
}

void StringPropertyValue::InternalSwap(StringPropertyValue* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.ValueType_, other->_impl_.ValueType_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata StringPropertyValue::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[20]);
}

// ===================================================================

class StringPropertyFormatted::_Internal {
 public:
};

StringPropertyFormatted::StringPropertyFormatted(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.StringPropertyFormatted)
}
StringPropertyFormatted::StringPropertyFormatted(const StringPropertyFormatted& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  StringPropertyFormatted* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.arguments_){from._impl_.arguments_}
    , decltype(_impl_.formatstring_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.formatstring_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.formatstring_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_formatstring().empty()) {
    _this->_impl_.formatstring_.Set(from._internal_formatstring(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:Property.StringPropertyFormatted)
}

inline void StringPropertyFormatted::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.arguments_){arena}
    , decltype(_impl_.formatstring_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.formatstring_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.formatstring_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

StringPropertyFormatted::~StringPropertyFormatted() {
  // @@protoc_insertion_point(destructor:Property.StringPropertyFormatted)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void StringPropertyFormatted::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.arguments_.~RepeatedPtrField();
  _impl_.formatstring_.Destroy();
}

void StringPropertyFormatted::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void StringPropertyFormatted::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.StringPropertyFormatted)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.arguments_.Clear();
  _impl_.formatstring_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StringPropertyFormatted::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string FormatString = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_formatstring();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "Property.StringPropertyFormatted.FormatString"));
        } else
          goto handle_unusual;
        continue;
      // repeated .Property.AnyPropertyValue Arguments = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_arguments(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StringPropertyFormatted::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.StringPropertyFormatted)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string FormatString = 1;
  if (!this->_internal_formatstring().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_formatstring().data(), static_cast<int>(this->_internal_formatstring().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Property.StringPropertyFormatted.FormatString");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_formatstring(), target);
  }

  // repeated .Property.AnyPropertyValue Arguments = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_arguments_size()); i < n; i++) {
    const auto& repfield = this->_internal_arguments(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.StringPropertyFormatted)
  return target;
}

size_t StringPropertyFormatted::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.StringPropertyFormatted)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Property.AnyPropertyValue Arguments = 2;
  total_size += 1UL * this->_internal_arguments_size();
  for (const auto& msg : this->_impl_.arguments_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string FormatString = 1;
  if (!this->_internal_formatstring().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_formatstring());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StringPropertyFormatted::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    StringPropertyFormatted::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StringPropertyFormatted::GetClassData() const { return &_class_data_; }


void StringPropertyFormatted::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<StringPropertyFormatted*>(&to_msg);
  auto& from = static_cast<const StringPropertyFormatted&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.StringPropertyFormatted)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.arguments_.MergeFrom(from._impl_.arguments_);
  if (!from._internal_formatstring().empty()) {
    _this->_internal_set_formatstring(from._internal_formatstring());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StringPropertyFormatted::CopyFrom(const StringPropertyFormatted& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.StringPropertyFormatted)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StringPropertyFormatted::IsInitialized() const {
  return true;
}

void StringPropertyFormatted::InternalSwap(StringPropertyFormatted* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.arguments_.InternalSwap(&other->_impl_.arguments_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.formatstring_, lhs_arena,
      &other->_impl_.formatstring_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata StringPropertyFormatted::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[21]);
}

// ===================================================================

class StringPropertyDeclaration::_Internal {
 public:
  static const ::Property::StringPropertyMetadata& meta(const StringPropertyDeclaration* msg);
};

const ::Property::StringPropertyMetadata&
StringPropertyDeclaration::_Internal::meta(const StringPropertyDeclaration* msg) {
  return *msg->_impl_.meta_;
}
StringPropertyDeclaration::StringPropertyDeclaration(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.StringPropertyDeclaration)
}
StringPropertyDeclaration::StringPropertyDeclaration(const StringPropertyDeclaration& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  StringPropertyDeclaration* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.default__){}
    , decltype(_impl_.meta_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.default__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.default__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_default_().empty()) {
    _this->_impl_.default__.Set(from._internal_default_(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_meta()) {
    _this->_impl_.meta_ = new ::Property::StringPropertyMetadata(*from._impl_.meta_);
  }
  // @@protoc_insertion_point(copy_constructor:Property.StringPropertyDeclaration)
}

inline void StringPropertyDeclaration::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.default__){}
    , decltype(_impl_.meta_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.default__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.default__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

StringPropertyDeclaration::~StringPropertyDeclaration() {
  // @@protoc_insertion_point(destructor:Property.StringPropertyDeclaration)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void StringPropertyDeclaration::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.default__.Destroy();
  if (this != internal_default_instance()) delete _impl_.meta_;
}

void StringPropertyDeclaration::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void StringPropertyDeclaration::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.StringPropertyDeclaration)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.default__.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.meta_ != nullptr) {
    delete _impl_.meta_;
  }
  _impl_.meta_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StringPropertyDeclaration::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Property.StringPropertyMetadata meta = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_meta(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string default = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_default_();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "Property.StringPropertyDeclaration.default"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StringPropertyDeclaration::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.StringPropertyDeclaration)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Property.StringPropertyMetadata meta = 1;
  if (this->_internal_has_meta()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::meta(this),
        _Internal::meta(this).GetCachedSize(), target, stream);
  }

  // string default = 2;
  if (!this->_internal_default_().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_default_().data(), static_cast<int>(this->_internal_default_().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Property.StringPropertyDeclaration.default");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_default_(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.StringPropertyDeclaration)
  return target;
}

size_t StringPropertyDeclaration::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.StringPropertyDeclaration)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string default = 2;
  if (!this->_internal_default_().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_default_());
  }

  // .Property.StringPropertyMetadata meta = 1;
  if (this->_internal_has_meta()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.meta_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StringPropertyDeclaration::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    StringPropertyDeclaration::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StringPropertyDeclaration::GetClassData() const { return &_class_data_; }


void StringPropertyDeclaration::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<StringPropertyDeclaration*>(&to_msg);
  auto& from = static_cast<const StringPropertyDeclaration&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.StringPropertyDeclaration)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_default_().empty()) {
    _this->_internal_set_default_(from._internal_default_());
  }
  if (from._internal_has_meta()) {
    _this->_internal_mutable_meta()->::Property::StringPropertyMetadata::MergeFrom(
        from._internal_meta());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StringPropertyDeclaration::CopyFrom(const StringPropertyDeclaration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.StringPropertyDeclaration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StringPropertyDeclaration::IsInitialized() const {
  return true;
}

void StringPropertyDeclaration::InternalSwap(StringPropertyDeclaration* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.default__, lhs_arena,
      &other->_impl_.default__, rhs_arena
  );
  swap(_impl_.meta_, other->_impl_.meta_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StringPropertyDeclaration::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[22]);
}

// ===================================================================

class StringValueEnumerationOption::_Internal {
 public:
};

StringValueEnumerationOption::StringValueEnumerationOption(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.StringValueEnumerationOption)
}
StringValueEnumerationOption::StringValueEnumerationOption(const StringValueEnumerationOption& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  StringValueEnumerationOption* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.enumvalue_){}
    , decltype(_impl_.displaytext_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.enumvalue_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.enumvalue_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_enumvalue().empty()) {
    _this->_impl_.enumvalue_.Set(from._internal_enumvalue(), 
      _this->GetArenaForAllocation());
  }
  _impl_.displaytext_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.displaytext_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_displaytext().empty()) {
    _this->_impl_.displaytext_.Set(from._internal_displaytext(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:Property.StringValueEnumerationOption)
}

inline void StringValueEnumerationOption::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.enumvalue_){}
    , decltype(_impl_.displaytext_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.enumvalue_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.enumvalue_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.displaytext_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.displaytext_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

StringValueEnumerationOption::~StringValueEnumerationOption() {
  // @@protoc_insertion_point(destructor:Property.StringValueEnumerationOption)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void StringValueEnumerationOption::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.enumvalue_.Destroy();
  _impl_.displaytext_.Destroy();
}

void StringValueEnumerationOption::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void StringValueEnumerationOption::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.StringValueEnumerationOption)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.enumvalue_.ClearToEmpty();
  _impl_.displaytext_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StringValueEnumerationOption::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string enumValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_enumvalue();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "Property.StringValueEnumerationOption.enumValue"));
        } else
          goto handle_unusual;
        continue;
      // string displayText = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_displaytext();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "Property.StringValueEnumerationOption.displayText"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StringValueEnumerationOption::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.StringValueEnumerationOption)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string enumValue = 1;
  if (!this->_internal_enumvalue().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_enumvalue().data(), static_cast<int>(this->_internal_enumvalue().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Property.StringValueEnumerationOption.enumValue");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_enumvalue(), target);
  }

  // string displayText = 2;
  if (!this->_internal_displaytext().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_displaytext().data(), static_cast<int>(this->_internal_displaytext().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Property.StringValueEnumerationOption.displayText");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_displaytext(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.StringValueEnumerationOption)
  return target;
}

size_t StringValueEnumerationOption::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.StringValueEnumerationOption)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string enumValue = 1;
  if (!this->_internal_enumvalue().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_enumvalue());
  }

  // string displayText = 2;
  if (!this->_internal_displaytext().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_displaytext());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StringValueEnumerationOption::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    StringValueEnumerationOption::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StringValueEnumerationOption::GetClassData() const { return &_class_data_; }


void StringValueEnumerationOption::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<StringValueEnumerationOption*>(&to_msg);
  auto& from = static_cast<const StringValueEnumerationOption&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.StringValueEnumerationOption)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_enumvalue().empty()) {
    _this->_internal_set_enumvalue(from._internal_enumvalue());
  }
  if (!from._internal_displaytext().empty()) {
    _this->_internal_set_displaytext(from._internal_displaytext());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StringValueEnumerationOption::CopyFrom(const StringValueEnumerationOption& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.StringValueEnumerationOption)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StringValueEnumerationOption::IsInitialized() const {
  return true;
}

void StringValueEnumerationOption::InternalSwap(StringValueEnumerationOption* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.enumvalue_, lhs_arena,
      &other->_impl_.enumvalue_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.displaytext_, lhs_arena,
      &other->_impl_.displaytext_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata StringValueEnumerationOption::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[23]);
}

// ===================================================================

class StringEditingMetadata::_Internal {
 public:
  using HasBits = decltype(std::declval<StringEditingMetadata>()._impl_._has_bits_);
  static void set_has_isscript(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_ismultiline(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

StringEditingMetadata::StringEditingMetadata(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.StringEditingMetadata)
}
StringEditingMetadata::StringEditingMetadata(const StringEditingMetadata& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  StringEditingMetadata* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.enumerationoptions_){from._impl_.enumerationoptions_}
    , decltype(_impl_.isscript_){}
    , decltype(_impl_.ismultiline_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.isscript_, &from._impl_.isscript_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.ismultiline_) -
    reinterpret_cast<char*>(&_impl_.isscript_)) + sizeof(_impl_.ismultiline_));
  // @@protoc_insertion_point(copy_constructor:Property.StringEditingMetadata)
}

inline void StringEditingMetadata::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.enumerationoptions_){arena}
    , decltype(_impl_.isscript_){false}
    , decltype(_impl_.ismultiline_){false}
  };
}

StringEditingMetadata::~StringEditingMetadata() {
  // @@protoc_insertion_point(destructor:Property.StringEditingMetadata)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void StringEditingMetadata::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.enumerationoptions_.~RepeatedPtrField();
}

void StringEditingMetadata::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void StringEditingMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.StringEditingMetadata)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.enumerationoptions_.Clear();
  ::memset(&_impl_.isscript_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.ismultiline_) -
      reinterpret_cast<char*>(&_impl_.isscript_)) + sizeof(_impl_.ismultiline_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StringEditingMetadata::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .Property.StringValueEnumerationOption enumerationOptions = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_enumerationoptions(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // optional bool isScript = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_isscript(&has_bits);
          _impl_.isscript_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool isMultiLine = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _Internal::set_has_ismultiline(&has_bits);
          _impl_.ismultiline_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StringEditingMetadata::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.StringEditingMetadata)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Property.StringValueEnumerationOption enumerationOptions = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_enumerationoptions_size()); i < n; i++) {
    const auto& repfield = this->_internal_enumerationoptions(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // optional bool isScript = 4;
  if (_internal_has_isscript()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(4, this->_internal_isscript(), target);
  }

  // optional bool isMultiLine = 5;
  if (_internal_has_ismultiline()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(5, this->_internal_ismultiline(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.StringEditingMetadata)
  return target;
}

size_t StringEditingMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.StringEditingMetadata)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Property.StringValueEnumerationOption enumerationOptions = 2;
  total_size += 1UL * this->_internal_enumerationoptions_size();
  for (const auto& msg : this->_impl_.enumerationoptions_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bool isScript = 4;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 1;
    }

    // optional bool isMultiLine = 5;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 1;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StringEditingMetadata::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    StringEditingMetadata::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StringEditingMetadata::GetClassData() const { return &_class_data_; }


void StringEditingMetadata::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<StringEditingMetadata*>(&to_msg);
  auto& from = static_cast<const StringEditingMetadata&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.StringEditingMetadata)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.enumerationoptions_.MergeFrom(from._impl_.enumerationoptions_);
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.isscript_ = from._impl_.isscript_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.ismultiline_ = from._impl_.ismultiline_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StringEditingMetadata::CopyFrom(const StringEditingMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.StringEditingMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StringEditingMetadata::IsInitialized() const {
  return true;
}

void StringEditingMetadata::InternalSwap(StringEditingMetadata* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.enumerationoptions_.InternalSwap(&other->_impl_.enumerationoptions_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StringEditingMetadata, _impl_.ismultiline_)
      + sizeof(StringEditingMetadata::_impl_.ismultiline_)
      - PROTOBUF_FIELD_OFFSET(StringEditingMetadata, _impl_.isscript_)>(
          reinterpret_cast<char*>(&_impl_.isscript_),
          reinterpret_cast<char*>(&other->_impl_.isscript_));
}

::PROTOBUF_NAMESPACE_ID::Metadata StringEditingMetadata::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[24]);
}

// ===================================================================

class StringGeneratorMetadata::_Internal {
 public:
  using HasBits = decltype(std::declval<StringGeneratorMetadata>()._impl_._has_bits_);
  static const ::Property::GeneratorMetadata& base(const StringGeneratorMetadata* msg);
  static const ::Property::StringEditingMetadata& edit(const StringGeneratorMetadata* msg);
  static void set_has_edit(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::Property::GeneratorMetadata&
StringGeneratorMetadata::_Internal::base(const StringGeneratorMetadata* msg) {
  return *msg->_impl_.base_;
}
const ::Property::StringEditingMetadata&
StringGeneratorMetadata::_Internal::edit(const StringGeneratorMetadata* msg) {
  return *msg->_impl_.edit_;
}
StringGeneratorMetadata::StringGeneratorMetadata(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.StringGeneratorMetadata)
}
StringGeneratorMetadata::StringGeneratorMetadata(const StringGeneratorMetadata& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  StringGeneratorMetadata* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.base_){nullptr}
    , decltype(_impl_.edit_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_base()) {
    _this->_impl_.base_ = new ::Property::GeneratorMetadata(*from._impl_.base_);
  }
  if (from._internal_has_edit()) {
    _this->_impl_.edit_ = new ::Property::StringEditingMetadata(*from._impl_.edit_);
  }
  // @@protoc_insertion_point(copy_constructor:Property.StringGeneratorMetadata)
}

inline void StringGeneratorMetadata::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.base_){nullptr}
    , decltype(_impl_.edit_){nullptr}
  };
}

StringGeneratorMetadata::~StringGeneratorMetadata() {
  // @@protoc_insertion_point(destructor:Property.StringGeneratorMetadata)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void StringGeneratorMetadata::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.base_;
  if (this != internal_default_instance()) delete _impl_.edit_;
}

void StringGeneratorMetadata::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void StringGeneratorMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.StringGeneratorMetadata)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.base_ != nullptr) {
    delete _impl_.base_;
  }
  _impl_.base_ = nullptr;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.edit_ != nullptr);
    _impl_.edit_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StringGeneratorMetadata::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Property.GeneratorMetadata base = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_base(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .Property.StringEditingMetadata edit = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_edit(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StringGeneratorMetadata::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.StringGeneratorMetadata)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Property.GeneratorMetadata base = 1;
  if (this->_internal_has_base()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::base(this),
        _Internal::base(this).GetCachedSize(), target, stream);
  }

  // optional .Property.StringEditingMetadata edit = 2;
  if (_internal_has_edit()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::edit(this),
        _Internal::edit(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.StringGeneratorMetadata)
  return target;
}

size_t StringGeneratorMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.StringGeneratorMetadata)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Property.GeneratorMetadata base = 1;
  if (this->_internal_has_base()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.base_);
  }

  // optional .Property.StringEditingMetadata edit = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.edit_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StringGeneratorMetadata::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    StringGeneratorMetadata::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StringGeneratorMetadata::GetClassData() const { return &_class_data_; }


void StringGeneratorMetadata::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<StringGeneratorMetadata*>(&to_msg);
  auto& from = static_cast<const StringGeneratorMetadata&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.StringGeneratorMetadata)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_base()) {
    _this->_internal_mutable_base()->::Property::GeneratorMetadata::MergeFrom(
        from._internal_base());
  }
  if (from._internal_has_edit()) {
    _this->_internal_mutable_edit()->::Property::StringEditingMetadata::MergeFrom(
        from._internal_edit());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StringGeneratorMetadata::CopyFrom(const StringGeneratorMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.StringGeneratorMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StringGeneratorMetadata::IsInitialized() const {
  return true;
}

void StringGeneratorMetadata::InternalSwap(StringGeneratorMetadata* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StringGeneratorMetadata, _impl_.edit_)
      + sizeof(StringGeneratorMetadata::_impl_.edit_)
      - PROTOBUF_FIELD_OFFSET(StringGeneratorMetadata, _impl_.base_)>(
          reinterpret_cast<char*>(&_impl_.base_),
          reinterpret_cast<char*>(&other->_impl_.base_));
}

::PROTOBUF_NAMESPACE_ID::Metadata StringGeneratorMetadata::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[25]);
}

// ===================================================================

class StringPropertyMetadata::_Internal {
 public:
  using HasBits = decltype(std::declval<StringPropertyMetadata>()._impl_._has_bits_);
  static const ::Property::PropertyMetadata& base(const StringPropertyMetadata* msg);
  static const ::Property::StringEditingMetadata& edit(const StringPropertyMetadata* msg);
  static void set_has_edit(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::Property::PropertyMetadata&
StringPropertyMetadata::_Internal::base(const StringPropertyMetadata* msg) {
  return *msg->_impl_.base_;
}
const ::Property::StringEditingMetadata&
StringPropertyMetadata::_Internal::edit(const StringPropertyMetadata* msg) {
  return *msg->_impl_.edit_;
}
StringPropertyMetadata::StringPropertyMetadata(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.StringPropertyMetadata)
}
StringPropertyMetadata::StringPropertyMetadata(const StringPropertyMetadata& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  StringPropertyMetadata* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.base_){nullptr}
    , decltype(_impl_.edit_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_base()) {
    _this->_impl_.base_ = new ::Property::PropertyMetadata(*from._impl_.base_);
  }
  if (from._internal_has_edit()) {
    _this->_impl_.edit_ = new ::Property::StringEditingMetadata(*from._impl_.edit_);
  }
  // @@protoc_insertion_point(copy_constructor:Property.StringPropertyMetadata)
}

inline void StringPropertyMetadata::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.base_){nullptr}
    , decltype(_impl_.edit_){nullptr}
  };
}

StringPropertyMetadata::~StringPropertyMetadata() {
  // @@protoc_insertion_point(destructor:Property.StringPropertyMetadata)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void StringPropertyMetadata::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.base_;
  if (this != internal_default_instance()) delete _impl_.edit_;
}

void StringPropertyMetadata::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void StringPropertyMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.StringPropertyMetadata)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.base_ != nullptr) {
    delete _impl_.base_;
  }
  _impl_.base_ = nullptr;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.edit_ != nullptr);
    _impl_.edit_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StringPropertyMetadata::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Property.PropertyMetadata base = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_base(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .Property.StringEditingMetadata edit = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_edit(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StringPropertyMetadata::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.StringPropertyMetadata)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Property.PropertyMetadata base = 1;
  if (this->_internal_has_base()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::base(this),
        _Internal::base(this).GetCachedSize(), target, stream);
  }

  // optional .Property.StringEditingMetadata edit = 3;
  if (_internal_has_edit()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::edit(this),
        _Internal::edit(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.StringPropertyMetadata)
  return target;
}

size_t StringPropertyMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.StringPropertyMetadata)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Property.PropertyMetadata base = 1;
  if (this->_internal_has_base()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.base_);
  }

  // optional .Property.StringEditingMetadata edit = 3;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.edit_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StringPropertyMetadata::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    StringPropertyMetadata::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StringPropertyMetadata::GetClassData() const { return &_class_data_; }


void StringPropertyMetadata::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<StringPropertyMetadata*>(&to_msg);
  auto& from = static_cast<const StringPropertyMetadata&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.StringPropertyMetadata)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_base()) {
    _this->_internal_mutable_base()->::Property::PropertyMetadata::MergeFrom(
        from._internal_base());
  }
  if (from._internal_has_edit()) {
    _this->_internal_mutable_edit()->::Property::StringEditingMetadata::MergeFrom(
        from._internal_edit());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StringPropertyMetadata::CopyFrom(const StringPropertyMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.StringPropertyMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StringPropertyMetadata::IsInitialized() const {
  return true;
}

void StringPropertyMetadata::InternalSwap(StringPropertyMetadata* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StringPropertyMetadata, _impl_.edit_)
      + sizeof(StringPropertyMetadata::_impl_.edit_)
      - PROTOBUF_FIELD_OFFSET(StringPropertyMetadata, _impl_.base_)>(
          reinterpret_cast<char*>(&_impl_.base_),
          reinterpret_cast<char*>(&other->_impl_.base_));
}

::PROTOBUF_NAMESPACE_ID::Metadata StringPropertyMetadata::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[26]);
}

// ===================================================================

class LinkPropertyAssignment::_Internal {
 public:
  using HasBits = decltype(std::declval<LinkPropertyAssignment>()._impl_._has_bits_);
  static void set_has_priority(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::Property::LinkPropertyValue& value(const LinkPropertyAssignment* msg);
};

const ::Property::LinkPropertyValue&
LinkPropertyAssignment::_Internal::value(const LinkPropertyAssignment* msg) {
  return *msg->_impl_.value_;
}
LinkPropertyAssignment::LinkPropertyAssignment(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.LinkPropertyAssignment)
}
LinkPropertyAssignment::LinkPropertyAssignment(const LinkPropertyAssignment& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  LinkPropertyAssignment* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.assignmentid_){}
    , decltype(_impl_.value_){nullptr}
    , decltype(_impl_.priority_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.assignmentid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.assignmentid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_assignmentid().empty()) {
    _this->_impl_.assignmentid_.Set(from._internal_assignmentid(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_value()) {
    _this->_impl_.value_ = new ::Property::LinkPropertyValue(*from._impl_.value_);
  }
  _this->_impl_.priority_ = from._impl_.priority_;
  // @@protoc_insertion_point(copy_constructor:Property.LinkPropertyAssignment)
}

inline void LinkPropertyAssignment::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.assignmentid_){}
    , decltype(_impl_.value_){nullptr}
    , decltype(_impl_.priority_){0}
  };
  _impl_.assignmentid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.assignmentid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

LinkPropertyAssignment::~LinkPropertyAssignment() {
  // @@protoc_insertion_point(destructor:Property.LinkPropertyAssignment)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LinkPropertyAssignment::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.assignmentid_.Destroy();
  if (this != internal_default_instance()) delete _impl_.value_;
}

void LinkPropertyAssignment::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void LinkPropertyAssignment::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.LinkPropertyAssignment)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.assignmentid_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.value_ != nullptr) {
    delete _impl_.value_;
  }
  _impl_.value_ = nullptr;
  _impl_.priority_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LinkPropertyAssignment::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional int32 priority = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_priority(&has_bits);
          _impl_.priority_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.LinkPropertyValue value = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_value(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string assignmentId = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_assignmentid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "Property.LinkPropertyAssignment.assignmentId"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LinkPropertyAssignment::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.LinkPropertyAssignment)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional int32 priority = 2;
  if (_internal_has_priority()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_priority(), target);
  }

  // .Property.LinkPropertyValue value = 3;
  if (this->_internal_has_value()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::value(this),
        _Internal::value(this).GetCachedSize(), target, stream);
  }

  // string assignmentId = 4;
  if (!this->_internal_assignmentid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_assignmentid().data(), static_cast<int>(this->_internal_assignmentid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Property.LinkPropertyAssignment.assignmentId");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_assignmentid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.LinkPropertyAssignment)
  return target;
}

size_t LinkPropertyAssignment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.LinkPropertyAssignment)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string assignmentId = 4;
  if (!this->_internal_assignmentid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_assignmentid());
  }

  // .Property.LinkPropertyValue value = 3;
  if (this->_internal_has_value()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.value_);
  }

  // optional int32 priority = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_priority());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LinkPropertyAssignment::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    LinkPropertyAssignment::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LinkPropertyAssignment::GetClassData() const { return &_class_data_; }


void LinkPropertyAssignment::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<LinkPropertyAssignment*>(&to_msg);
  auto& from = static_cast<const LinkPropertyAssignment&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.LinkPropertyAssignment)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_assignmentid().empty()) {
    _this->_internal_set_assignmentid(from._internal_assignmentid());
  }
  if (from._internal_has_value()) {
    _this->_internal_mutable_value()->::Property::LinkPropertyValue::MergeFrom(
        from._internal_value());
  }
  if (from._internal_has_priority()) {
    _this->_internal_set_priority(from._internal_priority());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LinkPropertyAssignment::CopyFrom(const LinkPropertyAssignment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.LinkPropertyAssignment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LinkPropertyAssignment::IsInitialized() const {
  return true;
}

void LinkPropertyAssignment::InternalSwap(LinkPropertyAssignment* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.assignmentid_, lhs_arena,
      &other->_impl_.assignmentid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LinkPropertyAssignment, _impl_.priority_)
      + sizeof(LinkPropertyAssignment::_impl_.priority_)
      - PROTOBUF_FIELD_OFFSET(LinkPropertyAssignment, _impl_.value_)>(
          reinterpret_cast<char*>(&_impl_.value_),
          reinterpret_cast<char*>(&other->_impl_.value_));
}

::PROTOBUF_NAMESPACE_ID::Metadata LinkPropertyAssignment::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[27]);
}

// ===================================================================

class LinkPropertyValue::_Internal {
 public:
  static const ::Property::PropertyIdentifier& constant(const LinkPropertyValue* msg);
  static const ::Property::PropertyIdentifier& ref(const LinkPropertyValue* msg);
  static const ::Property::CustomGeneratorValue& custom(const LinkPropertyValue* msg);
};

const ::Property::PropertyIdentifier&
LinkPropertyValue::_Internal::constant(const LinkPropertyValue* msg) {
  return *msg->_impl_.ValueType_.constant_;
}
const ::Property::PropertyIdentifier&
LinkPropertyValue::_Internal::ref(const LinkPropertyValue* msg) {
  return *msg->_impl_.ValueType_.ref_;
}
const ::Property::CustomGeneratorValue&
LinkPropertyValue::_Internal::custom(const LinkPropertyValue* msg) {
  return *msg->_impl_.ValueType_.custom_;
}
void LinkPropertyValue::set_allocated_constant(::Property::PropertyIdentifier* constant) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_ValueType();
  if (constant) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(constant);
    if (message_arena != submessage_arena) {
      constant = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, constant, submessage_arena);
    }
    set_has_constant();
    _impl_.ValueType_.constant_ = constant;
  }
  // @@protoc_insertion_point(field_set_allocated:Property.LinkPropertyValue.constant)
}
void LinkPropertyValue::set_allocated_ref(::Property::PropertyIdentifier* ref) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_ValueType();
  if (ref) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(ref);
    if (message_arena != submessage_arena) {
      ref = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ref, submessage_arena);
    }
    set_has_ref();
    _impl_.ValueType_.ref_ = ref;
  }
  // @@protoc_insertion_point(field_set_allocated:Property.LinkPropertyValue.ref)
}
void LinkPropertyValue::set_allocated_custom(::Property::CustomGeneratorValue* custom) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_ValueType();
  if (custom) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(custom);
    if (message_arena != submessage_arena) {
      custom = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, custom, submessage_arena);
    }
    set_has_custom();
    _impl_.ValueType_.custom_ = custom;
  }
  // @@protoc_insertion_point(field_set_allocated:Property.LinkPropertyValue.custom)
}
LinkPropertyValue::LinkPropertyValue(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.LinkPropertyValue)
}
LinkPropertyValue::LinkPropertyValue(const LinkPropertyValue& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  LinkPropertyValue* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ValueType_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_ValueType();
  switch (from.ValueType_case()) {
    case kConstant: {
      _this->_internal_mutable_constant()->::Property::PropertyIdentifier::MergeFrom(
          from._internal_constant());
      break;
    }
    case kRef: {
      _this->_internal_mutable_ref()->::Property::PropertyIdentifier::MergeFrom(
          from._internal_ref());
      break;
    }
    case kExpr: {
      _this->_internal_set_expr(from._internal_expr());
      break;
    }
    case kUseDefault: {
      _this->_internal_set_usedefault(from._internal_usedefault());
      break;
    }
    case kCustom: {
      _this->_internal_mutable_custom()->::Property::CustomGeneratorValue::MergeFrom(
          from._internal_custom());
      break;
    }
    case VALUETYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:Property.LinkPropertyValue)
}

inline void LinkPropertyValue::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ValueType_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  clear_has_ValueType();
}

LinkPropertyValue::~LinkPropertyValue() {
  // @@protoc_insertion_point(destructor:Property.LinkPropertyValue)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LinkPropertyValue::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_ValueType()) {
    clear_ValueType();
  }
}

void LinkPropertyValue::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void LinkPropertyValue::clear_ValueType() {
// @@protoc_insertion_point(one_of_clear_start:Property.LinkPropertyValue)
  switch (ValueType_case()) {
    case kConstant: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.ValueType_.constant_;
      }
      break;
    }
    case kRef: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.ValueType_.ref_;
      }
      break;
    }
    case kExpr: {
      _impl_.ValueType_.expr_.Destroy();
      break;
    }
    case kUseDefault: {
      // No need to clear
      break;
    }
    case kCustom: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.ValueType_.custom_;
      }
      break;
    }
    case VALUETYPE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = VALUETYPE_NOT_SET;
}


void LinkPropertyValue::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.LinkPropertyValue)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_ValueType();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LinkPropertyValue::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Property.PropertyIdentifier constant = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_constant(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.PropertyIdentifier ref = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_ref(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string expr = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_expr();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "Property.LinkPropertyValue.expr"));
        } else
          goto handle_unusual;
        continue;
      // bool useDefault = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _internal_set_usedefault(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.CustomGeneratorValue custom = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_custom(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LinkPropertyValue::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.LinkPropertyValue)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Property.PropertyIdentifier constant = 1;
  if (_internal_has_constant()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::constant(this),
        _Internal::constant(this).GetCachedSize(), target, stream);
  }

  // .Property.PropertyIdentifier ref = 3;
  if (_internal_has_ref()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::ref(this),
        _Internal::ref(this).GetCachedSize(), target, stream);
  }

  // string expr = 4;
  if (_internal_has_expr()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_expr().data(), static_cast<int>(this->_internal_expr().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Property.LinkPropertyValue.expr");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_expr(), target);
  }

  // bool useDefault = 5;
  if (_internal_has_usedefault()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(5, this->_internal_usedefault(), target);
  }

  // .Property.CustomGeneratorValue custom = 10;
  if (_internal_has_custom()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(10, _Internal::custom(this),
        _Internal::custom(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.LinkPropertyValue)
  return target;
}

size_t LinkPropertyValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.LinkPropertyValue)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (ValueType_case()) {
    // .Property.PropertyIdentifier constant = 1;
    case kConstant: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.ValueType_.constant_);
      break;
    }
    // .Property.PropertyIdentifier ref = 3;
    case kRef: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.ValueType_.ref_);
      break;
    }
    // string expr = 4;
    case kExpr: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_expr());
      break;
    }
    // bool useDefault = 5;
    case kUseDefault: {
      total_size += 1 + 1;
      break;
    }
    // .Property.CustomGeneratorValue custom = 10;
    case kCustom: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.ValueType_.custom_);
      break;
    }
    case VALUETYPE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LinkPropertyValue::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    LinkPropertyValue::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LinkPropertyValue::GetClassData() const { return &_class_data_; }


void LinkPropertyValue::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<LinkPropertyValue*>(&to_msg);
  auto& from = static_cast<const LinkPropertyValue&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.LinkPropertyValue)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.ValueType_case()) {
    case kConstant: {
      _this->_internal_mutable_constant()->::Property::PropertyIdentifier::MergeFrom(
          from._internal_constant());
      break;
    }
    case kRef: {
      _this->_internal_mutable_ref()->::Property::PropertyIdentifier::MergeFrom(
          from._internal_ref());
      break;
    }
    case kExpr: {
      _this->_internal_set_expr(from._internal_expr());
      break;
    }
    case kUseDefault: {
      _this->_internal_set_usedefault(from._internal_usedefault());
      break;
    }
    case kCustom: {
      _this->_internal_mutable_custom()->::Property::CustomGeneratorValue::MergeFrom(
          from._internal_custom());
      break;
    }
    case VALUETYPE_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LinkPropertyValue::CopyFrom(const LinkPropertyValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.LinkPropertyValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LinkPropertyValue::IsInitialized() const {
  return true;
}

void LinkPropertyValue::InternalSwap(LinkPropertyValue* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.ValueType_, other->_impl_.ValueType_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata LinkPropertyValue::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[28]);
}

// ===================================================================

class LinkPropertyDeclaration::_Internal {
 public:
  static const ::Property::LinkPropertyMetadata& meta(const LinkPropertyDeclaration* msg);
};

const ::Property::LinkPropertyMetadata&
LinkPropertyDeclaration::_Internal::meta(const LinkPropertyDeclaration* msg) {
  return *msg->_impl_.meta_;
}
LinkPropertyDeclaration::LinkPropertyDeclaration(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.LinkPropertyDeclaration)
}
LinkPropertyDeclaration::LinkPropertyDeclaration(const LinkPropertyDeclaration& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  LinkPropertyDeclaration* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.default__){}
    , decltype(_impl_.meta_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.default__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.default__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_default_().empty()) {
    _this->_impl_.default__.Set(from._internal_default_(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_meta()) {
    _this->_impl_.meta_ = new ::Property::LinkPropertyMetadata(*from._impl_.meta_);
  }
  // @@protoc_insertion_point(copy_constructor:Property.LinkPropertyDeclaration)
}

inline void LinkPropertyDeclaration::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.default__){}
    , decltype(_impl_.meta_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.default__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.default__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

LinkPropertyDeclaration::~LinkPropertyDeclaration() {
  // @@protoc_insertion_point(destructor:Property.LinkPropertyDeclaration)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LinkPropertyDeclaration::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.default__.Destroy();
  if (this != internal_default_instance()) delete _impl_.meta_;
}

void LinkPropertyDeclaration::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void LinkPropertyDeclaration::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.LinkPropertyDeclaration)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.default__.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.meta_ != nullptr) {
    delete _impl_.meta_;
  }
  _impl_.meta_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LinkPropertyDeclaration::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Property.LinkPropertyMetadata meta = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_meta(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string default = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_default_();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "Property.LinkPropertyDeclaration.default"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LinkPropertyDeclaration::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.LinkPropertyDeclaration)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Property.LinkPropertyMetadata meta = 1;
  if (this->_internal_has_meta()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::meta(this),
        _Internal::meta(this).GetCachedSize(), target, stream);
  }

  // string default = 2;
  if (!this->_internal_default_().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_default_().data(), static_cast<int>(this->_internal_default_().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Property.LinkPropertyDeclaration.default");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_default_(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.LinkPropertyDeclaration)
  return target;
}

size_t LinkPropertyDeclaration::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.LinkPropertyDeclaration)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string default = 2;
  if (!this->_internal_default_().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_default_());
  }

  // .Property.LinkPropertyMetadata meta = 1;
  if (this->_internal_has_meta()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.meta_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LinkPropertyDeclaration::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    LinkPropertyDeclaration::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LinkPropertyDeclaration::GetClassData() const { return &_class_data_; }


void LinkPropertyDeclaration::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<LinkPropertyDeclaration*>(&to_msg);
  auto& from = static_cast<const LinkPropertyDeclaration&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.LinkPropertyDeclaration)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_default_().empty()) {
    _this->_internal_set_default_(from._internal_default_());
  }
  if (from._internal_has_meta()) {
    _this->_internal_mutable_meta()->::Property::LinkPropertyMetadata::MergeFrom(
        from._internal_meta());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LinkPropertyDeclaration::CopyFrom(const LinkPropertyDeclaration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.LinkPropertyDeclaration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LinkPropertyDeclaration::IsInitialized() const {
  return true;
}

void LinkPropertyDeclaration::InternalSwap(LinkPropertyDeclaration* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.default__, lhs_arena,
      &other->_impl_.default__, rhs_arena
  );
  swap(_impl_.meta_, other->_impl_.meta_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LinkPropertyDeclaration::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[29]);
}

// ===================================================================

class LinkPropertyMetadata::_Internal {
 public:
  using HasBits = decltype(std::declval<LinkPropertyMetadata>()._impl_._has_bits_);
  static const ::Property::PropertyMetadata& base(const LinkPropertyMetadata* msg);
  static const ::Property::LinkEditingMetadata& edit(const LinkPropertyMetadata* msg);
  static void set_has_edit(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::Property::PropertyMetadata&
LinkPropertyMetadata::_Internal::base(const LinkPropertyMetadata* msg) {
  return *msg->_impl_.base_;
}
const ::Property::LinkEditingMetadata&
LinkPropertyMetadata::_Internal::edit(const LinkPropertyMetadata* msg) {
  return *msg->_impl_.edit_;
}
LinkPropertyMetadata::LinkPropertyMetadata(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.LinkPropertyMetadata)
}
LinkPropertyMetadata::LinkPropertyMetadata(const LinkPropertyMetadata& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  LinkPropertyMetadata* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.base_){nullptr}
    , decltype(_impl_.edit_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_base()) {
    _this->_impl_.base_ = new ::Property::PropertyMetadata(*from._impl_.base_);
  }
  if (from._internal_has_edit()) {
    _this->_impl_.edit_ = new ::Property::LinkEditingMetadata(*from._impl_.edit_);
  }
  // @@protoc_insertion_point(copy_constructor:Property.LinkPropertyMetadata)
}

inline void LinkPropertyMetadata::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.base_){nullptr}
    , decltype(_impl_.edit_){nullptr}
  };
}

LinkPropertyMetadata::~LinkPropertyMetadata() {
  // @@protoc_insertion_point(destructor:Property.LinkPropertyMetadata)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LinkPropertyMetadata::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.base_;
  if (this != internal_default_instance()) delete _impl_.edit_;
}

void LinkPropertyMetadata::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void LinkPropertyMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.LinkPropertyMetadata)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.base_ != nullptr) {
    delete _impl_.base_;
  }
  _impl_.base_ = nullptr;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.edit_ != nullptr);
    _impl_.edit_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LinkPropertyMetadata::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Property.PropertyMetadata base = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_base(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .Property.LinkEditingMetadata edit = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_edit(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LinkPropertyMetadata::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.LinkPropertyMetadata)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Property.PropertyMetadata base = 1;
  if (this->_internal_has_base()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::base(this),
        _Internal::base(this).GetCachedSize(), target, stream);
  }

  // optional .Property.LinkEditingMetadata edit = 2;
  if (_internal_has_edit()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::edit(this),
        _Internal::edit(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.LinkPropertyMetadata)
  return target;
}

size_t LinkPropertyMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.LinkPropertyMetadata)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Property.PropertyMetadata base = 1;
  if (this->_internal_has_base()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.base_);
  }

  // optional .Property.LinkEditingMetadata edit = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.edit_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LinkPropertyMetadata::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    LinkPropertyMetadata::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LinkPropertyMetadata::GetClassData() const { return &_class_data_; }


void LinkPropertyMetadata::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<LinkPropertyMetadata*>(&to_msg);
  auto& from = static_cast<const LinkPropertyMetadata&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.LinkPropertyMetadata)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_base()) {
    _this->_internal_mutable_base()->::Property::PropertyMetadata::MergeFrom(
        from._internal_base());
  }
  if (from._internal_has_edit()) {
    _this->_internal_mutable_edit()->::Property::LinkEditingMetadata::MergeFrom(
        from._internal_edit());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LinkPropertyMetadata::CopyFrom(const LinkPropertyMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.LinkPropertyMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LinkPropertyMetadata::IsInitialized() const {
  return true;
}

void LinkPropertyMetadata::InternalSwap(LinkPropertyMetadata* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LinkPropertyMetadata, _impl_.edit_)
      + sizeof(LinkPropertyMetadata::_impl_.edit_)
      - PROTOBUF_FIELD_OFFSET(LinkPropertyMetadata, _impl_.base_)>(
          reinterpret_cast<char*>(&_impl_.base_),
          reinterpret_cast<char*>(&other->_impl_.base_));
}

::PROTOBUF_NAMESPACE_ID::Metadata LinkPropertyMetadata::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[30]);
}

// ===================================================================

class LinkGeneratorMetadata::_Internal {
 public:
  using HasBits = decltype(std::declval<LinkGeneratorMetadata>()._impl_._has_bits_);
  static const ::Property::GeneratorMetadata& base(const LinkGeneratorMetadata* msg);
  static const ::Property::LinkEditingMetadata& edit(const LinkGeneratorMetadata* msg);
  static void set_has_edit(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::Property::GeneratorMetadata&
LinkGeneratorMetadata::_Internal::base(const LinkGeneratorMetadata* msg) {
  return *msg->_impl_.base_;
}
const ::Property::LinkEditingMetadata&
LinkGeneratorMetadata::_Internal::edit(const LinkGeneratorMetadata* msg) {
  return *msg->_impl_.edit_;
}
LinkGeneratorMetadata::LinkGeneratorMetadata(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.LinkGeneratorMetadata)
}
LinkGeneratorMetadata::LinkGeneratorMetadata(const LinkGeneratorMetadata& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  LinkGeneratorMetadata* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.base_){nullptr}
    , decltype(_impl_.edit_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_base()) {
    _this->_impl_.base_ = new ::Property::GeneratorMetadata(*from._impl_.base_);
  }
  if (from._internal_has_edit()) {
    _this->_impl_.edit_ = new ::Property::LinkEditingMetadata(*from._impl_.edit_);
  }
  // @@protoc_insertion_point(copy_constructor:Property.LinkGeneratorMetadata)
}

inline void LinkGeneratorMetadata::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.base_){nullptr}
    , decltype(_impl_.edit_){nullptr}
  };
}

LinkGeneratorMetadata::~LinkGeneratorMetadata() {
  // @@protoc_insertion_point(destructor:Property.LinkGeneratorMetadata)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LinkGeneratorMetadata::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.base_;
  if (this != internal_default_instance()) delete _impl_.edit_;
}

void LinkGeneratorMetadata::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void LinkGeneratorMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.LinkGeneratorMetadata)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.base_ != nullptr) {
    delete _impl_.base_;
  }
  _impl_.base_ = nullptr;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.edit_ != nullptr);
    _impl_.edit_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LinkGeneratorMetadata::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Property.GeneratorMetadata base = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_base(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .Property.LinkEditingMetadata edit = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_edit(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LinkGeneratorMetadata::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.LinkGeneratorMetadata)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Property.GeneratorMetadata base = 1;
  if (this->_internal_has_base()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::base(this),
        _Internal::base(this).GetCachedSize(), target, stream);
  }

  // optional .Property.LinkEditingMetadata edit = 2;
  if (_internal_has_edit()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::edit(this),
        _Internal::edit(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.LinkGeneratorMetadata)
  return target;
}

size_t LinkGeneratorMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.LinkGeneratorMetadata)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Property.GeneratorMetadata base = 1;
  if (this->_internal_has_base()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.base_);
  }

  // optional .Property.LinkEditingMetadata edit = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.edit_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LinkGeneratorMetadata::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    LinkGeneratorMetadata::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LinkGeneratorMetadata::GetClassData() const { return &_class_data_; }


void LinkGeneratorMetadata::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<LinkGeneratorMetadata*>(&to_msg);
  auto& from = static_cast<const LinkGeneratorMetadata&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.LinkGeneratorMetadata)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_base()) {
    _this->_internal_mutable_base()->::Property::GeneratorMetadata::MergeFrom(
        from._internal_base());
  }
  if (from._internal_has_edit()) {
    _this->_internal_mutable_edit()->::Property::LinkEditingMetadata::MergeFrom(
        from._internal_edit());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LinkGeneratorMetadata::CopyFrom(const LinkGeneratorMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.LinkGeneratorMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LinkGeneratorMetadata::IsInitialized() const {
  return true;
}

void LinkGeneratorMetadata::InternalSwap(LinkGeneratorMetadata* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LinkGeneratorMetadata, _impl_.edit_)
      + sizeof(LinkGeneratorMetadata::_impl_.edit_)
      - PROTOBUF_FIELD_OFFSET(LinkGeneratorMetadata, _impl_.base_)>(
          reinterpret_cast<char*>(&_impl_.base_),
          reinterpret_cast<char*>(&other->_impl_.base_));
}

::PROTOBUF_NAMESPACE_ID::Metadata LinkGeneratorMetadata::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[31]);
}

// ===================================================================

class LinkEditingMetadata::_Internal {
 public:
  using HasBits = decltype(std::declval<LinkEditingMetadata>()._impl_._has_bits_);
  static const ::Property::LinkContentTypeSpecifier& contenttype(const LinkEditingMetadata* msg);
  static void set_has_contenttype(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_directtolibrary(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::Property::LinkContentTypeSpecifier&
LinkEditingMetadata::_Internal::contenttype(const LinkEditingMetadata* msg) {
  return *msg->_impl_.contenttype_;
}
LinkEditingMetadata::LinkEditingMetadata(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.LinkEditingMetadata)
}
LinkEditingMetadata::LinkEditingMetadata(const LinkEditingMetadata& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  LinkEditingMetadata* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.contenttype_){nullptr}
    , decltype(_impl_.directtolibrary_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_contenttype()) {
    _this->_impl_.contenttype_ = new ::Property::LinkContentTypeSpecifier(*from._impl_.contenttype_);
  }
  _this->_impl_.directtolibrary_ = from._impl_.directtolibrary_;
  // @@protoc_insertion_point(copy_constructor:Property.LinkEditingMetadata)
}

inline void LinkEditingMetadata::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.contenttype_){nullptr}
    , decltype(_impl_.directtolibrary_){false}
  };
}

LinkEditingMetadata::~LinkEditingMetadata() {
  // @@protoc_insertion_point(destructor:Property.LinkEditingMetadata)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LinkEditingMetadata::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.contenttype_;
}

void LinkEditingMetadata::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void LinkEditingMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.LinkEditingMetadata)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.contenttype_ != nullptr);
    _impl_.contenttype_->Clear();
  }
  _impl_.directtolibrary_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LinkEditingMetadata::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .Property.LinkContentTypeSpecifier contentType = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_contenttype(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool directToLibrary = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_directtolibrary(&has_bits);
          _impl_.directtolibrary_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LinkEditingMetadata::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.LinkEditingMetadata)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional .Property.LinkContentTypeSpecifier contentType = 1;
  if (_internal_has_contenttype()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::contenttype(this),
        _Internal::contenttype(this).GetCachedSize(), target, stream);
  }

  // optional bool directToLibrary = 2;
  if (_internal_has_directtolibrary()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_directtolibrary(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.LinkEditingMetadata)
  return target;
}

size_t LinkEditingMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.LinkEditingMetadata)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .Property.LinkContentTypeSpecifier contentType = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.contenttype_);
    }

    // optional bool directToLibrary = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 1;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LinkEditingMetadata::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    LinkEditingMetadata::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LinkEditingMetadata::GetClassData() const { return &_class_data_; }


void LinkEditingMetadata::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<LinkEditingMetadata*>(&to_msg);
  auto& from = static_cast<const LinkEditingMetadata&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.LinkEditingMetadata)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_contenttype()->::Property::LinkContentTypeSpecifier::MergeFrom(
          from._internal_contenttype());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.directtolibrary_ = from._impl_.directtolibrary_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LinkEditingMetadata::CopyFrom(const LinkEditingMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.LinkEditingMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LinkEditingMetadata::IsInitialized() const {
  return true;
}

void LinkEditingMetadata::InternalSwap(LinkEditingMetadata* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LinkEditingMetadata, _impl_.directtolibrary_)
      + sizeof(LinkEditingMetadata::_impl_.directtolibrary_)
      - PROTOBUF_FIELD_OFFSET(LinkEditingMetadata, _impl_.contenttype_)>(
          reinterpret_cast<char*>(&_impl_.contenttype_),
          reinterpret_cast<char*>(&other->_impl_.contenttype_));
}

::PROTOBUF_NAMESPACE_ID::Metadata LinkEditingMetadata::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[32]);
}

// ===================================================================

class LinkContentTypeSpecifier::_Internal {
 public:
};

LinkContentTypeSpecifier::LinkContentTypeSpecifier(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.LinkContentTypeSpecifier)
}
LinkContentTypeSpecifier::LinkContentTypeSpecifier(const LinkContentTypeSpecifier& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  LinkContentTypeSpecifier* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ContentType_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_ContentType();
  switch (from.ContentType_case()) {
    case kTexture: {
      _this->_internal_set_texture(from._internal_texture());
      break;
    }
    case kMaterial: {
      _this->_internal_set_material(from._internal_material());
      break;
    }
    case kGeometry: {
      _this->_internal_set_geometry(from._internal_geometry());
      break;
    }
    case CONTENTTYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:Property.LinkContentTypeSpecifier)
}

inline void LinkContentTypeSpecifier::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ContentType_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  clear_has_ContentType();
}

LinkContentTypeSpecifier::~LinkContentTypeSpecifier() {
  // @@protoc_insertion_point(destructor:Property.LinkContentTypeSpecifier)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LinkContentTypeSpecifier::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_ContentType()) {
    clear_ContentType();
  }
}

void LinkContentTypeSpecifier::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void LinkContentTypeSpecifier::clear_ContentType() {
// @@protoc_insertion_point(one_of_clear_start:Property.LinkContentTypeSpecifier)
  switch (ContentType_case()) {
    case kTexture: {
      // No need to clear
      break;
    }
    case kMaterial: {
      // No need to clear
      break;
    }
    case kGeometry: {
      // No need to clear
      break;
    }
    case CONTENTTYPE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = CONTENTTYPE_NOT_SET;
}


void LinkContentTypeSpecifier::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.LinkContentTypeSpecifier)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_ContentType();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LinkContentTypeSpecifier::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Property.LinkContentTypeSpecifier.TextureType Texture = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_texture(static_cast<::Property::LinkContentTypeSpecifier_TextureType>(val));
        } else
          goto handle_unusual;
        continue;
      // .Property.LinkContentTypeSpecifier.MaterialType Material = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_material(static_cast<::Property::LinkContentTypeSpecifier_MaterialType>(val));
        } else
          goto handle_unusual;
        continue;
      // .Property.LinkContentTypeSpecifier.GeometryType Geometry = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_geometry(static_cast<::Property::LinkContentTypeSpecifier_GeometryType>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LinkContentTypeSpecifier::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.LinkContentTypeSpecifier)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Property.LinkContentTypeSpecifier.TextureType Texture = 1;
  if (_internal_has_texture()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_texture(), target);
  }

  // .Property.LinkContentTypeSpecifier.MaterialType Material = 2;
  if (_internal_has_material()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_material(), target);
  }

  // .Property.LinkContentTypeSpecifier.GeometryType Geometry = 3;
  if (_internal_has_geometry()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      3, this->_internal_geometry(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.LinkContentTypeSpecifier)
  return target;
}

size_t LinkContentTypeSpecifier::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.LinkContentTypeSpecifier)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (ContentType_case()) {
    // .Property.LinkContentTypeSpecifier.TextureType Texture = 1;
    case kTexture: {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_texture());
      break;
    }
    // .Property.LinkContentTypeSpecifier.MaterialType Material = 2;
    case kMaterial: {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_material());
      break;
    }
    // .Property.LinkContentTypeSpecifier.GeometryType Geometry = 3;
    case kGeometry: {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_geometry());
      break;
    }
    case CONTENTTYPE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LinkContentTypeSpecifier::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    LinkContentTypeSpecifier::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LinkContentTypeSpecifier::GetClassData() const { return &_class_data_; }


void LinkContentTypeSpecifier::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<LinkContentTypeSpecifier*>(&to_msg);
  auto& from = static_cast<const LinkContentTypeSpecifier&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.LinkContentTypeSpecifier)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.ContentType_case()) {
    case kTexture: {
      _this->_internal_set_texture(from._internal_texture());
      break;
    }
    case kMaterial: {
      _this->_internal_set_material(from._internal_material());
      break;
    }
    case kGeometry: {
      _this->_internal_set_geometry(from._internal_geometry());
      break;
    }
    case CONTENTTYPE_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LinkContentTypeSpecifier::CopyFrom(const LinkContentTypeSpecifier& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.LinkContentTypeSpecifier)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LinkContentTypeSpecifier::IsInitialized() const {
  return true;
}

void LinkContentTypeSpecifier::InternalSwap(LinkContentTypeSpecifier* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.ContentType_, other->_impl_.ContentType_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata LinkContentTypeSpecifier::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[33]);
}

// ===================================================================

class VectorPropertyAssignment::_Internal {
 public:
  using HasBits = decltype(std::declval<VectorPropertyAssignment>()._impl_._has_bits_);
  static void set_has_method(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_priority(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::Property::VectorPropertyValue& value(const VectorPropertyAssignment* msg);
};

const ::Property::VectorPropertyValue&
VectorPropertyAssignment::_Internal::value(const VectorPropertyAssignment* msg) {
  return *msg->_impl_.value_;
}
VectorPropertyAssignment::VectorPropertyAssignment(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.VectorPropertyAssignment)
}
VectorPropertyAssignment::VectorPropertyAssignment(const VectorPropertyAssignment& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  VectorPropertyAssignment* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.assignmentid_){}
    , decltype(_impl_.value_){nullptr}
    , decltype(_impl_.method_){}
    , decltype(_impl_.priority_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.assignmentid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.assignmentid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_assignmentid().empty()) {
    _this->_impl_.assignmentid_.Set(from._internal_assignmentid(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_value()) {
    _this->_impl_.value_ = new ::Property::VectorPropertyValue(*from._impl_.value_);
  }
  ::memcpy(&_impl_.method_, &from._impl_.method_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.priority_) -
    reinterpret_cast<char*>(&_impl_.method_)) + sizeof(_impl_.priority_));
  // @@protoc_insertion_point(copy_constructor:Property.VectorPropertyAssignment)
}

inline void VectorPropertyAssignment::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.assignmentid_){}
    , decltype(_impl_.value_){nullptr}
    , decltype(_impl_.method_){0}
    , decltype(_impl_.priority_){0}
  };
  _impl_.assignmentid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.assignmentid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

VectorPropertyAssignment::~VectorPropertyAssignment() {
  // @@protoc_insertion_point(destructor:Property.VectorPropertyAssignment)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void VectorPropertyAssignment::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.assignmentid_.Destroy();
  if (this != internal_default_instance()) delete _impl_.value_;
}

void VectorPropertyAssignment::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void VectorPropertyAssignment::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.VectorPropertyAssignment)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.assignmentid_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.value_ != nullptr) {
    delete _impl_.value_;
  }
  _impl_.value_ = nullptr;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.method_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.priority_) -
        reinterpret_cast<char*>(&_impl_.method_)) + sizeof(_impl_.priority_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* VectorPropertyAssignment::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .Property.VectorPropertyAssignment.VectorPropertyMethod method = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_method(static_cast<::Property::VectorPropertyAssignment_VectorPropertyMethod>(val));
        } else
          goto handle_unusual;
        continue;
      // optional int32 priority = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_priority(&has_bits);
          _impl_.priority_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.VectorPropertyValue value = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_value(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string assignmentId = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_assignmentid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "Property.VectorPropertyAssignment.assignmentId"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* VectorPropertyAssignment::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.VectorPropertyAssignment)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional .Property.VectorPropertyAssignment.VectorPropertyMethod method = 1;
  if (_internal_has_method()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_method(), target);
  }

  // optional int32 priority = 2;
  if (_internal_has_priority()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_priority(), target);
  }

  // .Property.VectorPropertyValue value = 3;
  if (this->_internal_has_value()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::value(this),
        _Internal::value(this).GetCachedSize(), target, stream);
  }

  // string assignmentId = 4;
  if (!this->_internal_assignmentid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_assignmentid().data(), static_cast<int>(this->_internal_assignmentid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Property.VectorPropertyAssignment.assignmentId");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_assignmentid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.VectorPropertyAssignment)
  return target;
}

size_t VectorPropertyAssignment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.VectorPropertyAssignment)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string assignmentId = 4;
  if (!this->_internal_assignmentid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_assignmentid());
  }

  // .Property.VectorPropertyValue value = 3;
  if (this->_internal_has_value()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.value_);
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .Property.VectorPropertyAssignment.VectorPropertyMethod method = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_method());
    }

    // optional int32 priority = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_priority());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData VectorPropertyAssignment::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    VectorPropertyAssignment::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*VectorPropertyAssignment::GetClassData() const { return &_class_data_; }


void VectorPropertyAssignment::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<VectorPropertyAssignment*>(&to_msg);
  auto& from = static_cast<const VectorPropertyAssignment&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.VectorPropertyAssignment)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_assignmentid().empty()) {
    _this->_internal_set_assignmentid(from._internal_assignmentid());
  }
  if (from._internal_has_value()) {
    _this->_internal_mutable_value()->::Property::VectorPropertyValue::MergeFrom(
        from._internal_value());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.method_ = from._impl_.method_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.priority_ = from._impl_.priority_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void VectorPropertyAssignment::CopyFrom(const VectorPropertyAssignment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.VectorPropertyAssignment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VectorPropertyAssignment::IsInitialized() const {
  return true;
}

void VectorPropertyAssignment::InternalSwap(VectorPropertyAssignment* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.assignmentid_, lhs_arena,
      &other->_impl_.assignmentid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(VectorPropertyAssignment, _impl_.priority_)
      + sizeof(VectorPropertyAssignment::_impl_.priority_)
      - PROTOBUF_FIELD_OFFSET(VectorPropertyAssignment, _impl_.value_)>(
          reinterpret_cast<char*>(&_impl_.value_),
          reinterpret_cast<char*>(&other->_impl_.value_));
}

::PROTOBUF_NAMESPACE_ID::Metadata VectorPropertyAssignment::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[34]);
}

// ===================================================================

class VectorPropertyValue::_Internal {
 public:
  static const ::Common::Float4& constant(const VectorPropertyValue* msg);
  static const ::Property::PropertyIdentifier& ref(const VectorPropertyValue* msg);
  static const ::Property::VectorPerChannel& bychannel(const VectorPropertyValue* msg);
  static const ::Property::VectorPropertyKeyframed& keyframes(const VectorPropertyValue* msg);
  static const ::Property::VectorPropertyInterpolator& interp(const VectorPropertyValue* msg);
  static const ::Property::CustomGeneratorValue& custom(const VectorPropertyValue* msg);
  static const ::Property::VectorPropertyQuadratic& quadratic(const VectorPropertyValue* msg);
  static const ::Property::ScalarPropertyValue& uniform(const VectorPropertyValue* msg);
  static const ::Property::VectorPropertyApproach& approach(const VectorPropertyValue* msg);
};

const ::Common::Float4&
VectorPropertyValue::_Internal::constant(const VectorPropertyValue* msg) {
  return *msg->_impl_.ValueType_.constant_;
}
const ::Property::PropertyIdentifier&
VectorPropertyValue::_Internal::ref(const VectorPropertyValue* msg) {
  return *msg->_impl_.ValueType_.ref_;
}
const ::Property::VectorPerChannel&
VectorPropertyValue::_Internal::bychannel(const VectorPropertyValue* msg) {
  return *msg->_impl_.ValueType_.bychannel_;
}
const ::Property::VectorPropertyKeyframed&
VectorPropertyValue::_Internal::keyframes(const VectorPropertyValue* msg) {
  return *msg->_impl_.ValueType_.keyframes_;
}
const ::Property::VectorPropertyInterpolator&
VectorPropertyValue::_Internal::interp(const VectorPropertyValue* msg) {
  return *msg->_impl_.ValueType_.interp_;
}
const ::Property::CustomGeneratorValue&
VectorPropertyValue::_Internal::custom(const VectorPropertyValue* msg) {
  return *msg->_impl_.ValueType_.custom_;
}
const ::Property::VectorPropertyQuadratic&
VectorPropertyValue::_Internal::quadratic(const VectorPropertyValue* msg) {
  return *msg->_impl_.ValueType_.quadratic_;
}
const ::Property::ScalarPropertyValue&
VectorPropertyValue::_Internal::uniform(const VectorPropertyValue* msg) {
  return *msg->_impl_.ValueType_.uniform_;
}
const ::Property::VectorPropertyApproach&
VectorPropertyValue::_Internal::approach(const VectorPropertyValue* msg) {
  return *msg->_impl_.ValueType_.approach_;
}
void VectorPropertyValue::set_allocated_constant(::Common::Float4* constant) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_ValueType();
  if (constant) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(constant));
    if (message_arena != submessage_arena) {
      constant = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, constant, submessage_arena);
    }
    set_has_constant();
    _impl_.ValueType_.constant_ = constant;
  }
  // @@protoc_insertion_point(field_set_allocated:Property.VectorPropertyValue.constant)
}
void VectorPropertyValue::clear_constant() {
  if (_internal_has_constant()) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.ValueType_.constant_;
    }
    clear_has_ValueType();
  }
}
void VectorPropertyValue::set_allocated_ref(::Property::PropertyIdentifier* ref) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_ValueType();
  if (ref) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(ref);
    if (message_arena != submessage_arena) {
      ref = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ref, submessage_arena);
    }
    set_has_ref();
    _impl_.ValueType_.ref_ = ref;
  }
  // @@protoc_insertion_point(field_set_allocated:Property.VectorPropertyValue.ref)
}
void VectorPropertyValue::set_allocated_bychannel(::Property::VectorPerChannel* bychannel) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_ValueType();
  if (bychannel) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(bychannel);
    if (message_arena != submessage_arena) {
      bychannel = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, bychannel, submessage_arena);
    }
    set_has_bychannel();
    _impl_.ValueType_.bychannel_ = bychannel;
  }
  // @@protoc_insertion_point(field_set_allocated:Property.VectorPropertyValue.byChannel)
}
void VectorPropertyValue::set_allocated_keyframes(::Property::VectorPropertyKeyframed* keyframes) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_ValueType();
  if (keyframes) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(keyframes);
    if (message_arena != submessage_arena) {
      keyframes = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, keyframes, submessage_arena);
    }
    set_has_keyframes();
    _impl_.ValueType_.keyframes_ = keyframes;
  }
  // @@protoc_insertion_point(field_set_allocated:Property.VectorPropertyValue.keyframes)
}
void VectorPropertyValue::set_allocated_interp(::Property::VectorPropertyInterpolator* interp) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_ValueType();
  if (interp) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(interp);
    if (message_arena != submessage_arena) {
      interp = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, interp, submessage_arena);
    }
    set_has_interp();
    _impl_.ValueType_.interp_ = interp;
  }
  // @@protoc_insertion_point(field_set_allocated:Property.VectorPropertyValue.interp)
}
void VectorPropertyValue::set_allocated_custom(::Property::CustomGeneratorValue* custom) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_ValueType();
  if (custom) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(custom);
    if (message_arena != submessage_arena) {
      custom = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, custom, submessage_arena);
    }
    set_has_custom();
    _impl_.ValueType_.custom_ = custom;
  }
  // @@protoc_insertion_point(field_set_allocated:Property.VectorPropertyValue.custom)
}
void VectorPropertyValue::set_allocated_quadratic(::Property::VectorPropertyQuadratic* quadratic) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_ValueType();
  if (quadratic) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(quadratic);
    if (message_arena != submessage_arena) {
      quadratic = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, quadratic, submessage_arena);
    }
    set_has_quadratic();
    _impl_.ValueType_.quadratic_ = quadratic;
  }
  // @@protoc_insertion_point(field_set_allocated:Property.VectorPropertyValue.quadratic)
}
void VectorPropertyValue::set_allocated_uniform(::Property::ScalarPropertyValue* uniform) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_ValueType();
  if (uniform) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(uniform);
    if (message_arena != submessage_arena) {
      uniform = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, uniform, submessage_arena);
    }
    set_has_uniform();
    _impl_.ValueType_.uniform_ = uniform;
  }
  // @@protoc_insertion_point(field_set_allocated:Property.VectorPropertyValue.uniform)
}
void VectorPropertyValue::set_allocated_approach(::Property::VectorPropertyApproach* approach) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_ValueType();
  if (approach) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(approach);
    if (message_arena != submessage_arena) {
      approach = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, approach, submessage_arena);
    }
    set_has_approach();
    _impl_.ValueType_.approach_ = approach;
  }
  // @@protoc_insertion_point(field_set_allocated:Property.VectorPropertyValue.approach)
}
VectorPropertyValue::VectorPropertyValue(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.VectorPropertyValue)
}
VectorPropertyValue::VectorPropertyValue(const VectorPropertyValue& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  VectorPropertyValue* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ValueType_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_ValueType();
  switch (from.ValueType_case()) {
    case kConstant: {
      _this->_internal_mutable_constant()->::Common::Float4::MergeFrom(
          from._internal_constant());
      break;
    }
    case kRef: {
      _this->_internal_mutable_ref()->::Property::PropertyIdentifier::MergeFrom(
          from._internal_ref());
      break;
    }
    case kExpr: {
      _this->_internal_set_expr(from._internal_expr());
      break;
    }
    case kByChannel: {
      _this->_internal_mutable_bychannel()->::Property::VectorPerChannel::MergeFrom(
          from._internal_bychannel());
      break;
    }
    case kKeyframes: {
      _this->_internal_mutable_keyframes()->::Property::VectorPropertyKeyframed::MergeFrom(
          from._internal_keyframes());
      break;
    }
    case kUseDefault: {
      _this->_internal_set_usedefault(from._internal_usedefault());
      break;
    }
    case kInterp: {
      _this->_internal_mutable_interp()->::Property::VectorPropertyInterpolator::MergeFrom(
          from._internal_interp());
      break;
    }
    case kCustom: {
      _this->_internal_mutable_custom()->::Property::CustomGeneratorValue::MergeFrom(
          from._internal_custom());
      break;
    }
    case kQuadratic: {
      _this->_internal_mutable_quadratic()->::Property::VectorPropertyQuadratic::MergeFrom(
          from._internal_quadratic());
      break;
    }
    case kUniform: {
      _this->_internal_mutable_uniform()->::Property::ScalarPropertyValue::MergeFrom(
          from._internal_uniform());
      break;
    }
    case kApproach: {
      _this->_internal_mutable_approach()->::Property::VectorPropertyApproach::MergeFrom(
          from._internal_approach());
      break;
    }
    case VALUETYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:Property.VectorPropertyValue)
}

inline void VectorPropertyValue::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ValueType_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  clear_has_ValueType();
}

VectorPropertyValue::~VectorPropertyValue() {
  // @@protoc_insertion_point(destructor:Property.VectorPropertyValue)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void VectorPropertyValue::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_ValueType()) {
    clear_ValueType();
  }
}

void VectorPropertyValue::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void VectorPropertyValue::clear_ValueType() {
// @@protoc_insertion_point(one_of_clear_start:Property.VectorPropertyValue)
  switch (ValueType_case()) {
    case kConstant: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.ValueType_.constant_;
      }
      break;
    }
    case kRef: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.ValueType_.ref_;
      }
      break;
    }
    case kExpr: {
      _impl_.ValueType_.expr_.Destroy();
      break;
    }
    case kByChannel: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.ValueType_.bychannel_;
      }
      break;
    }
    case kKeyframes: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.ValueType_.keyframes_;
      }
      break;
    }
    case kUseDefault: {
      // No need to clear
      break;
    }
    case kInterp: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.ValueType_.interp_;
      }
      break;
    }
    case kCustom: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.ValueType_.custom_;
      }
      break;
    }
    case kQuadratic: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.ValueType_.quadratic_;
      }
      break;
    }
    case kUniform: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.ValueType_.uniform_;
      }
      break;
    }
    case kApproach: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.ValueType_.approach_;
      }
      break;
    }
    case VALUETYPE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = VALUETYPE_NOT_SET;
}


void VectorPropertyValue::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.VectorPropertyValue)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_ValueType();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* VectorPropertyValue::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Common.Float4 constant = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_constant(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.PropertyIdentifier ref = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_ref(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string expr = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_expr();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "Property.VectorPropertyValue.expr"));
        } else
          goto handle_unusual;
        continue;
      // .Property.VectorPerChannel byChannel = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_bychannel(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.VectorPropertyKeyframed keyframes = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_keyframes(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool useDefault = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _internal_set_usedefault(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.VectorPropertyInterpolator interp = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_interp(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.CustomGeneratorValue custom = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_custom(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.VectorPropertyQuadratic quadratic = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_quadratic(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.ScalarPropertyValue uniform = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 98)) {
          ptr = ctx->ParseMessage(_internal_mutable_uniform(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.VectorPropertyApproach approach = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_approach(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* VectorPropertyValue::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.VectorPropertyValue)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Common.Float4 constant = 1;
  if (_internal_has_constant()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::constant(this),
        _Internal::constant(this).GetCachedSize(), target, stream);
  }

  // .Property.PropertyIdentifier ref = 2;
  if (_internal_has_ref()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::ref(this),
        _Internal::ref(this).GetCachedSize(), target, stream);
  }

  // string expr = 3;
  if (_internal_has_expr()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_expr().data(), static_cast<int>(this->_internal_expr().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Property.VectorPropertyValue.expr");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_expr(), target);
  }

  // .Property.VectorPerChannel byChannel = 4;
  if (_internal_has_bychannel()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::bychannel(this),
        _Internal::bychannel(this).GetCachedSize(), target, stream);
  }

  // .Property.VectorPropertyKeyframed keyframes = 5;
  if (_internal_has_keyframes()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::keyframes(this),
        _Internal::keyframes(this).GetCachedSize(), target, stream);
  }

  // bool useDefault = 6;
  if (_internal_has_usedefault()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(6, this->_internal_usedefault(), target);
  }

  // .Property.VectorPropertyInterpolator interp = 9;
  if (_internal_has_interp()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(9, _Internal::interp(this),
        _Internal::interp(this).GetCachedSize(), target, stream);
  }

  // .Property.CustomGeneratorValue custom = 10;
  if (_internal_has_custom()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(10, _Internal::custom(this),
        _Internal::custom(this).GetCachedSize(), target, stream);
  }

  // .Property.VectorPropertyQuadratic quadratic = 11;
  if (_internal_has_quadratic()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(11, _Internal::quadratic(this),
        _Internal::quadratic(this).GetCachedSize(), target, stream);
  }

  // .Property.ScalarPropertyValue uniform = 12;
  if (_internal_has_uniform()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(12, _Internal::uniform(this),
        _Internal::uniform(this).GetCachedSize(), target, stream);
  }

  // .Property.VectorPropertyApproach approach = 13;
  if (_internal_has_approach()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(13, _Internal::approach(this),
        _Internal::approach(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.VectorPropertyValue)
  return target;
}

size_t VectorPropertyValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.VectorPropertyValue)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (ValueType_case()) {
    // .Common.Float4 constant = 1;
    case kConstant: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.ValueType_.constant_);
      break;
    }
    // .Property.PropertyIdentifier ref = 2;
    case kRef: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.ValueType_.ref_);
      break;
    }
    // string expr = 3;
    case kExpr: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_expr());
      break;
    }
    // .Property.VectorPerChannel byChannel = 4;
    case kByChannel: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.ValueType_.bychannel_);
      break;
    }
    // .Property.VectorPropertyKeyframed keyframes = 5;
    case kKeyframes: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.ValueType_.keyframes_);
      break;
    }
    // bool useDefault = 6;
    case kUseDefault: {
      total_size += 1 + 1;
      break;
    }
    // .Property.VectorPropertyInterpolator interp = 9;
    case kInterp: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.ValueType_.interp_);
      break;
    }
    // .Property.CustomGeneratorValue custom = 10;
    case kCustom: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.ValueType_.custom_);
      break;
    }
    // .Property.VectorPropertyQuadratic quadratic = 11;
    case kQuadratic: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.ValueType_.quadratic_);
      break;
    }
    // .Property.ScalarPropertyValue uniform = 12;
    case kUniform: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.ValueType_.uniform_);
      break;
    }
    // .Property.VectorPropertyApproach approach = 13;
    case kApproach: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.ValueType_.approach_);
      break;
    }
    case VALUETYPE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData VectorPropertyValue::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    VectorPropertyValue::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*VectorPropertyValue::GetClassData() const { return &_class_data_; }


void VectorPropertyValue::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<VectorPropertyValue*>(&to_msg);
  auto& from = static_cast<const VectorPropertyValue&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.VectorPropertyValue)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.ValueType_case()) {
    case kConstant: {
      _this->_internal_mutable_constant()->::Common::Float4::MergeFrom(
          from._internal_constant());
      break;
    }
    case kRef: {
      _this->_internal_mutable_ref()->::Property::PropertyIdentifier::MergeFrom(
          from._internal_ref());
      break;
    }
    case kExpr: {
      _this->_internal_set_expr(from._internal_expr());
      break;
    }
    case kByChannel: {
      _this->_internal_mutable_bychannel()->::Property::VectorPerChannel::MergeFrom(
          from._internal_bychannel());
      break;
    }
    case kKeyframes: {
      _this->_internal_mutable_keyframes()->::Property::VectorPropertyKeyframed::MergeFrom(
          from._internal_keyframes());
      break;
    }
    case kUseDefault: {
      _this->_internal_set_usedefault(from._internal_usedefault());
      break;
    }
    case kInterp: {
      _this->_internal_mutable_interp()->::Property::VectorPropertyInterpolator::MergeFrom(
          from._internal_interp());
      break;
    }
    case kCustom: {
      _this->_internal_mutable_custom()->::Property::CustomGeneratorValue::MergeFrom(
          from._internal_custom());
      break;
    }
    case kQuadratic: {
      _this->_internal_mutable_quadratic()->::Property::VectorPropertyQuadratic::MergeFrom(
          from._internal_quadratic());
      break;
    }
    case kUniform: {
      _this->_internal_mutable_uniform()->::Property::ScalarPropertyValue::MergeFrom(
          from._internal_uniform());
      break;
    }
    case kApproach: {
      _this->_internal_mutable_approach()->::Property::VectorPropertyApproach::MergeFrom(
          from._internal_approach());
      break;
    }
    case VALUETYPE_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void VectorPropertyValue::CopyFrom(const VectorPropertyValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.VectorPropertyValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VectorPropertyValue::IsInitialized() const {
  return true;
}

void VectorPropertyValue::InternalSwap(VectorPropertyValue* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.ValueType_, other->_impl_.ValueType_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata VectorPropertyValue::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[35]);
}

// ===================================================================

class VectorPropertyInterpolator::_Internal {
 public:
  static const ::Property::ScalarPropertyValue& t(const VectorPropertyInterpolator* msg);
  static const ::Property::VectorPropertyValue& from(const VectorPropertyInterpolator* msg);
  static const ::Property::VectorPropertyValue& to(const VectorPropertyInterpolator* msg);
  static const ::Property::Interpolation& by(const VectorPropertyInterpolator* msg);
};

const ::Property::ScalarPropertyValue&
VectorPropertyInterpolator::_Internal::t(const VectorPropertyInterpolator* msg) {
  return *msg->_impl_.t_;
}
const ::Property::VectorPropertyValue&
VectorPropertyInterpolator::_Internal::from(const VectorPropertyInterpolator* msg) {
  return *msg->_impl_.from_;
}
const ::Property::VectorPropertyValue&
VectorPropertyInterpolator::_Internal::to(const VectorPropertyInterpolator* msg) {
  return *msg->_impl_.to_;
}
const ::Property::Interpolation&
VectorPropertyInterpolator::_Internal::by(const VectorPropertyInterpolator* msg) {
  return *msg->_impl_.by_;
}
VectorPropertyInterpolator::VectorPropertyInterpolator(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.VectorPropertyInterpolator)
}
VectorPropertyInterpolator::VectorPropertyInterpolator(const VectorPropertyInterpolator& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  VectorPropertyInterpolator* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.from_){nullptr}
    , decltype(_impl_.to_){nullptr}
    , decltype(_impl_.by_){nullptr}
    , decltype(_impl_.t_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_from()) {
    _this->_impl_.from_ = new ::Property::VectorPropertyValue(*from._impl_.from_);
  }
  if (from._internal_has_to()) {
    _this->_impl_.to_ = new ::Property::VectorPropertyValue(*from._impl_.to_);
  }
  if (from._internal_has_by()) {
    _this->_impl_.by_ = new ::Property::Interpolation(*from._impl_.by_);
  }
  if (from._internal_has_t()) {
    _this->_impl_.t_ = new ::Property::ScalarPropertyValue(*from._impl_.t_);
  }
  // @@protoc_insertion_point(copy_constructor:Property.VectorPropertyInterpolator)
}

inline void VectorPropertyInterpolator::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.from_){nullptr}
    , decltype(_impl_.to_){nullptr}
    , decltype(_impl_.by_){nullptr}
    , decltype(_impl_.t_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

VectorPropertyInterpolator::~VectorPropertyInterpolator() {
  // @@protoc_insertion_point(destructor:Property.VectorPropertyInterpolator)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void VectorPropertyInterpolator::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.from_;
  if (this != internal_default_instance()) delete _impl_.to_;
  if (this != internal_default_instance()) delete _impl_.by_;
  if (this != internal_default_instance()) delete _impl_.t_;
}

void VectorPropertyInterpolator::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void VectorPropertyInterpolator::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.VectorPropertyInterpolator)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.from_ != nullptr) {
    delete _impl_.from_;
  }
  _impl_.from_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.to_ != nullptr) {
    delete _impl_.to_;
  }
  _impl_.to_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.by_ != nullptr) {
    delete _impl_.by_;
  }
  _impl_.by_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.t_ != nullptr) {
    delete _impl_.t_;
  }
  _impl_.t_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* VectorPropertyInterpolator::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Property.VectorPropertyValue from = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_from(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.VectorPropertyValue to = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_to(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.Interpolation by = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_by(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.ScalarPropertyValue t = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_t(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* VectorPropertyInterpolator::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.VectorPropertyInterpolator)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Property.VectorPropertyValue from = 1;
  if (this->_internal_has_from()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::from(this),
        _Internal::from(this).GetCachedSize(), target, stream);
  }

  // .Property.VectorPropertyValue to = 2;
  if (this->_internal_has_to()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::to(this),
        _Internal::to(this).GetCachedSize(), target, stream);
  }

  // .Property.Interpolation by = 3;
  if (this->_internal_has_by()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::by(this),
        _Internal::by(this).GetCachedSize(), target, stream);
  }

  // .Property.ScalarPropertyValue t = 4;
  if (this->_internal_has_t()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::t(this),
        _Internal::t(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.VectorPropertyInterpolator)
  return target;
}

size_t VectorPropertyInterpolator::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.VectorPropertyInterpolator)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Property.VectorPropertyValue from = 1;
  if (this->_internal_has_from()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.from_);
  }

  // .Property.VectorPropertyValue to = 2;
  if (this->_internal_has_to()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.to_);
  }

  // .Property.Interpolation by = 3;
  if (this->_internal_has_by()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.by_);
  }

  // .Property.ScalarPropertyValue t = 4;
  if (this->_internal_has_t()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.t_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData VectorPropertyInterpolator::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    VectorPropertyInterpolator::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*VectorPropertyInterpolator::GetClassData() const { return &_class_data_; }


void VectorPropertyInterpolator::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<VectorPropertyInterpolator*>(&to_msg);
  auto& from = static_cast<const VectorPropertyInterpolator&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.VectorPropertyInterpolator)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_from()) {
    _this->_internal_mutable_from()->::Property::VectorPropertyValue::MergeFrom(
        from._internal_from());
  }
  if (from._internal_has_to()) {
    _this->_internal_mutable_to()->::Property::VectorPropertyValue::MergeFrom(
        from._internal_to());
  }
  if (from._internal_has_by()) {
    _this->_internal_mutable_by()->::Property::Interpolation::MergeFrom(
        from._internal_by());
  }
  if (from._internal_has_t()) {
    _this->_internal_mutable_t()->::Property::ScalarPropertyValue::MergeFrom(
        from._internal_t());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void VectorPropertyInterpolator::CopyFrom(const VectorPropertyInterpolator& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.VectorPropertyInterpolator)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VectorPropertyInterpolator::IsInitialized() const {
  return true;
}

void VectorPropertyInterpolator::InternalSwap(VectorPropertyInterpolator* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(VectorPropertyInterpolator, _impl_.t_)
      + sizeof(VectorPropertyInterpolator::_impl_.t_)
      - PROTOBUF_FIELD_OFFSET(VectorPropertyInterpolator, _impl_.from_)>(
          reinterpret_cast<char*>(&_impl_.from_),
          reinterpret_cast<char*>(&other->_impl_.from_));
}

::PROTOBUF_NAMESPACE_ID::Metadata VectorPropertyInterpolator::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[36]);
}

// ===================================================================

class VectorPerChannel::_Internal {
 public:
  using HasBits = decltype(std::declval<VectorPerChannel>()._impl_._has_bits_);
  static const ::Property::ScalarPropertyValue& x(const VectorPerChannel* msg);
  static const ::Property::ScalarPropertyValue& y(const VectorPerChannel* msg);
  static const ::Property::ScalarPropertyValue& z(const VectorPerChannel* msg);
  static const ::Property::ScalarPropertyValue& w(const VectorPerChannel* msg);
  static void set_has_w(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::Property::ScalarPropertyValue&
VectorPerChannel::_Internal::x(const VectorPerChannel* msg) {
  return *msg->_impl_.x_;
}
const ::Property::ScalarPropertyValue&
VectorPerChannel::_Internal::y(const VectorPerChannel* msg) {
  return *msg->_impl_.y_;
}
const ::Property::ScalarPropertyValue&
VectorPerChannel::_Internal::z(const VectorPerChannel* msg) {
  return *msg->_impl_.z_;
}
const ::Property::ScalarPropertyValue&
VectorPerChannel::_Internal::w(const VectorPerChannel* msg) {
  return *msg->_impl_.w_;
}
VectorPerChannel::VectorPerChannel(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.VectorPerChannel)
}
VectorPerChannel::VectorPerChannel(const VectorPerChannel& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  VectorPerChannel* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.x_){nullptr}
    , decltype(_impl_.y_){nullptr}
    , decltype(_impl_.z_){nullptr}
    , decltype(_impl_.w_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_x()) {
    _this->_impl_.x_ = new ::Property::ScalarPropertyValue(*from._impl_.x_);
  }
  if (from._internal_has_y()) {
    _this->_impl_.y_ = new ::Property::ScalarPropertyValue(*from._impl_.y_);
  }
  if (from._internal_has_z()) {
    _this->_impl_.z_ = new ::Property::ScalarPropertyValue(*from._impl_.z_);
  }
  if (from._internal_has_w()) {
    _this->_impl_.w_ = new ::Property::ScalarPropertyValue(*from._impl_.w_);
  }
  // @@protoc_insertion_point(copy_constructor:Property.VectorPerChannel)
}

inline void VectorPerChannel::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.x_){nullptr}
    , decltype(_impl_.y_){nullptr}
    , decltype(_impl_.z_){nullptr}
    , decltype(_impl_.w_){nullptr}
  };
}

VectorPerChannel::~VectorPerChannel() {
  // @@protoc_insertion_point(destructor:Property.VectorPerChannel)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void VectorPerChannel::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.x_;
  if (this != internal_default_instance()) delete _impl_.y_;
  if (this != internal_default_instance()) delete _impl_.z_;
  if (this != internal_default_instance()) delete _impl_.w_;
}

void VectorPerChannel::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void VectorPerChannel::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.VectorPerChannel)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.x_ != nullptr) {
    delete _impl_.x_;
  }
  _impl_.x_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.y_ != nullptr) {
    delete _impl_.y_;
  }
  _impl_.y_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.z_ != nullptr) {
    delete _impl_.z_;
  }
  _impl_.z_ = nullptr;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.w_ != nullptr);
    _impl_.w_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* VectorPerChannel::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Property.ScalarPropertyValue x = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_x(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.ScalarPropertyValue y = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_y(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.ScalarPropertyValue z = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_z(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .Property.ScalarPropertyValue w = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_w(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* VectorPerChannel::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.VectorPerChannel)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Property.ScalarPropertyValue x = 1;
  if (this->_internal_has_x()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::x(this),
        _Internal::x(this).GetCachedSize(), target, stream);
  }

  // .Property.ScalarPropertyValue y = 2;
  if (this->_internal_has_y()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::y(this),
        _Internal::y(this).GetCachedSize(), target, stream);
  }

  // .Property.ScalarPropertyValue z = 3;
  if (this->_internal_has_z()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::z(this),
        _Internal::z(this).GetCachedSize(), target, stream);
  }

  // optional .Property.ScalarPropertyValue w = 4;
  if (_internal_has_w()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::w(this),
        _Internal::w(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.VectorPerChannel)
  return target;
}

size_t VectorPerChannel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.VectorPerChannel)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Property.ScalarPropertyValue x = 1;
  if (this->_internal_has_x()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.x_);
  }

  // .Property.ScalarPropertyValue y = 2;
  if (this->_internal_has_y()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.y_);
  }

  // .Property.ScalarPropertyValue z = 3;
  if (this->_internal_has_z()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.z_);
  }

  // optional .Property.ScalarPropertyValue w = 4;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.w_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData VectorPerChannel::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    VectorPerChannel::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*VectorPerChannel::GetClassData() const { return &_class_data_; }


void VectorPerChannel::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<VectorPerChannel*>(&to_msg);
  auto& from = static_cast<const VectorPerChannel&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.VectorPerChannel)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_x()) {
    _this->_internal_mutable_x()->::Property::ScalarPropertyValue::MergeFrom(
        from._internal_x());
  }
  if (from._internal_has_y()) {
    _this->_internal_mutable_y()->::Property::ScalarPropertyValue::MergeFrom(
        from._internal_y());
  }
  if (from._internal_has_z()) {
    _this->_internal_mutable_z()->::Property::ScalarPropertyValue::MergeFrom(
        from._internal_z());
  }
  if (from._internal_has_w()) {
    _this->_internal_mutable_w()->::Property::ScalarPropertyValue::MergeFrom(
        from._internal_w());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void VectorPerChannel::CopyFrom(const VectorPerChannel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.VectorPerChannel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VectorPerChannel::IsInitialized() const {
  return true;
}

void VectorPerChannel::InternalSwap(VectorPerChannel* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(VectorPerChannel, _impl_.w_)
      + sizeof(VectorPerChannel::_impl_.w_)
      - PROTOBUF_FIELD_OFFSET(VectorPerChannel, _impl_.x_)>(
          reinterpret_cast<char*>(&_impl_.x_),
          reinterpret_cast<char*>(&other->_impl_.x_));
}

::PROTOBUF_NAMESPACE_ID::Metadata VectorPerChannel::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[37]);
}

// ===================================================================

class VectorPropertyQuadratic::_Internal {
 public:
  using HasBits = decltype(std::declval<VectorPropertyQuadratic>()._impl_._has_bits_);
  static const ::Property::VectorPropertyValue& p(const VectorPropertyQuadratic* msg);
  static const ::Property::VectorPropertyValue& v(const VectorPropertyQuadratic* msg);
  static const ::Property::VectorPropertyValue& a(const VectorPropertyQuadratic* msg);
  static void set_has_a(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::Property::ScalarPropertyValue& t(const VectorPropertyQuadratic* msg);
  static void set_has_t(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::Property::VectorPropertyValue&
VectorPropertyQuadratic::_Internal::p(const VectorPropertyQuadratic* msg) {
  return *msg->_impl_.p_;
}
const ::Property::VectorPropertyValue&
VectorPropertyQuadratic::_Internal::v(const VectorPropertyQuadratic* msg) {
  return *msg->_impl_.v_;
}
const ::Property::VectorPropertyValue&
VectorPropertyQuadratic::_Internal::a(const VectorPropertyQuadratic* msg) {
  return *msg->_impl_.a_;
}
const ::Property::ScalarPropertyValue&
VectorPropertyQuadratic::_Internal::t(const VectorPropertyQuadratic* msg) {
  return *msg->_impl_.t_;
}
VectorPropertyQuadratic::VectorPropertyQuadratic(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.VectorPropertyQuadratic)
}
VectorPropertyQuadratic::VectorPropertyQuadratic(const VectorPropertyQuadratic& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  VectorPropertyQuadratic* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.p_){nullptr}
    , decltype(_impl_.v_){nullptr}
    , decltype(_impl_.a_){nullptr}
    , decltype(_impl_.t_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_p()) {
    _this->_impl_.p_ = new ::Property::VectorPropertyValue(*from._impl_.p_);
  }
  if (from._internal_has_v()) {
    _this->_impl_.v_ = new ::Property::VectorPropertyValue(*from._impl_.v_);
  }
  if (from._internal_has_a()) {
    _this->_impl_.a_ = new ::Property::VectorPropertyValue(*from._impl_.a_);
  }
  if (from._internal_has_t()) {
    _this->_impl_.t_ = new ::Property::ScalarPropertyValue(*from._impl_.t_);
  }
  // @@protoc_insertion_point(copy_constructor:Property.VectorPropertyQuadratic)
}

inline void VectorPropertyQuadratic::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.p_){nullptr}
    , decltype(_impl_.v_){nullptr}
    , decltype(_impl_.a_){nullptr}
    , decltype(_impl_.t_){nullptr}
  };
}

VectorPropertyQuadratic::~VectorPropertyQuadratic() {
  // @@protoc_insertion_point(destructor:Property.VectorPropertyQuadratic)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void VectorPropertyQuadratic::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.p_;
  if (this != internal_default_instance()) delete _impl_.v_;
  if (this != internal_default_instance()) delete _impl_.a_;
  if (this != internal_default_instance()) delete _impl_.t_;
}

void VectorPropertyQuadratic::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void VectorPropertyQuadratic::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.VectorPropertyQuadratic)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.p_ != nullptr) {
    delete _impl_.p_;
  }
  _impl_.p_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.v_ != nullptr) {
    delete _impl_.v_;
  }
  _impl_.v_ = nullptr;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.a_ != nullptr);
      _impl_.a_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.t_ != nullptr);
      _impl_.t_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* VectorPropertyQuadratic::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Property.VectorPropertyValue p = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_p(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.VectorPropertyValue v = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_v(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .Property.VectorPropertyValue a = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_a(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .Property.ScalarPropertyValue t = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_t(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* VectorPropertyQuadratic::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.VectorPropertyQuadratic)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Property.VectorPropertyValue p = 1;
  if (this->_internal_has_p()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::p(this),
        _Internal::p(this).GetCachedSize(), target, stream);
  }

  // .Property.VectorPropertyValue v = 2;
  if (this->_internal_has_v()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::v(this),
        _Internal::v(this).GetCachedSize(), target, stream);
  }

  // optional .Property.VectorPropertyValue a = 3;
  if (_internal_has_a()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::a(this),
        _Internal::a(this).GetCachedSize(), target, stream);
  }

  // optional .Property.ScalarPropertyValue t = 4;
  if (_internal_has_t()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::t(this),
        _Internal::t(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.VectorPropertyQuadratic)
  return target;
}

size_t VectorPropertyQuadratic::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.VectorPropertyQuadratic)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Property.VectorPropertyValue p = 1;
  if (this->_internal_has_p()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.p_);
  }

  // .Property.VectorPropertyValue v = 2;
  if (this->_internal_has_v()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.v_);
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .Property.VectorPropertyValue a = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.a_);
    }

    // optional .Property.ScalarPropertyValue t = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.t_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData VectorPropertyQuadratic::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    VectorPropertyQuadratic::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*VectorPropertyQuadratic::GetClassData() const { return &_class_data_; }


void VectorPropertyQuadratic::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<VectorPropertyQuadratic*>(&to_msg);
  auto& from = static_cast<const VectorPropertyQuadratic&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.VectorPropertyQuadratic)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_p()) {
    _this->_internal_mutable_p()->::Property::VectorPropertyValue::MergeFrom(
        from._internal_p());
  }
  if (from._internal_has_v()) {
    _this->_internal_mutable_v()->::Property::VectorPropertyValue::MergeFrom(
        from._internal_v());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_a()->::Property::VectorPropertyValue::MergeFrom(
          from._internal_a());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_t()->::Property::ScalarPropertyValue::MergeFrom(
          from._internal_t());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void VectorPropertyQuadratic::CopyFrom(const VectorPropertyQuadratic& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.VectorPropertyQuadratic)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VectorPropertyQuadratic::IsInitialized() const {
  return true;
}

void VectorPropertyQuadratic::InternalSwap(VectorPropertyQuadratic* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(VectorPropertyQuadratic, _impl_.t_)
      + sizeof(VectorPropertyQuadratic::_impl_.t_)
      - PROTOBUF_FIELD_OFFSET(VectorPropertyQuadratic, _impl_.p_)>(
          reinterpret_cast<char*>(&_impl_.p_),
          reinterpret_cast<char*>(&other->_impl_.p_));
}

::PROTOBUF_NAMESPACE_ID::Metadata VectorPropertyQuadratic::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[38]);
}

// ===================================================================

class VectorPropertyApproach::_Internal {
 public:
  static const ::Property::ScalarPropertyValue& t(const VectorPropertyApproach* msg);
  static const ::Property::VectorPropertyValue& to(const VectorPropertyApproach* msg);
  static const ::Property::ScalarPropertyValue& timetohalf(const VectorPropertyApproach* msg);
  static const ::Property::VectorPropertyValue& start(const VectorPropertyApproach* msg);
};

const ::Property::ScalarPropertyValue&
VectorPropertyApproach::_Internal::t(const VectorPropertyApproach* msg) {
  return *msg->_impl_.t_;
}
const ::Property::VectorPropertyValue&
VectorPropertyApproach::_Internal::to(const VectorPropertyApproach* msg) {
  return *msg->_impl_.to_;
}
const ::Property::ScalarPropertyValue&
VectorPropertyApproach::_Internal::timetohalf(const VectorPropertyApproach* msg) {
  return *msg->_impl_.timetohalf_;
}
const ::Property::VectorPropertyValue&
VectorPropertyApproach::_Internal::start(const VectorPropertyApproach* msg) {
  return *msg->_impl_.start_;
}
VectorPropertyApproach::VectorPropertyApproach(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.VectorPropertyApproach)
}
VectorPropertyApproach::VectorPropertyApproach(const VectorPropertyApproach& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  VectorPropertyApproach* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.t_){nullptr}
    , decltype(_impl_.to_){nullptr}
    , decltype(_impl_.timetohalf_){nullptr}
    , decltype(_impl_.start_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_t()) {
    _this->_impl_.t_ = new ::Property::ScalarPropertyValue(*from._impl_.t_);
  }
  if (from._internal_has_to()) {
    _this->_impl_.to_ = new ::Property::VectorPropertyValue(*from._impl_.to_);
  }
  if (from._internal_has_timetohalf()) {
    _this->_impl_.timetohalf_ = new ::Property::ScalarPropertyValue(*from._impl_.timetohalf_);
  }
  if (from._internal_has_start()) {
    _this->_impl_.start_ = new ::Property::VectorPropertyValue(*from._impl_.start_);
  }
  // @@protoc_insertion_point(copy_constructor:Property.VectorPropertyApproach)
}

inline void VectorPropertyApproach::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.t_){nullptr}
    , decltype(_impl_.to_){nullptr}
    , decltype(_impl_.timetohalf_){nullptr}
    , decltype(_impl_.start_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

VectorPropertyApproach::~VectorPropertyApproach() {
  // @@protoc_insertion_point(destructor:Property.VectorPropertyApproach)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void VectorPropertyApproach::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.t_;
  if (this != internal_default_instance()) delete _impl_.to_;
  if (this != internal_default_instance()) delete _impl_.timetohalf_;
  if (this != internal_default_instance()) delete _impl_.start_;
}

void VectorPropertyApproach::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void VectorPropertyApproach::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.VectorPropertyApproach)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.t_ != nullptr) {
    delete _impl_.t_;
  }
  _impl_.t_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.to_ != nullptr) {
    delete _impl_.to_;
  }
  _impl_.to_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.timetohalf_ != nullptr) {
    delete _impl_.timetohalf_;
  }
  _impl_.timetohalf_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.start_ != nullptr) {
    delete _impl_.start_;
  }
  _impl_.start_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* VectorPropertyApproach::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Property.ScalarPropertyValue t = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_t(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.VectorPropertyValue to = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_to(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.ScalarPropertyValue timeToHalf = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_timetohalf(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.VectorPropertyValue start = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_start(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* VectorPropertyApproach::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.VectorPropertyApproach)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Property.ScalarPropertyValue t = 1;
  if (this->_internal_has_t()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::t(this),
        _Internal::t(this).GetCachedSize(), target, stream);
  }

  // .Property.VectorPropertyValue to = 2;
  if (this->_internal_has_to()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::to(this),
        _Internal::to(this).GetCachedSize(), target, stream);
  }

  // .Property.ScalarPropertyValue timeToHalf = 3;
  if (this->_internal_has_timetohalf()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::timetohalf(this),
        _Internal::timetohalf(this).GetCachedSize(), target, stream);
  }

  // .Property.VectorPropertyValue start = 4;
  if (this->_internal_has_start()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::start(this),
        _Internal::start(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.VectorPropertyApproach)
  return target;
}

size_t VectorPropertyApproach::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.VectorPropertyApproach)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Property.ScalarPropertyValue t = 1;
  if (this->_internal_has_t()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.t_);
  }

  // .Property.VectorPropertyValue to = 2;
  if (this->_internal_has_to()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.to_);
  }

  // .Property.ScalarPropertyValue timeToHalf = 3;
  if (this->_internal_has_timetohalf()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.timetohalf_);
  }

  // .Property.VectorPropertyValue start = 4;
  if (this->_internal_has_start()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.start_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData VectorPropertyApproach::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    VectorPropertyApproach::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*VectorPropertyApproach::GetClassData() const { return &_class_data_; }


void VectorPropertyApproach::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<VectorPropertyApproach*>(&to_msg);
  auto& from = static_cast<const VectorPropertyApproach&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.VectorPropertyApproach)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_t()) {
    _this->_internal_mutable_t()->::Property::ScalarPropertyValue::MergeFrom(
        from._internal_t());
  }
  if (from._internal_has_to()) {
    _this->_internal_mutable_to()->::Property::VectorPropertyValue::MergeFrom(
        from._internal_to());
  }
  if (from._internal_has_timetohalf()) {
    _this->_internal_mutable_timetohalf()->::Property::ScalarPropertyValue::MergeFrom(
        from._internal_timetohalf());
  }
  if (from._internal_has_start()) {
    _this->_internal_mutable_start()->::Property::VectorPropertyValue::MergeFrom(
        from._internal_start());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void VectorPropertyApproach::CopyFrom(const VectorPropertyApproach& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.VectorPropertyApproach)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VectorPropertyApproach::IsInitialized() const {
  return true;
}

void VectorPropertyApproach::InternalSwap(VectorPropertyApproach* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(VectorPropertyApproach, _impl_.start_)
      + sizeof(VectorPropertyApproach::_impl_.start_)
      - PROTOBUF_FIELD_OFFSET(VectorPropertyApproach, _impl_.t_)>(
          reinterpret_cast<char*>(&_impl_.t_),
          reinterpret_cast<char*>(&other->_impl_.t_));
}

::PROTOBUF_NAMESPACE_ID::Metadata VectorPropertyApproach::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[39]);
}

// ===================================================================

class VectorPropertyKeyframed_VectorKeyframe::_Internal {
 public:
  using HasBits = decltype(std::declval<VectorPropertyKeyframed_VectorKeyframe>()._impl_._has_bits_);
  static const ::Property::VectorPropertyValue& val(const VectorPropertyKeyframed_VectorKeyframe* msg);
  static const ::Common::Float4& tangentin(const VectorPropertyKeyframed_VectorKeyframe* msg);
  static void set_has_tangentin(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::Common::Float4& tangentout(const VectorPropertyKeyframed_VectorKeyframe* msg);
  static void set_has_tangentout(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::Property::VectorPropertyValue&
VectorPropertyKeyframed_VectorKeyframe::_Internal::val(const VectorPropertyKeyframed_VectorKeyframe* msg) {
  return *msg->_impl_.val_;
}
const ::Common::Float4&
VectorPropertyKeyframed_VectorKeyframe::_Internal::tangentin(const VectorPropertyKeyframed_VectorKeyframe* msg) {
  return *msg->_impl_.tangentin_;
}
const ::Common::Float4&
VectorPropertyKeyframed_VectorKeyframe::_Internal::tangentout(const VectorPropertyKeyframed_VectorKeyframe* msg) {
  return *msg->_impl_.tangentout_;
}
void VectorPropertyKeyframed_VectorKeyframe::clear_tangentin() {
  if (_impl_.tangentin_ != nullptr) _impl_.tangentin_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void VectorPropertyKeyframed_VectorKeyframe::clear_tangentout() {
  if (_impl_.tangentout_ != nullptr) _impl_.tangentout_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
VectorPropertyKeyframed_VectorKeyframe::VectorPropertyKeyframed_VectorKeyframe(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.VectorPropertyKeyframed.VectorKeyframe)
}
VectorPropertyKeyframed_VectorKeyframe::VectorPropertyKeyframed_VectorKeyframe(const VectorPropertyKeyframed_VectorKeyframe& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  VectorPropertyKeyframed_VectorKeyframe* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.val_){nullptr}
    , decltype(_impl_.tangentin_){nullptr}
    , decltype(_impl_.tangentout_){nullptr}
    , decltype(_impl_.t_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_val()) {
    _this->_impl_.val_ = new ::Property::VectorPropertyValue(*from._impl_.val_);
  }
  if (from._internal_has_tangentin()) {
    _this->_impl_.tangentin_ = new ::Common::Float4(*from._impl_.tangentin_);
  }
  if (from._internal_has_tangentout()) {
    _this->_impl_.tangentout_ = new ::Common::Float4(*from._impl_.tangentout_);
  }
  _this->_impl_.t_ = from._impl_.t_;
  // @@protoc_insertion_point(copy_constructor:Property.VectorPropertyKeyframed.VectorKeyframe)
}

inline void VectorPropertyKeyframed_VectorKeyframe::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.val_){nullptr}
    , decltype(_impl_.tangentin_){nullptr}
    , decltype(_impl_.tangentout_){nullptr}
    , decltype(_impl_.t_){0}
  };
}

VectorPropertyKeyframed_VectorKeyframe::~VectorPropertyKeyframed_VectorKeyframe() {
  // @@protoc_insertion_point(destructor:Property.VectorPropertyKeyframed.VectorKeyframe)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void VectorPropertyKeyframed_VectorKeyframe::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.val_;
  if (this != internal_default_instance()) delete _impl_.tangentin_;
  if (this != internal_default_instance()) delete _impl_.tangentout_;
}

void VectorPropertyKeyframed_VectorKeyframe::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void VectorPropertyKeyframed_VectorKeyframe::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.VectorPropertyKeyframed.VectorKeyframe)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.val_ != nullptr) {
    delete _impl_.val_;
  }
  _impl_.val_ = nullptr;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.tangentin_ != nullptr);
      _impl_.tangentin_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.tangentout_ != nullptr);
      _impl_.tangentout_->Clear();
    }
  }
  _impl_.t_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* VectorPropertyKeyframed_VectorKeyframe::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // float t = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 13)) {
          _impl_.t_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // .Property.VectorPropertyValue val = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_val(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .Common.Float4 tangentIn = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_tangentin(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .Common.Float4 tangentOut = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_tangentout(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* VectorPropertyKeyframed_VectorKeyframe::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.VectorPropertyKeyframed.VectorKeyframe)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // float t = 1;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_t = this->_internal_t();
  uint32_t raw_t;
  memcpy(&raw_t, &tmp_t, sizeof(tmp_t));
  if (raw_t != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(1, this->_internal_t(), target);
  }

  // .Property.VectorPropertyValue val = 2;
  if (this->_internal_has_val()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::val(this),
        _Internal::val(this).GetCachedSize(), target, stream);
  }

  // optional .Common.Float4 tangentIn = 3;
  if (_internal_has_tangentin()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::tangentin(this),
        _Internal::tangentin(this).GetCachedSize(), target, stream);
  }

  // optional .Common.Float4 tangentOut = 4;
  if (_internal_has_tangentout()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::tangentout(this),
        _Internal::tangentout(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.VectorPropertyKeyframed.VectorKeyframe)
  return target;
}

size_t VectorPropertyKeyframed_VectorKeyframe::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.VectorPropertyKeyframed.VectorKeyframe)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Property.VectorPropertyValue val = 2;
  if (this->_internal_has_val()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.val_);
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .Common.Float4 tangentIn = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.tangentin_);
    }

    // optional .Common.Float4 tangentOut = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.tangentout_);
    }

  }
  // float t = 1;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_t = this->_internal_t();
  uint32_t raw_t;
  memcpy(&raw_t, &tmp_t, sizeof(tmp_t));
  if (raw_t != 0) {
    total_size += 1 + 4;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData VectorPropertyKeyframed_VectorKeyframe::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    VectorPropertyKeyframed_VectorKeyframe::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*VectorPropertyKeyframed_VectorKeyframe::GetClassData() const { return &_class_data_; }


void VectorPropertyKeyframed_VectorKeyframe::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<VectorPropertyKeyframed_VectorKeyframe*>(&to_msg);
  auto& from = static_cast<const VectorPropertyKeyframed_VectorKeyframe&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.VectorPropertyKeyframed.VectorKeyframe)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_val()) {
    _this->_internal_mutable_val()->::Property::VectorPropertyValue::MergeFrom(
        from._internal_val());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_tangentin()->::Common::Float4::MergeFrom(
          from._internal_tangentin());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_tangentout()->::Common::Float4::MergeFrom(
          from._internal_tangentout());
    }
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_t = from._internal_t();
  uint32_t raw_t;
  memcpy(&raw_t, &tmp_t, sizeof(tmp_t));
  if (raw_t != 0) {
    _this->_internal_set_t(from._internal_t());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void VectorPropertyKeyframed_VectorKeyframe::CopyFrom(const VectorPropertyKeyframed_VectorKeyframe& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.VectorPropertyKeyframed.VectorKeyframe)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VectorPropertyKeyframed_VectorKeyframe::IsInitialized() const {
  return true;
}

void VectorPropertyKeyframed_VectorKeyframe::InternalSwap(VectorPropertyKeyframed_VectorKeyframe* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(VectorPropertyKeyframed_VectorKeyframe, _impl_.t_)
      + sizeof(VectorPropertyKeyframed_VectorKeyframe::_impl_.t_)
      - PROTOBUF_FIELD_OFFSET(VectorPropertyKeyframed_VectorKeyframe, _impl_.val_)>(
          reinterpret_cast<char*>(&_impl_.val_),
          reinterpret_cast<char*>(&other->_impl_.val_));
}

::PROTOBUF_NAMESPACE_ID::Metadata VectorPropertyKeyframed_VectorKeyframe::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[40]);
}

// ===================================================================

class VectorPropertyKeyframed::_Internal {
 public:
  using HasBits = decltype(std::declval<VectorPropertyKeyframed>()._impl_._has_bits_);
  static const ::Property::ScalarPropertyValue& tsrc(const VectorPropertyKeyframed* msg);
  static void set_has_tsrc(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::Property::ScalarPropertyValue&
VectorPropertyKeyframed::_Internal::tsrc(const VectorPropertyKeyframed* msg) {
  return *msg->_impl_.tsrc_;
}
VectorPropertyKeyframed::VectorPropertyKeyframed(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.VectorPropertyKeyframed)
}
VectorPropertyKeyframed::VectorPropertyKeyframed(const VectorPropertyKeyframed& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  VectorPropertyKeyframed* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.keys_){from._impl_.keys_}
    , decltype(_impl_.tsrc_){nullptr}
    , decltype(_impl_.looping_){}
    , decltype(_impl_.tangentgen_){}
    , decltype(_impl_.interpolationmethod_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_tsrc()) {
    _this->_impl_.tsrc_ = new ::Property::ScalarPropertyValue(*from._impl_.tsrc_);
  }
  ::memcpy(&_impl_.looping_, &from._impl_.looping_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.interpolationmethod_) -
    reinterpret_cast<char*>(&_impl_.looping_)) + sizeof(_impl_.interpolationmethod_));
  // @@protoc_insertion_point(copy_constructor:Property.VectorPropertyKeyframed)
}

inline void VectorPropertyKeyframed::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.keys_){arena}
    , decltype(_impl_.tsrc_){nullptr}
    , decltype(_impl_.looping_){0}
    , decltype(_impl_.tangentgen_){0}
    , decltype(_impl_.interpolationmethod_){0}
  };
}

VectorPropertyKeyframed::~VectorPropertyKeyframed() {
  // @@protoc_insertion_point(destructor:Property.VectorPropertyKeyframed)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void VectorPropertyKeyframed::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.keys_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.tsrc_;
}

void VectorPropertyKeyframed::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void VectorPropertyKeyframed::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.VectorPropertyKeyframed)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.keys_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.tsrc_ != nullptr);
    _impl_.tsrc_->Clear();
  }
  ::memset(&_impl_.looping_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.interpolationmethod_) -
      reinterpret_cast<char*>(&_impl_.looping_)) + sizeof(_impl_.interpolationmethod_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* VectorPropertyKeyframed::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .Property.ScalarPropertyValue tSrc = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_tsrc(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .Property.VectorPropertyKeyframed.VectorKeyframe keys = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_keys(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<82>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .Property.KeyframeLoopingEnum looping = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 88)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_looping(static_cast<::Property::KeyframeLoopingEnum>(val));
        } else
          goto handle_unusual;
        continue;
      // .Property.TangentsAutocomputeMethodEnum tangentGen = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 96)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_tangentgen(static_cast<::Property::TangentsAutocomputeMethodEnum>(val));
        } else
          goto handle_unusual;
        continue;
      // .Property.VectorPropertyKeyframed.VectorInterpolationMethod interpolationMethod = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 104)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_interpolationmethod(static_cast<::Property::VectorPropertyKeyframed_VectorInterpolationMethod>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* VectorPropertyKeyframed::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.VectorPropertyKeyframed)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional .Property.ScalarPropertyValue tSrc = 8;
  if (_internal_has_tsrc()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(8, _Internal::tsrc(this),
        _Internal::tsrc(this).GetCachedSize(), target, stream);
  }

  // repeated .Property.VectorPropertyKeyframed.VectorKeyframe keys = 10;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_keys_size()); i < n; i++) {
    const auto& repfield = this->_internal_keys(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(10, repfield, repfield.GetCachedSize(), target, stream);
  }

  // .Property.KeyframeLoopingEnum looping = 11;
  if (this->_internal_looping() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      11, this->_internal_looping(), target);
  }

  // .Property.TangentsAutocomputeMethodEnum tangentGen = 12;
  if (this->_internal_tangentgen() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      12, this->_internal_tangentgen(), target);
  }

  // .Property.VectorPropertyKeyframed.VectorInterpolationMethod interpolationMethod = 13;
  if (this->_internal_interpolationmethod() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      13, this->_internal_interpolationmethod(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.VectorPropertyKeyframed)
  return target;
}

size_t VectorPropertyKeyframed::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.VectorPropertyKeyframed)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Property.VectorPropertyKeyframed.VectorKeyframe keys = 10;
  total_size += 1UL * this->_internal_keys_size();
  for (const auto& msg : this->_impl_.keys_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // optional .Property.ScalarPropertyValue tSrc = 8;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.tsrc_);
  }

  // .Property.KeyframeLoopingEnum looping = 11;
  if (this->_internal_looping() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_looping());
  }

  // .Property.TangentsAutocomputeMethodEnum tangentGen = 12;
  if (this->_internal_tangentgen() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_tangentgen());
  }

  // .Property.VectorPropertyKeyframed.VectorInterpolationMethod interpolationMethod = 13;
  if (this->_internal_interpolationmethod() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_interpolationmethod());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData VectorPropertyKeyframed::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    VectorPropertyKeyframed::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*VectorPropertyKeyframed::GetClassData() const { return &_class_data_; }


void VectorPropertyKeyframed::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<VectorPropertyKeyframed*>(&to_msg);
  auto& from = static_cast<const VectorPropertyKeyframed&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.VectorPropertyKeyframed)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.keys_.MergeFrom(from._impl_.keys_);
  if (from._internal_has_tsrc()) {
    _this->_internal_mutable_tsrc()->::Property::ScalarPropertyValue::MergeFrom(
        from._internal_tsrc());
  }
  if (from._internal_looping() != 0) {
    _this->_internal_set_looping(from._internal_looping());
  }
  if (from._internal_tangentgen() != 0) {
    _this->_internal_set_tangentgen(from._internal_tangentgen());
  }
  if (from._internal_interpolationmethod() != 0) {
    _this->_internal_set_interpolationmethod(from._internal_interpolationmethod());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void VectorPropertyKeyframed::CopyFrom(const VectorPropertyKeyframed& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.VectorPropertyKeyframed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VectorPropertyKeyframed::IsInitialized() const {
  return true;
}

void VectorPropertyKeyframed::InternalSwap(VectorPropertyKeyframed* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.keys_.InternalSwap(&other->_impl_.keys_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(VectorPropertyKeyframed, _impl_.interpolationmethod_)
      + sizeof(VectorPropertyKeyframed::_impl_.interpolationmethod_)
      - PROTOBUF_FIELD_OFFSET(VectorPropertyKeyframed, _impl_.tsrc_)>(
          reinterpret_cast<char*>(&_impl_.tsrc_),
          reinterpret_cast<char*>(&other->_impl_.tsrc_));
}

::PROTOBUF_NAMESPACE_ID::Metadata VectorPropertyKeyframed::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[41]);
}

// ===================================================================

class VectorPropertyDeclaration::_Internal {
 public:
  static const ::Common::Float4& default_(const VectorPropertyDeclaration* msg);
  static const ::Property::VectorPropertyMetadata& meta(const VectorPropertyDeclaration* msg);
};

const ::Common::Float4&
VectorPropertyDeclaration::_Internal::default_(const VectorPropertyDeclaration* msg) {
  return *msg->_impl_.default__;
}
const ::Property::VectorPropertyMetadata&
VectorPropertyDeclaration::_Internal::meta(const VectorPropertyDeclaration* msg) {
  return *msg->_impl_.meta_;
}
void VectorPropertyDeclaration::clear_default_() {
  if (GetArenaForAllocation() == nullptr && _impl_.default__ != nullptr) {
    delete _impl_.default__;
  }
  _impl_.default__ = nullptr;
}
VectorPropertyDeclaration::VectorPropertyDeclaration(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.VectorPropertyDeclaration)
}
VectorPropertyDeclaration::VectorPropertyDeclaration(const VectorPropertyDeclaration& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  VectorPropertyDeclaration* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.meta_){nullptr}
    , decltype(_impl_.default__){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_meta()) {
    _this->_impl_.meta_ = new ::Property::VectorPropertyMetadata(*from._impl_.meta_);
  }
  if (from._internal_has_default_()) {
    _this->_impl_.default__ = new ::Common::Float4(*from._impl_.default__);
  }
  // @@protoc_insertion_point(copy_constructor:Property.VectorPropertyDeclaration)
}

inline void VectorPropertyDeclaration::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.meta_){nullptr}
    , decltype(_impl_.default__){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

VectorPropertyDeclaration::~VectorPropertyDeclaration() {
  // @@protoc_insertion_point(destructor:Property.VectorPropertyDeclaration)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void VectorPropertyDeclaration::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.meta_;
  if (this != internal_default_instance()) delete _impl_.default__;
}

void VectorPropertyDeclaration::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void VectorPropertyDeclaration::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.VectorPropertyDeclaration)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.meta_ != nullptr) {
    delete _impl_.meta_;
  }
  _impl_.meta_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.default__ != nullptr) {
    delete _impl_.default__;
  }
  _impl_.default__ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* VectorPropertyDeclaration::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Property.VectorPropertyMetadata meta = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_meta(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Common.Float4 default = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* VectorPropertyDeclaration::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.VectorPropertyDeclaration)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Property.VectorPropertyMetadata meta = 1;
  if (this->_internal_has_meta()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::meta(this),
        _Internal::meta(this).GetCachedSize(), target, stream);
  }

  // .Common.Float4 default = 2;
  if (this->_internal_has_default_()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::default_(this),
        _Internal::default_(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.VectorPropertyDeclaration)
  return target;
}

size_t VectorPropertyDeclaration::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.VectorPropertyDeclaration)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Property.VectorPropertyMetadata meta = 1;
  if (this->_internal_has_meta()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.meta_);
  }

  // .Common.Float4 default = 2;
  if (this->_internal_has_default_()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.default__);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData VectorPropertyDeclaration::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    VectorPropertyDeclaration::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*VectorPropertyDeclaration::GetClassData() const { return &_class_data_; }


void VectorPropertyDeclaration::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<VectorPropertyDeclaration*>(&to_msg);
  auto& from = static_cast<const VectorPropertyDeclaration&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.VectorPropertyDeclaration)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_meta()) {
    _this->_internal_mutable_meta()->::Property::VectorPropertyMetadata::MergeFrom(
        from._internal_meta());
  }
  if (from._internal_has_default_()) {
    _this->_internal_mutable_default_()->::Common::Float4::MergeFrom(
        from._internal_default_());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void VectorPropertyDeclaration::CopyFrom(const VectorPropertyDeclaration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.VectorPropertyDeclaration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VectorPropertyDeclaration::IsInitialized() const {
  return true;
}

void VectorPropertyDeclaration::InternalSwap(VectorPropertyDeclaration* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(VectorPropertyDeclaration, _impl_.default__)
      + sizeof(VectorPropertyDeclaration::_impl_.default__)
      - PROTOBUF_FIELD_OFFSET(VectorPropertyDeclaration, _impl_.meta_)>(
          reinterpret_cast<char*>(&_impl_.meta_),
          reinterpret_cast<char*>(&other->_impl_.meta_));
}

::PROTOBUF_NAMESPACE_ID::Metadata VectorPropertyDeclaration::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[42]);
}

// ===================================================================

class VectorEditingMetadata::_Internal {
 public:
};

VectorEditingMetadata::VectorEditingMetadata(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.VectorEditingMetadata)
}
VectorEditingMetadata::VectorEditingMetadata(const VectorEditingMetadata& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  VectorEditingMetadata* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.usage_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.usage_ = from._impl_.usage_;
  // @@protoc_insertion_point(copy_constructor:Property.VectorEditingMetadata)
}

inline void VectorEditingMetadata::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.usage_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

VectorEditingMetadata::~VectorEditingMetadata() {
  // @@protoc_insertion_point(destructor:Property.VectorEditingMetadata)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void VectorEditingMetadata::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void VectorEditingMetadata::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void VectorEditingMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.VectorEditingMetadata)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.usage_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* VectorEditingMetadata::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Property.VectorEditingMetadata.VectorInterpretationEnum usage = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_usage(static_cast<::Property::VectorEditingMetadata_VectorInterpretationEnum>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* VectorEditingMetadata::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.VectorEditingMetadata)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Property.VectorEditingMetadata.VectorInterpretationEnum usage = 1;
  if (this->_internal_usage() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_usage(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.VectorEditingMetadata)
  return target;
}

size_t VectorEditingMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.VectorEditingMetadata)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Property.VectorEditingMetadata.VectorInterpretationEnum usage = 1;
  if (this->_internal_usage() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_usage());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData VectorEditingMetadata::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    VectorEditingMetadata::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*VectorEditingMetadata::GetClassData() const { return &_class_data_; }


void VectorEditingMetadata::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<VectorEditingMetadata*>(&to_msg);
  auto& from = static_cast<const VectorEditingMetadata&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.VectorEditingMetadata)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_usage() != 0) {
    _this->_internal_set_usage(from._internal_usage());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void VectorEditingMetadata::CopyFrom(const VectorEditingMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.VectorEditingMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VectorEditingMetadata::IsInitialized() const {
  return true;
}

void VectorEditingMetadata::InternalSwap(VectorEditingMetadata* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.usage_, other->_impl_.usage_);
}

::PROTOBUF_NAMESPACE_ID::Metadata VectorEditingMetadata::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[43]);
}

// ===================================================================

class VectorGeneratorMetadata::_Internal {
 public:
  using HasBits = decltype(std::declval<VectorGeneratorMetadata>()._impl_._has_bits_);
  static const ::Property::GeneratorMetadata& base(const VectorGeneratorMetadata* msg);
  static const ::Property::VectorEditingMetadata& edit(const VectorGeneratorMetadata* msg);
  static void set_has_edit(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::Property::GeneratorMetadata&
VectorGeneratorMetadata::_Internal::base(const VectorGeneratorMetadata* msg) {
  return *msg->_impl_.base_;
}
const ::Property::VectorEditingMetadata&
VectorGeneratorMetadata::_Internal::edit(const VectorGeneratorMetadata* msg) {
  return *msg->_impl_.edit_;
}
VectorGeneratorMetadata::VectorGeneratorMetadata(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.VectorGeneratorMetadata)
}
VectorGeneratorMetadata::VectorGeneratorMetadata(const VectorGeneratorMetadata& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  VectorGeneratorMetadata* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.base_){nullptr}
    , decltype(_impl_.edit_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_base()) {
    _this->_impl_.base_ = new ::Property::GeneratorMetadata(*from._impl_.base_);
  }
  if (from._internal_has_edit()) {
    _this->_impl_.edit_ = new ::Property::VectorEditingMetadata(*from._impl_.edit_);
  }
  // @@protoc_insertion_point(copy_constructor:Property.VectorGeneratorMetadata)
}

inline void VectorGeneratorMetadata::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.base_){nullptr}
    , decltype(_impl_.edit_){nullptr}
  };
}

VectorGeneratorMetadata::~VectorGeneratorMetadata() {
  // @@protoc_insertion_point(destructor:Property.VectorGeneratorMetadata)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void VectorGeneratorMetadata::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.base_;
  if (this != internal_default_instance()) delete _impl_.edit_;
}

void VectorGeneratorMetadata::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void VectorGeneratorMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.VectorGeneratorMetadata)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.base_ != nullptr) {
    delete _impl_.base_;
  }
  _impl_.base_ = nullptr;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.edit_ != nullptr);
    _impl_.edit_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* VectorGeneratorMetadata::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Property.GeneratorMetadata base = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_base(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .Property.VectorEditingMetadata edit = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_edit(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* VectorGeneratorMetadata::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.VectorGeneratorMetadata)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Property.GeneratorMetadata base = 1;
  if (this->_internal_has_base()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::base(this),
        _Internal::base(this).GetCachedSize(), target, stream);
  }

  // optional .Property.VectorEditingMetadata edit = 2;
  if (_internal_has_edit()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::edit(this),
        _Internal::edit(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.VectorGeneratorMetadata)
  return target;
}

size_t VectorGeneratorMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.VectorGeneratorMetadata)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Property.GeneratorMetadata base = 1;
  if (this->_internal_has_base()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.base_);
  }

  // optional .Property.VectorEditingMetadata edit = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.edit_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData VectorGeneratorMetadata::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    VectorGeneratorMetadata::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*VectorGeneratorMetadata::GetClassData() const { return &_class_data_; }


void VectorGeneratorMetadata::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<VectorGeneratorMetadata*>(&to_msg);
  auto& from = static_cast<const VectorGeneratorMetadata&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.VectorGeneratorMetadata)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_base()) {
    _this->_internal_mutable_base()->::Property::GeneratorMetadata::MergeFrom(
        from._internal_base());
  }
  if (from._internal_has_edit()) {
    _this->_internal_mutable_edit()->::Property::VectorEditingMetadata::MergeFrom(
        from._internal_edit());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void VectorGeneratorMetadata::CopyFrom(const VectorGeneratorMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.VectorGeneratorMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VectorGeneratorMetadata::IsInitialized() const {
  return true;
}

void VectorGeneratorMetadata::InternalSwap(VectorGeneratorMetadata* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(VectorGeneratorMetadata, _impl_.edit_)
      + sizeof(VectorGeneratorMetadata::_impl_.edit_)
      - PROTOBUF_FIELD_OFFSET(VectorGeneratorMetadata, _impl_.base_)>(
          reinterpret_cast<char*>(&_impl_.base_),
          reinterpret_cast<char*>(&other->_impl_.base_));
}

::PROTOBUF_NAMESPACE_ID::Metadata VectorGeneratorMetadata::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[44]);
}

// ===================================================================

class VectorPropertyMetadata::_Internal {
 public:
  using HasBits = decltype(std::declval<VectorPropertyMetadata>()._impl_._has_bits_);
  static const ::Property::PropertyMetadata& base(const VectorPropertyMetadata* msg);
  static const ::Property::VectorEditingMetadata& edit(const VectorPropertyMetadata* msg);
  static void set_has_edit(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::Property::PropertyMetadata&
VectorPropertyMetadata::_Internal::base(const VectorPropertyMetadata* msg) {
  return *msg->_impl_.base_;
}
const ::Property::VectorEditingMetadata&
VectorPropertyMetadata::_Internal::edit(const VectorPropertyMetadata* msg) {
  return *msg->_impl_.edit_;
}
VectorPropertyMetadata::VectorPropertyMetadata(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.VectorPropertyMetadata)
}
VectorPropertyMetadata::VectorPropertyMetadata(const VectorPropertyMetadata& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  VectorPropertyMetadata* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.base_){nullptr}
    , decltype(_impl_.edit_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_base()) {
    _this->_impl_.base_ = new ::Property::PropertyMetadata(*from._impl_.base_);
  }
  if (from._internal_has_edit()) {
    _this->_impl_.edit_ = new ::Property::VectorEditingMetadata(*from._impl_.edit_);
  }
  // @@protoc_insertion_point(copy_constructor:Property.VectorPropertyMetadata)
}

inline void VectorPropertyMetadata::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.base_){nullptr}
    , decltype(_impl_.edit_){nullptr}
  };
}

VectorPropertyMetadata::~VectorPropertyMetadata() {
  // @@protoc_insertion_point(destructor:Property.VectorPropertyMetadata)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void VectorPropertyMetadata::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.base_;
  if (this != internal_default_instance()) delete _impl_.edit_;
}

void VectorPropertyMetadata::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void VectorPropertyMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.VectorPropertyMetadata)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.base_ != nullptr) {
    delete _impl_.base_;
  }
  _impl_.base_ = nullptr;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.edit_ != nullptr);
    _impl_.edit_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* VectorPropertyMetadata::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Property.PropertyMetadata base = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_base(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .Property.VectorEditingMetadata edit = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_edit(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* VectorPropertyMetadata::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.VectorPropertyMetadata)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Property.PropertyMetadata base = 1;
  if (this->_internal_has_base()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::base(this),
        _Internal::base(this).GetCachedSize(), target, stream);
  }

  // optional .Property.VectorEditingMetadata edit = 2;
  if (_internal_has_edit()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::edit(this),
        _Internal::edit(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.VectorPropertyMetadata)
  return target;
}

size_t VectorPropertyMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.VectorPropertyMetadata)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Property.PropertyMetadata base = 1;
  if (this->_internal_has_base()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.base_);
  }

  // optional .Property.VectorEditingMetadata edit = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.edit_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData VectorPropertyMetadata::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    VectorPropertyMetadata::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*VectorPropertyMetadata::GetClassData() const { return &_class_data_; }


void VectorPropertyMetadata::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<VectorPropertyMetadata*>(&to_msg);
  auto& from = static_cast<const VectorPropertyMetadata&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.VectorPropertyMetadata)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_base()) {
    _this->_internal_mutable_base()->::Property::PropertyMetadata::MergeFrom(
        from._internal_base());
  }
  if (from._internal_has_edit()) {
    _this->_internal_mutable_edit()->::Property::VectorEditingMetadata::MergeFrom(
        from._internal_edit());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void VectorPropertyMetadata::CopyFrom(const VectorPropertyMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.VectorPropertyMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VectorPropertyMetadata::IsInitialized() const {
  return true;
}

void VectorPropertyMetadata::InternalSwap(VectorPropertyMetadata* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(VectorPropertyMetadata, _impl_.edit_)
      + sizeof(VectorPropertyMetadata::_impl_.edit_)
      - PROTOBUF_FIELD_OFFSET(VectorPropertyMetadata, _impl_.base_)>(
          reinterpret_cast<char*>(&_impl_.base_),
          reinterpret_cast<char*>(&other->_impl_.base_));
}

::PROTOBUF_NAMESPACE_ID::Metadata VectorPropertyMetadata::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[45]);
}

// ===================================================================

class ColorPropertyAssignment::_Internal {
 public:
  using HasBits = decltype(std::declval<ColorPropertyAssignment>()._impl_._has_bits_);
  static void set_has_method(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_priority(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::Property::ColorPropertyValue& value(const ColorPropertyAssignment* msg);
};

const ::Property::ColorPropertyValue&
ColorPropertyAssignment::_Internal::value(const ColorPropertyAssignment* msg) {
  return *msg->_impl_.value_;
}
ColorPropertyAssignment::ColorPropertyAssignment(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.ColorPropertyAssignment)
}
ColorPropertyAssignment::ColorPropertyAssignment(const ColorPropertyAssignment& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ColorPropertyAssignment* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.assignmentid_){}
    , decltype(_impl_.value_){nullptr}
    , decltype(_impl_.method_){}
    , decltype(_impl_.priority_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.assignmentid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.assignmentid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_assignmentid().empty()) {
    _this->_impl_.assignmentid_.Set(from._internal_assignmentid(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_value()) {
    _this->_impl_.value_ = new ::Property::ColorPropertyValue(*from._impl_.value_);
  }
  ::memcpy(&_impl_.method_, &from._impl_.method_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.priority_) -
    reinterpret_cast<char*>(&_impl_.method_)) + sizeof(_impl_.priority_));
  // @@protoc_insertion_point(copy_constructor:Property.ColorPropertyAssignment)
}

inline void ColorPropertyAssignment::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.assignmentid_){}
    , decltype(_impl_.value_){nullptr}
    , decltype(_impl_.method_){0}
    , decltype(_impl_.priority_){0}
  };
  _impl_.assignmentid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.assignmentid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ColorPropertyAssignment::~ColorPropertyAssignment() {
  // @@protoc_insertion_point(destructor:Property.ColorPropertyAssignment)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ColorPropertyAssignment::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.assignmentid_.Destroy();
  if (this != internal_default_instance()) delete _impl_.value_;
}

void ColorPropertyAssignment::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ColorPropertyAssignment::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.ColorPropertyAssignment)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.assignmentid_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.value_ != nullptr) {
    delete _impl_.value_;
  }
  _impl_.value_ = nullptr;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.method_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.priority_) -
        reinterpret_cast<char*>(&_impl_.method_)) + sizeof(_impl_.priority_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ColorPropertyAssignment::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .Property.ColorPropertyAssignment.ColorPropertyMethod method = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_method(static_cast<::Property::ColorPropertyAssignment_ColorPropertyMethod>(val));
        } else
          goto handle_unusual;
        continue;
      // optional int32 priority = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_priority(&has_bits);
          _impl_.priority_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.ColorPropertyValue value = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_value(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string assignmentId = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_assignmentid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "Property.ColorPropertyAssignment.assignmentId"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ColorPropertyAssignment::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.ColorPropertyAssignment)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional .Property.ColorPropertyAssignment.ColorPropertyMethod method = 1;
  if (_internal_has_method()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_method(), target);
  }

  // optional int32 priority = 2;
  if (_internal_has_priority()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_priority(), target);
  }

  // .Property.ColorPropertyValue value = 3;
  if (this->_internal_has_value()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::value(this),
        _Internal::value(this).GetCachedSize(), target, stream);
  }

  // string assignmentId = 4;
  if (!this->_internal_assignmentid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_assignmentid().data(), static_cast<int>(this->_internal_assignmentid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Property.ColorPropertyAssignment.assignmentId");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_assignmentid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.ColorPropertyAssignment)
  return target;
}

size_t ColorPropertyAssignment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.ColorPropertyAssignment)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string assignmentId = 4;
  if (!this->_internal_assignmentid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_assignmentid());
  }

  // .Property.ColorPropertyValue value = 3;
  if (this->_internal_has_value()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.value_);
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .Property.ColorPropertyAssignment.ColorPropertyMethod method = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_method());
    }

    // optional int32 priority = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_priority());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ColorPropertyAssignment::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ColorPropertyAssignment::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ColorPropertyAssignment::GetClassData() const { return &_class_data_; }


void ColorPropertyAssignment::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ColorPropertyAssignment*>(&to_msg);
  auto& from = static_cast<const ColorPropertyAssignment&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.ColorPropertyAssignment)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_assignmentid().empty()) {
    _this->_internal_set_assignmentid(from._internal_assignmentid());
  }
  if (from._internal_has_value()) {
    _this->_internal_mutable_value()->::Property::ColorPropertyValue::MergeFrom(
        from._internal_value());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.method_ = from._impl_.method_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.priority_ = from._impl_.priority_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ColorPropertyAssignment::CopyFrom(const ColorPropertyAssignment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.ColorPropertyAssignment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ColorPropertyAssignment::IsInitialized() const {
  return true;
}

void ColorPropertyAssignment::InternalSwap(ColorPropertyAssignment* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.assignmentid_, lhs_arena,
      &other->_impl_.assignmentid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ColorPropertyAssignment, _impl_.priority_)
      + sizeof(ColorPropertyAssignment::_impl_.priority_)
      - PROTOBUF_FIELD_OFFSET(ColorPropertyAssignment, _impl_.value_)>(
          reinterpret_cast<char*>(&_impl_.value_),
          reinterpret_cast<char*>(&other->_impl_.value_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ColorPropertyAssignment::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[46]);
}

// ===================================================================

class ColorPropertyValue::_Internal {
 public:
  static const ::Common::Color4& constant(const ColorPropertyValue* msg);
  static const ::Property::PropertyIdentifier& ref(const ColorPropertyValue* msg);
  static const ::Property::ColorPerChannel& bychannel(const ColorPropertyValue* msg);
  static const ::Property::ColorPropertyKeyframed& keyframes(const ColorPropertyValue* msg);
  static const ::Property::ColorPropertyInterpolator& interp(const ColorPropertyValue* msg);
  static const ::Property::CustomGeneratorValue& custom(const ColorPropertyValue* msg);
  static const ::Property::ColorPropertyApproach& approach(const ColorPropertyValue* msg);
};

const ::Common::Color4&
ColorPropertyValue::_Internal::constant(const ColorPropertyValue* msg) {
  return *msg->_impl_.ValueType_.constant_;
}
const ::Property::PropertyIdentifier&
ColorPropertyValue::_Internal::ref(const ColorPropertyValue* msg) {
  return *msg->_impl_.ValueType_.ref_;
}
const ::Property::ColorPerChannel&
ColorPropertyValue::_Internal::bychannel(const ColorPropertyValue* msg) {
  return *msg->_impl_.ValueType_.bychannel_;
}
const ::Property::ColorPropertyKeyframed&
ColorPropertyValue::_Internal::keyframes(const ColorPropertyValue* msg) {
  return *msg->_impl_.ValueType_.keyframes_;
}
const ::Property::ColorPropertyInterpolator&
ColorPropertyValue::_Internal::interp(const ColorPropertyValue* msg) {
  return *msg->_impl_.ValueType_.interp_;
}
const ::Property::CustomGeneratorValue&
ColorPropertyValue::_Internal::custom(const ColorPropertyValue* msg) {
  return *msg->_impl_.ValueType_.custom_;
}
const ::Property::ColorPropertyApproach&
ColorPropertyValue::_Internal::approach(const ColorPropertyValue* msg) {
  return *msg->_impl_.ValueType_.approach_;
}
void ColorPropertyValue::set_allocated_constant(::Common::Color4* constant) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_ValueType();
  if (constant) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(constant));
    if (message_arena != submessage_arena) {
      constant = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, constant, submessage_arena);
    }
    set_has_constant();
    _impl_.ValueType_.constant_ = constant;
  }
  // @@protoc_insertion_point(field_set_allocated:Property.ColorPropertyValue.constant)
}
void ColorPropertyValue::clear_constant() {
  if (_internal_has_constant()) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.ValueType_.constant_;
    }
    clear_has_ValueType();
  }
}
void ColorPropertyValue::set_allocated_ref(::Property::PropertyIdentifier* ref) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_ValueType();
  if (ref) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(ref);
    if (message_arena != submessage_arena) {
      ref = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ref, submessage_arena);
    }
    set_has_ref();
    _impl_.ValueType_.ref_ = ref;
  }
  // @@protoc_insertion_point(field_set_allocated:Property.ColorPropertyValue.ref)
}
void ColorPropertyValue::set_allocated_bychannel(::Property::ColorPerChannel* bychannel) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_ValueType();
  if (bychannel) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(bychannel);
    if (message_arena != submessage_arena) {
      bychannel = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, bychannel, submessage_arena);
    }
    set_has_bychannel();
    _impl_.ValueType_.bychannel_ = bychannel;
  }
  // @@protoc_insertion_point(field_set_allocated:Property.ColorPropertyValue.byChannel)
}
void ColorPropertyValue::set_allocated_keyframes(::Property::ColorPropertyKeyframed* keyframes) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_ValueType();
  if (keyframes) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(keyframes);
    if (message_arena != submessage_arena) {
      keyframes = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, keyframes, submessage_arena);
    }
    set_has_keyframes();
    _impl_.ValueType_.keyframes_ = keyframes;
  }
  // @@protoc_insertion_point(field_set_allocated:Property.ColorPropertyValue.keyframes)
}
void ColorPropertyValue::set_allocated_interp(::Property::ColorPropertyInterpolator* interp) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_ValueType();
  if (interp) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(interp);
    if (message_arena != submessage_arena) {
      interp = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, interp, submessage_arena);
    }
    set_has_interp();
    _impl_.ValueType_.interp_ = interp;
  }
  // @@protoc_insertion_point(field_set_allocated:Property.ColorPropertyValue.interp)
}
void ColorPropertyValue::set_allocated_custom(::Property::CustomGeneratorValue* custom) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_ValueType();
  if (custom) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(custom);
    if (message_arena != submessage_arena) {
      custom = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, custom, submessage_arena);
    }
    set_has_custom();
    _impl_.ValueType_.custom_ = custom;
  }
  // @@protoc_insertion_point(field_set_allocated:Property.ColorPropertyValue.custom)
}
void ColorPropertyValue::set_allocated_approach(::Property::ColorPropertyApproach* approach) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_ValueType();
  if (approach) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(approach);
    if (message_arena != submessage_arena) {
      approach = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, approach, submessage_arena);
    }
    set_has_approach();
    _impl_.ValueType_.approach_ = approach;
  }
  // @@protoc_insertion_point(field_set_allocated:Property.ColorPropertyValue.approach)
}
ColorPropertyValue::ColorPropertyValue(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.ColorPropertyValue)
}
ColorPropertyValue::ColorPropertyValue(const ColorPropertyValue& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ColorPropertyValue* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ValueType_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_ValueType();
  switch (from.ValueType_case()) {
    case kConstant: {
      _this->_internal_mutable_constant()->::Common::Color4::MergeFrom(
          from._internal_constant());
      break;
    }
    case kRef: {
      _this->_internal_mutable_ref()->::Property::PropertyIdentifier::MergeFrom(
          from._internal_ref());
      break;
    }
    case kByChannel: {
      _this->_internal_mutable_bychannel()->::Property::ColorPerChannel::MergeFrom(
          from._internal_bychannel());
      break;
    }
    case kKeyframes: {
      _this->_internal_mutable_keyframes()->::Property::ColorPropertyKeyframed::MergeFrom(
          from._internal_keyframes());
      break;
    }
    case kExpr: {
      _this->_internal_set_expr(from._internal_expr());
      break;
    }
    case kUseDefault: {
      _this->_internal_set_usedefault(from._internal_usedefault());
      break;
    }
    case kInterp: {
      _this->_internal_mutable_interp()->::Property::ColorPropertyInterpolator::MergeFrom(
          from._internal_interp());
      break;
    }
    case kCustom: {
      _this->_internal_mutable_custom()->::Property::CustomGeneratorValue::MergeFrom(
          from._internal_custom());
      break;
    }
    case kApproach: {
      _this->_internal_mutable_approach()->::Property::ColorPropertyApproach::MergeFrom(
          from._internal_approach());
      break;
    }
    case VALUETYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:Property.ColorPropertyValue)
}

inline void ColorPropertyValue::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ValueType_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  clear_has_ValueType();
}

ColorPropertyValue::~ColorPropertyValue() {
  // @@protoc_insertion_point(destructor:Property.ColorPropertyValue)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ColorPropertyValue::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_ValueType()) {
    clear_ValueType();
  }
}

void ColorPropertyValue::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ColorPropertyValue::clear_ValueType() {
// @@protoc_insertion_point(one_of_clear_start:Property.ColorPropertyValue)
  switch (ValueType_case()) {
    case kConstant: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.ValueType_.constant_;
      }
      break;
    }
    case kRef: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.ValueType_.ref_;
      }
      break;
    }
    case kByChannel: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.ValueType_.bychannel_;
      }
      break;
    }
    case kKeyframes: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.ValueType_.keyframes_;
      }
      break;
    }
    case kExpr: {
      _impl_.ValueType_.expr_.Destroy();
      break;
    }
    case kUseDefault: {
      // No need to clear
      break;
    }
    case kInterp: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.ValueType_.interp_;
      }
      break;
    }
    case kCustom: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.ValueType_.custom_;
      }
      break;
    }
    case kApproach: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.ValueType_.approach_;
      }
      break;
    }
    case VALUETYPE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = VALUETYPE_NOT_SET;
}


void ColorPropertyValue::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.ColorPropertyValue)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_ValueType();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ColorPropertyValue::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Common.Color4 constant = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_constant(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.PropertyIdentifier ref = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_ref(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.ColorPerChannel byChannel = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_bychannel(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.ColorPropertyKeyframed keyframes = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_keyframes(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string expr = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_expr();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "Property.ColorPropertyValue.expr"));
        } else
          goto handle_unusual;
        continue;
      // bool useDefault = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          _internal_set_usedefault(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.ColorPropertyInterpolator interp = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_interp(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.CustomGeneratorValue custom = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_custom(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.ColorPropertyApproach approach = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 98)) {
          ptr = ctx->ParseMessage(_internal_mutable_approach(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ColorPropertyValue::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.ColorPropertyValue)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Common.Color4 constant = 1;
  if (_internal_has_constant()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::constant(this),
        _Internal::constant(this).GetCachedSize(), target, stream);
  }

  // .Property.PropertyIdentifier ref = 2;
  if (_internal_has_ref()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::ref(this),
        _Internal::ref(this).GetCachedSize(), target, stream);
  }

  // .Property.ColorPerChannel byChannel = 4;
  if (_internal_has_bychannel()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::bychannel(this),
        _Internal::bychannel(this).GetCachedSize(), target, stream);
  }

  // .Property.ColorPropertyKeyframed keyframes = 5;
  if (_internal_has_keyframes()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::keyframes(this),
        _Internal::keyframes(this).GetCachedSize(), target, stream);
  }

  // string expr = 6;
  if (_internal_has_expr()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_expr().data(), static_cast<int>(this->_internal_expr().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Property.ColorPropertyValue.expr");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_expr(), target);
  }

  // bool useDefault = 7;
  if (_internal_has_usedefault()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(7, this->_internal_usedefault(), target);
  }

  // .Property.ColorPropertyInterpolator interp = 9;
  if (_internal_has_interp()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(9, _Internal::interp(this),
        _Internal::interp(this).GetCachedSize(), target, stream);
  }

  // .Property.CustomGeneratorValue custom = 10;
  if (_internal_has_custom()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(10, _Internal::custom(this),
        _Internal::custom(this).GetCachedSize(), target, stream);
  }

  // .Property.ColorPropertyApproach approach = 12;
  if (_internal_has_approach()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(12, _Internal::approach(this),
        _Internal::approach(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.ColorPropertyValue)
  return target;
}

size_t ColorPropertyValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.ColorPropertyValue)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (ValueType_case()) {
    // .Common.Color4 constant = 1;
    case kConstant: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.ValueType_.constant_);
      break;
    }
    // .Property.PropertyIdentifier ref = 2;
    case kRef: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.ValueType_.ref_);
      break;
    }
    // .Property.ColorPerChannel byChannel = 4;
    case kByChannel: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.ValueType_.bychannel_);
      break;
    }
    // .Property.ColorPropertyKeyframed keyframes = 5;
    case kKeyframes: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.ValueType_.keyframes_);
      break;
    }
    // string expr = 6;
    case kExpr: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_expr());
      break;
    }
    // bool useDefault = 7;
    case kUseDefault: {
      total_size += 1 + 1;
      break;
    }
    // .Property.ColorPropertyInterpolator interp = 9;
    case kInterp: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.ValueType_.interp_);
      break;
    }
    // .Property.CustomGeneratorValue custom = 10;
    case kCustom: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.ValueType_.custom_);
      break;
    }
    // .Property.ColorPropertyApproach approach = 12;
    case kApproach: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.ValueType_.approach_);
      break;
    }
    case VALUETYPE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ColorPropertyValue::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ColorPropertyValue::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ColorPropertyValue::GetClassData() const { return &_class_data_; }


void ColorPropertyValue::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ColorPropertyValue*>(&to_msg);
  auto& from = static_cast<const ColorPropertyValue&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.ColorPropertyValue)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.ValueType_case()) {
    case kConstant: {
      _this->_internal_mutable_constant()->::Common::Color4::MergeFrom(
          from._internal_constant());
      break;
    }
    case kRef: {
      _this->_internal_mutable_ref()->::Property::PropertyIdentifier::MergeFrom(
          from._internal_ref());
      break;
    }
    case kByChannel: {
      _this->_internal_mutable_bychannel()->::Property::ColorPerChannel::MergeFrom(
          from._internal_bychannel());
      break;
    }
    case kKeyframes: {
      _this->_internal_mutable_keyframes()->::Property::ColorPropertyKeyframed::MergeFrom(
          from._internal_keyframes());
      break;
    }
    case kExpr: {
      _this->_internal_set_expr(from._internal_expr());
      break;
    }
    case kUseDefault: {
      _this->_internal_set_usedefault(from._internal_usedefault());
      break;
    }
    case kInterp: {
      _this->_internal_mutable_interp()->::Property::ColorPropertyInterpolator::MergeFrom(
          from._internal_interp());
      break;
    }
    case kCustom: {
      _this->_internal_mutable_custom()->::Property::CustomGeneratorValue::MergeFrom(
          from._internal_custom());
      break;
    }
    case kApproach: {
      _this->_internal_mutable_approach()->::Property::ColorPropertyApproach::MergeFrom(
          from._internal_approach());
      break;
    }
    case VALUETYPE_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ColorPropertyValue::CopyFrom(const ColorPropertyValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.ColorPropertyValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ColorPropertyValue::IsInitialized() const {
  return true;
}

void ColorPropertyValue::InternalSwap(ColorPropertyValue* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.ValueType_, other->_impl_.ValueType_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata ColorPropertyValue::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[47]);
}

// ===================================================================

class ColorPropertyInterpolator::_Internal {
 public:
  static const ::Property::ScalarPropertyValue& t(const ColorPropertyInterpolator* msg);
  static const ::Property::ColorPropertyValue& from(const ColorPropertyInterpolator* msg);
  static const ::Property::ColorPropertyValue& to(const ColorPropertyInterpolator* msg);
  static const ::Property::Interpolation& by(const ColorPropertyInterpolator* msg);
};

const ::Property::ScalarPropertyValue&
ColorPropertyInterpolator::_Internal::t(const ColorPropertyInterpolator* msg) {
  return *msg->_impl_.t_;
}
const ::Property::ColorPropertyValue&
ColorPropertyInterpolator::_Internal::from(const ColorPropertyInterpolator* msg) {
  return *msg->_impl_.from_;
}
const ::Property::ColorPropertyValue&
ColorPropertyInterpolator::_Internal::to(const ColorPropertyInterpolator* msg) {
  return *msg->_impl_.to_;
}
const ::Property::Interpolation&
ColorPropertyInterpolator::_Internal::by(const ColorPropertyInterpolator* msg) {
  return *msg->_impl_.by_;
}
ColorPropertyInterpolator::ColorPropertyInterpolator(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.ColorPropertyInterpolator)
}
ColorPropertyInterpolator::ColorPropertyInterpolator(const ColorPropertyInterpolator& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ColorPropertyInterpolator* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.from_){nullptr}
    , decltype(_impl_.to_){nullptr}
    , decltype(_impl_.by_){nullptr}
    , decltype(_impl_.t_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_from()) {
    _this->_impl_.from_ = new ::Property::ColorPropertyValue(*from._impl_.from_);
  }
  if (from._internal_has_to()) {
    _this->_impl_.to_ = new ::Property::ColorPropertyValue(*from._impl_.to_);
  }
  if (from._internal_has_by()) {
    _this->_impl_.by_ = new ::Property::Interpolation(*from._impl_.by_);
  }
  if (from._internal_has_t()) {
    _this->_impl_.t_ = new ::Property::ScalarPropertyValue(*from._impl_.t_);
  }
  // @@protoc_insertion_point(copy_constructor:Property.ColorPropertyInterpolator)
}

inline void ColorPropertyInterpolator::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.from_){nullptr}
    , decltype(_impl_.to_){nullptr}
    , decltype(_impl_.by_){nullptr}
    , decltype(_impl_.t_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ColorPropertyInterpolator::~ColorPropertyInterpolator() {
  // @@protoc_insertion_point(destructor:Property.ColorPropertyInterpolator)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ColorPropertyInterpolator::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.from_;
  if (this != internal_default_instance()) delete _impl_.to_;
  if (this != internal_default_instance()) delete _impl_.by_;
  if (this != internal_default_instance()) delete _impl_.t_;
}

void ColorPropertyInterpolator::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ColorPropertyInterpolator::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.ColorPropertyInterpolator)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.from_ != nullptr) {
    delete _impl_.from_;
  }
  _impl_.from_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.to_ != nullptr) {
    delete _impl_.to_;
  }
  _impl_.to_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.by_ != nullptr) {
    delete _impl_.by_;
  }
  _impl_.by_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.t_ != nullptr) {
    delete _impl_.t_;
  }
  _impl_.t_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ColorPropertyInterpolator::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Property.ColorPropertyValue from = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_from(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.ColorPropertyValue to = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_to(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.Interpolation by = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_by(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.ScalarPropertyValue t = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_t(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ColorPropertyInterpolator::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.ColorPropertyInterpolator)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Property.ColorPropertyValue from = 1;
  if (this->_internal_has_from()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::from(this),
        _Internal::from(this).GetCachedSize(), target, stream);
  }

  // .Property.ColorPropertyValue to = 2;
  if (this->_internal_has_to()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::to(this),
        _Internal::to(this).GetCachedSize(), target, stream);
  }

  // .Property.Interpolation by = 3;
  if (this->_internal_has_by()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::by(this),
        _Internal::by(this).GetCachedSize(), target, stream);
  }

  // .Property.ScalarPropertyValue t = 4;
  if (this->_internal_has_t()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::t(this),
        _Internal::t(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.ColorPropertyInterpolator)
  return target;
}

size_t ColorPropertyInterpolator::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.ColorPropertyInterpolator)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Property.ColorPropertyValue from = 1;
  if (this->_internal_has_from()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.from_);
  }

  // .Property.ColorPropertyValue to = 2;
  if (this->_internal_has_to()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.to_);
  }

  // .Property.Interpolation by = 3;
  if (this->_internal_has_by()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.by_);
  }

  // .Property.ScalarPropertyValue t = 4;
  if (this->_internal_has_t()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.t_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ColorPropertyInterpolator::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ColorPropertyInterpolator::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ColorPropertyInterpolator::GetClassData() const { return &_class_data_; }


void ColorPropertyInterpolator::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ColorPropertyInterpolator*>(&to_msg);
  auto& from = static_cast<const ColorPropertyInterpolator&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.ColorPropertyInterpolator)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_from()) {
    _this->_internal_mutable_from()->::Property::ColorPropertyValue::MergeFrom(
        from._internal_from());
  }
  if (from._internal_has_to()) {
    _this->_internal_mutable_to()->::Property::ColorPropertyValue::MergeFrom(
        from._internal_to());
  }
  if (from._internal_has_by()) {
    _this->_internal_mutable_by()->::Property::Interpolation::MergeFrom(
        from._internal_by());
  }
  if (from._internal_has_t()) {
    _this->_internal_mutable_t()->::Property::ScalarPropertyValue::MergeFrom(
        from._internal_t());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ColorPropertyInterpolator::CopyFrom(const ColorPropertyInterpolator& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.ColorPropertyInterpolator)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ColorPropertyInterpolator::IsInitialized() const {
  return true;
}

void ColorPropertyInterpolator::InternalSwap(ColorPropertyInterpolator* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ColorPropertyInterpolator, _impl_.t_)
      + sizeof(ColorPropertyInterpolator::_impl_.t_)
      - PROTOBUF_FIELD_OFFSET(ColorPropertyInterpolator, _impl_.from_)>(
          reinterpret_cast<char*>(&_impl_.from_),
          reinterpret_cast<char*>(&other->_impl_.from_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ColorPropertyInterpolator::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[48]);
}

// ===================================================================

class ColorPerChannel::_Internal {
 public:
  static const ::Property::ScalarPropertyValue& r(const ColorPerChannel* msg);
  static const ::Property::ScalarPropertyValue& g(const ColorPerChannel* msg);
  static const ::Property::ScalarPropertyValue& b(const ColorPerChannel* msg);
  static const ::Property::ScalarPropertyValue& a(const ColorPerChannel* msg);
};

const ::Property::ScalarPropertyValue&
ColorPerChannel::_Internal::r(const ColorPerChannel* msg) {
  return *msg->_impl_.r_;
}
const ::Property::ScalarPropertyValue&
ColorPerChannel::_Internal::g(const ColorPerChannel* msg) {
  return *msg->_impl_.g_;
}
const ::Property::ScalarPropertyValue&
ColorPerChannel::_Internal::b(const ColorPerChannel* msg) {
  return *msg->_impl_.b_;
}
const ::Property::ScalarPropertyValue&
ColorPerChannel::_Internal::a(const ColorPerChannel* msg) {
  return *msg->_impl_.a_;
}
ColorPerChannel::ColorPerChannel(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.ColorPerChannel)
}
ColorPerChannel::ColorPerChannel(const ColorPerChannel& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ColorPerChannel* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.r_){nullptr}
    , decltype(_impl_.g_){nullptr}
    , decltype(_impl_.b_){nullptr}
    , decltype(_impl_.a_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_r()) {
    _this->_impl_.r_ = new ::Property::ScalarPropertyValue(*from._impl_.r_);
  }
  if (from._internal_has_g()) {
    _this->_impl_.g_ = new ::Property::ScalarPropertyValue(*from._impl_.g_);
  }
  if (from._internal_has_b()) {
    _this->_impl_.b_ = new ::Property::ScalarPropertyValue(*from._impl_.b_);
  }
  if (from._internal_has_a()) {
    _this->_impl_.a_ = new ::Property::ScalarPropertyValue(*from._impl_.a_);
  }
  // @@protoc_insertion_point(copy_constructor:Property.ColorPerChannel)
}

inline void ColorPerChannel::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.r_){nullptr}
    , decltype(_impl_.g_){nullptr}
    , decltype(_impl_.b_){nullptr}
    , decltype(_impl_.a_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ColorPerChannel::~ColorPerChannel() {
  // @@protoc_insertion_point(destructor:Property.ColorPerChannel)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ColorPerChannel::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.r_;
  if (this != internal_default_instance()) delete _impl_.g_;
  if (this != internal_default_instance()) delete _impl_.b_;
  if (this != internal_default_instance()) delete _impl_.a_;
}

void ColorPerChannel::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ColorPerChannel::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.ColorPerChannel)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.r_ != nullptr) {
    delete _impl_.r_;
  }
  _impl_.r_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.g_ != nullptr) {
    delete _impl_.g_;
  }
  _impl_.g_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.b_ != nullptr) {
    delete _impl_.b_;
  }
  _impl_.b_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.a_ != nullptr) {
    delete _impl_.a_;
  }
  _impl_.a_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ColorPerChannel::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Property.ScalarPropertyValue r = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_r(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.ScalarPropertyValue g = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_g(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.ScalarPropertyValue b = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_b(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.ScalarPropertyValue a = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_a(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ColorPerChannel::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.ColorPerChannel)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Property.ScalarPropertyValue r = 1;
  if (this->_internal_has_r()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::r(this),
        _Internal::r(this).GetCachedSize(), target, stream);
  }

  // .Property.ScalarPropertyValue g = 2;
  if (this->_internal_has_g()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::g(this),
        _Internal::g(this).GetCachedSize(), target, stream);
  }

  // .Property.ScalarPropertyValue b = 3;
  if (this->_internal_has_b()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::b(this),
        _Internal::b(this).GetCachedSize(), target, stream);
  }

  // .Property.ScalarPropertyValue a = 4;
  if (this->_internal_has_a()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::a(this),
        _Internal::a(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.ColorPerChannel)
  return target;
}

size_t ColorPerChannel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.ColorPerChannel)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Property.ScalarPropertyValue r = 1;
  if (this->_internal_has_r()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.r_);
  }

  // .Property.ScalarPropertyValue g = 2;
  if (this->_internal_has_g()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.g_);
  }

  // .Property.ScalarPropertyValue b = 3;
  if (this->_internal_has_b()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.b_);
  }

  // .Property.ScalarPropertyValue a = 4;
  if (this->_internal_has_a()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.a_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ColorPerChannel::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ColorPerChannel::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ColorPerChannel::GetClassData() const { return &_class_data_; }


void ColorPerChannel::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ColorPerChannel*>(&to_msg);
  auto& from = static_cast<const ColorPerChannel&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.ColorPerChannel)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_r()) {
    _this->_internal_mutable_r()->::Property::ScalarPropertyValue::MergeFrom(
        from._internal_r());
  }
  if (from._internal_has_g()) {
    _this->_internal_mutable_g()->::Property::ScalarPropertyValue::MergeFrom(
        from._internal_g());
  }
  if (from._internal_has_b()) {
    _this->_internal_mutable_b()->::Property::ScalarPropertyValue::MergeFrom(
        from._internal_b());
  }
  if (from._internal_has_a()) {
    _this->_internal_mutable_a()->::Property::ScalarPropertyValue::MergeFrom(
        from._internal_a());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ColorPerChannel::CopyFrom(const ColorPerChannel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.ColorPerChannel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ColorPerChannel::IsInitialized() const {
  return true;
}

void ColorPerChannel::InternalSwap(ColorPerChannel* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ColorPerChannel, _impl_.a_)
      + sizeof(ColorPerChannel::_impl_.a_)
      - PROTOBUF_FIELD_OFFSET(ColorPerChannel, _impl_.r_)>(
          reinterpret_cast<char*>(&_impl_.r_),
          reinterpret_cast<char*>(&other->_impl_.r_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ColorPerChannel::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[49]);
}

// ===================================================================

class ColorPropertyKeyframed_ColorKeyframe::_Internal {
 public:
  using HasBits = decltype(std::declval<ColorPropertyKeyframed_ColorKeyframe>()._impl_._has_bits_);
  static const ::Property::ColorPropertyValue& val(const ColorPropertyKeyframed_ColorKeyframe* msg);
  static const ::Common::Color4& tangentin(const ColorPropertyKeyframed_ColorKeyframe* msg);
  static void set_has_tangentin(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::Common::Color4& tangentout(const ColorPropertyKeyframed_ColorKeyframe* msg);
  static void set_has_tangentout(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::Property::ColorPropertyValue&
ColorPropertyKeyframed_ColorKeyframe::_Internal::val(const ColorPropertyKeyframed_ColorKeyframe* msg) {
  return *msg->_impl_.val_;
}
const ::Common::Color4&
ColorPropertyKeyframed_ColorKeyframe::_Internal::tangentin(const ColorPropertyKeyframed_ColorKeyframe* msg) {
  return *msg->_impl_.tangentin_;
}
const ::Common::Color4&
ColorPropertyKeyframed_ColorKeyframe::_Internal::tangentout(const ColorPropertyKeyframed_ColorKeyframe* msg) {
  return *msg->_impl_.tangentout_;
}
void ColorPropertyKeyframed_ColorKeyframe::clear_tangentin() {
  if (_impl_.tangentin_ != nullptr) _impl_.tangentin_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void ColorPropertyKeyframed_ColorKeyframe::clear_tangentout() {
  if (_impl_.tangentout_ != nullptr) _impl_.tangentout_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
ColorPropertyKeyframed_ColorKeyframe::ColorPropertyKeyframed_ColorKeyframe(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.ColorPropertyKeyframed.ColorKeyframe)
}
ColorPropertyKeyframed_ColorKeyframe::ColorPropertyKeyframed_ColorKeyframe(const ColorPropertyKeyframed_ColorKeyframe& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ColorPropertyKeyframed_ColorKeyframe* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.val_){nullptr}
    , decltype(_impl_.tangentin_){nullptr}
    , decltype(_impl_.tangentout_){nullptr}
    , decltype(_impl_.t_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_val()) {
    _this->_impl_.val_ = new ::Property::ColorPropertyValue(*from._impl_.val_);
  }
  if (from._internal_has_tangentin()) {
    _this->_impl_.tangentin_ = new ::Common::Color4(*from._impl_.tangentin_);
  }
  if (from._internal_has_tangentout()) {
    _this->_impl_.tangentout_ = new ::Common::Color4(*from._impl_.tangentout_);
  }
  _this->_impl_.t_ = from._impl_.t_;
  // @@protoc_insertion_point(copy_constructor:Property.ColorPropertyKeyframed.ColorKeyframe)
}

inline void ColorPropertyKeyframed_ColorKeyframe::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.val_){nullptr}
    , decltype(_impl_.tangentin_){nullptr}
    , decltype(_impl_.tangentout_){nullptr}
    , decltype(_impl_.t_){0}
  };
}

ColorPropertyKeyframed_ColorKeyframe::~ColorPropertyKeyframed_ColorKeyframe() {
  // @@protoc_insertion_point(destructor:Property.ColorPropertyKeyframed.ColorKeyframe)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ColorPropertyKeyframed_ColorKeyframe::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.val_;
  if (this != internal_default_instance()) delete _impl_.tangentin_;
  if (this != internal_default_instance()) delete _impl_.tangentout_;
}

void ColorPropertyKeyframed_ColorKeyframe::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ColorPropertyKeyframed_ColorKeyframe::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.ColorPropertyKeyframed.ColorKeyframe)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.val_ != nullptr) {
    delete _impl_.val_;
  }
  _impl_.val_ = nullptr;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.tangentin_ != nullptr);
      _impl_.tangentin_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.tangentout_ != nullptr);
      _impl_.tangentout_->Clear();
    }
  }
  _impl_.t_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ColorPropertyKeyframed_ColorKeyframe::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // float t = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 13)) {
          _impl_.t_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // .Property.ColorPropertyValue val = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_val(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .Common.Color4 tangentIn = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_tangentin(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .Common.Color4 tangentOut = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_tangentout(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ColorPropertyKeyframed_ColorKeyframe::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.ColorPropertyKeyframed.ColorKeyframe)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // float t = 1;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_t = this->_internal_t();
  uint32_t raw_t;
  memcpy(&raw_t, &tmp_t, sizeof(tmp_t));
  if (raw_t != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(1, this->_internal_t(), target);
  }

  // .Property.ColorPropertyValue val = 2;
  if (this->_internal_has_val()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::val(this),
        _Internal::val(this).GetCachedSize(), target, stream);
  }

  // optional .Common.Color4 tangentIn = 3;
  if (_internal_has_tangentin()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::tangentin(this),
        _Internal::tangentin(this).GetCachedSize(), target, stream);
  }

  // optional .Common.Color4 tangentOut = 4;
  if (_internal_has_tangentout()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::tangentout(this),
        _Internal::tangentout(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.ColorPropertyKeyframed.ColorKeyframe)
  return target;
}

size_t ColorPropertyKeyframed_ColorKeyframe::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.ColorPropertyKeyframed.ColorKeyframe)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Property.ColorPropertyValue val = 2;
  if (this->_internal_has_val()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.val_);
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .Common.Color4 tangentIn = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.tangentin_);
    }

    // optional .Common.Color4 tangentOut = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.tangentout_);
    }

  }
  // float t = 1;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_t = this->_internal_t();
  uint32_t raw_t;
  memcpy(&raw_t, &tmp_t, sizeof(tmp_t));
  if (raw_t != 0) {
    total_size += 1 + 4;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ColorPropertyKeyframed_ColorKeyframe::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ColorPropertyKeyframed_ColorKeyframe::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ColorPropertyKeyframed_ColorKeyframe::GetClassData() const { return &_class_data_; }


void ColorPropertyKeyframed_ColorKeyframe::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ColorPropertyKeyframed_ColorKeyframe*>(&to_msg);
  auto& from = static_cast<const ColorPropertyKeyframed_ColorKeyframe&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.ColorPropertyKeyframed.ColorKeyframe)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_val()) {
    _this->_internal_mutable_val()->::Property::ColorPropertyValue::MergeFrom(
        from._internal_val());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_tangentin()->::Common::Color4::MergeFrom(
          from._internal_tangentin());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_tangentout()->::Common::Color4::MergeFrom(
          from._internal_tangentout());
    }
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_t = from._internal_t();
  uint32_t raw_t;
  memcpy(&raw_t, &tmp_t, sizeof(tmp_t));
  if (raw_t != 0) {
    _this->_internal_set_t(from._internal_t());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ColorPropertyKeyframed_ColorKeyframe::CopyFrom(const ColorPropertyKeyframed_ColorKeyframe& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.ColorPropertyKeyframed.ColorKeyframe)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ColorPropertyKeyframed_ColorKeyframe::IsInitialized() const {
  return true;
}

void ColorPropertyKeyframed_ColorKeyframe::InternalSwap(ColorPropertyKeyframed_ColorKeyframe* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ColorPropertyKeyframed_ColorKeyframe, _impl_.t_)
      + sizeof(ColorPropertyKeyframed_ColorKeyframe::_impl_.t_)
      - PROTOBUF_FIELD_OFFSET(ColorPropertyKeyframed_ColorKeyframe, _impl_.val_)>(
          reinterpret_cast<char*>(&_impl_.val_),
          reinterpret_cast<char*>(&other->_impl_.val_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ColorPropertyKeyframed_ColorKeyframe::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[50]);
}

// ===================================================================

class ColorPropertyKeyframed::_Internal {
 public:
  using HasBits = decltype(std::declval<ColorPropertyKeyframed>()._impl_._has_bits_);
  static const ::Property::ScalarPropertyValue& tsrc(const ColorPropertyKeyframed* msg);
  static void set_has_tsrc(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::Property::ScalarPropertyValue&
ColorPropertyKeyframed::_Internal::tsrc(const ColorPropertyKeyframed* msg) {
  return *msg->_impl_.tsrc_;
}
ColorPropertyKeyframed::ColorPropertyKeyframed(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.ColorPropertyKeyframed)
}
ColorPropertyKeyframed::ColorPropertyKeyframed(const ColorPropertyKeyframed& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ColorPropertyKeyframed* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.keys_){from._impl_.keys_}
    , decltype(_impl_.tsrc_){nullptr}
    , decltype(_impl_.looping_){}
    , decltype(_impl_.tangentgen_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_tsrc()) {
    _this->_impl_.tsrc_ = new ::Property::ScalarPropertyValue(*from._impl_.tsrc_);
  }
  ::memcpy(&_impl_.looping_, &from._impl_.looping_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.tangentgen_) -
    reinterpret_cast<char*>(&_impl_.looping_)) + sizeof(_impl_.tangentgen_));
  // @@protoc_insertion_point(copy_constructor:Property.ColorPropertyKeyframed)
}

inline void ColorPropertyKeyframed::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.keys_){arena}
    , decltype(_impl_.tsrc_){nullptr}
    , decltype(_impl_.looping_){0}
    , decltype(_impl_.tangentgen_){0}
  };
}

ColorPropertyKeyframed::~ColorPropertyKeyframed() {
  // @@protoc_insertion_point(destructor:Property.ColorPropertyKeyframed)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ColorPropertyKeyframed::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.keys_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.tsrc_;
}

void ColorPropertyKeyframed::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ColorPropertyKeyframed::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.ColorPropertyKeyframed)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.keys_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.tsrc_ != nullptr);
    _impl_.tsrc_->Clear();
  }
  ::memset(&_impl_.looping_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.tangentgen_) -
      reinterpret_cast<char*>(&_impl_.looping_)) + sizeof(_impl_.tangentgen_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ColorPropertyKeyframed::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .Property.ScalarPropertyValue tSrc = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_tsrc(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .Property.ColorPropertyKeyframed.ColorKeyframe keys = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_keys(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<82>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .Property.KeyframeLoopingEnum looping = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 88)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_looping(static_cast<::Property::KeyframeLoopingEnum>(val));
        } else
          goto handle_unusual;
        continue;
      // .Property.TangentsAutocomputeMethodEnum tangentGen = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 96)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_tangentgen(static_cast<::Property::TangentsAutocomputeMethodEnum>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ColorPropertyKeyframed::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.ColorPropertyKeyframed)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional .Property.ScalarPropertyValue tSrc = 8;
  if (_internal_has_tsrc()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(8, _Internal::tsrc(this),
        _Internal::tsrc(this).GetCachedSize(), target, stream);
  }

  // repeated .Property.ColorPropertyKeyframed.ColorKeyframe keys = 10;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_keys_size()); i < n; i++) {
    const auto& repfield = this->_internal_keys(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(10, repfield, repfield.GetCachedSize(), target, stream);
  }

  // .Property.KeyframeLoopingEnum looping = 11;
  if (this->_internal_looping() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      11, this->_internal_looping(), target);
  }

  // .Property.TangentsAutocomputeMethodEnum tangentGen = 12;
  if (this->_internal_tangentgen() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      12, this->_internal_tangentgen(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.ColorPropertyKeyframed)
  return target;
}

size_t ColorPropertyKeyframed::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.ColorPropertyKeyframed)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Property.ColorPropertyKeyframed.ColorKeyframe keys = 10;
  total_size += 1UL * this->_internal_keys_size();
  for (const auto& msg : this->_impl_.keys_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // optional .Property.ScalarPropertyValue tSrc = 8;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.tsrc_);
  }

  // .Property.KeyframeLoopingEnum looping = 11;
  if (this->_internal_looping() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_looping());
  }

  // .Property.TangentsAutocomputeMethodEnum tangentGen = 12;
  if (this->_internal_tangentgen() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_tangentgen());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ColorPropertyKeyframed::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ColorPropertyKeyframed::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ColorPropertyKeyframed::GetClassData() const { return &_class_data_; }


void ColorPropertyKeyframed::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ColorPropertyKeyframed*>(&to_msg);
  auto& from = static_cast<const ColorPropertyKeyframed&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.ColorPropertyKeyframed)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.keys_.MergeFrom(from._impl_.keys_);
  if (from._internal_has_tsrc()) {
    _this->_internal_mutable_tsrc()->::Property::ScalarPropertyValue::MergeFrom(
        from._internal_tsrc());
  }
  if (from._internal_looping() != 0) {
    _this->_internal_set_looping(from._internal_looping());
  }
  if (from._internal_tangentgen() != 0) {
    _this->_internal_set_tangentgen(from._internal_tangentgen());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ColorPropertyKeyframed::CopyFrom(const ColorPropertyKeyframed& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.ColorPropertyKeyframed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ColorPropertyKeyframed::IsInitialized() const {
  return true;
}

void ColorPropertyKeyframed::InternalSwap(ColorPropertyKeyframed* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.keys_.InternalSwap(&other->_impl_.keys_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ColorPropertyKeyframed, _impl_.tangentgen_)
      + sizeof(ColorPropertyKeyframed::_impl_.tangentgen_)
      - PROTOBUF_FIELD_OFFSET(ColorPropertyKeyframed, _impl_.tsrc_)>(
          reinterpret_cast<char*>(&_impl_.tsrc_),
          reinterpret_cast<char*>(&other->_impl_.tsrc_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ColorPropertyKeyframed::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[51]);
}

// ===================================================================

class ColorPropertyApproach::_Internal {
 public:
  static const ::Property::ScalarPropertyValue& t(const ColorPropertyApproach* msg);
  static const ::Property::ColorPropertyValue& to(const ColorPropertyApproach* msg);
  static const ::Property::ScalarPropertyValue& timetohalf(const ColorPropertyApproach* msg);
  static const ::Property::ColorPropertyValue& start(const ColorPropertyApproach* msg);
};

const ::Property::ScalarPropertyValue&
ColorPropertyApproach::_Internal::t(const ColorPropertyApproach* msg) {
  return *msg->_impl_.t_;
}
const ::Property::ColorPropertyValue&
ColorPropertyApproach::_Internal::to(const ColorPropertyApproach* msg) {
  return *msg->_impl_.to_;
}
const ::Property::ScalarPropertyValue&
ColorPropertyApproach::_Internal::timetohalf(const ColorPropertyApproach* msg) {
  return *msg->_impl_.timetohalf_;
}
const ::Property::ColorPropertyValue&
ColorPropertyApproach::_Internal::start(const ColorPropertyApproach* msg) {
  return *msg->_impl_.start_;
}
ColorPropertyApproach::ColorPropertyApproach(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.ColorPropertyApproach)
}
ColorPropertyApproach::ColorPropertyApproach(const ColorPropertyApproach& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ColorPropertyApproach* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.t_){nullptr}
    , decltype(_impl_.to_){nullptr}
    , decltype(_impl_.timetohalf_){nullptr}
    , decltype(_impl_.start_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_t()) {
    _this->_impl_.t_ = new ::Property::ScalarPropertyValue(*from._impl_.t_);
  }
  if (from._internal_has_to()) {
    _this->_impl_.to_ = new ::Property::ColorPropertyValue(*from._impl_.to_);
  }
  if (from._internal_has_timetohalf()) {
    _this->_impl_.timetohalf_ = new ::Property::ScalarPropertyValue(*from._impl_.timetohalf_);
  }
  if (from._internal_has_start()) {
    _this->_impl_.start_ = new ::Property::ColorPropertyValue(*from._impl_.start_);
  }
  // @@protoc_insertion_point(copy_constructor:Property.ColorPropertyApproach)
}

inline void ColorPropertyApproach::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.t_){nullptr}
    , decltype(_impl_.to_){nullptr}
    , decltype(_impl_.timetohalf_){nullptr}
    , decltype(_impl_.start_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ColorPropertyApproach::~ColorPropertyApproach() {
  // @@protoc_insertion_point(destructor:Property.ColorPropertyApproach)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ColorPropertyApproach::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.t_;
  if (this != internal_default_instance()) delete _impl_.to_;
  if (this != internal_default_instance()) delete _impl_.timetohalf_;
  if (this != internal_default_instance()) delete _impl_.start_;
}

void ColorPropertyApproach::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ColorPropertyApproach::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.ColorPropertyApproach)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.t_ != nullptr) {
    delete _impl_.t_;
  }
  _impl_.t_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.to_ != nullptr) {
    delete _impl_.to_;
  }
  _impl_.to_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.timetohalf_ != nullptr) {
    delete _impl_.timetohalf_;
  }
  _impl_.timetohalf_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.start_ != nullptr) {
    delete _impl_.start_;
  }
  _impl_.start_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ColorPropertyApproach::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Property.ScalarPropertyValue t = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_t(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.ColorPropertyValue to = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_to(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.ScalarPropertyValue timeToHalf = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_timetohalf(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.ColorPropertyValue start = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_start(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ColorPropertyApproach::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.ColorPropertyApproach)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Property.ScalarPropertyValue t = 1;
  if (this->_internal_has_t()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::t(this),
        _Internal::t(this).GetCachedSize(), target, stream);
  }

  // .Property.ColorPropertyValue to = 2;
  if (this->_internal_has_to()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::to(this),
        _Internal::to(this).GetCachedSize(), target, stream);
  }

  // .Property.ScalarPropertyValue timeToHalf = 3;
  if (this->_internal_has_timetohalf()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::timetohalf(this),
        _Internal::timetohalf(this).GetCachedSize(), target, stream);
  }

  // .Property.ColorPropertyValue start = 4;
  if (this->_internal_has_start()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::start(this),
        _Internal::start(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.ColorPropertyApproach)
  return target;
}

size_t ColorPropertyApproach::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.ColorPropertyApproach)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Property.ScalarPropertyValue t = 1;
  if (this->_internal_has_t()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.t_);
  }

  // .Property.ColorPropertyValue to = 2;
  if (this->_internal_has_to()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.to_);
  }

  // .Property.ScalarPropertyValue timeToHalf = 3;
  if (this->_internal_has_timetohalf()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.timetohalf_);
  }

  // .Property.ColorPropertyValue start = 4;
  if (this->_internal_has_start()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.start_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ColorPropertyApproach::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ColorPropertyApproach::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ColorPropertyApproach::GetClassData() const { return &_class_data_; }


void ColorPropertyApproach::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ColorPropertyApproach*>(&to_msg);
  auto& from = static_cast<const ColorPropertyApproach&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.ColorPropertyApproach)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_t()) {
    _this->_internal_mutable_t()->::Property::ScalarPropertyValue::MergeFrom(
        from._internal_t());
  }
  if (from._internal_has_to()) {
    _this->_internal_mutable_to()->::Property::ColorPropertyValue::MergeFrom(
        from._internal_to());
  }
  if (from._internal_has_timetohalf()) {
    _this->_internal_mutable_timetohalf()->::Property::ScalarPropertyValue::MergeFrom(
        from._internal_timetohalf());
  }
  if (from._internal_has_start()) {
    _this->_internal_mutable_start()->::Property::ColorPropertyValue::MergeFrom(
        from._internal_start());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ColorPropertyApproach::CopyFrom(const ColorPropertyApproach& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.ColorPropertyApproach)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ColorPropertyApproach::IsInitialized() const {
  return true;
}

void ColorPropertyApproach::InternalSwap(ColorPropertyApproach* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ColorPropertyApproach, _impl_.start_)
      + sizeof(ColorPropertyApproach::_impl_.start_)
      - PROTOBUF_FIELD_OFFSET(ColorPropertyApproach, _impl_.t_)>(
          reinterpret_cast<char*>(&_impl_.t_),
          reinterpret_cast<char*>(&other->_impl_.t_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ColorPropertyApproach::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[52]);
}

// ===================================================================

class ColorPropertyDeclaration::_Internal {
 public:
  static const ::Common::Color4& default_(const ColorPropertyDeclaration* msg);
  static const ::Property::ColorPropertyMetadata& meta(const ColorPropertyDeclaration* msg);
};

const ::Common::Color4&
ColorPropertyDeclaration::_Internal::default_(const ColorPropertyDeclaration* msg) {
  return *msg->_impl_.default__;
}
const ::Property::ColorPropertyMetadata&
ColorPropertyDeclaration::_Internal::meta(const ColorPropertyDeclaration* msg) {
  return *msg->_impl_.meta_;
}
void ColorPropertyDeclaration::clear_default_() {
  if (GetArenaForAllocation() == nullptr && _impl_.default__ != nullptr) {
    delete _impl_.default__;
  }
  _impl_.default__ = nullptr;
}
ColorPropertyDeclaration::ColorPropertyDeclaration(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.ColorPropertyDeclaration)
}
ColorPropertyDeclaration::ColorPropertyDeclaration(const ColorPropertyDeclaration& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ColorPropertyDeclaration* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.meta_){nullptr}
    , decltype(_impl_.default__){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_meta()) {
    _this->_impl_.meta_ = new ::Property::ColorPropertyMetadata(*from._impl_.meta_);
  }
  if (from._internal_has_default_()) {
    _this->_impl_.default__ = new ::Common::Color4(*from._impl_.default__);
  }
  // @@protoc_insertion_point(copy_constructor:Property.ColorPropertyDeclaration)
}

inline void ColorPropertyDeclaration::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.meta_){nullptr}
    , decltype(_impl_.default__){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ColorPropertyDeclaration::~ColorPropertyDeclaration() {
  // @@protoc_insertion_point(destructor:Property.ColorPropertyDeclaration)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ColorPropertyDeclaration::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.meta_;
  if (this != internal_default_instance()) delete _impl_.default__;
}

void ColorPropertyDeclaration::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ColorPropertyDeclaration::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.ColorPropertyDeclaration)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.meta_ != nullptr) {
    delete _impl_.meta_;
  }
  _impl_.meta_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.default__ != nullptr) {
    delete _impl_.default__;
  }
  _impl_.default__ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ColorPropertyDeclaration::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Property.ColorPropertyMetadata meta = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_meta(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Common.Color4 default = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ColorPropertyDeclaration::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.ColorPropertyDeclaration)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Property.ColorPropertyMetadata meta = 1;
  if (this->_internal_has_meta()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::meta(this),
        _Internal::meta(this).GetCachedSize(), target, stream);
  }

  // .Common.Color4 default = 2;
  if (this->_internal_has_default_()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::default_(this),
        _Internal::default_(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.ColorPropertyDeclaration)
  return target;
}

size_t ColorPropertyDeclaration::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.ColorPropertyDeclaration)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Property.ColorPropertyMetadata meta = 1;
  if (this->_internal_has_meta()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.meta_);
  }

  // .Common.Color4 default = 2;
  if (this->_internal_has_default_()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.default__);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ColorPropertyDeclaration::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ColorPropertyDeclaration::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ColorPropertyDeclaration::GetClassData() const { return &_class_data_; }


void ColorPropertyDeclaration::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ColorPropertyDeclaration*>(&to_msg);
  auto& from = static_cast<const ColorPropertyDeclaration&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.ColorPropertyDeclaration)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_meta()) {
    _this->_internal_mutable_meta()->::Property::ColorPropertyMetadata::MergeFrom(
        from._internal_meta());
  }
  if (from._internal_has_default_()) {
    _this->_internal_mutable_default_()->::Common::Color4::MergeFrom(
        from._internal_default_());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ColorPropertyDeclaration::CopyFrom(const ColorPropertyDeclaration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.ColorPropertyDeclaration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ColorPropertyDeclaration::IsInitialized() const {
  return true;
}

void ColorPropertyDeclaration::InternalSwap(ColorPropertyDeclaration* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ColorPropertyDeclaration, _impl_.default__)
      + sizeof(ColorPropertyDeclaration::_impl_.default__)
      - PROTOBUF_FIELD_OFFSET(ColorPropertyDeclaration, _impl_.meta_)>(
          reinterpret_cast<char*>(&_impl_.meta_),
          reinterpret_cast<char*>(&other->_impl_.meta_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ColorPropertyDeclaration::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[53]);
}

// ===================================================================

class ColorEditingMetadata::_Internal {
 public:
  using HasBits = decltype(std::declval<ColorEditingMetadata>()._impl_._has_bits_);
  static void set_has_allowhdr(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_usesalpha(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

ColorEditingMetadata::ColorEditingMetadata(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.ColorEditingMetadata)
}
ColorEditingMetadata::ColorEditingMetadata(const ColorEditingMetadata& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ColorEditingMetadata* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.allowhdr_){}
    , decltype(_impl_.usesalpha_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.allowhdr_, &from._impl_.allowhdr_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.usesalpha_) -
    reinterpret_cast<char*>(&_impl_.allowhdr_)) + sizeof(_impl_.usesalpha_));
  // @@protoc_insertion_point(copy_constructor:Property.ColorEditingMetadata)
}

inline void ColorEditingMetadata::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.allowhdr_){false}
    , decltype(_impl_.usesalpha_){false}
  };
}

ColorEditingMetadata::~ColorEditingMetadata() {
  // @@protoc_insertion_point(destructor:Property.ColorEditingMetadata)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ColorEditingMetadata::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ColorEditingMetadata::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ColorEditingMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.ColorEditingMetadata)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.allowhdr_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.usesalpha_) -
      reinterpret_cast<char*>(&_impl_.allowhdr_)) + sizeof(_impl_.usesalpha_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ColorEditingMetadata::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional bool allowHdr = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_allowhdr(&has_bits);
          _impl_.allowhdr_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool usesAlpha = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_usesalpha(&has_bits);
          _impl_.usesalpha_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ColorEditingMetadata::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.ColorEditingMetadata)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional bool allowHdr = 2;
  if (_internal_has_allowhdr()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_allowhdr(), target);
  }

  // optional bool usesAlpha = 3;
  if (_internal_has_usesalpha()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_usesalpha(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.ColorEditingMetadata)
  return target;
}

size_t ColorEditingMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.ColorEditingMetadata)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bool allowHdr = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 1;
    }

    // optional bool usesAlpha = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 1;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ColorEditingMetadata::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ColorEditingMetadata::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ColorEditingMetadata::GetClassData() const { return &_class_data_; }


void ColorEditingMetadata::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ColorEditingMetadata*>(&to_msg);
  auto& from = static_cast<const ColorEditingMetadata&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.ColorEditingMetadata)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.allowhdr_ = from._impl_.allowhdr_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.usesalpha_ = from._impl_.usesalpha_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ColorEditingMetadata::CopyFrom(const ColorEditingMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.ColorEditingMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ColorEditingMetadata::IsInitialized() const {
  return true;
}

void ColorEditingMetadata::InternalSwap(ColorEditingMetadata* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ColorEditingMetadata, _impl_.usesalpha_)
      + sizeof(ColorEditingMetadata::_impl_.usesalpha_)
      - PROTOBUF_FIELD_OFFSET(ColorEditingMetadata, _impl_.allowhdr_)>(
          reinterpret_cast<char*>(&_impl_.allowhdr_),
          reinterpret_cast<char*>(&other->_impl_.allowhdr_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ColorEditingMetadata::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[54]);
}

// ===================================================================

class ColorGeneratorMetadata::_Internal {
 public:
  using HasBits = decltype(std::declval<ColorGeneratorMetadata>()._impl_._has_bits_);
  static const ::Property::GeneratorMetadata& base(const ColorGeneratorMetadata* msg);
  static const ::Property::ColorEditingMetadata& edit(const ColorGeneratorMetadata* msg);
  static void set_has_edit(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::Property::GeneratorMetadata&
ColorGeneratorMetadata::_Internal::base(const ColorGeneratorMetadata* msg) {
  return *msg->_impl_.base_;
}
const ::Property::ColorEditingMetadata&
ColorGeneratorMetadata::_Internal::edit(const ColorGeneratorMetadata* msg) {
  return *msg->_impl_.edit_;
}
ColorGeneratorMetadata::ColorGeneratorMetadata(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.ColorGeneratorMetadata)
}
ColorGeneratorMetadata::ColorGeneratorMetadata(const ColorGeneratorMetadata& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ColorGeneratorMetadata* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.base_){nullptr}
    , decltype(_impl_.edit_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_base()) {
    _this->_impl_.base_ = new ::Property::GeneratorMetadata(*from._impl_.base_);
  }
  if (from._internal_has_edit()) {
    _this->_impl_.edit_ = new ::Property::ColorEditingMetadata(*from._impl_.edit_);
  }
  // @@protoc_insertion_point(copy_constructor:Property.ColorGeneratorMetadata)
}

inline void ColorGeneratorMetadata::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.base_){nullptr}
    , decltype(_impl_.edit_){nullptr}
  };
}

ColorGeneratorMetadata::~ColorGeneratorMetadata() {
  // @@protoc_insertion_point(destructor:Property.ColorGeneratorMetadata)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ColorGeneratorMetadata::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.base_;
  if (this != internal_default_instance()) delete _impl_.edit_;
}

void ColorGeneratorMetadata::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ColorGeneratorMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.ColorGeneratorMetadata)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.base_ != nullptr) {
    delete _impl_.base_;
  }
  _impl_.base_ = nullptr;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.edit_ != nullptr);
    _impl_.edit_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ColorGeneratorMetadata::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Property.GeneratorMetadata base = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_base(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .Property.ColorEditingMetadata edit = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_edit(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ColorGeneratorMetadata::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.ColorGeneratorMetadata)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Property.GeneratorMetadata base = 1;
  if (this->_internal_has_base()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::base(this),
        _Internal::base(this).GetCachedSize(), target, stream);
  }

  // optional .Property.ColorEditingMetadata edit = 2;
  if (_internal_has_edit()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::edit(this),
        _Internal::edit(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.ColorGeneratorMetadata)
  return target;
}

size_t ColorGeneratorMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.ColorGeneratorMetadata)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Property.GeneratorMetadata base = 1;
  if (this->_internal_has_base()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.base_);
  }

  // optional .Property.ColorEditingMetadata edit = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.edit_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ColorGeneratorMetadata::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ColorGeneratorMetadata::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ColorGeneratorMetadata::GetClassData() const { return &_class_data_; }


void ColorGeneratorMetadata::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ColorGeneratorMetadata*>(&to_msg);
  auto& from = static_cast<const ColorGeneratorMetadata&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.ColorGeneratorMetadata)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_base()) {
    _this->_internal_mutable_base()->::Property::GeneratorMetadata::MergeFrom(
        from._internal_base());
  }
  if (from._internal_has_edit()) {
    _this->_internal_mutable_edit()->::Property::ColorEditingMetadata::MergeFrom(
        from._internal_edit());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ColorGeneratorMetadata::CopyFrom(const ColorGeneratorMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.ColorGeneratorMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ColorGeneratorMetadata::IsInitialized() const {
  return true;
}

void ColorGeneratorMetadata::InternalSwap(ColorGeneratorMetadata* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ColorGeneratorMetadata, _impl_.edit_)
      + sizeof(ColorGeneratorMetadata::_impl_.edit_)
      - PROTOBUF_FIELD_OFFSET(ColorGeneratorMetadata, _impl_.base_)>(
          reinterpret_cast<char*>(&_impl_.base_),
          reinterpret_cast<char*>(&other->_impl_.base_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ColorGeneratorMetadata::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[55]);
}

// ===================================================================

class ColorPropertyMetadata::_Internal {
 public:
  using HasBits = decltype(std::declval<ColorPropertyMetadata>()._impl_._has_bits_);
  static const ::Property::PropertyMetadata& base(const ColorPropertyMetadata* msg);
  static const ::Property::ColorEditingMetadata& edit(const ColorPropertyMetadata* msg);
  static void set_has_edit(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::Property::PropertyMetadata&
ColorPropertyMetadata::_Internal::base(const ColorPropertyMetadata* msg) {
  return *msg->_impl_.base_;
}
const ::Property::ColorEditingMetadata&
ColorPropertyMetadata::_Internal::edit(const ColorPropertyMetadata* msg) {
  return *msg->_impl_.edit_;
}
ColorPropertyMetadata::ColorPropertyMetadata(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.ColorPropertyMetadata)
}
ColorPropertyMetadata::ColorPropertyMetadata(const ColorPropertyMetadata& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ColorPropertyMetadata* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.base_){nullptr}
    , decltype(_impl_.edit_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_base()) {
    _this->_impl_.base_ = new ::Property::PropertyMetadata(*from._impl_.base_);
  }
  if (from._internal_has_edit()) {
    _this->_impl_.edit_ = new ::Property::ColorEditingMetadata(*from._impl_.edit_);
  }
  // @@protoc_insertion_point(copy_constructor:Property.ColorPropertyMetadata)
}

inline void ColorPropertyMetadata::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.base_){nullptr}
    , decltype(_impl_.edit_){nullptr}
  };
}

ColorPropertyMetadata::~ColorPropertyMetadata() {
  // @@protoc_insertion_point(destructor:Property.ColorPropertyMetadata)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ColorPropertyMetadata::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.base_;
  if (this != internal_default_instance()) delete _impl_.edit_;
}

void ColorPropertyMetadata::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ColorPropertyMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.ColorPropertyMetadata)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.base_ != nullptr) {
    delete _impl_.base_;
  }
  _impl_.base_ = nullptr;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.edit_ != nullptr);
    _impl_.edit_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ColorPropertyMetadata::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Property.PropertyMetadata base = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_base(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .Property.ColorEditingMetadata edit = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_edit(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ColorPropertyMetadata::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.ColorPropertyMetadata)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Property.PropertyMetadata base = 1;
  if (this->_internal_has_base()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::base(this),
        _Internal::base(this).GetCachedSize(), target, stream);
  }

  // optional .Property.ColorEditingMetadata edit = 4;
  if (_internal_has_edit()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::edit(this),
        _Internal::edit(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.ColorPropertyMetadata)
  return target;
}

size_t ColorPropertyMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.ColorPropertyMetadata)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Property.PropertyMetadata base = 1;
  if (this->_internal_has_base()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.base_);
  }

  // optional .Property.ColorEditingMetadata edit = 4;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.edit_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ColorPropertyMetadata::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ColorPropertyMetadata::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ColorPropertyMetadata::GetClassData() const { return &_class_data_; }


void ColorPropertyMetadata::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ColorPropertyMetadata*>(&to_msg);
  auto& from = static_cast<const ColorPropertyMetadata&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.ColorPropertyMetadata)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_base()) {
    _this->_internal_mutable_base()->::Property::PropertyMetadata::MergeFrom(
        from._internal_base());
  }
  if (from._internal_has_edit()) {
    _this->_internal_mutable_edit()->::Property::ColorEditingMetadata::MergeFrom(
        from._internal_edit());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ColorPropertyMetadata::CopyFrom(const ColorPropertyMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.ColorPropertyMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ColorPropertyMetadata::IsInitialized() const {
  return true;
}

void ColorPropertyMetadata::InternalSwap(ColorPropertyMetadata* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ColorPropertyMetadata, _impl_.edit_)
      + sizeof(ColorPropertyMetadata::_impl_.edit_)
      - PROTOBUF_FIELD_OFFSET(ColorPropertyMetadata, _impl_.base_)>(
          reinterpret_cast<char*>(&_impl_.base_),
          reinterpret_cast<char*>(&other->_impl_.base_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ColorPropertyMetadata::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[56]);
}

// ===================================================================

class BooleanPropertyAssignment::_Internal {
 public:
  static const ::Property::BooleanPropertyValue& value(const BooleanPropertyAssignment* msg);
};

const ::Property::BooleanPropertyValue&
BooleanPropertyAssignment::_Internal::value(const BooleanPropertyAssignment* msg) {
  return *msg->_impl_.value_;
}
BooleanPropertyAssignment::BooleanPropertyAssignment(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.BooleanPropertyAssignment)
}
BooleanPropertyAssignment::BooleanPropertyAssignment(const BooleanPropertyAssignment& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  BooleanPropertyAssignment* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.assignmentid_){}
    , decltype(_impl_.value_){nullptr}
    , decltype(_impl_.priority_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.assignmentid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.assignmentid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_assignmentid().empty()) {
    _this->_impl_.assignmentid_.Set(from._internal_assignmentid(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_value()) {
    _this->_impl_.value_ = new ::Property::BooleanPropertyValue(*from._impl_.value_);
  }
  _this->_impl_.priority_ = from._impl_.priority_;
  // @@protoc_insertion_point(copy_constructor:Property.BooleanPropertyAssignment)
}

inline void BooleanPropertyAssignment::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.assignmentid_){}
    , decltype(_impl_.value_){nullptr}
    , decltype(_impl_.priority_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.assignmentid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.assignmentid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

BooleanPropertyAssignment::~BooleanPropertyAssignment() {
  // @@protoc_insertion_point(destructor:Property.BooleanPropertyAssignment)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void BooleanPropertyAssignment::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.assignmentid_.Destroy();
  if (this != internal_default_instance()) delete _impl_.value_;
}

void BooleanPropertyAssignment::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void BooleanPropertyAssignment::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.BooleanPropertyAssignment)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.assignmentid_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.value_ != nullptr) {
    delete _impl_.value_;
  }
  _impl_.value_ = nullptr;
  _impl_.priority_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BooleanPropertyAssignment::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 priority = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.priority_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.BooleanPropertyValue value = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_value(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string assignmentId = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_assignmentid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "Property.BooleanPropertyAssignment.assignmentId"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BooleanPropertyAssignment::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.BooleanPropertyAssignment)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 priority = 2;
  if (this->_internal_priority() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_priority(), target);
  }

  // .Property.BooleanPropertyValue value = 3;
  if (this->_internal_has_value()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::value(this),
        _Internal::value(this).GetCachedSize(), target, stream);
  }

  // string assignmentId = 4;
  if (!this->_internal_assignmentid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_assignmentid().data(), static_cast<int>(this->_internal_assignmentid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Property.BooleanPropertyAssignment.assignmentId");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_assignmentid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.BooleanPropertyAssignment)
  return target;
}

size_t BooleanPropertyAssignment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.BooleanPropertyAssignment)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string assignmentId = 4;
  if (!this->_internal_assignmentid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_assignmentid());
  }

  // .Property.BooleanPropertyValue value = 3;
  if (this->_internal_has_value()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.value_);
  }

  // int32 priority = 2;
  if (this->_internal_priority() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_priority());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BooleanPropertyAssignment::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    BooleanPropertyAssignment::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BooleanPropertyAssignment::GetClassData() const { return &_class_data_; }


void BooleanPropertyAssignment::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<BooleanPropertyAssignment*>(&to_msg);
  auto& from = static_cast<const BooleanPropertyAssignment&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.BooleanPropertyAssignment)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_assignmentid().empty()) {
    _this->_internal_set_assignmentid(from._internal_assignmentid());
  }
  if (from._internal_has_value()) {
    _this->_internal_mutable_value()->::Property::BooleanPropertyValue::MergeFrom(
        from._internal_value());
  }
  if (from._internal_priority() != 0) {
    _this->_internal_set_priority(from._internal_priority());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BooleanPropertyAssignment::CopyFrom(const BooleanPropertyAssignment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.BooleanPropertyAssignment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BooleanPropertyAssignment::IsInitialized() const {
  return true;
}

void BooleanPropertyAssignment::InternalSwap(BooleanPropertyAssignment* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.assignmentid_, lhs_arena,
      &other->_impl_.assignmentid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BooleanPropertyAssignment, _impl_.priority_)
      + sizeof(BooleanPropertyAssignment::_impl_.priority_)
      - PROTOBUF_FIELD_OFFSET(BooleanPropertyAssignment, _impl_.value_)>(
          reinterpret_cast<char*>(&_impl_.value_),
          reinterpret_cast<char*>(&other->_impl_.value_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BooleanPropertyAssignment::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[57]);
}

// ===================================================================

class BooleanPropertyValue::_Internal {
 public:
  static const ::Property::PropertyIdentifier& ref(const BooleanPropertyValue* msg);
  static const ::Property::BooleanPropertyKeyframed& keyframes(const BooleanPropertyValue* msg);
  static const ::Property::BooleanPropertyScalarComparison& scalarcmp(const BooleanPropertyValue* msg);
  static const ::Property::CustomGeneratorValue& custom(const BooleanPropertyValue* msg);
};

const ::Property::PropertyIdentifier&
BooleanPropertyValue::_Internal::ref(const BooleanPropertyValue* msg) {
  return *msg->_impl_.ValueType_.ref_;
}
const ::Property::BooleanPropertyKeyframed&
BooleanPropertyValue::_Internal::keyframes(const BooleanPropertyValue* msg) {
  return *msg->_impl_.ValueType_.keyframes_;
}
const ::Property::BooleanPropertyScalarComparison&
BooleanPropertyValue::_Internal::scalarcmp(const BooleanPropertyValue* msg) {
  return *msg->_impl_.ValueType_.scalarcmp_;
}
const ::Property::CustomGeneratorValue&
BooleanPropertyValue::_Internal::custom(const BooleanPropertyValue* msg) {
  return *msg->_impl_.ValueType_.custom_;
}
void BooleanPropertyValue::set_allocated_ref(::Property::PropertyIdentifier* ref) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_ValueType();
  if (ref) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(ref);
    if (message_arena != submessage_arena) {
      ref = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ref, submessage_arena);
    }
    set_has_ref();
    _impl_.ValueType_.ref_ = ref;
  }
  // @@protoc_insertion_point(field_set_allocated:Property.BooleanPropertyValue.ref)
}
void BooleanPropertyValue::set_allocated_keyframes(::Property::BooleanPropertyKeyframed* keyframes) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_ValueType();
  if (keyframes) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(keyframes);
    if (message_arena != submessage_arena) {
      keyframes = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, keyframes, submessage_arena);
    }
    set_has_keyframes();
    _impl_.ValueType_.keyframes_ = keyframes;
  }
  // @@protoc_insertion_point(field_set_allocated:Property.BooleanPropertyValue.keyframes)
}
void BooleanPropertyValue::set_allocated_scalarcmp(::Property::BooleanPropertyScalarComparison* scalarcmp) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_ValueType();
  if (scalarcmp) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(scalarcmp);
    if (message_arena != submessage_arena) {
      scalarcmp = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, scalarcmp, submessage_arena);
    }
    set_has_scalarcmp();
    _impl_.ValueType_.scalarcmp_ = scalarcmp;
  }
  // @@protoc_insertion_point(field_set_allocated:Property.BooleanPropertyValue.scalarCmp)
}
void BooleanPropertyValue::set_allocated_custom(::Property::CustomGeneratorValue* custom) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_ValueType();
  if (custom) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(custom);
    if (message_arena != submessage_arena) {
      custom = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, custom, submessage_arena);
    }
    set_has_custom();
    _impl_.ValueType_.custom_ = custom;
  }
  // @@protoc_insertion_point(field_set_allocated:Property.BooleanPropertyValue.custom)
}
BooleanPropertyValue::BooleanPropertyValue(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.BooleanPropertyValue)
}
BooleanPropertyValue::BooleanPropertyValue(const BooleanPropertyValue& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  BooleanPropertyValue* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ValueType_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_ValueType();
  switch (from.ValueType_case()) {
    case kConstant: {
      _this->_internal_set_constant(from._internal_constant());
      break;
    }
    case kRef: {
      _this->_internal_mutable_ref()->::Property::PropertyIdentifier::MergeFrom(
          from._internal_ref());
      break;
    }
    case kKeyframes: {
      _this->_internal_mutable_keyframes()->::Property::BooleanPropertyKeyframed::MergeFrom(
          from._internal_keyframes());
      break;
    }
    case kExpr: {
      _this->_internal_set_expr(from._internal_expr());
      break;
    }
    case kScalarCmp: {
      _this->_internal_mutable_scalarcmp()->::Property::BooleanPropertyScalarComparison::MergeFrom(
          from._internal_scalarcmp());
      break;
    }
    case kUseDefault: {
      _this->_internal_set_usedefault(from._internal_usedefault());
      break;
    }
    case kCustom: {
      _this->_internal_mutable_custom()->::Property::CustomGeneratorValue::MergeFrom(
          from._internal_custom());
      break;
    }
    case VALUETYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:Property.BooleanPropertyValue)
}

inline void BooleanPropertyValue::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ValueType_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  clear_has_ValueType();
}

BooleanPropertyValue::~BooleanPropertyValue() {
  // @@protoc_insertion_point(destructor:Property.BooleanPropertyValue)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void BooleanPropertyValue::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_ValueType()) {
    clear_ValueType();
  }
}

void BooleanPropertyValue::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void BooleanPropertyValue::clear_ValueType() {
// @@protoc_insertion_point(one_of_clear_start:Property.BooleanPropertyValue)
  switch (ValueType_case()) {
    case kConstant: {
      // No need to clear
      break;
    }
    case kRef: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.ValueType_.ref_;
      }
      break;
    }
    case kKeyframes: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.ValueType_.keyframes_;
      }
      break;
    }
    case kExpr: {
      _impl_.ValueType_.expr_.Destroy();
      break;
    }
    case kScalarCmp: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.ValueType_.scalarcmp_;
      }
      break;
    }
    case kUseDefault: {
      // No need to clear
      break;
    }
    case kCustom: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.ValueType_.custom_;
      }
      break;
    }
    case VALUETYPE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = VALUETYPE_NOT_SET;
}


void BooleanPropertyValue::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.BooleanPropertyValue)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_ValueType();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BooleanPropertyValue::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool constant = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _internal_set_constant(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.PropertyIdentifier ref = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_ref(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.BooleanPropertyKeyframed keyframes = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_keyframes(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string expr = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_expr();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "Property.BooleanPropertyValue.expr"));
        } else
          goto handle_unusual;
        continue;
      // .Property.BooleanPropertyScalarComparison scalarCmp = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_scalarcmp(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool useDefault = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          _internal_set_usedefault(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.CustomGeneratorValue custom = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_custom(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BooleanPropertyValue::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.BooleanPropertyValue)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool constant = 1;
  if (_internal_has_constant()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_constant(), target);
  }

  // .Property.PropertyIdentifier ref = 2;
  if (_internal_has_ref()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::ref(this),
        _Internal::ref(this).GetCachedSize(), target, stream);
  }

  // .Property.BooleanPropertyKeyframed keyframes = 5;
  if (_internal_has_keyframes()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::keyframes(this),
        _Internal::keyframes(this).GetCachedSize(), target, stream);
  }

  // string expr = 6;
  if (_internal_has_expr()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_expr().data(), static_cast<int>(this->_internal_expr().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Property.BooleanPropertyValue.expr");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_expr(), target);
  }

  // .Property.BooleanPropertyScalarComparison scalarCmp = 7;
  if (_internal_has_scalarcmp()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::scalarcmp(this),
        _Internal::scalarcmp(this).GetCachedSize(), target, stream);
  }

  // bool useDefault = 8;
  if (_internal_has_usedefault()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(8, this->_internal_usedefault(), target);
  }

  // .Property.CustomGeneratorValue custom = 10;
  if (_internal_has_custom()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(10, _Internal::custom(this),
        _Internal::custom(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.BooleanPropertyValue)
  return target;
}

size_t BooleanPropertyValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.BooleanPropertyValue)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (ValueType_case()) {
    // bool constant = 1;
    case kConstant: {
      total_size += 1 + 1;
      break;
    }
    // .Property.PropertyIdentifier ref = 2;
    case kRef: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.ValueType_.ref_);
      break;
    }
    // .Property.BooleanPropertyKeyframed keyframes = 5;
    case kKeyframes: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.ValueType_.keyframes_);
      break;
    }
    // string expr = 6;
    case kExpr: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_expr());
      break;
    }
    // .Property.BooleanPropertyScalarComparison scalarCmp = 7;
    case kScalarCmp: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.ValueType_.scalarcmp_);
      break;
    }
    // bool useDefault = 8;
    case kUseDefault: {
      total_size += 1 + 1;
      break;
    }
    // .Property.CustomGeneratorValue custom = 10;
    case kCustom: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.ValueType_.custom_);
      break;
    }
    case VALUETYPE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BooleanPropertyValue::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    BooleanPropertyValue::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BooleanPropertyValue::GetClassData() const { return &_class_data_; }


void BooleanPropertyValue::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<BooleanPropertyValue*>(&to_msg);
  auto& from = static_cast<const BooleanPropertyValue&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.BooleanPropertyValue)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.ValueType_case()) {
    case kConstant: {
      _this->_internal_set_constant(from._internal_constant());
      break;
    }
    case kRef: {
      _this->_internal_mutable_ref()->::Property::PropertyIdentifier::MergeFrom(
          from._internal_ref());
      break;
    }
    case kKeyframes: {
      _this->_internal_mutable_keyframes()->::Property::BooleanPropertyKeyframed::MergeFrom(
          from._internal_keyframes());
      break;
    }
    case kExpr: {
      _this->_internal_set_expr(from._internal_expr());
      break;
    }
    case kScalarCmp: {
      _this->_internal_mutable_scalarcmp()->::Property::BooleanPropertyScalarComparison::MergeFrom(
          from._internal_scalarcmp());
      break;
    }
    case kUseDefault: {
      _this->_internal_set_usedefault(from._internal_usedefault());
      break;
    }
    case kCustom: {
      _this->_internal_mutable_custom()->::Property::CustomGeneratorValue::MergeFrom(
          from._internal_custom());
      break;
    }
    case VALUETYPE_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BooleanPropertyValue::CopyFrom(const BooleanPropertyValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.BooleanPropertyValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BooleanPropertyValue::IsInitialized() const {
  return true;
}

void BooleanPropertyValue::InternalSwap(BooleanPropertyValue* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.ValueType_, other->_impl_.ValueType_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata BooleanPropertyValue::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[58]);
}

// ===================================================================

class BooleanPropertyKeyframed_BooleanKeyframe::_Internal {
 public:
  static const ::Property::BooleanPropertyValue& val(const BooleanPropertyKeyframed_BooleanKeyframe* msg);
};

const ::Property::BooleanPropertyValue&
BooleanPropertyKeyframed_BooleanKeyframe::_Internal::val(const BooleanPropertyKeyframed_BooleanKeyframe* msg) {
  return *msg->_impl_.val_;
}
BooleanPropertyKeyframed_BooleanKeyframe::BooleanPropertyKeyframed_BooleanKeyframe(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.BooleanPropertyKeyframed.BooleanKeyframe)
}
BooleanPropertyKeyframed_BooleanKeyframe::BooleanPropertyKeyframed_BooleanKeyframe(const BooleanPropertyKeyframed_BooleanKeyframe& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  BooleanPropertyKeyframed_BooleanKeyframe* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.val_){nullptr}
    , decltype(_impl_.t_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_val()) {
    _this->_impl_.val_ = new ::Property::BooleanPropertyValue(*from._impl_.val_);
  }
  _this->_impl_.t_ = from._impl_.t_;
  // @@protoc_insertion_point(copy_constructor:Property.BooleanPropertyKeyframed.BooleanKeyframe)
}

inline void BooleanPropertyKeyframed_BooleanKeyframe::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.val_){nullptr}
    , decltype(_impl_.t_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

BooleanPropertyKeyframed_BooleanKeyframe::~BooleanPropertyKeyframed_BooleanKeyframe() {
  // @@protoc_insertion_point(destructor:Property.BooleanPropertyKeyframed.BooleanKeyframe)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void BooleanPropertyKeyframed_BooleanKeyframe::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.val_;
}

void BooleanPropertyKeyframed_BooleanKeyframe::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void BooleanPropertyKeyframed_BooleanKeyframe::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.BooleanPropertyKeyframed.BooleanKeyframe)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.val_ != nullptr) {
    delete _impl_.val_;
  }
  _impl_.val_ = nullptr;
  _impl_.t_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BooleanPropertyKeyframed_BooleanKeyframe::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // float t = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 13)) {
          _impl_.t_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // .Property.BooleanPropertyValue val = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_val(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BooleanPropertyKeyframed_BooleanKeyframe::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.BooleanPropertyKeyframed.BooleanKeyframe)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // float t = 1;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_t = this->_internal_t();
  uint32_t raw_t;
  memcpy(&raw_t, &tmp_t, sizeof(tmp_t));
  if (raw_t != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(1, this->_internal_t(), target);
  }

  // .Property.BooleanPropertyValue val = 2;
  if (this->_internal_has_val()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::val(this),
        _Internal::val(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.BooleanPropertyKeyframed.BooleanKeyframe)
  return target;
}

size_t BooleanPropertyKeyframed_BooleanKeyframe::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.BooleanPropertyKeyframed.BooleanKeyframe)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Property.BooleanPropertyValue val = 2;
  if (this->_internal_has_val()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.val_);
  }

  // float t = 1;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_t = this->_internal_t();
  uint32_t raw_t;
  memcpy(&raw_t, &tmp_t, sizeof(tmp_t));
  if (raw_t != 0) {
    total_size += 1 + 4;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BooleanPropertyKeyframed_BooleanKeyframe::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    BooleanPropertyKeyframed_BooleanKeyframe::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BooleanPropertyKeyframed_BooleanKeyframe::GetClassData() const { return &_class_data_; }


void BooleanPropertyKeyframed_BooleanKeyframe::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<BooleanPropertyKeyframed_BooleanKeyframe*>(&to_msg);
  auto& from = static_cast<const BooleanPropertyKeyframed_BooleanKeyframe&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.BooleanPropertyKeyframed.BooleanKeyframe)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_val()) {
    _this->_internal_mutable_val()->::Property::BooleanPropertyValue::MergeFrom(
        from._internal_val());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_t = from._internal_t();
  uint32_t raw_t;
  memcpy(&raw_t, &tmp_t, sizeof(tmp_t));
  if (raw_t != 0) {
    _this->_internal_set_t(from._internal_t());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BooleanPropertyKeyframed_BooleanKeyframe::CopyFrom(const BooleanPropertyKeyframed_BooleanKeyframe& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.BooleanPropertyKeyframed.BooleanKeyframe)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BooleanPropertyKeyframed_BooleanKeyframe::IsInitialized() const {
  return true;
}

void BooleanPropertyKeyframed_BooleanKeyframe::InternalSwap(BooleanPropertyKeyframed_BooleanKeyframe* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BooleanPropertyKeyframed_BooleanKeyframe, _impl_.t_)
      + sizeof(BooleanPropertyKeyframed_BooleanKeyframe::_impl_.t_)
      - PROTOBUF_FIELD_OFFSET(BooleanPropertyKeyframed_BooleanKeyframe, _impl_.val_)>(
          reinterpret_cast<char*>(&_impl_.val_),
          reinterpret_cast<char*>(&other->_impl_.val_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BooleanPropertyKeyframed_BooleanKeyframe::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[59]);
}

// ===================================================================

class BooleanPropertyKeyframed::_Internal {
 public:
  using HasBits = decltype(std::declval<BooleanPropertyKeyframed>()._impl_._has_bits_);
  static const ::Property::ScalarPropertyValue& tsrc(const BooleanPropertyKeyframed* msg);
  static void set_has_tsrc(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::Property::ScalarPropertyValue&
BooleanPropertyKeyframed::_Internal::tsrc(const BooleanPropertyKeyframed* msg) {
  return *msg->_impl_.tsrc_;
}
BooleanPropertyKeyframed::BooleanPropertyKeyframed(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.BooleanPropertyKeyframed)
}
BooleanPropertyKeyframed::BooleanPropertyKeyframed(const BooleanPropertyKeyframed& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  BooleanPropertyKeyframed* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.keys_){from._impl_.keys_}
    , decltype(_impl_.tsrc_){nullptr}
    , decltype(_impl_.looping_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_tsrc()) {
    _this->_impl_.tsrc_ = new ::Property::ScalarPropertyValue(*from._impl_.tsrc_);
  }
  _this->_impl_.looping_ = from._impl_.looping_;
  // @@protoc_insertion_point(copy_constructor:Property.BooleanPropertyKeyframed)
}

inline void BooleanPropertyKeyframed::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.keys_){arena}
    , decltype(_impl_.tsrc_){nullptr}
    , decltype(_impl_.looping_){0}
  };
}

BooleanPropertyKeyframed::~BooleanPropertyKeyframed() {
  // @@protoc_insertion_point(destructor:Property.BooleanPropertyKeyframed)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void BooleanPropertyKeyframed::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.keys_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.tsrc_;
}

void BooleanPropertyKeyframed::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void BooleanPropertyKeyframed::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.BooleanPropertyKeyframed)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.keys_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.tsrc_ != nullptr);
    _impl_.tsrc_->Clear();
  }
  _impl_.looping_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BooleanPropertyKeyframed::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .Property.ScalarPropertyValue tSrc = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_tsrc(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .Property.BooleanPropertyKeyframed.BooleanKeyframe keys = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_keys(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<82>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .Property.KeyframeLoopingEnum looping = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 88)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_looping(static_cast<::Property::KeyframeLoopingEnum>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BooleanPropertyKeyframed::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.BooleanPropertyKeyframed)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional .Property.ScalarPropertyValue tSrc = 8;
  if (_internal_has_tsrc()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(8, _Internal::tsrc(this),
        _Internal::tsrc(this).GetCachedSize(), target, stream);
  }

  // repeated .Property.BooleanPropertyKeyframed.BooleanKeyframe keys = 10;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_keys_size()); i < n; i++) {
    const auto& repfield = this->_internal_keys(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(10, repfield, repfield.GetCachedSize(), target, stream);
  }

  // .Property.KeyframeLoopingEnum looping = 11;
  if (this->_internal_looping() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      11, this->_internal_looping(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.BooleanPropertyKeyframed)
  return target;
}

size_t BooleanPropertyKeyframed::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.BooleanPropertyKeyframed)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Property.BooleanPropertyKeyframed.BooleanKeyframe keys = 10;
  total_size += 1UL * this->_internal_keys_size();
  for (const auto& msg : this->_impl_.keys_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // optional .Property.ScalarPropertyValue tSrc = 8;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.tsrc_);
  }

  // .Property.KeyframeLoopingEnum looping = 11;
  if (this->_internal_looping() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_looping());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BooleanPropertyKeyframed::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    BooleanPropertyKeyframed::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BooleanPropertyKeyframed::GetClassData() const { return &_class_data_; }


void BooleanPropertyKeyframed::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<BooleanPropertyKeyframed*>(&to_msg);
  auto& from = static_cast<const BooleanPropertyKeyframed&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.BooleanPropertyKeyframed)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.keys_.MergeFrom(from._impl_.keys_);
  if (from._internal_has_tsrc()) {
    _this->_internal_mutable_tsrc()->::Property::ScalarPropertyValue::MergeFrom(
        from._internal_tsrc());
  }
  if (from._internal_looping() != 0) {
    _this->_internal_set_looping(from._internal_looping());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BooleanPropertyKeyframed::CopyFrom(const BooleanPropertyKeyframed& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.BooleanPropertyKeyframed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BooleanPropertyKeyframed::IsInitialized() const {
  return true;
}

void BooleanPropertyKeyframed::InternalSwap(BooleanPropertyKeyframed* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.keys_.InternalSwap(&other->_impl_.keys_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BooleanPropertyKeyframed, _impl_.looping_)
      + sizeof(BooleanPropertyKeyframed::_impl_.looping_)
      - PROTOBUF_FIELD_OFFSET(BooleanPropertyKeyframed, _impl_.tsrc_)>(
          reinterpret_cast<char*>(&_impl_.tsrc_),
          reinterpret_cast<char*>(&other->_impl_.tsrc_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BooleanPropertyKeyframed::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[60]);
}

// ===================================================================

class BooleanPropertyScalarComparison::_Internal {
 public:
  static const ::Property::ScalarPropertyValue& a(const BooleanPropertyScalarComparison* msg);
  static const ::Property::ScalarPropertyValue& b(const BooleanPropertyScalarComparison* msg);
};

const ::Property::ScalarPropertyValue&
BooleanPropertyScalarComparison::_Internal::a(const BooleanPropertyScalarComparison* msg) {
  return *msg->_impl_.a_;
}
const ::Property::ScalarPropertyValue&
BooleanPropertyScalarComparison::_Internal::b(const BooleanPropertyScalarComparison* msg) {
  return *msg->_impl_.b_;
}
BooleanPropertyScalarComparison::BooleanPropertyScalarComparison(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.BooleanPropertyScalarComparison)
}
BooleanPropertyScalarComparison::BooleanPropertyScalarComparison(const BooleanPropertyScalarComparison& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  BooleanPropertyScalarComparison* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.a_){nullptr}
    , decltype(_impl_.b_){nullptr}
    , decltype(_impl_.cmp_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_a()) {
    _this->_impl_.a_ = new ::Property::ScalarPropertyValue(*from._impl_.a_);
  }
  if (from._internal_has_b()) {
    _this->_impl_.b_ = new ::Property::ScalarPropertyValue(*from._impl_.b_);
  }
  _this->_impl_.cmp_ = from._impl_.cmp_;
  // @@protoc_insertion_point(copy_constructor:Property.BooleanPropertyScalarComparison)
}

inline void BooleanPropertyScalarComparison::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.a_){nullptr}
    , decltype(_impl_.b_){nullptr}
    , decltype(_impl_.cmp_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

BooleanPropertyScalarComparison::~BooleanPropertyScalarComparison() {
  // @@protoc_insertion_point(destructor:Property.BooleanPropertyScalarComparison)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void BooleanPropertyScalarComparison::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.a_;
  if (this != internal_default_instance()) delete _impl_.b_;
}

void BooleanPropertyScalarComparison::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void BooleanPropertyScalarComparison::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.BooleanPropertyScalarComparison)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.a_ != nullptr) {
    delete _impl_.a_;
  }
  _impl_.a_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.b_ != nullptr) {
    delete _impl_.b_;
  }
  _impl_.b_ = nullptr;
  _impl_.cmp_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BooleanPropertyScalarComparison::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Common.ComparisonMethod cmp = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_cmp(static_cast<::Common::ComparisonMethod>(val));
        } else
          goto handle_unusual;
        continue;
      // .Property.ScalarPropertyValue a = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_a(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.ScalarPropertyValue b = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_b(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BooleanPropertyScalarComparison::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.BooleanPropertyScalarComparison)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Common.ComparisonMethod cmp = 1;
  if (this->_internal_cmp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_cmp(), target);
  }

  // .Property.ScalarPropertyValue a = 2;
  if (this->_internal_has_a()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::a(this),
        _Internal::a(this).GetCachedSize(), target, stream);
  }

  // .Property.ScalarPropertyValue b = 3;
  if (this->_internal_has_b()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::b(this),
        _Internal::b(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.BooleanPropertyScalarComparison)
  return target;
}

size_t BooleanPropertyScalarComparison::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.BooleanPropertyScalarComparison)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Property.ScalarPropertyValue a = 2;
  if (this->_internal_has_a()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.a_);
  }

  // .Property.ScalarPropertyValue b = 3;
  if (this->_internal_has_b()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.b_);
  }

  // .Common.ComparisonMethod cmp = 1;
  if (this->_internal_cmp() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_cmp());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BooleanPropertyScalarComparison::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    BooleanPropertyScalarComparison::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BooleanPropertyScalarComparison::GetClassData() const { return &_class_data_; }


void BooleanPropertyScalarComparison::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<BooleanPropertyScalarComparison*>(&to_msg);
  auto& from = static_cast<const BooleanPropertyScalarComparison&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.BooleanPropertyScalarComparison)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_a()) {
    _this->_internal_mutable_a()->::Property::ScalarPropertyValue::MergeFrom(
        from._internal_a());
  }
  if (from._internal_has_b()) {
    _this->_internal_mutable_b()->::Property::ScalarPropertyValue::MergeFrom(
        from._internal_b());
  }
  if (from._internal_cmp() != 0) {
    _this->_internal_set_cmp(from._internal_cmp());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BooleanPropertyScalarComparison::CopyFrom(const BooleanPropertyScalarComparison& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.BooleanPropertyScalarComparison)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BooleanPropertyScalarComparison::IsInitialized() const {
  return true;
}

void BooleanPropertyScalarComparison::InternalSwap(BooleanPropertyScalarComparison* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BooleanPropertyScalarComparison, _impl_.cmp_)
      + sizeof(BooleanPropertyScalarComparison::_impl_.cmp_)
      - PROTOBUF_FIELD_OFFSET(BooleanPropertyScalarComparison, _impl_.a_)>(
          reinterpret_cast<char*>(&_impl_.a_),
          reinterpret_cast<char*>(&other->_impl_.a_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BooleanPropertyScalarComparison::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[61]);
}

// ===================================================================

class BooleanPropertyDeclaration::_Internal {
 public:
  static const ::Property::BooleanPropertyMetadata& meta(const BooleanPropertyDeclaration* msg);
};

const ::Property::BooleanPropertyMetadata&
BooleanPropertyDeclaration::_Internal::meta(const BooleanPropertyDeclaration* msg) {
  return *msg->_impl_.meta_;
}
BooleanPropertyDeclaration::BooleanPropertyDeclaration(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.BooleanPropertyDeclaration)
}
BooleanPropertyDeclaration::BooleanPropertyDeclaration(const BooleanPropertyDeclaration& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  BooleanPropertyDeclaration* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.meta_){nullptr}
    , decltype(_impl_.default__){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_meta()) {
    _this->_impl_.meta_ = new ::Property::BooleanPropertyMetadata(*from._impl_.meta_);
  }
  _this->_impl_.default__ = from._impl_.default__;
  // @@protoc_insertion_point(copy_constructor:Property.BooleanPropertyDeclaration)
}

inline void BooleanPropertyDeclaration::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.meta_){nullptr}
    , decltype(_impl_.default__){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

BooleanPropertyDeclaration::~BooleanPropertyDeclaration() {
  // @@protoc_insertion_point(destructor:Property.BooleanPropertyDeclaration)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void BooleanPropertyDeclaration::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.meta_;
}

void BooleanPropertyDeclaration::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void BooleanPropertyDeclaration::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.BooleanPropertyDeclaration)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.meta_ != nullptr) {
    delete _impl_.meta_;
  }
  _impl_.meta_ = nullptr;
  _impl_.default__ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BooleanPropertyDeclaration::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Property.BooleanPropertyMetadata meta = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_meta(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool default = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.default__ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BooleanPropertyDeclaration::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.BooleanPropertyDeclaration)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Property.BooleanPropertyMetadata meta = 1;
  if (this->_internal_has_meta()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::meta(this),
        _Internal::meta(this).GetCachedSize(), target, stream);
  }

  // bool default = 2;
  if (this->_internal_default_() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_default_(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.BooleanPropertyDeclaration)
  return target;
}

size_t BooleanPropertyDeclaration::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.BooleanPropertyDeclaration)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Property.BooleanPropertyMetadata meta = 1;
  if (this->_internal_has_meta()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.meta_);
  }

  // bool default = 2;
  if (this->_internal_default_() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BooleanPropertyDeclaration::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    BooleanPropertyDeclaration::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BooleanPropertyDeclaration::GetClassData() const { return &_class_data_; }


void BooleanPropertyDeclaration::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<BooleanPropertyDeclaration*>(&to_msg);
  auto& from = static_cast<const BooleanPropertyDeclaration&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.BooleanPropertyDeclaration)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_meta()) {
    _this->_internal_mutable_meta()->::Property::BooleanPropertyMetadata::MergeFrom(
        from._internal_meta());
  }
  if (from._internal_default_() != 0) {
    _this->_internal_set_default_(from._internal_default_());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BooleanPropertyDeclaration::CopyFrom(const BooleanPropertyDeclaration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.BooleanPropertyDeclaration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BooleanPropertyDeclaration::IsInitialized() const {
  return true;
}

void BooleanPropertyDeclaration::InternalSwap(BooleanPropertyDeclaration* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BooleanPropertyDeclaration, _impl_.default__)
      + sizeof(BooleanPropertyDeclaration::_impl_.default__)
      - PROTOBUF_FIELD_OFFSET(BooleanPropertyDeclaration, _impl_.meta_)>(
          reinterpret_cast<char*>(&_impl_.meta_),
          reinterpret_cast<char*>(&other->_impl_.meta_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BooleanPropertyDeclaration::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[62]);
}

// ===================================================================

class BooleanEditingMetadata::_Internal {
 public:
};

BooleanEditingMetadata::BooleanEditingMetadata(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:Property.BooleanEditingMetadata)
}
BooleanEditingMetadata::BooleanEditingMetadata(const BooleanEditingMetadata& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  BooleanEditingMetadata* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Property.BooleanEditingMetadata)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BooleanEditingMetadata::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BooleanEditingMetadata::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata BooleanEditingMetadata::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[63]);
}

// ===================================================================

class BooleanGeneratorMetadata::_Internal {
 public:
  using HasBits = decltype(std::declval<BooleanGeneratorMetadata>()._impl_._has_bits_);
  static const ::Property::GeneratorMetadata& base(const BooleanGeneratorMetadata* msg);
  static const ::Property::BooleanEditingMetadata& edit(const BooleanGeneratorMetadata* msg);
  static void set_has_edit(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::Property::GeneratorMetadata&
BooleanGeneratorMetadata::_Internal::base(const BooleanGeneratorMetadata* msg) {
  return *msg->_impl_.base_;
}
const ::Property::BooleanEditingMetadata&
BooleanGeneratorMetadata::_Internal::edit(const BooleanGeneratorMetadata* msg) {
  return *msg->_impl_.edit_;
}
BooleanGeneratorMetadata::BooleanGeneratorMetadata(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.BooleanGeneratorMetadata)
}
BooleanGeneratorMetadata::BooleanGeneratorMetadata(const BooleanGeneratorMetadata& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  BooleanGeneratorMetadata* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.base_){nullptr}
    , decltype(_impl_.edit_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_base()) {
    _this->_impl_.base_ = new ::Property::GeneratorMetadata(*from._impl_.base_);
  }
  if (from._internal_has_edit()) {
    _this->_impl_.edit_ = new ::Property::BooleanEditingMetadata(*from._impl_.edit_);
  }
  // @@protoc_insertion_point(copy_constructor:Property.BooleanGeneratorMetadata)
}

inline void BooleanGeneratorMetadata::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.base_){nullptr}
    , decltype(_impl_.edit_){nullptr}
  };
}

BooleanGeneratorMetadata::~BooleanGeneratorMetadata() {
  // @@protoc_insertion_point(destructor:Property.BooleanGeneratorMetadata)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void BooleanGeneratorMetadata::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.base_;
  if (this != internal_default_instance()) delete _impl_.edit_;
}

void BooleanGeneratorMetadata::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void BooleanGeneratorMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.BooleanGeneratorMetadata)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.base_ != nullptr) {
    delete _impl_.base_;
  }
  _impl_.base_ = nullptr;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.edit_ != nullptr);
    _impl_.edit_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BooleanGeneratorMetadata::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Property.GeneratorMetadata base = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_base(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .Property.BooleanEditingMetadata edit = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_edit(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BooleanGeneratorMetadata::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.BooleanGeneratorMetadata)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Property.GeneratorMetadata base = 1;
  if (this->_internal_has_base()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::base(this),
        _Internal::base(this).GetCachedSize(), target, stream);
  }

  // optional .Property.BooleanEditingMetadata edit = 2;
  if (_internal_has_edit()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::edit(this),
        _Internal::edit(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.BooleanGeneratorMetadata)
  return target;
}

size_t BooleanGeneratorMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.BooleanGeneratorMetadata)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Property.GeneratorMetadata base = 1;
  if (this->_internal_has_base()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.base_);
  }

  // optional .Property.BooleanEditingMetadata edit = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.edit_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BooleanGeneratorMetadata::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    BooleanGeneratorMetadata::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BooleanGeneratorMetadata::GetClassData() const { return &_class_data_; }


void BooleanGeneratorMetadata::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<BooleanGeneratorMetadata*>(&to_msg);
  auto& from = static_cast<const BooleanGeneratorMetadata&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.BooleanGeneratorMetadata)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_base()) {
    _this->_internal_mutable_base()->::Property::GeneratorMetadata::MergeFrom(
        from._internal_base());
  }
  if (from._internal_has_edit()) {
    _this->_internal_mutable_edit()->::Property::BooleanEditingMetadata::MergeFrom(
        from._internal_edit());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BooleanGeneratorMetadata::CopyFrom(const BooleanGeneratorMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.BooleanGeneratorMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BooleanGeneratorMetadata::IsInitialized() const {
  return true;
}

void BooleanGeneratorMetadata::InternalSwap(BooleanGeneratorMetadata* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BooleanGeneratorMetadata, _impl_.edit_)
      + sizeof(BooleanGeneratorMetadata::_impl_.edit_)
      - PROTOBUF_FIELD_OFFSET(BooleanGeneratorMetadata, _impl_.base_)>(
          reinterpret_cast<char*>(&_impl_.base_),
          reinterpret_cast<char*>(&other->_impl_.base_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BooleanGeneratorMetadata::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[64]);
}

// ===================================================================

class BooleanPropertyMetadata::_Internal {
 public:
  using HasBits = decltype(std::declval<BooleanPropertyMetadata>()._impl_._has_bits_);
  static const ::Property::PropertyMetadata& base(const BooleanPropertyMetadata* msg);
  static const ::Property::BooleanEditingMetadata& edit(const BooleanPropertyMetadata* msg);
  static void set_has_edit(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::Property::PropertyMetadata&
BooleanPropertyMetadata::_Internal::base(const BooleanPropertyMetadata* msg) {
  return *msg->_impl_.base_;
}
const ::Property::BooleanEditingMetadata&
BooleanPropertyMetadata::_Internal::edit(const BooleanPropertyMetadata* msg) {
  return *msg->_impl_.edit_;
}
BooleanPropertyMetadata::BooleanPropertyMetadata(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.BooleanPropertyMetadata)
}
BooleanPropertyMetadata::BooleanPropertyMetadata(const BooleanPropertyMetadata& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  BooleanPropertyMetadata* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.base_){nullptr}
    , decltype(_impl_.edit_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_base()) {
    _this->_impl_.base_ = new ::Property::PropertyMetadata(*from._impl_.base_);
  }
  if (from._internal_has_edit()) {
    _this->_impl_.edit_ = new ::Property::BooleanEditingMetadata(*from._impl_.edit_);
  }
  // @@protoc_insertion_point(copy_constructor:Property.BooleanPropertyMetadata)
}

inline void BooleanPropertyMetadata::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.base_){nullptr}
    , decltype(_impl_.edit_){nullptr}
  };
}

BooleanPropertyMetadata::~BooleanPropertyMetadata() {
  // @@protoc_insertion_point(destructor:Property.BooleanPropertyMetadata)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void BooleanPropertyMetadata::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.base_;
  if (this != internal_default_instance()) delete _impl_.edit_;
}

void BooleanPropertyMetadata::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void BooleanPropertyMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.BooleanPropertyMetadata)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.base_ != nullptr) {
    delete _impl_.base_;
  }
  _impl_.base_ = nullptr;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.edit_ != nullptr);
    _impl_.edit_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BooleanPropertyMetadata::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Property.PropertyMetadata base = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_base(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .Property.BooleanEditingMetadata edit = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_edit(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BooleanPropertyMetadata::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.BooleanPropertyMetadata)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Property.PropertyMetadata base = 1;
  if (this->_internal_has_base()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::base(this),
        _Internal::base(this).GetCachedSize(), target, stream);
  }

  // optional .Property.BooleanEditingMetadata edit = 2;
  if (_internal_has_edit()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::edit(this),
        _Internal::edit(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.BooleanPropertyMetadata)
  return target;
}

size_t BooleanPropertyMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.BooleanPropertyMetadata)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Property.PropertyMetadata base = 1;
  if (this->_internal_has_base()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.base_);
  }

  // optional .Property.BooleanEditingMetadata edit = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.edit_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BooleanPropertyMetadata::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    BooleanPropertyMetadata::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BooleanPropertyMetadata::GetClassData() const { return &_class_data_; }


void BooleanPropertyMetadata::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<BooleanPropertyMetadata*>(&to_msg);
  auto& from = static_cast<const BooleanPropertyMetadata&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.BooleanPropertyMetadata)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_base()) {
    _this->_internal_mutable_base()->::Property::PropertyMetadata::MergeFrom(
        from._internal_base());
  }
  if (from._internal_has_edit()) {
    _this->_internal_mutable_edit()->::Property::BooleanEditingMetadata::MergeFrom(
        from._internal_edit());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BooleanPropertyMetadata::CopyFrom(const BooleanPropertyMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.BooleanPropertyMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BooleanPropertyMetadata::IsInitialized() const {
  return true;
}

void BooleanPropertyMetadata::InternalSwap(BooleanPropertyMetadata* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BooleanPropertyMetadata, _impl_.edit_)
      + sizeof(BooleanPropertyMetadata::_impl_.edit_)
      - PROTOBUF_FIELD_OFFSET(BooleanPropertyMetadata, _impl_.base_)>(
          reinterpret_cast<char*>(&_impl_.base_),
          reinterpret_cast<char*>(&other->_impl_.base_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BooleanPropertyMetadata::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[65]);
}

// ===================================================================

class JsonPropertyAssignment::_Internal {
 public:
  static const ::Property::JsonPropertyValue& value(const JsonPropertyAssignment* msg);
};

const ::Property::JsonPropertyValue&
JsonPropertyAssignment::_Internal::value(const JsonPropertyAssignment* msg) {
  return *msg->_impl_.value_;
}
JsonPropertyAssignment::JsonPropertyAssignment(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.JsonPropertyAssignment)
}
JsonPropertyAssignment::JsonPropertyAssignment(const JsonPropertyAssignment& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  JsonPropertyAssignment* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.assignmentid_){}
    , decltype(_impl_.value_){nullptr}
    , decltype(_impl_.priority_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.assignmentid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.assignmentid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_assignmentid().empty()) {
    _this->_impl_.assignmentid_.Set(from._internal_assignmentid(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_value()) {
    _this->_impl_.value_ = new ::Property::JsonPropertyValue(*from._impl_.value_);
  }
  _this->_impl_.priority_ = from._impl_.priority_;
  // @@protoc_insertion_point(copy_constructor:Property.JsonPropertyAssignment)
}

inline void JsonPropertyAssignment::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.assignmentid_){}
    , decltype(_impl_.value_){nullptr}
    , decltype(_impl_.priority_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.assignmentid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.assignmentid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

JsonPropertyAssignment::~JsonPropertyAssignment() {
  // @@protoc_insertion_point(destructor:Property.JsonPropertyAssignment)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void JsonPropertyAssignment::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.assignmentid_.Destroy();
  if (this != internal_default_instance()) delete _impl_.value_;
}

void JsonPropertyAssignment::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void JsonPropertyAssignment::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.JsonPropertyAssignment)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.assignmentid_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.value_ != nullptr) {
    delete _impl_.value_;
  }
  _impl_.value_ = nullptr;
  _impl_.priority_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* JsonPropertyAssignment::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 priority = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.priority_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.JsonPropertyValue value = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_value(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string assignmentId = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_assignmentid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "Property.JsonPropertyAssignment.assignmentId"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* JsonPropertyAssignment::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.JsonPropertyAssignment)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 priority = 2;
  if (this->_internal_priority() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_priority(), target);
  }

  // .Property.JsonPropertyValue value = 3;
  if (this->_internal_has_value()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::value(this),
        _Internal::value(this).GetCachedSize(), target, stream);
  }

  // string assignmentId = 4;
  if (!this->_internal_assignmentid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_assignmentid().data(), static_cast<int>(this->_internal_assignmentid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Property.JsonPropertyAssignment.assignmentId");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_assignmentid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.JsonPropertyAssignment)
  return target;
}

size_t JsonPropertyAssignment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.JsonPropertyAssignment)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string assignmentId = 4;
  if (!this->_internal_assignmentid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_assignmentid());
  }

  // .Property.JsonPropertyValue value = 3;
  if (this->_internal_has_value()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.value_);
  }

  // int32 priority = 2;
  if (this->_internal_priority() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_priority());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData JsonPropertyAssignment::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    JsonPropertyAssignment::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*JsonPropertyAssignment::GetClassData() const { return &_class_data_; }


void JsonPropertyAssignment::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<JsonPropertyAssignment*>(&to_msg);
  auto& from = static_cast<const JsonPropertyAssignment&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.JsonPropertyAssignment)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_assignmentid().empty()) {
    _this->_internal_set_assignmentid(from._internal_assignmentid());
  }
  if (from._internal_has_value()) {
    _this->_internal_mutable_value()->::Property::JsonPropertyValue::MergeFrom(
        from._internal_value());
  }
  if (from._internal_priority() != 0) {
    _this->_internal_set_priority(from._internal_priority());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void JsonPropertyAssignment::CopyFrom(const JsonPropertyAssignment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.JsonPropertyAssignment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JsonPropertyAssignment::IsInitialized() const {
  return true;
}

void JsonPropertyAssignment::InternalSwap(JsonPropertyAssignment* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.assignmentid_, lhs_arena,
      &other->_impl_.assignmentid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(JsonPropertyAssignment, _impl_.priority_)
      + sizeof(JsonPropertyAssignment::_impl_.priority_)
      - PROTOBUF_FIELD_OFFSET(JsonPropertyAssignment, _impl_.value_)>(
          reinterpret_cast<char*>(&_impl_.value_),
          reinterpret_cast<char*>(&other->_impl_.value_));
}

::PROTOBUF_NAMESPACE_ID::Metadata JsonPropertyAssignment::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[66]);
}

// ===================================================================

class JsonPropertyValue::_Internal {
 public:
  static const ::Property::PropertyIdentifier& ref(const JsonPropertyValue* msg);
  static const ::Property::CustomGeneratorValue& custom(const JsonPropertyValue* msg);
};

const ::Property::PropertyIdentifier&
JsonPropertyValue::_Internal::ref(const JsonPropertyValue* msg) {
  return *msg->_impl_.ValueType_.ref_;
}
const ::Property::CustomGeneratorValue&
JsonPropertyValue::_Internal::custom(const JsonPropertyValue* msg) {
  return *msg->_impl_.ValueType_.custom_;
}
void JsonPropertyValue::set_allocated_ref(::Property::PropertyIdentifier* ref) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_ValueType();
  if (ref) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(ref);
    if (message_arena != submessage_arena) {
      ref = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ref, submessage_arena);
    }
    set_has_ref();
    _impl_.ValueType_.ref_ = ref;
  }
  // @@protoc_insertion_point(field_set_allocated:Property.JsonPropertyValue.ref)
}
void JsonPropertyValue::set_allocated_custom(::Property::CustomGeneratorValue* custom) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_ValueType();
  if (custom) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(custom);
    if (message_arena != submessage_arena) {
      custom = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, custom, submessage_arena);
    }
    set_has_custom();
    _impl_.ValueType_.custom_ = custom;
  }
  // @@protoc_insertion_point(field_set_allocated:Property.JsonPropertyValue.custom)
}
JsonPropertyValue::JsonPropertyValue(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.JsonPropertyValue)
}
JsonPropertyValue::JsonPropertyValue(const JsonPropertyValue& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  JsonPropertyValue* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ValueType_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_ValueType();
  switch (from.ValueType_case()) {
    case kConstantJson: {
      _this->_internal_set_constantjson(from._internal_constantjson());
      break;
    }
    case kRef: {
      _this->_internal_mutable_ref()->::Property::PropertyIdentifier::MergeFrom(
          from._internal_ref());
      break;
    }
    case kExpr: {
      _this->_internal_set_expr(from._internal_expr());
      break;
    }
    case kUseDefault: {
      _this->_internal_set_usedefault(from._internal_usedefault());
      break;
    }
    case kCustom: {
      _this->_internal_mutable_custom()->::Property::CustomGeneratorValue::MergeFrom(
          from._internal_custom());
      break;
    }
    case VALUETYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:Property.JsonPropertyValue)
}

inline void JsonPropertyValue::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ValueType_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  clear_has_ValueType();
}

JsonPropertyValue::~JsonPropertyValue() {
  // @@protoc_insertion_point(destructor:Property.JsonPropertyValue)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void JsonPropertyValue::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_ValueType()) {
    clear_ValueType();
  }
}

void JsonPropertyValue::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void JsonPropertyValue::clear_ValueType() {
// @@protoc_insertion_point(one_of_clear_start:Property.JsonPropertyValue)
  switch (ValueType_case()) {
    case kConstantJson: {
      _impl_.ValueType_.constantjson_.Destroy();
      break;
    }
    case kRef: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.ValueType_.ref_;
      }
      break;
    }
    case kExpr: {
      _impl_.ValueType_.expr_.Destroy();
      break;
    }
    case kUseDefault: {
      // No need to clear
      break;
    }
    case kCustom: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.ValueType_.custom_;
      }
      break;
    }
    case VALUETYPE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = VALUETYPE_NOT_SET;
}


void JsonPropertyValue::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.JsonPropertyValue)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_ValueType();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* JsonPropertyValue::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string constantJson = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_constantjson();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "Property.JsonPropertyValue.constantJson"));
        } else
          goto handle_unusual;
        continue;
      // .Property.PropertyIdentifier ref = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_ref(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string expr = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_expr();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "Property.JsonPropertyValue.expr"));
        } else
          goto handle_unusual;
        continue;
      // bool useDefault = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _internal_set_usedefault(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.CustomGeneratorValue custom = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_custom(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* JsonPropertyValue::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.JsonPropertyValue)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string constantJson = 1;
  if (_internal_has_constantjson()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_constantjson().data(), static_cast<int>(this->_internal_constantjson().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Property.JsonPropertyValue.constantJson");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_constantjson(), target);
  }

  // .Property.PropertyIdentifier ref = 2;
  if (_internal_has_ref()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::ref(this),
        _Internal::ref(this).GetCachedSize(), target, stream);
  }

  // string expr = 3;
  if (_internal_has_expr()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_expr().data(), static_cast<int>(this->_internal_expr().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Property.JsonPropertyValue.expr");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_expr(), target);
  }

  // bool useDefault = 4;
  if (_internal_has_usedefault()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(4, this->_internal_usedefault(), target);
  }

  // .Property.CustomGeneratorValue custom = 10;
  if (_internal_has_custom()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(10, _Internal::custom(this),
        _Internal::custom(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.JsonPropertyValue)
  return target;
}

size_t JsonPropertyValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.JsonPropertyValue)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (ValueType_case()) {
    // string constantJson = 1;
    case kConstantJson: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_constantjson());
      break;
    }
    // .Property.PropertyIdentifier ref = 2;
    case kRef: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.ValueType_.ref_);
      break;
    }
    // string expr = 3;
    case kExpr: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_expr());
      break;
    }
    // bool useDefault = 4;
    case kUseDefault: {
      total_size += 1 + 1;
      break;
    }
    // .Property.CustomGeneratorValue custom = 10;
    case kCustom: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.ValueType_.custom_);
      break;
    }
    case VALUETYPE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData JsonPropertyValue::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    JsonPropertyValue::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*JsonPropertyValue::GetClassData() const { return &_class_data_; }


void JsonPropertyValue::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<JsonPropertyValue*>(&to_msg);
  auto& from = static_cast<const JsonPropertyValue&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.JsonPropertyValue)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.ValueType_case()) {
    case kConstantJson: {
      _this->_internal_set_constantjson(from._internal_constantjson());
      break;
    }
    case kRef: {
      _this->_internal_mutable_ref()->::Property::PropertyIdentifier::MergeFrom(
          from._internal_ref());
      break;
    }
    case kExpr: {
      _this->_internal_set_expr(from._internal_expr());
      break;
    }
    case kUseDefault: {
      _this->_internal_set_usedefault(from._internal_usedefault());
      break;
    }
    case kCustom: {
      _this->_internal_mutable_custom()->::Property::CustomGeneratorValue::MergeFrom(
          from._internal_custom());
      break;
    }
    case VALUETYPE_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void JsonPropertyValue::CopyFrom(const JsonPropertyValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.JsonPropertyValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JsonPropertyValue::IsInitialized() const {
  return true;
}

void JsonPropertyValue::InternalSwap(JsonPropertyValue* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.ValueType_, other->_impl_.ValueType_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata JsonPropertyValue::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[67]);
}

// ===================================================================

class JsonPropertyDeclaration::_Internal {
 public:
  static const ::Property::JsonPropertyMetadata& meta(const JsonPropertyDeclaration* msg);
};

const ::Property::JsonPropertyMetadata&
JsonPropertyDeclaration::_Internal::meta(const JsonPropertyDeclaration* msg) {
  return *msg->_impl_.meta_;
}
JsonPropertyDeclaration::JsonPropertyDeclaration(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.JsonPropertyDeclaration)
}
JsonPropertyDeclaration::JsonPropertyDeclaration(const JsonPropertyDeclaration& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  JsonPropertyDeclaration* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.defaultjson_){}
    , decltype(_impl_.meta_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.defaultjson_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.defaultjson_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_defaultjson().empty()) {
    _this->_impl_.defaultjson_.Set(from._internal_defaultjson(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_meta()) {
    _this->_impl_.meta_ = new ::Property::JsonPropertyMetadata(*from._impl_.meta_);
  }
  // @@protoc_insertion_point(copy_constructor:Property.JsonPropertyDeclaration)
}

inline void JsonPropertyDeclaration::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.defaultjson_){}
    , decltype(_impl_.meta_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.defaultjson_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.defaultjson_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

JsonPropertyDeclaration::~JsonPropertyDeclaration() {
  // @@protoc_insertion_point(destructor:Property.JsonPropertyDeclaration)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void JsonPropertyDeclaration::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.defaultjson_.Destroy();
  if (this != internal_default_instance()) delete _impl_.meta_;
}

void JsonPropertyDeclaration::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void JsonPropertyDeclaration::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.JsonPropertyDeclaration)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.defaultjson_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.meta_ != nullptr) {
    delete _impl_.meta_;
  }
  _impl_.meta_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* JsonPropertyDeclaration::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Property.JsonPropertyMetadata meta = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_meta(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string defaultJson = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_defaultjson();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "Property.JsonPropertyDeclaration.defaultJson"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* JsonPropertyDeclaration::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.JsonPropertyDeclaration)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Property.JsonPropertyMetadata meta = 1;
  if (this->_internal_has_meta()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::meta(this),
        _Internal::meta(this).GetCachedSize(), target, stream);
  }

  // string defaultJson = 2;
  if (!this->_internal_defaultjson().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_defaultjson().data(), static_cast<int>(this->_internal_defaultjson().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Property.JsonPropertyDeclaration.defaultJson");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_defaultjson(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.JsonPropertyDeclaration)
  return target;
}

size_t JsonPropertyDeclaration::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.JsonPropertyDeclaration)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string defaultJson = 2;
  if (!this->_internal_defaultjson().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_defaultjson());
  }

  // .Property.JsonPropertyMetadata meta = 1;
  if (this->_internal_has_meta()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.meta_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData JsonPropertyDeclaration::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    JsonPropertyDeclaration::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*JsonPropertyDeclaration::GetClassData() const { return &_class_data_; }


void JsonPropertyDeclaration::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<JsonPropertyDeclaration*>(&to_msg);
  auto& from = static_cast<const JsonPropertyDeclaration&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.JsonPropertyDeclaration)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_defaultjson().empty()) {
    _this->_internal_set_defaultjson(from._internal_defaultjson());
  }
  if (from._internal_has_meta()) {
    _this->_internal_mutable_meta()->::Property::JsonPropertyMetadata::MergeFrom(
        from._internal_meta());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void JsonPropertyDeclaration::CopyFrom(const JsonPropertyDeclaration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.JsonPropertyDeclaration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JsonPropertyDeclaration::IsInitialized() const {
  return true;
}

void JsonPropertyDeclaration::InternalSwap(JsonPropertyDeclaration* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.defaultjson_, lhs_arena,
      &other->_impl_.defaultjson_, rhs_arena
  );
  swap(_impl_.meta_, other->_impl_.meta_);
}

::PROTOBUF_NAMESPACE_ID::Metadata JsonPropertyDeclaration::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[68]);
}

// ===================================================================

class JsonEditingMetadata::_Internal {
 public:
};

JsonEditingMetadata::JsonEditingMetadata(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:Property.JsonEditingMetadata)
}
JsonEditingMetadata::JsonEditingMetadata(const JsonEditingMetadata& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  JsonEditingMetadata* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Property.JsonEditingMetadata)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData JsonEditingMetadata::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*JsonEditingMetadata::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata JsonEditingMetadata::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[69]);
}

// ===================================================================

class JsonGeneratorMetadata::_Internal {
 public:
  using HasBits = decltype(std::declval<JsonGeneratorMetadata>()._impl_._has_bits_);
  static const ::Property::GeneratorMetadata& base(const JsonGeneratorMetadata* msg);
  static const ::Property::JsonEditingMetadata& edit(const JsonGeneratorMetadata* msg);
  static void set_has_edit(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::Property::GeneratorMetadata&
JsonGeneratorMetadata::_Internal::base(const JsonGeneratorMetadata* msg) {
  return *msg->_impl_.base_;
}
const ::Property::JsonEditingMetadata&
JsonGeneratorMetadata::_Internal::edit(const JsonGeneratorMetadata* msg) {
  return *msg->_impl_.edit_;
}
JsonGeneratorMetadata::JsonGeneratorMetadata(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.JsonGeneratorMetadata)
}
JsonGeneratorMetadata::JsonGeneratorMetadata(const JsonGeneratorMetadata& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  JsonGeneratorMetadata* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.base_){nullptr}
    , decltype(_impl_.edit_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_base()) {
    _this->_impl_.base_ = new ::Property::GeneratorMetadata(*from._impl_.base_);
  }
  if (from._internal_has_edit()) {
    _this->_impl_.edit_ = new ::Property::JsonEditingMetadata(*from._impl_.edit_);
  }
  // @@protoc_insertion_point(copy_constructor:Property.JsonGeneratorMetadata)
}

inline void JsonGeneratorMetadata::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.base_){nullptr}
    , decltype(_impl_.edit_){nullptr}
  };
}

JsonGeneratorMetadata::~JsonGeneratorMetadata() {
  // @@protoc_insertion_point(destructor:Property.JsonGeneratorMetadata)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void JsonGeneratorMetadata::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.base_;
  if (this != internal_default_instance()) delete _impl_.edit_;
}

void JsonGeneratorMetadata::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void JsonGeneratorMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.JsonGeneratorMetadata)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.base_ != nullptr) {
    delete _impl_.base_;
  }
  _impl_.base_ = nullptr;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.edit_ != nullptr);
    _impl_.edit_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* JsonGeneratorMetadata::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Property.GeneratorMetadata base = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_base(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .Property.JsonEditingMetadata edit = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_edit(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* JsonGeneratorMetadata::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.JsonGeneratorMetadata)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Property.GeneratorMetadata base = 1;
  if (this->_internal_has_base()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::base(this),
        _Internal::base(this).GetCachedSize(), target, stream);
  }

  // optional .Property.JsonEditingMetadata edit = 2;
  if (_internal_has_edit()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::edit(this),
        _Internal::edit(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.JsonGeneratorMetadata)
  return target;
}

size_t JsonGeneratorMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.JsonGeneratorMetadata)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Property.GeneratorMetadata base = 1;
  if (this->_internal_has_base()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.base_);
  }

  // optional .Property.JsonEditingMetadata edit = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.edit_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData JsonGeneratorMetadata::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    JsonGeneratorMetadata::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*JsonGeneratorMetadata::GetClassData() const { return &_class_data_; }


void JsonGeneratorMetadata::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<JsonGeneratorMetadata*>(&to_msg);
  auto& from = static_cast<const JsonGeneratorMetadata&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.JsonGeneratorMetadata)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_base()) {
    _this->_internal_mutable_base()->::Property::GeneratorMetadata::MergeFrom(
        from._internal_base());
  }
  if (from._internal_has_edit()) {
    _this->_internal_mutable_edit()->::Property::JsonEditingMetadata::MergeFrom(
        from._internal_edit());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void JsonGeneratorMetadata::CopyFrom(const JsonGeneratorMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.JsonGeneratorMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JsonGeneratorMetadata::IsInitialized() const {
  return true;
}

void JsonGeneratorMetadata::InternalSwap(JsonGeneratorMetadata* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(JsonGeneratorMetadata, _impl_.edit_)
      + sizeof(JsonGeneratorMetadata::_impl_.edit_)
      - PROTOBUF_FIELD_OFFSET(JsonGeneratorMetadata, _impl_.base_)>(
          reinterpret_cast<char*>(&_impl_.base_),
          reinterpret_cast<char*>(&other->_impl_.base_));
}

::PROTOBUF_NAMESPACE_ID::Metadata JsonGeneratorMetadata::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[70]);
}

// ===================================================================

class JsonPropertyMetadata::_Internal {
 public:
  using HasBits = decltype(std::declval<JsonPropertyMetadata>()._impl_._has_bits_);
  static const ::Property::PropertyMetadata& base(const JsonPropertyMetadata* msg);
  static const ::Property::JsonEditingMetadata& edit(const JsonPropertyMetadata* msg);
  static void set_has_edit(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::Property::PropertyMetadata&
JsonPropertyMetadata::_Internal::base(const JsonPropertyMetadata* msg) {
  return *msg->_impl_.base_;
}
const ::Property::JsonEditingMetadata&
JsonPropertyMetadata::_Internal::edit(const JsonPropertyMetadata* msg) {
  return *msg->_impl_.edit_;
}
JsonPropertyMetadata::JsonPropertyMetadata(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.JsonPropertyMetadata)
}
JsonPropertyMetadata::JsonPropertyMetadata(const JsonPropertyMetadata& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  JsonPropertyMetadata* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.base_){nullptr}
    , decltype(_impl_.edit_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_base()) {
    _this->_impl_.base_ = new ::Property::PropertyMetadata(*from._impl_.base_);
  }
  if (from._internal_has_edit()) {
    _this->_impl_.edit_ = new ::Property::JsonEditingMetadata(*from._impl_.edit_);
  }
  // @@protoc_insertion_point(copy_constructor:Property.JsonPropertyMetadata)
}

inline void JsonPropertyMetadata::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.base_){nullptr}
    , decltype(_impl_.edit_){nullptr}
  };
}

JsonPropertyMetadata::~JsonPropertyMetadata() {
  // @@protoc_insertion_point(destructor:Property.JsonPropertyMetadata)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void JsonPropertyMetadata::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.base_;
  if (this != internal_default_instance()) delete _impl_.edit_;
}

void JsonPropertyMetadata::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void JsonPropertyMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.JsonPropertyMetadata)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.base_ != nullptr) {
    delete _impl_.base_;
  }
  _impl_.base_ = nullptr;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.edit_ != nullptr);
    _impl_.edit_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* JsonPropertyMetadata::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Property.PropertyMetadata base = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_base(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .Property.JsonEditingMetadata edit = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_edit(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* JsonPropertyMetadata::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.JsonPropertyMetadata)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Property.PropertyMetadata base = 1;
  if (this->_internal_has_base()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::base(this),
        _Internal::base(this).GetCachedSize(), target, stream);
  }

  // optional .Property.JsonEditingMetadata edit = 2;
  if (_internal_has_edit()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::edit(this),
        _Internal::edit(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.JsonPropertyMetadata)
  return target;
}

size_t JsonPropertyMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.JsonPropertyMetadata)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Property.PropertyMetadata base = 1;
  if (this->_internal_has_base()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.base_);
  }

  // optional .Property.JsonEditingMetadata edit = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.edit_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData JsonPropertyMetadata::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    JsonPropertyMetadata::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*JsonPropertyMetadata::GetClassData() const { return &_class_data_; }


void JsonPropertyMetadata::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<JsonPropertyMetadata*>(&to_msg);
  auto& from = static_cast<const JsonPropertyMetadata&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.JsonPropertyMetadata)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_base()) {
    _this->_internal_mutable_base()->::Property::PropertyMetadata::MergeFrom(
        from._internal_base());
  }
  if (from._internal_has_edit()) {
    _this->_internal_mutable_edit()->::Property::JsonEditingMetadata::MergeFrom(
        from._internal_edit());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void JsonPropertyMetadata::CopyFrom(const JsonPropertyMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.JsonPropertyMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JsonPropertyMetadata::IsInitialized() const {
  return true;
}

void JsonPropertyMetadata::InternalSwap(JsonPropertyMetadata* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(JsonPropertyMetadata, _impl_.edit_)
      + sizeof(JsonPropertyMetadata::_impl_.edit_)
      - PROTOBUF_FIELD_OFFSET(JsonPropertyMetadata, _impl_.base_)>(
          reinterpret_cast<char*>(&_impl_.base_),
          reinterpret_cast<char*>(&other->_impl_.base_));
}

::PROTOBUF_NAMESPACE_ID::Metadata JsonPropertyMetadata::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[71]);
}

// ===================================================================

class TransformSet::_Internal {
 public:
  static const ::Property::TransformSetSRT& srt(const TransformSet* msg);
  static const ::Property::TransformSetSQT& sqt(const TransformSet* msg);
  static const ::Property::TransformSetLookAt& look(const TransformSet* msg);
  static const ::Property::PropertyIdentifier& ref(const TransformSet* msg);
  static const ::Property::TransformSetInterpolatorSRT& interpsrt(const TransformSet* msg);
  static const ::Property::TransformSetInterpolatorSQT& interpsqt(const TransformSet* msg);
  static const ::Property::TransformSetInterpolatorLookAt& interplook(const TransformSet* msg);
  static const ::Property::CustomGeneratorValue& custom(const TransformSet* msg);
  static const ::Property::TransformSetConditional& conditional(const TransformSet* msg);
  static const ::Property::TransformSetApproach& approach(const TransformSet* msg);
};

const ::Property::TransformSetSRT&
TransformSet::_Internal::srt(const TransformSet* msg) {
  return *msg->_impl_.SetType_.srt_;
}
const ::Property::TransformSetSQT&
TransformSet::_Internal::sqt(const TransformSet* msg) {
  return *msg->_impl_.SetType_.sqt_;
}
const ::Property::TransformSetLookAt&
TransformSet::_Internal::look(const TransformSet* msg) {
  return *msg->_impl_.SetType_.look_;
}
const ::Property::PropertyIdentifier&
TransformSet::_Internal::ref(const TransformSet* msg) {
  return *msg->_impl_.SetType_.ref_;
}
const ::Property::TransformSetInterpolatorSRT&
TransformSet::_Internal::interpsrt(const TransformSet* msg) {
  return *msg->_impl_.SetType_.interpsrt_;
}
const ::Property::TransformSetInterpolatorSQT&
TransformSet::_Internal::interpsqt(const TransformSet* msg) {
  return *msg->_impl_.SetType_.interpsqt_;
}
const ::Property::TransformSetInterpolatorLookAt&
TransformSet::_Internal::interplook(const TransformSet* msg) {
  return *msg->_impl_.SetType_.interplook_;
}
const ::Property::CustomGeneratorValue&
TransformSet::_Internal::custom(const TransformSet* msg) {
  return *msg->_impl_.SetType_.custom_;
}
const ::Property::TransformSetConditional&
TransformSet::_Internal::conditional(const TransformSet* msg) {
  return *msg->_impl_.SetType_.conditional_;
}
const ::Property::TransformSetApproach&
TransformSet::_Internal::approach(const TransformSet* msg) {
  return *msg->_impl_.SetType_.approach_;
}
void TransformSet::set_allocated_srt(::Property::TransformSetSRT* srt) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_SetType();
  if (srt) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(srt);
    if (message_arena != submessage_arena) {
      srt = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, srt, submessage_arena);
    }
    set_has_srt();
    _impl_.SetType_.srt_ = srt;
  }
  // @@protoc_insertion_point(field_set_allocated:Property.TransformSet.srt)
}
void TransformSet::set_allocated_sqt(::Property::TransformSetSQT* sqt) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_SetType();
  if (sqt) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(sqt);
    if (message_arena != submessage_arena) {
      sqt = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, sqt, submessage_arena);
    }
    set_has_sqt();
    _impl_.SetType_.sqt_ = sqt;
  }
  // @@protoc_insertion_point(field_set_allocated:Property.TransformSet.sqt)
}
void TransformSet::set_allocated_look(::Property::TransformSetLookAt* look) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_SetType();
  if (look) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(look);
    if (message_arena != submessage_arena) {
      look = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, look, submessage_arena);
    }
    set_has_look();
    _impl_.SetType_.look_ = look;
  }
  // @@protoc_insertion_point(field_set_allocated:Property.TransformSet.look)
}
void TransformSet::set_allocated_ref(::Property::PropertyIdentifier* ref) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_SetType();
  if (ref) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(ref);
    if (message_arena != submessage_arena) {
      ref = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ref, submessage_arena);
    }
    set_has_ref();
    _impl_.SetType_.ref_ = ref;
  }
  // @@protoc_insertion_point(field_set_allocated:Property.TransformSet.ref)
}
void TransformSet::set_allocated_interpsrt(::Property::TransformSetInterpolatorSRT* interpsrt) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_SetType();
  if (interpsrt) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(interpsrt);
    if (message_arena != submessage_arena) {
      interpsrt = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, interpsrt, submessage_arena);
    }
    set_has_interpsrt();
    _impl_.SetType_.interpsrt_ = interpsrt;
  }
  // @@protoc_insertion_point(field_set_allocated:Property.TransformSet.interpSrt)
}
void TransformSet::set_allocated_interpsqt(::Property::TransformSetInterpolatorSQT* interpsqt) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_SetType();
  if (interpsqt) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(interpsqt);
    if (message_arena != submessage_arena) {
      interpsqt = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, interpsqt, submessage_arena);
    }
    set_has_interpsqt();
    _impl_.SetType_.interpsqt_ = interpsqt;
  }
  // @@protoc_insertion_point(field_set_allocated:Property.TransformSet.interpSqt)
}
void TransformSet::set_allocated_interplook(::Property::TransformSetInterpolatorLookAt* interplook) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_SetType();
  if (interplook) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(interplook);
    if (message_arena != submessage_arena) {
      interplook = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, interplook, submessage_arena);
    }
    set_has_interplook();
    _impl_.SetType_.interplook_ = interplook;
  }
  // @@protoc_insertion_point(field_set_allocated:Property.TransformSet.interpLook)
}
void TransformSet::set_allocated_custom(::Property::CustomGeneratorValue* custom) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_SetType();
  if (custom) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(custom);
    if (message_arena != submessage_arena) {
      custom = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, custom, submessage_arena);
    }
    set_has_custom();
    _impl_.SetType_.custom_ = custom;
  }
  // @@protoc_insertion_point(field_set_allocated:Property.TransformSet.custom)
}
void TransformSet::set_allocated_conditional(::Property::TransformSetConditional* conditional) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_SetType();
  if (conditional) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(conditional);
    if (message_arena != submessage_arena) {
      conditional = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, conditional, submessage_arena);
    }
    set_has_conditional();
    _impl_.SetType_.conditional_ = conditional;
  }
  // @@protoc_insertion_point(field_set_allocated:Property.TransformSet.conditional)
}
void TransformSet::set_allocated_approach(::Property::TransformSetApproach* approach) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_SetType();
  if (approach) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(approach);
    if (message_arena != submessage_arena) {
      approach = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, approach, submessage_arena);
    }
    set_has_approach();
    _impl_.SetType_.approach_ = approach;
  }
  // @@protoc_insertion_point(field_set_allocated:Property.TransformSet.approach)
}
TransformSet::TransformSet(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.TransformSet)
}
TransformSet::TransformSet(const TransformSet& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TransformSet* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.SetType_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_SetType();
  switch (from.SetType_case()) {
    case kSrt: {
      _this->_internal_mutable_srt()->::Property::TransformSetSRT::MergeFrom(
          from._internal_srt());
      break;
    }
    case kSqt: {
      _this->_internal_mutable_sqt()->::Property::TransformSetSQT::MergeFrom(
          from._internal_sqt());
      break;
    }
    case kLook: {
      _this->_internal_mutable_look()->::Property::TransformSetLookAt::MergeFrom(
          from._internal_look());
      break;
    }
    case kRef: {
      _this->_internal_mutable_ref()->::Property::PropertyIdentifier::MergeFrom(
          from._internal_ref());
      break;
    }
    case kExpr: {
      _this->_internal_set_expr(from._internal_expr());
      break;
    }
    case kUseDefault: {
      _this->_internal_set_usedefault(from._internal_usedefault());
      break;
    }
    case kUseSource: {
      _this->_internal_set_usesource(from._internal_usesource());
      break;
    }
    case kInterpSrt: {
      _this->_internal_mutable_interpsrt()->::Property::TransformSetInterpolatorSRT::MergeFrom(
          from._internal_interpsrt());
      break;
    }
    case kInterpSqt: {
      _this->_internal_mutable_interpsqt()->::Property::TransformSetInterpolatorSQT::MergeFrom(
          from._internal_interpsqt());
      break;
    }
    case kInterpLook: {
      _this->_internal_mutable_interplook()->::Property::TransformSetInterpolatorLookAt::MergeFrom(
          from._internal_interplook());
      break;
    }
    case kCustom: {
      _this->_internal_mutable_custom()->::Property::CustomGeneratorValue::MergeFrom(
          from._internal_custom());
      break;
    }
    case kConditional: {
      _this->_internal_mutable_conditional()->::Property::TransformSetConditional::MergeFrom(
          from._internal_conditional());
      break;
    }
    case kApproach: {
      _this->_internal_mutable_approach()->::Property::TransformSetApproach::MergeFrom(
          from._internal_approach());
      break;
    }
    case SETTYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:Property.TransformSet)
}

inline void TransformSet::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.SetType_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  clear_has_SetType();
}

TransformSet::~TransformSet() {
  // @@protoc_insertion_point(destructor:Property.TransformSet)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TransformSet::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_SetType()) {
    clear_SetType();
  }
}

void TransformSet::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TransformSet::clear_SetType() {
// @@protoc_insertion_point(one_of_clear_start:Property.TransformSet)
  switch (SetType_case()) {
    case kSrt: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.SetType_.srt_;
      }
      break;
    }
    case kSqt: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.SetType_.sqt_;
      }
      break;
    }
    case kLook: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.SetType_.look_;
      }
      break;
    }
    case kRef: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.SetType_.ref_;
      }
      break;
    }
    case kExpr: {
      _impl_.SetType_.expr_.Destroy();
      break;
    }
    case kUseDefault: {
      // No need to clear
      break;
    }
    case kUseSource: {
      // No need to clear
      break;
    }
    case kInterpSrt: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.SetType_.interpsrt_;
      }
      break;
    }
    case kInterpSqt: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.SetType_.interpsqt_;
      }
      break;
    }
    case kInterpLook: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.SetType_.interplook_;
      }
      break;
    }
    case kCustom: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.SetType_.custom_;
      }
      break;
    }
    case kConditional: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.SetType_.conditional_;
      }
      break;
    }
    case kApproach: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.SetType_.approach_;
      }
      break;
    }
    case SETTYPE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = SETTYPE_NOT_SET;
}


void TransformSet::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.TransformSet)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_SetType();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TransformSet::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Property.TransformSetSRT srt = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_srt(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.TransformSetSQT sqt = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_sqt(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.TransformSetLookAt look = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_look(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.PropertyIdentifier ref = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_ref(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string expr = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_expr();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "Property.TransformSet.expr"));
        } else
          goto handle_unusual;
        continue;
      // bool useDefault = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          _internal_set_usedefault(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool useSource = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          _internal_set_usesource(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.TransformSetInterpolatorSRT interpSrt = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_interpsrt(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.TransformSetInterpolatorSQT interpSqt = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_interpsqt(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.TransformSetInterpolatorLookAt interpLook = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_interplook(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.CustomGeneratorValue custom = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 98)) {
          ptr = ctx->ParseMessage(_internal_mutable_custom(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.TransformSetConditional conditional = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_conditional(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.TransformSetApproach approach = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 114)) {
          ptr = ctx->ParseMessage(_internal_mutable_approach(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TransformSet::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.TransformSet)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Property.TransformSetSRT srt = 1;
  if (_internal_has_srt()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::srt(this),
        _Internal::srt(this).GetCachedSize(), target, stream);
  }

  // .Property.TransformSetSQT sqt = 2;
  if (_internal_has_sqt()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::sqt(this),
        _Internal::sqt(this).GetCachedSize(), target, stream);
  }

  // .Property.TransformSetLookAt look = 3;
  if (_internal_has_look()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::look(this),
        _Internal::look(this).GetCachedSize(), target, stream);
  }

  // .Property.PropertyIdentifier ref = 5;
  if (_internal_has_ref()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::ref(this),
        _Internal::ref(this).GetCachedSize(), target, stream);
  }

  // string expr = 6;
  if (_internal_has_expr()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_expr().data(), static_cast<int>(this->_internal_expr().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Property.TransformSet.expr");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_expr(), target);
  }

  // bool useDefault = 7;
  if (_internal_has_usedefault()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(7, this->_internal_usedefault(), target);
  }

  // bool useSource = 8;
  if (_internal_has_usesource()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(8, this->_internal_usesource(), target);
  }

  // .Property.TransformSetInterpolatorSRT interpSrt = 9;
  if (_internal_has_interpsrt()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(9, _Internal::interpsrt(this),
        _Internal::interpsrt(this).GetCachedSize(), target, stream);
  }

  // .Property.TransformSetInterpolatorSQT interpSqt = 10;
  if (_internal_has_interpsqt()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(10, _Internal::interpsqt(this),
        _Internal::interpsqt(this).GetCachedSize(), target, stream);
  }

  // .Property.TransformSetInterpolatorLookAt interpLook = 11;
  if (_internal_has_interplook()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(11, _Internal::interplook(this),
        _Internal::interplook(this).GetCachedSize(), target, stream);
  }

  // .Property.CustomGeneratorValue custom = 12;
  if (_internal_has_custom()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(12, _Internal::custom(this),
        _Internal::custom(this).GetCachedSize(), target, stream);
  }

  // .Property.TransformSetConditional conditional = 13;
  if (_internal_has_conditional()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(13, _Internal::conditional(this),
        _Internal::conditional(this).GetCachedSize(), target, stream);
  }

  // .Property.TransformSetApproach approach = 14;
  if (_internal_has_approach()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(14, _Internal::approach(this),
        _Internal::approach(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.TransformSet)
  return target;
}

size_t TransformSet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.TransformSet)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (SetType_case()) {
    // .Property.TransformSetSRT srt = 1;
    case kSrt: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.SetType_.srt_);
      break;
    }
    // .Property.TransformSetSQT sqt = 2;
    case kSqt: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.SetType_.sqt_);
      break;
    }
    // .Property.TransformSetLookAt look = 3;
    case kLook: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.SetType_.look_);
      break;
    }
    // .Property.PropertyIdentifier ref = 5;
    case kRef: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.SetType_.ref_);
      break;
    }
    // string expr = 6;
    case kExpr: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_expr());
      break;
    }
    // bool useDefault = 7;
    case kUseDefault: {
      total_size += 1 + 1;
      break;
    }
    // bool useSource = 8;
    case kUseSource: {
      total_size += 1 + 1;
      break;
    }
    // .Property.TransformSetInterpolatorSRT interpSrt = 9;
    case kInterpSrt: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.SetType_.interpsrt_);
      break;
    }
    // .Property.TransformSetInterpolatorSQT interpSqt = 10;
    case kInterpSqt: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.SetType_.interpsqt_);
      break;
    }
    // .Property.TransformSetInterpolatorLookAt interpLook = 11;
    case kInterpLook: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.SetType_.interplook_);
      break;
    }
    // .Property.CustomGeneratorValue custom = 12;
    case kCustom: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.SetType_.custom_);
      break;
    }
    // .Property.TransformSetConditional conditional = 13;
    case kConditional: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.SetType_.conditional_);
      break;
    }
    // .Property.TransformSetApproach approach = 14;
    case kApproach: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.SetType_.approach_);
      break;
    }
    case SETTYPE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TransformSet::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TransformSet::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TransformSet::GetClassData() const { return &_class_data_; }


void TransformSet::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TransformSet*>(&to_msg);
  auto& from = static_cast<const TransformSet&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.TransformSet)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.SetType_case()) {
    case kSrt: {
      _this->_internal_mutable_srt()->::Property::TransformSetSRT::MergeFrom(
          from._internal_srt());
      break;
    }
    case kSqt: {
      _this->_internal_mutable_sqt()->::Property::TransformSetSQT::MergeFrom(
          from._internal_sqt());
      break;
    }
    case kLook: {
      _this->_internal_mutable_look()->::Property::TransformSetLookAt::MergeFrom(
          from._internal_look());
      break;
    }
    case kRef: {
      _this->_internal_mutable_ref()->::Property::PropertyIdentifier::MergeFrom(
          from._internal_ref());
      break;
    }
    case kExpr: {
      _this->_internal_set_expr(from._internal_expr());
      break;
    }
    case kUseDefault: {
      _this->_internal_set_usedefault(from._internal_usedefault());
      break;
    }
    case kUseSource: {
      _this->_internal_set_usesource(from._internal_usesource());
      break;
    }
    case kInterpSrt: {
      _this->_internal_mutable_interpsrt()->::Property::TransformSetInterpolatorSRT::MergeFrom(
          from._internal_interpsrt());
      break;
    }
    case kInterpSqt: {
      _this->_internal_mutable_interpsqt()->::Property::TransformSetInterpolatorSQT::MergeFrom(
          from._internal_interpsqt());
      break;
    }
    case kInterpLook: {
      _this->_internal_mutable_interplook()->::Property::TransformSetInterpolatorLookAt::MergeFrom(
          from._internal_interplook());
      break;
    }
    case kCustom: {
      _this->_internal_mutable_custom()->::Property::CustomGeneratorValue::MergeFrom(
          from._internal_custom());
      break;
    }
    case kConditional: {
      _this->_internal_mutable_conditional()->::Property::TransformSetConditional::MergeFrom(
          from._internal_conditional());
      break;
    }
    case kApproach: {
      _this->_internal_mutable_approach()->::Property::TransformSetApproach::MergeFrom(
          from._internal_approach());
      break;
    }
    case SETTYPE_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TransformSet::CopyFrom(const TransformSet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.TransformSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransformSet::IsInitialized() const {
  return true;
}

void TransformSet::InternalSwap(TransformSet* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.SetType_, other->_impl_.SetType_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata TransformSet::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[72]);
}

// ===================================================================

class TransformSetSRT::_Internal {
 public:
  static const ::Property::VectorPropertyValue& scale(const TransformSetSRT* msg);
  static const ::Property::VectorPropertyValue& rotationeuler(const TransformSetSRT* msg);
  static const ::Property::VectorPropertyValue& transformpos(const TransformSetSRT* msg);
};

const ::Property::VectorPropertyValue&
TransformSetSRT::_Internal::scale(const TransformSetSRT* msg) {
  return *msg->_impl_.scale_;
}
const ::Property::VectorPropertyValue&
TransformSetSRT::_Internal::rotationeuler(const TransformSetSRT* msg) {
  return *msg->_impl_.rotationeuler_;
}
const ::Property::VectorPropertyValue&
TransformSetSRT::_Internal::transformpos(const TransformSetSRT* msg) {
  return *msg->_impl_.transformpos_;
}
TransformSetSRT::TransformSetSRT(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.TransformSetSRT)
}
TransformSetSRT::TransformSetSRT(const TransformSetSRT& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TransformSetSRT* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.scale_){nullptr}
    , decltype(_impl_.rotationeuler_){nullptr}
    , decltype(_impl_.transformpos_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_scale()) {
    _this->_impl_.scale_ = new ::Property::VectorPropertyValue(*from._impl_.scale_);
  }
  if (from._internal_has_rotationeuler()) {
    _this->_impl_.rotationeuler_ = new ::Property::VectorPropertyValue(*from._impl_.rotationeuler_);
  }
  if (from._internal_has_transformpos()) {
    _this->_impl_.transformpos_ = new ::Property::VectorPropertyValue(*from._impl_.transformpos_);
  }
  // @@protoc_insertion_point(copy_constructor:Property.TransformSetSRT)
}

inline void TransformSetSRT::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.scale_){nullptr}
    , decltype(_impl_.rotationeuler_){nullptr}
    , decltype(_impl_.transformpos_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

TransformSetSRT::~TransformSetSRT() {
  // @@protoc_insertion_point(destructor:Property.TransformSetSRT)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TransformSetSRT::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.scale_;
  if (this != internal_default_instance()) delete _impl_.rotationeuler_;
  if (this != internal_default_instance()) delete _impl_.transformpos_;
}

void TransformSetSRT::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TransformSetSRT::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.TransformSetSRT)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.scale_ != nullptr) {
    delete _impl_.scale_;
  }
  _impl_.scale_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.rotationeuler_ != nullptr) {
    delete _impl_.rotationeuler_;
  }
  _impl_.rotationeuler_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.transformpos_ != nullptr) {
    delete _impl_.transformpos_;
  }
  _impl_.transformpos_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TransformSetSRT::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Property.VectorPropertyValue scale = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_scale(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.VectorPropertyValue rotationEuler = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_rotationeuler(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.VectorPropertyValue transformPos = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_transformpos(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TransformSetSRT::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.TransformSetSRT)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Property.VectorPropertyValue scale = 1;
  if (this->_internal_has_scale()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::scale(this),
        _Internal::scale(this).GetCachedSize(), target, stream);
  }

  // .Property.VectorPropertyValue rotationEuler = 2;
  if (this->_internal_has_rotationeuler()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::rotationeuler(this),
        _Internal::rotationeuler(this).GetCachedSize(), target, stream);
  }

  // .Property.VectorPropertyValue transformPos = 3;
  if (this->_internal_has_transformpos()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::transformpos(this),
        _Internal::transformpos(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.TransformSetSRT)
  return target;
}

size_t TransformSetSRT::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.TransformSetSRT)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Property.VectorPropertyValue scale = 1;
  if (this->_internal_has_scale()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.scale_);
  }

  // .Property.VectorPropertyValue rotationEuler = 2;
  if (this->_internal_has_rotationeuler()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.rotationeuler_);
  }

  // .Property.VectorPropertyValue transformPos = 3;
  if (this->_internal_has_transformpos()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.transformpos_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TransformSetSRT::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TransformSetSRT::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TransformSetSRT::GetClassData() const { return &_class_data_; }


void TransformSetSRT::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TransformSetSRT*>(&to_msg);
  auto& from = static_cast<const TransformSetSRT&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.TransformSetSRT)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_scale()) {
    _this->_internal_mutable_scale()->::Property::VectorPropertyValue::MergeFrom(
        from._internal_scale());
  }
  if (from._internal_has_rotationeuler()) {
    _this->_internal_mutable_rotationeuler()->::Property::VectorPropertyValue::MergeFrom(
        from._internal_rotationeuler());
  }
  if (from._internal_has_transformpos()) {
    _this->_internal_mutable_transformpos()->::Property::VectorPropertyValue::MergeFrom(
        from._internal_transformpos());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TransformSetSRT::CopyFrom(const TransformSetSRT& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.TransformSetSRT)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransformSetSRT::IsInitialized() const {
  return true;
}

void TransformSetSRT::InternalSwap(TransformSetSRT* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TransformSetSRT, _impl_.transformpos_)
      + sizeof(TransformSetSRT::_impl_.transformpos_)
      - PROTOBUF_FIELD_OFFSET(TransformSetSRT, _impl_.scale_)>(
          reinterpret_cast<char*>(&_impl_.scale_),
          reinterpret_cast<char*>(&other->_impl_.scale_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TransformSetSRT::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[73]);
}

// ===================================================================

class TransformSetSQT::_Internal {
 public:
  static const ::Property::VectorPropertyValue& scale(const TransformSetSQT* msg);
  static const ::Property::VectorPropertyValue& rotationquat(const TransformSetSQT* msg);
  static const ::Property::VectorPropertyValue& transformpos(const TransformSetSQT* msg);
};

const ::Property::VectorPropertyValue&
TransformSetSQT::_Internal::scale(const TransformSetSQT* msg) {
  return *msg->_impl_.scale_;
}
const ::Property::VectorPropertyValue&
TransformSetSQT::_Internal::rotationquat(const TransformSetSQT* msg) {
  return *msg->_impl_.rotationquat_;
}
const ::Property::VectorPropertyValue&
TransformSetSQT::_Internal::transformpos(const TransformSetSQT* msg) {
  return *msg->_impl_.transformpos_;
}
TransformSetSQT::TransformSetSQT(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.TransformSetSQT)
}
TransformSetSQT::TransformSetSQT(const TransformSetSQT& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TransformSetSQT* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.scale_){nullptr}
    , decltype(_impl_.rotationquat_){nullptr}
    , decltype(_impl_.transformpos_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_scale()) {
    _this->_impl_.scale_ = new ::Property::VectorPropertyValue(*from._impl_.scale_);
  }
  if (from._internal_has_rotationquat()) {
    _this->_impl_.rotationquat_ = new ::Property::VectorPropertyValue(*from._impl_.rotationquat_);
  }
  if (from._internal_has_transformpos()) {
    _this->_impl_.transformpos_ = new ::Property::VectorPropertyValue(*from._impl_.transformpos_);
  }
  // @@protoc_insertion_point(copy_constructor:Property.TransformSetSQT)
}

inline void TransformSetSQT::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.scale_){nullptr}
    , decltype(_impl_.rotationquat_){nullptr}
    , decltype(_impl_.transformpos_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

TransformSetSQT::~TransformSetSQT() {
  // @@protoc_insertion_point(destructor:Property.TransformSetSQT)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TransformSetSQT::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.scale_;
  if (this != internal_default_instance()) delete _impl_.rotationquat_;
  if (this != internal_default_instance()) delete _impl_.transformpos_;
}

void TransformSetSQT::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TransformSetSQT::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.TransformSetSQT)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.scale_ != nullptr) {
    delete _impl_.scale_;
  }
  _impl_.scale_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.rotationquat_ != nullptr) {
    delete _impl_.rotationquat_;
  }
  _impl_.rotationquat_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.transformpos_ != nullptr) {
    delete _impl_.transformpos_;
  }
  _impl_.transformpos_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TransformSetSQT::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Property.VectorPropertyValue scale = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_scale(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.VectorPropertyValue rotationQuat = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_rotationquat(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.VectorPropertyValue transformPos = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_transformpos(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TransformSetSQT::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.TransformSetSQT)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Property.VectorPropertyValue scale = 1;
  if (this->_internal_has_scale()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::scale(this),
        _Internal::scale(this).GetCachedSize(), target, stream);
  }

  // .Property.VectorPropertyValue rotationQuat = 2;
  if (this->_internal_has_rotationquat()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::rotationquat(this),
        _Internal::rotationquat(this).GetCachedSize(), target, stream);
  }

  // .Property.VectorPropertyValue transformPos = 3;
  if (this->_internal_has_transformpos()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::transformpos(this),
        _Internal::transformpos(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.TransformSetSQT)
  return target;
}

size_t TransformSetSQT::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.TransformSetSQT)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Property.VectorPropertyValue scale = 1;
  if (this->_internal_has_scale()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.scale_);
  }

  // .Property.VectorPropertyValue rotationQuat = 2;
  if (this->_internal_has_rotationquat()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.rotationquat_);
  }

  // .Property.VectorPropertyValue transformPos = 3;
  if (this->_internal_has_transformpos()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.transformpos_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TransformSetSQT::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TransformSetSQT::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TransformSetSQT::GetClassData() const { return &_class_data_; }


void TransformSetSQT::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TransformSetSQT*>(&to_msg);
  auto& from = static_cast<const TransformSetSQT&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.TransformSetSQT)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_scale()) {
    _this->_internal_mutable_scale()->::Property::VectorPropertyValue::MergeFrom(
        from._internal_scale());
  }
  if (from._internal_has_rotationquat()) {
    _this->_internal_mutable_rotationquat()->::Property::VectorPropertyValue::MergeFrom(
        from._internal_rotationquat());
  }
  if (from._internal_has_transformpos()) {
    _this->_internal_mutable_transformpos()->::Property::VectorPropertyValue::MergeFrom(
        from._internal_transformpos());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TransformSetSQT::CopyFrom(const TransformSetSQT& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.TransformSetSQT)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransformSetSQT::IsInitialized() const {
  return true;
}

void TransformSetSQT::InternalSwap(TransformSetSQT* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TransformSetSQT, _impl_.transformpos_)
      + sizeof(TransformSetSQT::_impl_.transformpos_)
      - PROTOBUF_FIELD_OFFSET(TransformSetSQT, _impl_.scale_)>(
          reinterpret_cast<char*>(&_impl_.scale_),
          reinterpret_cast<char*>(&other->_impl_.scale_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TransformSetSQT::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[74]);
}

// ===================================================================

class TransformSetLookAt::_Internal {
 public:
  using HasBits = decltype(std::declval<TransformSetLookAt>()._impl_._has_bits_);
  static const ::Property::VectorPropertyValue& eye(const TransformSetLookAt* msg);
  static const ::Property::VectorPropertyValue& lookat(const TransformSetLookAt* msg);
  static const ::Property::VectorPropertyValue& up(const TransformSetLookAt* msg);
  static void set_has_up(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::Property::VectorPropertyValue&
TransformSetLookAt::_Internal::eye(const TransformSetLookAt* msg) {
  return *msg->_impl_.eye_;
}
const ::Property::VectorPropertyValue&
TransformSetLookAt::_Internal::lookat(const TransformSetLookAt* msg) {
  return *msg->_impl_.lookat_;
}
const ::Property::VectorPropertyValue&
TransformSetLookAt::_Internal::up(const TransformSetLookAt* msg) {
  return *msg->_impl_.up_;
}
TransformSetLookAt::TransformSetLookAt(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.TransformSetLookAt)
}
TransformSetLookAt::TransformSetLookAt(const TransformSetLookAt& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TransformSetLookAt* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.eye_){nullptr}
    , decltype(_impl_.lookat_){nullptr}
    , decltype(_impl_.up_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_eye()) {
    _this->_impl_.eye_ = new ::Property::VectorPropertyValue(*from._impl_.eye_);
  }
  if (from._internal_has_lookat()) {
    _this->_impl_.lookat_ = new ::Property::VectorPropertyValue(*from._impl_.lookat_);
  }
  if (from._internal_has_up()) {
    _this->_impl_.up_ = new ::Property::VectorPropertyValue(*from._impl_.up_);
  }
  // @@protoc_insertion_point(copy_constructor:Property.TransformSetLookAt)
}

inline void TransformSetLookAt::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.eye_){nullptr}
    , decltype(_impl_.lookat_){nullptr}
    , decltype(_impl_.up_){nullptr}
  };
}

TransformSetLookAt::~TransformSetLookAt() {
  // @@protoc_insertion_point(destructor:Property.TransformSetLookAt)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TransformSetLookAt::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.eye_;
  if (this != internal_default_instance()) delete _impl_.lookat_;
  if (this != internal_default_instance()) delete _impl_.up_;
}

void TransformSetLookAt::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TransformSetLookAt::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.TransformSetLookAt)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.eye_ != nullptr) {
    delete _impl_.eye_;
  }
  _impl_.eye_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.lookat_ != nullptr) {
    delete _impl_.lookat_;
  }
  _impl_.lookat_ = nullptr;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.up_ != nullptr);
    _impl_.up_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TransformSetLookAt::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Property.VectorPropertyValue eye = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_eye(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.VectorPropertyValue lookAt = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_lookat(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .Property.VectorPropertyValue up = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_up(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TransformSetLookAt::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.TransformSetLookAt)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Property.VectorPropertyValue eye = 1;
  if (this->_internal_has_eye()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::eye(this),
        _Internal::eye(this).GetCachedSize(), target, stream);
  }

  // .Property.VectorPropertyValue lookAt = 2;
  if (this->_internal_has_lookat()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::lookat(this),
        _Internal::lookat(this).GetCachedSize(), target, stream);
  }

  // optional .Property.VectorPropertyValue up = 3;
  if (_internal_has_up()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::up(this),
        _Internal::up(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.TransformSetLookAt)
  return target;
}

size_t TransformSetLookAt::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.TransformSetLookAt)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Property.VectorPropertyValue eye = 1;
  if (this->_internal_has_eye()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.eye_);
  }

  // .Property.VectorPropertyValue lookAt = 2;
  if (this->_internal_has_lookat()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.lookat_);
  }

  // optional .Property.VectorPropertyValue up = 3;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.up_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TransformSetLookAt::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TransformSetLookAt::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TransformSetLookAt::GetClassData() const { return &_class_data_; }


void TransformSetLookAt::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TransformSetLookAt*>(&to_msg);
  auto& from = static_cast<const TransformSetLookAt&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.TransformSetLookAt)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_eye()) {
    _this->_internal_mutable_eye()->::Property::VectorPropertyValue::MergeFrom(
        from._internal_eye());
  }
  if (from._internal_has_lookat()) {
    _this->_internal_mutable_lookat()->::Property::VectorPropertyValue::MergeFrom(
        from._internal_lookat());
  }
  if (from._internal_has_up()) {
    _this->_internal_mutable_up()->::Property::VectorPropertyValue::MergeFrom(
        from._internal_up());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TransformSetLookAt::CopyFrom(const TransformSetLookAt& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.TransformSetLookAt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransformSetLookAt::IsInitialized() const {
  return true;
}

void TransformSetLookAt::InternalSwap(TransformSetLookAt* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TransformSetLookAt, _impl_.up_)
      + sizeof(TransformSetLookAt::_impl_.up_)
      - PROTOBUF_FIELD_OFFSET(TransformSetLookAt, _impl_.eye_)>(
          reinterpret_cast<char*>(&_impl_.eye_),
          reinterpret_cast<char*>(&other->_impl_.eye_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TransformSetLookAt::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[75]);
}

// ===================================================================

class TransformSetInterpolatorSRT::_Internal {
 public:
  static const ::Property::ScalarPropertyValue& t(const TransformSetInterpolatorSRT* msg);
  static const ::Property::TransformSetSRT& from(const TransformSetInterpolatorSRT* msg);
  static const ::Property::TransformSetSRT& to(const TransformSetInterpolatorSRT* msg);
  static const ::Property::Interpolation& by(const TransformSetInterpolatorSRT* msg);
};

const ::Property::ScalarPropertyValue&
TransformSetInterpolatorSRT::_Internal::t(const TransformSetInterpolatorSRT* msg) {
  return *msg->_impl_.t_;
}
const ::Property::TransformSetSRT&
TransformSetInterpolatorSRT::_Internal::from(const TransformSetInterpolatorSRT* msg) {
  return *msg->_impl_.from_;
}
const ::Property::TransformSetSRT&
TransformSetInterpolatorSRT::_Internal::to(const TransformSetInterpolatorSRT* msg) {
  return *msg->_impl_.to_;
}
const ::Property::Interpolation&
TransformSetInterpolatorSRT::_Internal::by(const TransformSetInterpolatorSRT* msg) {
  return *msg->_impl_.by_;
}
TransformSetInterpolatorSRT::TransformSetInterpolatorSRT(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.TransformSetInterpolatorSRT)
}
TransformSetInterpolatorSRT::TransformSetInterpolatorSRT(const TransformSetInterpolatorSRT& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TransformSetInterpolatorSRT* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.from_){nullptr}
    , decltype(_impl_.to_){nullptr}
    , decltype(_impl_.by_){nullptr}
    , decltype(_impl_.t_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_from()) {
    _this->_impl_.from_ = new ::Property::TransformSetSRT(*from._impl_.from_);
  }
  if (from._internal_has_to()) {
    _this->_impl_.to_ = new ::Property::TransformSetSRT(*from._impl_.to_);
  }
  if (from._internal_has_by()) {
    _this->_impl_.by_ = new ::Property::Interpolation(*from._impl_.by_);
  }
  if (from._internal_has_t()) {
    _this->_impl_.t_ = new ::Property::ScalarPropertyValue(*from._impl_.t_);
  }
  // @@protoc_insertion_point(copy_constructor:Property.TransformSetInterpolatorSRT)
}

inline void TransformSetInterpolatorSRT::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.from_){nullptr}
    , decltype(_impl_.to_){nullptr}
    , decltype(_impl_.by_){nullptr}
    , decltype(_impl_.t_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

TransformSetInterpolatorSRT::~TransformSetInterpolatorSRT() {
  // @@protoc_insertion_point(destructor:Property.TransformSetInterpolatorSRT)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TransformSetInterpolatorSRT::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.from_;
  if (this != internal_default_instance()) delete _impl_.to_;
  if (this != internal_default_instance()) delete _impl_.by_;
  if (this != internal_default_instance()) delete _impl_.t_;
}

void TransformSetInterpolatorSRT::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TransformSetInterpolatorSRT::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.TransformSetInterpolatorSRT)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.from_ != nullptr) {
    delete _impl_.from_;
  }
  _impl_.from_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.to_ != nullptr) {
    delete _impl_.to_;
  }
  _impl_.to_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.by_ != nullptr) {
    delete _impl_.by_;
  }
  _impl_.by_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.t_ != nullptr) {
    delete _impl_.t_;
  }
  _impl_.t_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TransformSetInterpolatorSRT::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Property.TransformSetSRT from = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_from(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.TransformSetSRT to = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_to(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.Interpolation by = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_by(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.ScalarPropertyValue t = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_t(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TransformSetInterpolatorSRT::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.TransformSetInterpolatorSRT)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Property.TransformSetSRT from = 1;
  if (this->_internal_has_from()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::from(this),
        _Internal::from(this).GetCachedSize(), target, stream);
  }

  // .Property.TransformSetSRT to = 2;
  if (this->_internal_has_to()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::to(this),
        _Internal::to(this).GetCachedSize(), target, stream);
  }

  // .Property.Interpolation by = 3;
  if (this->_internal_has_by()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::by(this),
        _Internal::by(this).GetCachedSize(), target, stream);
  }

  // .Property.ScalarPropertyValue t = 4;
  if (this->_internal_has_t()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::t(this),
        _Internal::t(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.TransformSetInterpolatorSRT)
  return target;
}

size_t TransformSetInterpolatorSRT::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.TransformSetInterpolatorSRT)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Property.TransformSetSRT from = 1;
  if (this->_internal_has_from()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.from_);
  }

  // .Property.TransformSetSRT to = 2;
  if (this->_internal_has_to()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.to_);
  }

  // .Property.Interpolation by = 3;
  if (this->_internal_has_by()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.by_);
  }

  // .Property.ScalarPropertyValue t = 4;
  if (this->_internal_has_t()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.t_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TransformSetInterpolatorSRT::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TransformSetInterpolatorSRT::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TransformSetInterpolatorSRT::GetClassData() const { return &_class_data_; }


void TransformSetInterpolatorSRT::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TransformSetInterpolatorSRT*>(&to_msg);
  auto& from = static_cast<const TransformSetInterpolatorSRT&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.TransformSetInterpolatorSRT)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_from()) {
    _this->_internal_mutable_from()->::Property::TransformSetSRT::MergeFrom(
        from._internal_from());
  }
  if (from._internal_has_to()) {
    _this->_internal_mutable_to()->::Property::TransformSetSRT::MergeFrom(
        from._internal_to());
  }
  if (from._internal_has_by()) {
    _this->_internal_mutable_by()->::Property::Interpolation::MergeFrom(
        from._internal_by());
  }
  if (from._internal_has_t()) {
    _this->_internal_mutable_t()->::Property::ScalarPropertyValue::MergeFrom(
        from._internal_t());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TransformSetInterpolatorSRT::CopyFrom(const TransformSetInterpolatorSRT& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.TransformSetInterpolatorSRT)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransformSetInterpolatorSRT::IsInitialized() const {
  return true;
}

void TransformSetInterpolatorSRT::InternalSwap(TransformSetInterpolatorSRT* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TransformSetInterpolatorSRT, _impl_.t_)
      + sizeof(TransformSetInterpolatorSRT::_impl_.t_)
      - PROTOBUF_FIELD_OFFSET(TransformSetInterpolatorSRT, _impl_.from_)>(
          reinterpret_cast<char*>(&_impl_.from_),
          reinterpret_cast<char*>(&other->_impl_.from_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TransformSetInterpolatorSRT::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[76]);
}

// ===================================================================

class TransformSetInterpolatorSQT::_Internal {
 public:
  static const ::Property::ScalarPropertyValue& t(const TransformSetInterpolatorSQT* msg);
  static const ::Property::TransformSetSQT& from(const TransformSetInterpolatorSQT* msg);
  static const ::Property::TransformSetSQT& to(const TransformSetInterpolatorSQT* msg);
  static const ::Property::Interpolation& by(const TransformSetInterpolatorSQT* msg);
};

const ::Property::ScalarPropertyValue&
TransformSetInterpolatorSQT::_Internal::t(const TransformSetInterpolatorSQT* msg) {
  return *msg->_impl_.t_;
}
const ::Property::TransformSetSQT&
TransformSetInterpolatorSQT::_Internal::from(const TransformSetInterpolatorSQT* msg) {
  return *msg->_impl_.from_;
}
const ::Property::TransformSetSQT&
TransformSetInterpolatorSQT::_Internal::to(const TransformSetInterpolatorSQT* msg) {
  return *msg->_impl_.to_;
}
const ::Property::Interpolation&
TransformSetInterpolatorSQT::_Internal::by(const TransformSetInterpolatorSQT* msg) {
  return *msg->_impl_.by_;
}
TransformSetInterpolatorSQT::TransformSetInterpolatorSQT(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.TransformSetInterpolatorSQT)
}
TransformSetInterpolatorSQT::TransformSetInterpolatorSQT(const TransformSetInterpolatorSQT& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TransformSetInterpolatorSQT* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.from_){nullptr}
    , decltype(_impl_.to_){nullptr}
    , decltype(_impl_.by_){nullptr}
    , decltype(_impl_.t_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_from()) {
    _this->_impl_.from_ = new ::Property::TransformSetSQT(*from._impl_.from_);
  }
  if (from._internal_has_to()) {
    _this->_impl_.to_ = new ::Property::TransformSetSQT(*from._impl_.to_);
  }
  if (from._internal_has_by()) {
    _this->_impl_.by_ = new ::Property::Interpolation(*from._impl_.by_);
  }
  if (from._internal_has_t()) {
    _this->_impl_.t_ = new ::Property::ScalarPropertyValue(*from._impl_.t_);
  }
  // @@protoc_insertion_point(copy_constructor:Property.TransformSetInterpolatorSQT)
}

inline void TransformSetInterpolatorSQT::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.from_){nullptr}
    , decltype(_impl_.to_){nullptr}
    , decltype(_impl_.by_){nullptr}
    , decltype(_impl_.t_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

TransformSetInterpolatorSQT::~TransformSetInterpolatorSQT() {
  // @@protoc_insertion_point(destructor:Property.TransformSetInterpolatorSQT)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TransformSetInterpolatorSQT::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.from_;
  if (this != internal_default_instance()) delete _impl_.to_;
  if (this != internal_default_instance()) delete _impl_.by_;
  if (this != internal_default_instance()) delete _impl_.t_;
}

void TransformSetInterpolatorSQT::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TransformSetInterpolatorSQT::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.TransformSetInterpolatorSQT)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.from_ != nullptr) {
    delete _impl_.from_;
  }
  _impl_.from_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.to_ != nullptr) {
    delete _impl_.to_;
  }
  _impl_.to_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.by_ != nullptr) {
    delete _impl_.by_;
  }
  _impl_.by_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.t_ != nullptr) {
    delete _impl_.t_;
  }
  _impl_.t_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TransformSetInterpolatorSQT::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Property.TransformSetSQT from = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_from(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.TransformSetSQT to = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_to(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.Interpolation by = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_by(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.ScalarPropertyValue t = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_t(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TransformSetInterpolatorSQT::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.TransformSetInterpolatorSQT)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Property.TransformSetSQT from = 1;
  if (this->_internal_has_from()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::from(this),
        _Internal::from(this).GetCachedSize(), target, stream);
  }

  // .Property.TransformSetSQT to = 2;
  if (this->_internal_has_to()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::to(this),
        _Internal::to(this).GetCachedSize(), target, stream);
  }

  // .Property.Interpolation by = 3;
  if (this->_internal_has_by()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::by(this),
        _Internal::by(this).GetCachedSize(), target, stream);
  }

  // .Property.ScalarPropertyValue t = 4;
  if (this->_internal_has_t()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::t(this),
        _Internal::t(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.TransformSetInterpolatorSQT)
  return target;
}

size_t TransformSetInterpolatorSQT::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.TransformSetInterpolatorSQT)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Property.TransformSetSQT from = 1;
  if (this->_internal_has_from()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.from_);
  }

  // .Property.TransformSetSQT to = 2;
  if (this->_internal_has_to()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.to_);
  }

  // .Property.Interpolation by = 3;
  if (this->_internal_has_by()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.by_);
  }

  // .Property.ScalarPropertyValue t = 4;
  if (this->_internal_has_t()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.t_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TransformSetInterpolatorSQT::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TransformSetInterpolatorSQT::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TransformSetInterpolatorSQT::GetClassData() const { return &_class_data_; }


void TransformSetInterpolatorSQT::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TransformSetInterpolatorSQT*>(&to_msg);
  auto& from = static_cast<const TransformSetInterpolatorSQT&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.TransformSetInterpolatorSQT)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_from()) {
    _this->_internal_mutable_from()->::Property::TransformSetSQT::MergeFrom(
        from._internal_from());
  }
  if (from._internal_has_to()) {
    _this->_internal_mutable_to()->::Property::TransformSetSQT::MergeFrom(
        from._internal_to());
  }
  if (from._internal_has_by()) {
    _this->_internal_mutable_by()->::Property::Interpolation::MergeFrom(
        from._internal_by());
  }
  if (from._internal_has_t()) {
    _this->_internal_mutable_t()->::Property::ScalarPropertyValue::MergeFrom(
        from._internal_t());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TransformSetInterpolatorSQT::CopyFrom(const TransformSetInterpolatorSQT& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.TransformSetInterpolatorSQT)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransformSetInterpolatorSQT::IsInitialized() const {
  return true;
}

void TransformSetInterpolatorSQT::InternalSwap(TransformSetInterpolatorSQT* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TransformSetInterpolatorSQT, _impl_.t_)
      + sizeof(TransformSetInterpolatorSQT::_impl_.t_)
      - PROTOBUF_FIELD_OFFSET(TransformSetInterpolatorSQT, _impl_.from_)>(
          reinterpret_cast<char*>(&_impl_.from_),
          reinterpret_cast<char*>(&other->_impl_.from_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TransformSetInterpolatorSQT::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[77]);
}

// ===================================================================

class TransformSetInterpolatorLookAt::_Internal {
 public:
  static const ::Property::ScalarPropertyValue& t(const TransformSetInterpolatorLookAt* msg);
  static const ::Property::TransformSetLookAt& from(const TransformSetInterpolatorLookAt* msg);
  static const ::Property::TransformSetLookAt& to(const TransformSetInterpolatorLookAt* msg);
  static const ::Property::Interpolation& by(const TransformSetInterpolatorLookAt* msg);
};

const ::Property::ScalarPropertyValue&
TransformSetInterpolatorLookAt::_Internal::t(const TransformSetInterpolatorLookAt* msg) {
  return *msg->_impl_.t_;
}
const ::Property::TransformSetLookAt&
TransformSetInterpolatorLookAt::_Internal::from(const TransformSetInterpolatorLookAt* msg) {
  return *msg->_impl_.from_;
}
const ::Property::TransformSetLookAt&
TransformSetInterpolatorLookAt::_Internal::to(const TransformSetInterpolatorLookAt* msg) {
  return *msg->_impl_.to_;
}
const ::Property::Interpolation&
TransformSetInterpolatorLookAt::_Internal::by(const TransformSetInterpolatorLookAt* msg) {
  return *msg->_impl_.by_;
}
TransformSetInterpolatorLookAt::TransformSetInterpolatorLookAt(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.TransformSetInterpolatorLookAt)
}
TransformSetInterpolatorLookAt::TransformSetInterpolatorLookAt(const TransformSetInterpolatorLookAt& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TransformSetInterpolatorLookAt* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.from_){nullptr}
    , decltype(_impl_.to_){nullptr}
    , decltype(_impl_.by_){nullptr}
    , decltype(_impl_.t_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_from()) {
    _this->_impl_.from_ = new ::Property::TransformSetLookAt(*from._impl_.from_);
  }
  if (from._internal_has_to()) {
    _this->_impl_.to_ = new ::Property::TransformSetLookAt(*from._impl_.to_);
  }
  if (from._internal_has_by()) {
    _this->_impl_.by_ = new ::Property::Interpolation(*from._impl_.by_);
  }
  if (from._internal_has_t()) {
    _this->_impl_.t_ = new ::Property::ScalarPropertyValue(*from._impl_.t_);
  }
  // @@protoc_insertion_point(copy_constructor:Property.TransformSetInterpolatorLookAt)
}

inline void TransformSetInterpolatorLookAt::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.from_){nullptr}
    , decltype(_impl_.to_){nullptr}
    , decltype(_impl_.by_){nullptr}
    , decltype(_impl_.t_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

TransformSetInterpolatorLookAt::~TransformSetInterpolatorLookAt() {
  // @@protoc_insertion_point(destructor:Property.TransformSetInterpolatorLookAt)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TransformSetInterpolatorLookAt::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.from_;
  if (this != internal_default_instance()) delete _impl_.to_;
  if (this != internal_default_instance()) delete _impl_.by_;
  if (this != internal_default_instance()) delete _impl_.t_;
}

void TransformSetInterpolatorLookAt::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TransformSetInterpolatorLookAt::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.TransformSetInterpolatorLookAt)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.from_ != nullptr) {
    delete _impl_.from_;
  }
  _impl_.from_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.to_ != nullptr) {
    delete _impl_.to_;
  }
  _impl_.to_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.by_ != nullptr) {
    delete _impl_.by_;
  }
  _impl_.by_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.t_ != nullptr) {
    delete _impl_.t_;
  }
  _impl_.t_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TransformSetInterpolatorLookAt::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Property.TransformSetLookAt from = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_from(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.TransformSetLookAt to = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_to(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.Interpolation by = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_by(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.ScalarPropertyValue t = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_t(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TransformSetInterpolatorLookAt::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.TransformSetInterpolatorLookAt)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Property.TransformSetLookAt from = 1;
  if (this->_internal_has_from()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::from(this),
        _Internal::from(this).GetCachedSize(), target, stream);
  }

  // .Property.TransformSetLookAt to = 2;
  if (this->_internal_has_to()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::to(this),
        _Internal::to(this).GetCachedSize(), target, stream);
  }

  // .Property.Interpolation by = 3;
  if (this->_internal_has_by()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::by(this),
        _Internal::by(this).GetCachedSize(), target, stream);
  }

  // .Property.ScalarPropertyValue t = 4;
  if (this->_internal_has_t()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::t(this),
        _Internal::t(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.TransformSetInterpolatorLookAt)
  return target;
}

size_t TransformSetInterpolatorLookAt::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.TransformSetInterpolatorLookAt)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Property.TransformSetLookAt from = 1;
  if (this->_internal_has_from()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.from_);
  }

  // .Property.TransformSetLookAt to = 2;
  if (this->_internal_has_to()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.to_);
  }

  // .Property.Interpolation by = 3;
  if (this->_internal_has_by()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.by_);
  }

  // .Property.ScalarPropertyValue t = 4;
  if (this->_internal_has_t()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.t_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TransformSetInterpolatorLookAt::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TransformSetInterpolatorLookAt::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TransformSetInterpolatorLookAt::GetClassData() const { return &_class_data_; }


void TransformSetInterpolatorLookAt::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TransformSetInterpolatorLookAt*>(&to_msg);
  auto& from = static_cast<const TransformSetInterpolatorLookAt&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.TransformSetInterpolatorLookAt)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_from()) {
    _this->_internal_mutable_from()->::Property::TransformSetLookAt::MergeFrom(
        from._internal_from());
  }
  if (from._internal_has_to()) {
    _this->_internal_mutable_to()->::Property::TransformSetLookAt::MergeFrom(
        from._internal_to());
  }
  if (from._internal_has_by()) {
    _this->_internal_mutable_by()->::Property::Interpolation::MergeFrom(
        from._internal_by());
  }
  if (from._internal_has_t()) {
    _this->_internal_mutable_t()->::Property::ScalarPropertyValue::MergeFrom(
        from._internal_t());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TransformSetInterpolatorLookAt::CopyFrom(const TransformSetInterpolatorLookAt& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.TransformSetInterpolatorLookAt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransformSetInterpolatorLookAt::IsInitialized() const {
  return true;
}

void TransformSetInterpolatorLookAt::InternalSwap(TransformSetInterpolatorLookAt* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TransformSetInterpolatorLookAt, _impl_.t_)
      + sizeof(TransformSetInterpolatorLookAt::_impl_.t_)
      - PROTOBUF_FIELD_OFFSET(TransformSetInterpolatorLookAt, _impl_.from_)>(
          reinterpret_cast<char*>(&_impl_.from_),
          reinterpret_cast<char*>(&other->_impl_.from_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TransformSetInterpolatorLookAt::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[78]);
}

// ===================================================================

class TransformSetApproach::_Internal {
 public:
  static const ::Property::ScalarPropertyValue& t(const TransformSetApproach* msg);
  static const ::Property::TransformSet& to(const TransformSetApproach* msg);
  static const ::Property::ScalarPropertyValue& timetohalf(const TransformSetApproach* msg);
  static const ::Property::TransformSet& start(const TransformSetApproach* msg);
};

const ::Property::ScalarPropertyValue&
TransformSetApproach::_Internal::t(const TransformSetApproach* msg) {
  return *msg->_impl_.t_;
}
const ::Property::TransformSet&
TransformSetApproach::_Internal::to(const TransformSetApproach* msg) {
  return *msg->_impl_.to_;
}
const ::Property::ScalarPropertyValue&
TransformSetApproach::_Internal::timetohalf(const TransformSetApproach* msg) {
  return *msg->_impl_.timetohalf_;
}
const ::Property::TransformSet&
TransformSetApproach::_Internal::start(const TransformSetApproach* msg) {
  return *msg->_impl_.start_;
}
TransformSetApproach::TransformSetApproach(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.TransformSetApproach)
}
TransformSetApproach::TransformSetApproach(const TransformSetApproach& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TransformSetApproach* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.t_){nullptr}
    , decltype(_impl_.to_){nullptr}
    , decltype(_impl_.timetohalf_){nullptr}
    , decltype(_impl_.start_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_t()) {
    _this->_impl_.t_ = new ::Property::ScalarPropertyValue(*from._impl_.t_);
  }
  if (from._internal_has_to()) {
    _this->_impl_.to_ = new ::Property::TransformSet(*from._impl_.to_);
  }
  if (from._internal_has_timetohalf()) {
    _this->_impl_.timetohalf_ = new ::Property::ScalarPropertyValue(*from._impl_.timetohalf_);
  }
  if (from._internal_has_start()) {
    _this->_impl_.start_ = new ::Property::TransformSet(*from._impl_.start_);
  }
  // @@protoc_insertion_point(copy_constructor:Property.TransformSetApproach)
}

inline void TransformSetApproach::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.t_){nullptr}
    , decltype(_impl_.to_){nullptr}
    , decltype(_impl_.timetohalf_){nullptr}
    , decltype(_impl_.start_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

TransformSetApproach::~TransformSetApproach() {
  // @@protoc_insertion_point(destructor:Property.TransformSetApproach)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TransformSetApproach::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.t_;
  if (this != internal_default_instance()) delete _impl_.to_;
  if (this != internal_default_instance()) delete _impl_.timetohalf_;
  if (this != internal_default_instance()) delete _impl_.start_;
}

void TransformSetApproach::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TransformSetApproach::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.TransformSetApproach)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.t_ != nullptr) {
    delete _impl_.t_;
  }
  _impl_.t_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.to_ != nullptr) {
    delete _impl_.to_;
  }
  _impl_.to_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.timetohalf_ != nullptr) {
    delete _impl_.timetohalf_;
  }
  _impl_.timetohalf_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.start_ != nullptr) {
    delete _impl_.start_;
  }
  _impl_.start_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TransformSetApproach::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Property.ScalarPropertyValue t = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_t(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.TransformSet to = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_to(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.ScalarPropertyValue timeToHalf = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_timetohalf(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.TransformSet start = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_start(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TransformSetApproach::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.TransformSetApproach)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Property.ScalarPropertyValue t = 1;
  if (this->_internal_has_t()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::t(this),
        _Internal::t(this).GetCachedSize(), target, stream);
  }

  // .Property.TransformSet to = 2;
  if (this->_internal_has_to()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::to(this),
        _Internal::to(this).GetCachedSize(), target, stream);
  }

  // .Property.ScalarPropertyValue timeToHalf = 3;
  if (this->_internal_has_timetohalf()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::timetohalf(this),
        _Internal::timetohalf(this).GetCachedSize(), target, stream);
  }

  // .Property.TransformSet start = 4;
  if (this->_internal_has_start()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::start(this),
        _Internal::start(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.TransformSetApproach)
  return target;
}

size_t TransformSetApproach::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.TransformSetApproach)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Property.ScalarPropertyValue t = 1;
  if (this->_internal_has_t()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.t_);
  }

  // .Property.TransformSet to = 2;
  if (this->_internal_has_to()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.to_);
  }

  // .Property.ScalarPropertyValue timeToHalf = 3;
  if (this->_internal_has_timetohalf()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.timetohalf_);
  }

  // .Property.TransformSet start = 4;
  if (this->_internal_has_start()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.start_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TransformSetApproach::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TransformSetApproach::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TransformSetApproach::GetClassData() const { return &_class_data_; }


void TransformSetApproach::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TransformSetApproach*>(&to_msg);
  auto& from = static_cast<const TransformSetApproach&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.TransformSetApproach)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_t()) {
    _this->_internal_mutable_t()->::Property::ScalarPropertyValue::MergeFrom(
        from._internal_t());
  }
  if (from._internal_has_to()) {
    _this->_internal_mutable_to()->::Property::TransformSet::MergeFrom(
        from._internal_to());
  }
  if (from._internal_has_timetohalf()) {
    _this->_internal_mutable_timetohalf()->::Property::ScalarPropertyValue::MergeFrom(
        from._internal_timetohalf());
  }
  if (from._internal_has_start()) {
    _this->_internal_mutable_start()->::Property::TransformSet::MergeFrom(
        from._internal_start());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TransformSetApproach::CopyFrom(const TransformSetApproach& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.TransformSetApproach)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransformSetApproach::IsInitialized() const {
  return true;
}

void TransformSetApproach::InternalSwap(TransformSetApproach* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TransformSetApproach, _impl_.start_)
      + sizeof(TransformSetApproach::_impl_.start_)
      - PROTOBUF_FIELD_OFFSET(TransformSetApproach, _impl_.t_)>(
          reinterpret_cast<char*>(&_impl_.t_),
          reinterpret_cast<char*>(&other->_impl_.t_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TransformSetApproach::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[79]);
}

// ===================================================================

class TransformSetConditional::_Internal {
 public:
  using HasBits = decltype(std::declval<TransformSetConditional>()._impl_._has_bits_);
  static const ::Property::BooleanPropertyValue& condition(const TransformSetConditional* msg);
  static const ::Property::TransformSet& truevalue(const TransformSetConditional* msg);
  static void set_has_truevalue(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::Property::TransformSet& falsevalue(const TransformSetConditional* msg);
  static void set_has_falsevalue(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::Property::BooleanPropertyValue&
TransformSetConditional::_Internal::condition(const TransformSetConditional* msg) {
  return *msg->_impl_.condition_;
}
const ::Property::TransformSet&
TransformSetConditional::_Internal::truevalue(const TransformSetConditional* msg) {
  return *msg->_impl_.truevalue_;
}
const ::Property::TransformSet&
TransformSetConditional::_Internal::falsevalue(const TransformSetConditional* msg) {
  return *msg->_impl_.falsevalue_;
}
TransformSetConditional::TransformSetConditional(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.TransformSetConditional)
}
TransformSetConditional::TransformSetConditional(const TransformSetConditional& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TransformSetConditional* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.condition_){nullptr}
    , decltype(_impl_.truevalue_){nullptr}
    , decltype(_impl_.falsevalue_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_condition()) {
    _this->_impl_.condition_ = new ::Property::BooleanPropertyValue(*from._impl_.condition_);
  }
  if (from._internal_has_truevalue()) {
    _this->_impl_.truevalue_ = new ::Property::TransformSet(*from._impl_.truevalue_);
  }
  if (from._internal_has_falsevalue()) {
    _this->_impl_.falsevalue_ = new ::Property::TransformSet(*from._impl_.falsevalue_);
  }
  // @@protoc_insertion_point(copy_constructor:Property.TransformSetConditional)
}

inline void TransformSetConditional::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.condition_){nullptr}
    , decltype(_impl_.truevalue_){nullptr}
    , decltype(_impl_.falsevalue_){nullptr}
  };
}

TransformSetConditional::~TransformSetConditional() {
  // @@protoc_insertion_point(destructor:Property.TransformSetConditional)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TransformSetConditional::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.condition_;
  if (this != internal_default_instance()) delete _impl_.truevalue_;
  if (this != internal_default_instance()) delete _impl_.falsevalue_;
}

void TransformSetConditional::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TransformSetConditional::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.TransformSetConditional)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.condition_ != nullptr) {
    delete _impl_.condition_;
  }
  _impl_.condition_ = nullptr;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.truevalue_ != nullptr);
      _impl_.truevalue_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.falsevalue_ != nullptr);
      _impl_.falsevalue_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TransformSetConditional::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Property.BooleanPropertyValue condition = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_condition(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .Property.TransformSet trueValue = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_truevalue(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .Property.TransformSet falseValue = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_falsevalue(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TransformSetConditional::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.TransformSetConditional)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Property.BooleanPropertyValue condition = 1;
  if (this->_internal_has_condition()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::condition(this),
        _Internal::condition(this).GetCachedSize(), target, stream);
  }

  // optional .Property.TransformSet trueValue = 2;
  if (_internal_has_truevalue()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::truevalue(this),
        _Internal::truevalue(this).GetCachedSize(), target, stream);
  }

  // optional .Property.TransformSet falseValue = 3;
  if (_internal_has_falsevalue()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::falsevalue(this),
        _Internal::falsevalue(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.TransformSetConditional)
  return target;
}

size_t TransformSetConditional::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.TransformSetConditional)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Property.BooleanPropertyValue condition = 1;
  if (this->_internal_has_condition()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.condition_);
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .Property.TransformSet trueValue = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.truevalue_);
    }

    // optional .Property.TransformSet falseValue = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.falsevalue_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TransformSetConditional::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TransformSetConditional::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TransformSetConditional::GetClassData() const { return &_class_data_; }


void TransformSetConditional::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TransformSetConditional*>(&to_msg);
  auto& from = static_cast<const TransformSetConditional&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.TransformSetConditional)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_condition()) {
    _this->_internal_mutable_condition()->::Property::BooleanPropertyValue::MergeFrom(
        from._internal_condition());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_truevalue()->::Property::TransformSet::MergeFrom(
          from._internal_truevalue());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_falsevalue()->::Property::TransformSet::MergeFrom(
          from._internal_falsevalue());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TransformSetConditional::CopyFrom(const TransformSetConditional& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.TransformSetConditional)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransformSetConditional::IsInitialized() const {
  return true;
}

void TransformSetConditional::InternalSwap(TransformSetConditional* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TransformSetConditional, _impl_.falsevalue_)
      + sizeof(TransformSetConditional::_impl_.falsevalue_)
      - PROTOBUF_FIELD_OFFSET(TransformSetConditional, _impl_.condition_)>(
          reinterpret_cast<char*>(&_impl_.condition_),
          reinterpret_cast<char*>(&other->_impl_.condition_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TransformSetConditional::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[80]);
}

// ===================================================================

class TransformUpdate::_Internal {
 public:
  static const ::Property::TransformUpdateAddT& addtranslation(const TransformUpdate* msg);
  static const ::Property::TransformUpdateAddR& addeulerrotation(const TransformUpdate* msg);
  static const ::Property::TransformUpdateAddQ& addquatrotation(const TransformUpdate* msg);
  static const ::Property::TransformUpdateScaleUniform& uniformscale(const TransformUpdate* msg);
  static const ::Property::TransformUpdateScaleNonuniform& nonuniformscale(const TransformUpdate* msg);
  static const ::Property::TransformUpdateLookAt& facepos(const TransformUpdate* msg);
  static const ::Property::TransformUpdateRotateToEuler& toeuler(const TransformUpdate* msg);
  static const ::Property::TransformUpdateRotateToQuat& toquat(const TransformUpdate* msg);
};

const ::Property::TransformUpdateAddT&
TransformUpdate::_Internal::addtranslation(const TransformUpdate* msg) {
  return *msg->_impl_.UpdateType_.addtranslation_;
}
const ::Property::TransformUpdateAddR&
TransformUpdate::_Internal::addeulerrotation(const TransformUpdate* msg) {
  return *msg->_impl_.UpdateType_.addeulerrotation_;
}
const ::Property::TransformUpdateAddQ&
TransformUpdate::_Internal::addquatrotation(const TransformUpdate* msg) {
  return *msg->_impl_.UpdateType_.addquatrotation_;
}
const ::Property::TransformUpdateScaleUniform&
TransformUpdate::_Internal::uniformscale(const TransformUpdate* msg) {
  return *msg->_impl_.UpdateType_.uniformscale_;
}
const ::Property::TransformUpdateScaleNonuniform&
TransformUpdate::_Internal::nonuniformscale(const TransformUpdate* msg) {
  return *msg->_impl_.UpdateType_.nonuniformscale_;
}
const ::Property::TransformUpdateLookAt&
TransformUpdate::_Internal::facepos(const TransformUpdate* msg) {
  return *msg->_impl_.UpdateType_.facepos_;
}
const ::Property::TransformUpdateRotateToEuler&
TransformUpdate::_Internal::toeuler(const TransformUpdate* msg) {
  return *msg->_impl_.UpdateType_.toeuler_;
}
const ::Property::TransformUpdateRotateToQuat&
TransformUpdate::_Internal::toquat(const TransformUpdate* msg) {
  return *msg->_impl_.UpdateType_.toquat_;
}
void TransformUpdate::set_allocated_addtranslation(::Property::TransformUpdateAddT* addtranslation) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_UpdateType();
  if (addtranslation) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(addtranslation);
    if (message_arena != submessage_arena) {
      addtranslation = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, addtranslation, submessage_arena);
    }
    set_has_addtranslation();
    _impl_.UpdateType_.addtranslation_ = addtranslation;
  }
  // @@protoc_insertion_point(field_set_allocated:Property.TransformUpdate.addTranslation)
}
void TransformUpdate::set_allocated_addeulerrotation(::Property::TransformUpdateAddR* addeulerrotation) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_UpdateType();
  if (addeulerrotation) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(addeulerrotation);
    if (message_arena != submessage_arena) {
      addeulerrotation = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, addeulerrotation, submessage_arena);
    }
    set_has_addeulerrotation();
    _impl_.UpdateType_.addeulerrotation_ = addeulerrotation;
  }
  // @@protoc_insertion_point(field_set_allocated:Property.TransformUpdate.addEulerRotation)
}
void TransformUpdate::set_allocated_addquatrotation(::Property::TransformUpdateAddQ* addquatrotation) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_UpdateType();
  if (addquatrotation) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(addquatrotation);
    if (message_arena != submessage_arena) {
      addquatrotation = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, addquatrotation, submessage_arena);
    }
    set_has_addquatrotation();
    _impl_.UpdateType_.addquatrotation_ = addquatrotation;
  }
  // @@protoc_insertion_point(field_set_allocated:Property.TransformUpdate.addQuatRotation)
}
void TransformUpdate::set_allocated_uniformscale(::Property::TransformUpdateScaleUniform* uniformscale) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_UpdateType();
  if (uniformscale) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(uniformscale);
    if (message_arena != submessage_arena) {
      uniformscale = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, uniformscale, submessage_arena);
    }
    set_has_uniformscale();
    _impl_.UpdateType_.uniformscale_ = uniformscale;
  }
  // @@protoc_insertion_point(field_set_allocated:Property.TransformUpdate.uniformScale)
}
void TransformUpdate::set_allocated_nonuniformscale(::Property::TransformUpdateScaleNonuniform* nonuniformscale) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_UpdateType();
  if (nonuniformscale) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(nonuniformscale);
    if (message_arena != submessage_arena) {
      nonuniformscale = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, nonuniformscale, submessage_arena);
    }
    set_has_nonuniformscale();
    _impl_.UpdateType_.nonuniformscale_ = nonuniformscale;
  }
  // @@protoc_insertion_point(field_set_allocated:Property.TransformUpdate.nonuniformScale)
}
void TransformUpdate::set_allocated_facepos(::Property::TransformUpdateLookAt* facepos) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_UpdateType();
  if (facepos) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(facepos);
    if (message_arena != submessage_arena) {
      facepos = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, facepos, submessage_arena);
    }
    set_has_facepos();
    _impl_.UpdateType_.facepos_ = facepos;
  }
  // @@protoc_insertion_point(field_set_allocated:Property.TransformUpdate.facePos)
}
void TransformUpdate::set_allocated_toeuler(::Property::TransformUpdateRotateToEuler* toeuler) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_UpdateType();
  if (toeuler) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(toeuler);
    if (message_arena != submessage_arena) {
      toeuler = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, toeuler, submessage_arena);
    }
    set_has_toeuler();
    _impl_.UpdateType_.toeuler_ = toeuler;
  }
  // @@protoc_insertion_point(field_set_allocated:Property.TransformUpdate.toEuler)
}
void TransformUpdate::set_allocated_toquat(::Property::TransformUpdateRotateToQuat* toquat) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_UpdateType();
  if (toquat) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(toquat);
    if (message_arena != submessage_arena) {
      toquat = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, toquat, submessage_arena);
    }
    set_has_toquat();
    _impl_.UpdateType_.toquat_ = toquat;
  }
  // @@protoc_insertion_point(field_set_allocated:Property.TransformUpdate.toQuat)
}
TransformUpdate::TransformUpdate(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.TransformUpdate)
}
TransformUpdate::TransformUpdate(const TransformUpdate& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TransformUpdate* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.UpdateType_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_UpdateType();
  switch (from.UpdateType_case()) {
    case kAddTranslation: {
      _this->_internal_mutable_addtranslation()->::Property::TransformUpdateAddT::MergeFrom(
          from._internal_addtranslation());
      break;
    }
    case kAddEulerRotation: {
      _this->_internal_mutable_addeulerrotation()->::Property::TransformUpdateAddR::MergeFrom(
          from._internal_addeulerrotation());
      break;
    }
    case kAddQuatRotation: {
      _this->_internal_mutable_addquatrotation()->::Property::TransformUpdateAddQ::MergeFrom(
          from._internal_addquatrotation());
      break;
    }
    case kUniformScale: {
      _this->_internal_mutable_uniformscale()->::Property::TransformUpdateScaleUniform::MergeFrom(
          from._internal_uniformscale());
      break;
    }
    case kNonuniformScale: {
      _this->_internal_mutable_nonuniformscale()->::Property::TransformUpdateScaleNonuniform::MergeFrom(
          from._internal_nonuniformscale());
      break;
    }
    case kFacePos: {
      _this->_internal_mutable_facepos()->::Property::TransformUpdateLookAt::MergeFrom(
          from._internal_facepos());
      break;
    }
    case kToEuler: {
      _this->_internal_mutable_toeuler()->::Property::TransformUpdateRotateToEuler::MergeFrom(
          from._internal_toeuler());
      break;
    }
    case kToQuat: {
      _this->_internal_mutable_toquat()->::Property::TransformUpdateRotateToQuat::MergeFrom(
          from._internal_toquat());
      break;
    }
    case kExpr: {
      _this->_internal_set_expr(from._internal_expr());
      break;
    }
    case UPDATETYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:Property.TransformUpdate)
}

inline void TransformUpdate::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.UpdateType_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  clear_has_UpdateType();
}

TransformUpdate::~TransformUpdate() {
  // @@protoc_insertion_point(destructor:Property.TransformUpdate)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TransformUpdate::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_UpdateType()) {
    clear_UpdateType();
  }
}

void TransformUpdate::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TransformUpdate::clear_UpdateType() {
// @@protoc_insertion_point(one_of_clear_start:Property.TransformUpdate)
  switch (UpdateType_case()) {
    case kAddTranslation: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.UpdateType_.addtranslation_;
      }
      break;
    }
    case kAddEulerRotation: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.UpdateType_.addeulerrotation_;
      }
      break;
    }
    case kAddQuatRotation: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.UpdateType_.addquatrotation_;
      }
      break;
    }
    case kUniformScale: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.UpdateType_.uniformscale_;
      }
      break;
    }
    case kNonuniformScale: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.UpdateType_.nonuniformscale_;
      }
      break;
    }
    case kFacePos: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.UpdateType_.facepos_;
      }
      break;
    }
    case kToEuler: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.UpdateType_.toeuler_;
      }
      break;
    }
    case kToQuat: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.UpdateType_.toquat_;
      }
      break;
    }
    case kExpr: {
      _impl_.UpdateType_.expr_.Destroy();
      break;
    }
    case UPDATETYPE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = UPDATETYPE_NOT_SET;
}


void TransformUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.TransformUpdate)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_UpdateType();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TransformUpdate::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Property.TransformUpdateAddT addTranslation = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_addtranslation(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.TransformUpdateAddR addEulerRotation = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_addeulerrotation(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.TransformUpdateAddQ addQuatRotation = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_addquatrotation(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.TransformUpdateScaleUniform uniformScale = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_uniformscale(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.TransformUpdateScaleNonuniform nonuniformScale = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_nonuniformscale(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.TransformUpdateLookAt facePos = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_facepos(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.TransformUpdateRotateToEuler toEuler = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_toeuler(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.TransformUpdateRotateToQuat toQuat = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_toquat(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string expr = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          auto str = _internal_mutable_expr();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "Property.TransformUpdate.expr"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TransformUpdate::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.TransformUpdate)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Property.TransformUpdateAddT addTranslation = 1;
  if (_internal_has_addtranslation()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::addtranslation(this),
        _Internal::addtranslation(this).GetCachedSize(), target, stream);
  }

  // .Property.TransformUpdateAddR addEulerRotation = 2;
  if (_internal_has_addeulerrotation()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::addeulerrotation(this),
        _Internal::addeulerrotation(this).GetCachedSize(), target, stream);
  }

  // .Property.TransformUpdateAddQ addQuatRotation = 3;
  if (_internal_has_addquatrotation()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::addquatrotation(this),
        _Internal::addquatrotation(this).GetCachedSize(), target, stream);
  }

  // .Property.TransformUpdateScaleUniform uniformScale = 4;
  if (_internal_has_uniformscale()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::uniformscale(this),
        _Internal::uniformscale(this).GetCachedSize(), target, stream);
  }

  // .Property.TransformUpdateScaleNonuniform nonuniformScale = 5;
  if (_internal_has_nonuniformscale()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::nonuniformscale(this),
        _Internal::nonuniformscale(this).GetCachedSize(), target, stream);
  }

  // .Property.TransformUpdateLookAt facePos = 6;
  if (_internal_has_facepos()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::facepos(this),
        _Internal::facepos(this).GetCachedSize(), target, stream);
  }

  // .Property.TransformUpdateRotateToEuler toEuler = 7;
  if (_internal_has_toeuler()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::toeuler(this),
        _Internal::toeuler(this).GetCachedSize(), target, stream);
  }

  // .Property.TransformUpdateRotateToQuat toQuat = 8;
  if (_internal_has_toquat()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(8, _Internal::toquat(this),
        _Internal::toquat(this).GetCachedSize(), target, stream);
  }

  // string expr = 9;
  if (_internal_has_expr()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_expr().data(), static_cast<int>(this->_internal_expr().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Property.TransformUpdate.expr");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_expr(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.TransformUpdate)
  return target;
}

size_t TransformUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.TransformUpdate)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (UpdateType_case()) {
    // .Property.TransformUpdateAddT addTranslation = 1;
    case kAddTranslation: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.UpdateType_.addtranslation_);
      break;
    }
    // .Property.TransformUpdateAddR addEulerRotation = 2;
    case kAddEulerRotation: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.UpdateType_.addeulerrotation_);
      break;
    }
    // .Property.TransformUpdateAddQ addQuatRotation = 3;
    case kAddQuatRotation: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.UpdateType_.addquatrotation_);
      break;
    }
    // .Property.TransformUpdateScaleUniform uniformScale = 4;
    case kUniformScale: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.UpdateType_.uniformscale_);
      break;
    }
    // .Property.TransformUpdateScaleNonuniform nonuniformScale = 5;
    case kNonuniformScale: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.UpdateType_.nonuniformscale_);
      break;
    }
    // .Property.TransformUpdateLookAt facePos = 6;
    case kFacePos: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.UpdateType_.facepos_);
      break;
    }
    // .Property.TransformUpdateRotateToEuler toEuler = 7;
    case kToEuler: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.UpdateType_.toeuler_);
      break;
    }
    // .Property.TransformUpdateRotateToQuat toQuat = 8;
    case kToQuat: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.UpdateType_.toquat_);
      break;
    }
    // string expr = 9;
    case kExpr: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_expr());
      break;
    }
    case UPDATETYPE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TransformUpdate::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TransformUpdate::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TransformUpdate::GetClassData() const { return &_class_data_; }


void TransformUpdate::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TransformUpdate*>(&to_msg);
  auto& from = static_cast<const TransformUpdate&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.TransformUpdate)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.UpdateType_case()) {
    case kAddTranslation: {
      _this->_internal_mutable_addtranslation()->::Property::TransformUpdateAddT::MergeFrom(
          from._internal_addtranslation());
      break;
    }
    case kAddEulerRotation: {
      _this->_internal_mutable_addeulerrotation()->::Property::TransformUpdateAddR::MergeFrom(
          from._internal_addeulerrotation());
      break;
    }
    case kAddQuatRotation: {
      _this->_internal_mutable_addquatrotation()->::Property::TransformUpdateAddQ::MergeFrom(
          from._internal_addquatrotation());
      break;
    }
    case kUniformScale: {
      _this->_internal_mutable_uniformscale()->::Property::TransformUpdateScaleUniform::MergeFrom(
          from._internal_uniformscale());
      break;
    }
    case kNonuniformScale: {
      _this->_internal_mutable_nonuniformscale()->::Property::TransformUpdateScaleNonuniform::MergeFrom(
          from._internal_nonuniformscale());
      break;
    }
    case kFacePos: {
      _this->_internal_mutable_facepos()->::Property::TransformUpdateLookAt::MergeFrom(
          from._internal_facepos());
      break;
    }
    case kToEuler: {
      _this->_internal_mutable_toeuler()->::Property::TransformUpdateRotateToEuler::MergeFrom(
          from._internal_toeuler());
      break;
    }
    case kToQuat: {
      _this->_internal_mutable_toquat()->::Property::TransformUpdateRotateToQuat::MergeFrom(
          from._internal_toquat());
      break;
    }
    case kExpr: {
      _this->_internal_set_expr(from._internal_expr());
      break;
    }
    case UPDATETYPE_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TransformUpdate::CopyFrom(const TransformUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.TransformUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransformUpdate::IsInitialized() const {
  return true;
}

void TransformUpdate::InternalSwap(TransformUpdate* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.UpdateType_, other->_impl_.UpdateType_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata TransformUpdate::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[81]);
}

// ===================================================================

class TransformUpdateAddT::_Internal {
 public:
  static const ::Property::VectorPropertyValue& offsetposition(const TransformUpdateAddT* msg);
};

const ::Property::VectorPropertyValue&
TransformUpdateAddT::_Internal::offsetposition(const TransformUpdateAddT* msg) {
  return *msg->_impl_.offsetposition_;
}
TransformUpdateAddT::TransformUpdateAddT(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.TransformUpdateAddT)
}
TransformUpdateAddT::TransformUpdateAddT(const TransformUpdateAddT& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TransformUpdateAddT* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.offsetposition_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_offsetposition()) {
    _this->_impl_.offsetposition_ = new ::Property::VectorPropertyValue(*from._impl_.offsetposition_);
  }
  // @@protoc_insertion_point(copy_constructor:Property.TransformUpdateAddT)
}

inline void TransformUpdateAddT::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.offsetposition_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

TransformUpdateAddT::~TransformUpdateAddT() {
  // @@protoc_insertion_point(destructor:Property.TransformUpdateAddT)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TransformUpdateAddT::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.offsetposition_;
}

void TransformUpdateAddT::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TransformUpdateAddT::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.TransformUpdateAddT)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.offsetposition_ != nullptr) {
    delete _impl_.offsetposition_;
  }
  _impl_.offsetposition_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TransformUpdateAddT::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Property.VectorPropertyValue offsetPosition = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_offsetposition(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TransformUpdateAddT::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.TransformUpdateAddT)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Property.VectorPropertyValue offsetPosition = 1;
  if (this->_internal_has_offsetposition()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::offsetposition(this),
        _Internal::offsetposition(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.TransformUpdateAddT)
  return target;
}

size_t TransformUpdateAddT::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.TransformUpdateAddT)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Property.VectorPropertyValue offsetPosition = 1;
  if (this->_internal_has_offsetposition()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.offsetposition_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TransformUpdateAddT::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TransformUpdateAddT::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TransformUpdateAddT::GetClassData() const { return &_class_data_; }


void TransformUpdateAddT::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TransformUpdateAddT*>(&to_msg);
  auto& from = static_cast<const TransformUpdateAddT&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.TransformUpdateAddT)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_offsetposition()) {
    _this->_internal_mutable_offsetposition()->::Property::VectorPropertyValue::MergeFrom(
        from._internal_offsetposition());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TransformUpdateAddT::CopyFrom(const TransformUpdateAddT& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.TransformUpdateAddT)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransformUpdateAddT::IsInitialized() const {
  return true;
}

void TransformUpdateAddT::InternalSwap(TransformUpdateAddT* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.offsetposition_, other->_impl_.offsetposition_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TransformUpdateAddT::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[82]);
}

// ===================================================================

class TransformUpdateAddR::_Internal {
 public:
  static const ::Property::VectorPropertyValue& offsetrotationeuler(const TransformUpdateAddR* msg);
};

const ::Property::VectorPropertyValue&
TransformUpdateAddR::_Internal::offsetrotationeuler(const TransformUpdateAddR* msg) {
  return *msg->_impl_.offsetrotationeuler_;
}
TransformUpdateAddR::TransformUpdateAddR(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.TransformUpdateAddR)
}
TransformUpdateAddR::TransformUpdateAddR(const TransformUpdateAddR& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TransformUpdateAddR* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.offsetrotationeuler_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_offsetrotationeuler()) {
    _this->_impl_.offsetrotationeuler_ = new ::Property::VectorPropertyValue(*from._impl_.offsetrotationeuler_);
  }
  // @@protoc_insertion_point(copy_constructor:Property.TransformUpdateAddR)
}

inline void TransformUpdateAddR::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.offsetrotationeuler_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

TransformUpdateAddR::~TransformUpdateAddR() {
  // @@protoc_insertion_point(destructor:Property.TransformUpdateAddR)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TransformUpdateAddR::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.offsetrotationeuler_;
}

void TransformUpdateAddR::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TransformUpdateAddR::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.TransformUpdateAddR)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.offsetrotationeuler_ != nullptr) {
    delete _impl_.offsetrotationeuler_;
  }
  _impl_.offsetrotationeuler_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TransformUpdateAddR::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Property.VectorPropertyValue offsetRotationEuler = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_offsetrotationeuler(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TransformUpdateAddR::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.TransformUpdateAddR)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Property.VectorPropertyValue offsetRotationEuler = 1;
  if (this->_internal_has_offsetrotationeuler()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::offsetrotationeuler(this),
        _Internal::offsetrotationeuler(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.TransformUpdateAddR)
  return target;
}

size_t TransformUpdateAddR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.TransformUpdateAddR)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Property.VectorPropertyValue offsetRotationEuler = 1;
  if (this->_internal_has_offsetrotationeuler()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.offsetrotationeuler_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TransformUpdateAddR::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TransformUpdateAddR::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TransformUpdateAddR::GetClassData() const { return &_class_data_; }


void TransformUpdateAddR::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TransformUpdateAddR*>(&to_msg);
  auto& from = static_cast<const TransformUpdateAddR&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.TransformUpdateAddR)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_offsetrotationeuler()) {
    _this->_internal_mutable_offsetrotationeuler()->::Property::VectorPropertyValue::MergeFrom(
        from._internal_offsetrotationeuler());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TransformUpdateAddR::CopyFrom(const TransformUpdateAddR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.TransformUpdateAddR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransformUpdateAddR::IsInitialized() const {
  return true;
}

void TransformUpdateAddR::InternalSwap(TransformUpdateAddR* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.offsetrotationeuler_, other->_impl_.offsetrotationeuler_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TransformUpdateAddR::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[83]);
}

// ===================================================================

class TransformUpdateAddQ::_Internal {
 public:
  static const ::Property::VectorPropertyValue& offsetrotationquat(const TransformUpdateAddQ* msg);
};

const ::Property::VectorPropertyValue&
TransformUpdateAddQ::_Internal::offsetrotationquat(const TransformUpdateAddQ* msg) {
  return *msg->_impl_.offsetrotationquat_;
}
TransformUpdateAddQ::TransformUpdateAddQ(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.TransformUpdateAddQ)
}
TransformUpdateAddQ::TransformUpdateAddQ(const TransformUpdateAddQ& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TransformUpdateAddQ* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.offsetrotationquat_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_offsetrotationquat()) {
    _this->_impl_.offsetrotationquat_ = new ::Property::VectorPropertyValue(*from._impl_.offsetrotationquat_);
  }
  // @@protoc_insertion_point(copy_constructor:Property.TransformUpdateAddQ)
}

inline void TransformUpdateAddQ::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.offsetrotationquat_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

TransformUpdateAddQ::~TransformUpdateAddQ() {
  // @@protoc_insertion_point(destructor:Property.TransformUpdateAddQ)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TransformUpdateAddQ::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.offsetrotationquat_;
}

void TransformUpdateAddQ::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TransformUpdateAddQ::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.TransformUpdateAddQ)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.offsetrotationquat_ != nullptr) {
    delete _impl_.offsetrotationquat_;
  }
  _impl_.offsetrotationquat_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TransformUpdateAddQ::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Property.VectorPropertyValue offsetRotationQuat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_offsetrotationquat(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TransformUpdateAddQ::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.TransformUpdateAddQ)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Property.VectorPropertyValue offsetRotationQuat = 1;
  if (this->_internal_has_offsetrotationquat()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::offsetrotationquat(this),
        _Internal::offsetrotationquat(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.TransformUpdateAddQ)
  return target;
}

size_t TransformUpdateAddQ::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.TransformUpdateAddQ)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Property.VectorPropertyValue offsetRotationQuat = 1;
  if (this->_internal_has_offsetrotationquat()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.offsetrotationquat_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TransformUpdateAddQ::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TransformUpdateAddQ::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TransformUpdateAddQ::GetClassData() const { return &_class_data_; }


void TransformUpdateAddQ::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TransformUpdateAddQ*>(&to_msg);
  auto& from = static_cast<const TransformUpdateAddQ&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.TransformUpdateAddQ)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_offsetrotationquat()) {
    _this->_internal_mutable_offsetrotationquat()->::Property::VectorPropertyValue::MergeFrom(
        from._internal_offsetrotationquat());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TransformUpdateAddQ::CopyFrom(const TransformUpdateAddQ& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.TransformUpdateAddQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransformUpdateAddQ::IsInitialized() const {
  return true;
}

void TransformUpdateAddQ::InternalSwap(TransformUpdateAddQ* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.offsetrotationquat_, other->_impl_.offsetrotationquat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TransformUpdateAddQ::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[84]);
}

// ===================================================================

class TransformUpdateScaleUniform::_Internal {
 public:
  static const ::Property::ScalarPropertyValue& uniformscalemultiplier(const TransformUpdateScaleUniform* msg);
};

const ::Property::ScalarPropertyValue&
TransformUpdateScaleUniform::_Internal::uniformscalemultiplier(const TransformUpdateScaleUniform* msg) {
  return *msg->_impl_.uniformscalemultiplier_;
}
TransformUpdateScaleUniform::TransformUpdateScaleUniform(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.TransformUpdateScaleUniform)
}
TransformUpdateScaleUniform::TransformUpdateScaleUniform(const TransformUpdateScaleUniform& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TransformUpdateScaleUniform* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.uniformscalemultiplier_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_uniformscalemultiplier()) {
    _this->_impl_.uniformscalemultiplier_ = new ::Property::ScalarPropertyValue(*from._impl_.uniformscalemultiplier_);
  }
  // @@protoc_insertion_point(copy_constructor:Property.TransformUpdateScaleUniform)
}

inline void TransformUpdateScaleUniform::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.uniformscalemultiplier_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

TransformUpdateScaleUniform::~TransformUpdateScaleUniform() {
  // @@protoc_insertion_point(destructor:Property.TransformUpdateScaleUniform)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TransformUpdateScaleUniform::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.uniformscalemultiplier_;
}

void TransformUpdateScaleUniform::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TransformUpdateScaleUniform::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.TransformUpdateScaleUniform)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.uniformscalemultiplier_ != nullptr) {
    delete _impl_.uniformscalemultiplier_;
  }
  _impl_.uniformscalemultiplier_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TransformUpdateScaleUniform::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Property.ScalarPropertyValue uniformScaleMultiplier = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_uniformscalemultiplier(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TransformUpdateScaleUniform::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.TransformUpdateScaleUniform)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Property.ScalarPropertyValue uniformScaleMultiplier = 1;
  if (this->_internal_has_uniformscalemultiplier()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::uniformscalemultiplier(this),
        _Internal::uniformscalemultiplier(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.TransformUpdateScaleUniform)
  return target;
}

size_t TransformUpdateScaleUniform::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.TransformUpdateScaleUniform)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Property.ScalarPropertyValue uniformScaleMultiplier = 1;
  if (this->_internal_has_uniformscalemultiplier()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.uniformscalemultiplier_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TransformUpdateScaleUniform::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TransformUpdateScaleUniform::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TransformUpdateScaleUniform::GetClassData() const { return &_class_data_; }


void TransformUpdateScaleUniform::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TransformUpdateScaleUniform*>(&to_msg);
  auto& from = static_cast<const TransformUpdateScaleUniform&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.TransformUpdateScaleUniform)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_uniformscalemultiplier()) {
    _this->_internal_mutable_uniformscalemultiplier()->::Property::ScalarPropertyValue::MergeFrom(
        from._internal_uniformscalemultiplier());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TransformUpdateScaleUniform::CopyFrom(const TransformUpdateScaleUniform& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.TransformUpdateScaleUniform)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransformUpdateScaleUniform::IsInitialized() const {
  return true;
}

void TransformUpdateScaleUniform::InternalSwap(TransformUpdateScaleUniform* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.uniformscalemultiplier_, other->_impl_.uniformscalemultiplier_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TransformUpdateScaleUniform::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[85]);
}

// ===================================================================

class TransformUpdateScaleNonuniform::_Internal {
 public:
  static const ::Property::VectorPropertyValue& nonuniformscalemultiplier(const TransformUpdateScaleNonuniform* msg);
};

const ::Property::VectorPropertyValue&
TransformUpdateScaleNonuniform::_Internal::nonuniformscalemultiplier(const TransformUpdateScaleNonuniform* msg) {
  return *msg->_impl_.nonuniformscalemultiplier_;
}
TransformUpdateScaleNonuniform::TransformUpdateScaleNonuniform(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.TransformUpdateScaleNonuniform)
}
TransformUpdateScaleNonuniform::TransformUpdateScaleNonuniform(const TransformUpdateScaleNonuniform& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TransformUpdateScaleNonuniform* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.nonuniformscalemultiplier_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_nonuniformscalemultiplier()) {
    _this->_impl_.nonuniformscalemultiplier_ = new ::Property::VectorPropertyValue(*from._impl_.nonuniformscalemultiplier_);
  }
  // @@protoc_insertion_point(copy_constructor:Property.TransformUpdateScaleNonuniform)
}

inline void TransformUpdateScaleNonuniform::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.nonuniformscalemultiplier_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

TransformUpdateScaleNonuniform::~TransformUpdateScaleNonuniform() {
  // @@protoc_insertion_point(destructor:Property.TransformUpdateScaleNonuniform)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TransformUpdateScaleNonuniform::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.nonuniformscalemultiplier_;
}

void TransformUpdateScaleNonuniform::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TransformUpdateScaleNonuniform::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.TransformUpdateScaleNonuniform)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.nonuniformscalemultiplier_ != nullptr) {
    delete _impl_.nonuniformscalemultiplier_;
  }
  _impl_.nonuniformscalemultiplier_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TransformUpdateScaleNonuniform::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Property.VectorPropertyValue nonuniformScaleMultiplier = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_nonuniformscalemultiplier(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TransformUpdateScaleNonuniform::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.TransformUpdateScaleNonuniform)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Property.VectorPropertyValue nonuniformScaleMultiplier = 2;
  if (this->_internal_has_nonuniformscalemultiplier()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::nonuniformscalemultiplier(this),
        _Internal::nonuniformscalemultiplier(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.TransformUpdateScaleNonuniform)
  return target;
}

size_t TransformUpdateScaleNonuniform::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.TransformUpdateScaleNonuniform)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Property.VectorPropertyValue nonuniformScaleMultiplier = 2;
  if (this->_internal_has_nonuniformscalemultiplier()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.nonuniformscalemultiplier_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TransformUpdateScaleNonuniform::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TransformUpdateScaleNonuniform::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TransformUpdateScaleNonuniform::GetClassData() const { return &_class_data_; }


void TransformUpdateScaleNonuniform::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TransformUpdateScaleNonuniform*>(&to_msg);
  auto& from = static_cast<const TransformUpdateScaleNonuniform&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.TransformUpdateScaleNonuniform)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_nonuniformscalemultiplier()) {
    _this->_internal_mutable_nonuniformscalemultiplier()->::Property::VectorPropertyValue::MergeFrom(
        from._internal_nonuniformscalemultiplier());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TransformUpdateScaleNonuniform::CopyFrom(const TransformUpdateScaleNonuniform& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.TransformUpdateScaleNonuniform)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransformUpdateScaleNonuniform::IsInitialized() const {
  return true;
}

void TransformUpdateScaleNonuniform::InternalSwap(TransformUpdateScaleNonuniform* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.nonuniformscalemultiplier_, other->_impl_.nonuniformscalemultiplier_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TransformUpdateScaleNonuniform::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[86]);
}

// ===================================================================

class TransformUpdateLookAt::_Internal {
 public:
  static const ::Property::ScalarPropertyValue& percenttomove(const TransformUpdateLookAt* msg);
  static const ::Property::VectorPropertyValue& lookat(const TransformUpdateLookAt* msg);
};

const ::Property::ScalarPropertyValue&
TransformUpdateLookAt::_Internal::percenttomove(const TransformUpdateLookAt* msg) {
  return *msg->_impl_.percenttomove_;
}
const ::Property::VectorPropertyValue&
TransformUpdateLookAt::_Internal::lookat(const TransformUpdateLookAt* msg) {
  return *msg->_impl_.lookat_;
}
TransformUpdateLookAt::TransformUpdateLookAt(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.TransformUpdateLookAt)
}
TransformUpdateLookAt::TransformUpdateLookAt(const TransformUpdateLookAt& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TransformUpdateLookAt* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.percenttomove_){nullptr}
    , decltype(_impl_.lookat_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_percenttomove()) {
    _this->_impl_.percenttomove_ = new ::Property::ScalarPropertyValue(*from._impl_.percenttomove_);
  }
  if (from._internal_has_lookat()) {
    _this->_impl_.lookat_ = new ::Property::VectorPropertyValue(*from._impl_.lookat_);
  }
  // @@protoc_insertion_point(copy_constructor:Property.TransformUpdateLookAt)
}

inline void TransformUpdateLookAt::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.percenttomove_){nullptr}
    , decltype(_impl_.lookat_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

TransformUpdateLookAt::~TransformUpdateLookAt() {
  // @@protoc_insertion_point(destructor:Property.TransformUpdateLookAt)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TransformUpdateLookAt::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.percenttomove_;
  if (this != internal_default_instance()) delete _impl_.lookat_;
}

void TransformUpdateLookAt::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TransformUpdateLookAt::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.TransformUpdateLookAt)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.percenttomove_ != nullptr) {
    delete _impl_.percenttomove_;
  }
  _impl_.percenttomove_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.lookat_ != nullptr) {
    delete _impl_.lookat_;
  }
  _impl_.lookat_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TransformUpdateLookAt::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Property.ScalarPropertyValue percentToMove = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_percenttomove(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.VectorPropertyValue lookAt = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_lookat(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TransformUpdateLookAt::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.TransformUpdateLookAt)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Property.ScalarPropertyValue percentToMove = 1;
  if (this->_internal_has_percenttomove()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::percenttomove(this),
        _Internal::percenttomove(this).GetCachedSize(), target, stream);
  }

  // .Property.VectorPropertyValue lookAt = 2;
  if (this->_internal_has_lookat()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::lookat(this),
        _Internal::lookat(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.TransformUpdateLookAt)
  return target;
}

size_t TransformUpdateLookAt::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.TransformUpdateLookAt)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Property.ScalarPropertyValue percentToMove = 1;
  if (this->_internal_has_percenttomove()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.percenttomove_);
  }

  // .Property.VectorPropertyValue lookAt = 2;
  if (this->_internal_has_lookat()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.lookat_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TransformUpdateLookAt::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TransformUpdateLookAt::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TransformUpdateLookAt::GetClassData() const { return &_class_data_; }


void TransformUpdateLookAt::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TransformUpdateLookAt*>(&to_msg);
  auto& from = static_cast<const TransformUpdateLookAt&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.TransformUpdateLookAt)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_percenttomove()) {
    _this->_internal_mutable_percenttomove()->::Property::ScalarPropertyValue::MergeFrom(
        from._internal_percenttomove());
  }
  if (from._internal_has_lookat()) {
    _this->_internal_mutable_lookat()->::Property::VectorPropertyValue::MergeFrom(
        from._internal_lookat());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TransformUpdateLookAt::CopyFrom(const TransformUpdateLookAt& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.TransformUpdateLookAt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransformUpdateLookAt::IsInitialized() const {
  return true;
}

void TransformUpdateLookAt::InternalSwap(TransformUpdateLookAt* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TransformUpdateLookAt, _impl_.lookat_)
      + sizeof(TransformUpdateLookAt::_impl_.lookat_)
      - PROTOBUF_FIELD_OFFSET(TransformUpdateLookAt, _impl_.percenttomove_)>(
          reinterpret_cast<char*>(&_impl_.percenttomove_),
          reinterpret_cast<char*>(&other->_impl_.percenttomove_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TransformUpdateLookAt::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[87]);
}

// ===================================================================

class TransformUpdateRotateToEuler::_Internal {
 public:
  static const ::Property::ScalarPropertyValue& percenttomove(const TransformUpdateRotateToEuler* msg);
  static const ::Property::VectorPropertyValue& toeuler(const TransformUpdateRotateToEuler* msg);
};

const ::Property::ScalarPropertyValue&
TransformUpdateRotateToEuler::_Internal::percenttomove(const TransformUpdateRotateToEuler* msg) {
  return *msg->_impl_.percenttomove_;
}
const ::Property::VectorPropertyValue&
TransformUpdateRotateToEuler::_Internal::toeuler(const TransformUpdateRotateToEuler* msg) {
  return *msg->_impl_.toeuler_;
}
TransformUpdateRotateToEuler::TransformUpdateRotateToEuler(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.TransformUpdateRotateToEuler)
}
TransformUpdateRotateToEuler::TransformUpdateRotateToEuler(const TransformUpdateRotateToEuler& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TransformUpdateRotateToEuler* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.percenttomove_){nullptr}
    , decltype(_impl_.toeuler_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_percenttomove()) {
    _this->_impl_.percenttomove_ = new ::Property::ScalarPropertyValue(*from._impl_.percenttomove_);
  }
  if (from._internal_has_toeuler()) {
    _this->_impl_.toeuler_ = new ::Property::VectorPropertyValue(*from._impl_.toeuler_);
  }
  // @@protoc_insertion_point(copy_constructor:Property.TransformUpdateRotateToEuler)
}

inline void TransformUpdateRotateToEuler::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.percenttomove_){nullptr}
    , decltype(_impl_.toeuler_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

TransformUpdateRotateToEuler::~TransformUpdateRotateToEuler() {
  // @@protoc_insertion_point(destructor:Property.TransformUpdateRotateToEuler)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TransformUpdateRotateToEuler::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.percenttomove_;
  if (this != internal_default_instance()) delete _impl_.toeuler_;
}

void TransformUpdateRotateToEuler::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TransformUpdateRotateToEuler::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.TransformUpdateRotateToEuler)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.percenttomove_ != nullptr) {
    delete _impl_.percenttomove_;
  }
  _impl_.percenttomove_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.toeuler_ != nullptr) {
    delete _impl_.toeuler_;
  }
  _impl_.toeuler_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TransformUpdateRotateToEuler::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Property.ScalarPropertyValue percentToMove = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_percenttomove(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.VectorPropertyValue toEuler = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_toeuler(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TransformUpdateRotateToEuler::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.TransformUpdateRotateToEuler)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Property.ScalarPropertyValue percentToMove = 1;
  if (this->_internal_has_percenttomove()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::percenttomove(this),
        _Internal::percenttomove(this).GetCachedSize(), target, stream);
  }

  // .Property.VectorPropertyValue toEuler = 2;
  if (this->_internal_has_toeuler()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::toeuler(this),
        _Internal::toeuler(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.TransformUpdateRotateToEuler)
  return target;
}

size_t TransformUpdateRotateToEuler::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.TransformUpdateRotateToEuler)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Property.ScalarPropertyValue percentToMove = 1;
  if (this->_internal_has_percenttomove()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.percenttomove_);
  }

  // .Property.VectorPropertyValue toEuler = 2;
  if (this->_internal_has_toeuler()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.toeuler_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TransformUpdateRotateToEuler::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TransformUpdateRotateToEuler::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TransformUpdateRotateToEuler::GetClassData() const { return &_class_data_; }


void TransformUpdateRotateToEuler::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TransformUpdateRotateToEuler*>(&to_msg);
  auto& from = static_cast<const TransformUpdateRotateToEuler&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.TransformUpdateRotateToEuler)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_percenttomove()) {
    _this->_internal_mutable_percenttomove()->::Property::ScalarPropertyValue::MergeFrom(
        from._internal_percenttomove());
  }
  if (from._internal_has_toeuler()) {
    _this->_internal_mutable_toeuler()->::Property::VectorPropertyValue::MergeFrom(
        from._internal_toeuler());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TransformUpdateRotateToEuler::CopyFrom(const TransformUpdateRotateToEuler& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.TransformUpdateRotateToEuler)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransformUpdateRotateToEuler::IsInitialized() const {
  return true;
}

void TransformUpdateRotateToEuler::InternalSwap(TransformUpdateRotateToEuler* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TransformUpdateRotateToEuler, _impl_.toeuler_)
      + sizeof(TransformUpdateRotateToEuler::_impl_.toeuler_)
      - PROTOBUF_FIELD_OFFSET(TransformUpdateRotateToEuler, _impl_.percenttomove_)>(
          reinterpret_cast<char*>(&_impl_.percenttomove_),
          reinterpret_cast<char*>(&other->_impl_.percenttomove_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TransformUpdateRotateToEuler::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[88]);
}

// ===================================================================

class TransformUpdateRotateToQuat::_Internal {
 public:
  static const ::Property::ScalarPropertyValue& percenttomove(const TransformUpdateRotateToQuat* msg);
  static const ::Property::VectorPropertyValue& toquat(const TransformUpdateRotateToQuat* msg);
};

const ::Property::ScalarPropertyValue&
TransformUpdateRotateToQuat::_Internal::percenttomove(const TransformUpdateRotateToQuat* msg) {
  return *msg->_impl_.percenttomove_;
}
const ::Property::VectorPropertyValue&
TransformUpdateRotateToQuat::_Internal::toquat(const TransformUpdateRotateToQuat* msg) {
  return *msg->_impl_.toquat_;
}
TransformUpdateRotateToQuat::TransformUpdateRotateToQuat(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.TransformUpdateRotateToQuat)
}
TransformUpdateRotateToQuat::TransformUpdateRotateToQuat(const TransformUpdateRotateToQuat& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TransformUpdateRotateToQuat* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.percenttomove_){nullptr}
    , decltype(_impl_.toquat_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_percenttomove()) {
    _this->_impl_.percenttomove_ = new ::Property::ScalarPropertyValue(*from._impl_.percenttomove_);
  }
  if (from._internal_has_toquat()) {
    _this->_impl_.toquat_ = new ::Property::VectorPropertyValue(*from._impl_.toquat_);
  }
  // @@protoc_insertion_point(copy_constructor:Property.TransformUpdateRotateToQuat)
}

inline void TransformUpdateRotateToQuat::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.percenttomove_){nullptr}
    , decltype(_impl_.toquat_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

TransformUpdateRotateToQuat::~TransformUpdateRotateToQuat() {
  // @@protoc_insertion_point(destructor:Property.TransformUpdateRotateToQuat)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TransformUpdateRotateToQuat::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.percenttomove_;
  if (this != internal_default_instance()) delete _impl_.toquat_;
}

void TransformUpdateRotateToQuat::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TransformUpdateRotateToQuat::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.TransformUpdateRotateToQuat)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.percenttomove_ != nullptr) {
    delete _impl_.percenttomove_;
  }
  _impl_.percenttomove_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.toquat_ != nullptr) {
    delete _impl_.toquat_;
  }
  _impl_.toquat_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TransformUpdateRotateToQuat::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Property.ScalarPropertyValue percentToMove = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_percenttomove(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.VectorPropertyValue toQuat = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_toquat(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TransformUpdateRotateToQuat::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.TransformUpdateRotateToQuat)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Property.ScalarPropertyValue percentToMove = 1;
  if (this->_internal_has_percenttomove()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::percenttomove(this),
        _Internal::percenttomove(this).GetCachedSize(), target, stream);
  }

  // .Property.VectorPropertyValue toQuat = 2;
  if (this->_internal_has_toquat()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::toquat(this),
        _Internal::toquat(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.TransformUpdateRotateToQuat)
  return target;
}

size_t TransformUpdateRotateToQuat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.TransformUpdateRotateToQuat)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Property.ScalarPropertyValue percentToMove = 1;
  if (this->_internal_has_percenttomove()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.percenttomove_);
  }

  // .Property.VectorPropertyValue toQuat = 2;
  if (this->_internal_has_toquat()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.toquat_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TransformUpdateRotateToQuat::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TransformUpdateRotateToQuat::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TransformUpdateRotateToQuat::GetClassData() const { return &_class_data_; }


void TransformUpdateRotateToQuat::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TransformUpdateRotateToQuat*>(&to_msg);
  auto& from = static_cast<const TransformUpdateRotateToQuat&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.TransformUpdateRotateToQuat)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_percenttomove()) {
    _this->_internal_mutable_percenttomove()->::Property::ScalarPropertyValue::MergeFrom(
        from._internal_percenttomove());
  }
  if (from._internal_has_toquat()) {
    _this->_internal_mutable_toquat()->::Property::VectorPropertyValue::MergeFrom(
        from._internal_toquat());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TransformUpdateRotateToQuat::CopyFrom(const TransformUpdateRotateToQuat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.TransformUpdateRotateToQuat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransformUpdateRotateToQuat::IsInitialized() const {
  return true;
}

void TransformUpdateRotateToQuat::InternalSwap(TransformUpdateRotateToQuat* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TransformUpdateRotateToQuat, _impl_.toquat_)
      + sizeof(TransformUpdateRotateToQuat::_impl_.toquat_)
      - PROTOBUF_FIELD_OFFSET(TransformUpdateRotateToQuat, _impl_.percenttomove_)>(
          reinterpret_cast<char*>(&_impl_.percenttomove_),
          reinterpret_cast<char*>(&other->_impl_.percenttomove_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TransformUpdateRotateToQuat::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[89]);
}

// ===================================================================

class TransformPropertyAssignment::_Internal {
 public:
  using HasBits = decltype(std::declval<TransformPropertyAssignment>()._impl_._has_bits_);
  static void set_has_setpriority(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_modifyorder(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::Property::TransformSet& setvalue(const TransformPropertyAssignment* msg);
  static const ::Property::TransformUpdate& modifyvalue(const TransformPropertyAssignment* msg);
};

const ::Property::TransformSet&
TransformPropertyAssignment::_Internal::setvalue(const TransformPropertyAssignment* msg) {
  return *msg->_impl_.AssignmentType_.setvalue_;
}
const ::Property::TransformUpdate&
TransformPropertyAssignment::_Internal::modifyvalue(const TransformPropertyAssignment* msg) {
  return *msg->_impl_.AssignmentType_.modifyvalue_;
}
void TransformPropertyAssignment::set_allocated_setvalue(::Property::TransformSet* setvalue) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_AssignmentType();
  if (setvalue) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(setvalue);
    if (message_arena != submessage_arena) {
      setvalue = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, setvalue, submessage_arena);
    }
    set_has_setvalue();
    _impl_.AssignmentType_.setvalue_ = setvalue;
  }
  // @@protoc_insertion_point(field_set_allocated:Property.TransformPropertyAssignment.setValue)
}
void TransformPropertyAssignment::set_allocated_modifyvalue(::Property::TransformUpdate* modifyvalue) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_AssignmentType();
  if (modifyvalue) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(modifyvalue);
    if (message_arena != submessage_arena) {
      modifyvalue = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, modifyvalue, submessage_arena);
    }
    set_has_modifyvalue();
    _impl_.AssignmentType_.modifyvalue_ = modifyvalue;
  }
  // @@protoc_insertion_point(field_set_allocated:Property.TransformPropertyAssignment.modifyValue)
}
TransformPropertyAssignment::TransformPropertyAssignment(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.TransformPropertyAssignment)
}
TransformPropertyAssignment::TransformPropertyAssignment(const TransformPropertyAssignment& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TransformPropertyAssignment* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.assignmentid_){}
    , decltype(_impl_.setpriority_){}
    , decltype(_impl_.modifyorder_){}
    , decltype(_impl_.AssignmentType_){}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.assignmentid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.assignmentid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_assignmentid().empty()) {
    _this->_impl_.assignmentid_.Set(from._internal_assignmentid(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.setpriority_, &from._impl_.setpriority_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.modifyorder_) -
    reinterpret_cast<char*>(&_impl_.setpriority_)) + sizeof(_impl_.modifyorder_));
  clear_has_AssignmentType();
  switch (from.AssignmentType_case()) {
    case kSetValue: {
      _this->_internal_mutable_setvalue()->::Property::TransformSet::MergeFrom(
          from._internal_setvalue());
      break;
    }
    case kModifyValue: {
      _this->_internal_mutable_modifyvalue()->::Property::TransformUpdate::MergeFrom(
          from._internal_modifyvalue());
      break;
    }
    case ASSIGNMENTTYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:Property.TransformPropertyAssignment)
}

inline void TransformPropertyAssignment::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.assignmentid_){}
    , decltype(_impl_.setpriority_){0}
    , decltype(_impl_.modifyorder_){0}
    , decltype(_impl_.AssignmentType_){}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  _impl_.assignmentid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.assignmentid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  clear_has_AssignmentType();
}

TransformPropertyAssignment::~TransformPropertyAssignment() {
  // @@protoc_insertion_point(destructor:Property.TransformPropertyAssignment)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TransformPropertyAssignment::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.assignmentid_.Destroy();
  if (has_AssignmentType()) {
    clear_AssignmentType();
  }
}

void TransformPropertyAssignment::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TransformPropertyAssignment::clear_AssignmentType() {
// @@protoc_insertion_point(one_of_clear_start:Property.TransformPropertyAssignment)
  switch (AssignmentType_case()) {
    case kSetValue: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.AssignmentType_.setvalue_;
      }
      break;
    }
    case kModifyValue: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.AssignmentType_.modifyvalue_;
      }
      break;
    }
    case ASSIGNMENTTYPE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = ASSIGNMENTTYPE_NOT_SET;
}


void TransformPropertyAssignment::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.TransformPropertyAssignment)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.assignmentid_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.setpriority_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.modifyorder_) -
        reinterpret_cast<char*>(&_impl_.setpriority_)) + sizeof(_impl_.modifyorder_));
  }
  clear_AssignmentType();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TransformPropertyAssignment::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string assignmentId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_assignmentid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "Property.TransformPropertyAssignment.assignmentId"));
        } else
          goto handle_unusual;
        continue;
      // optional int32 setPriority = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_setpriority(&has_bits);
          _impl_.setpriority_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int32 modifyOrder = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_modifyorder(&has_bits);
          _impl_.modifyorder_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.TransformSet setValue = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_setvalue(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.TransformUpdate modifyValue = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_modifyvalue(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TransformPropertyAssignment::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.TransformPropertyAssignment)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string assignmentId = 1;
  if (!this->_internal_assignmentid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_assignmentid().data(), static_cast<int>(this->_internal_assignmentid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Property.TransformPropertyAssignment.assignmentId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_assignmentid(), target);
  }

  // optional int32 setPriority = 2;
  if (_internal_has_setpriority()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_setpriority(), target);
  }

  // optional int32 modifyOrder = 3;
  if (_internal_has_modifyorder()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_modifyorder(), target);
  }

  // .Property.TransformSet setValue = 6;
  if (_internal_has_setvalue()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::setvalue(this),
        _Internal::setvalue(this).GetCachedSize(), target, stream);
  }

  // .Property.TransformUpdate modifyValue = 7;
  if (_internal_has_modifyvalue()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::modifyvalue(this),
        _Internal::modifyvalue(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.TransformPropertyAssignment)
  return target;
}

size_t TransformPropertyAssignment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.TransformPropertyAssignment)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string assignmentId = 1;
  if (!this->_internal_assignmentid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_assignmentid());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional int32 setPriority = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_setpriority());
    }

    // optional int32 modifyOrder = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_modifyorder());
    }

  }
  switch (AssignmentType_case()) {
    // .Property.TransformSet setValue = 6;
    case kSetValue: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.AssignmentType_.setvalue_);
      break;
    }
    // .Property.TransformUpdate modifyValue = 7;
    case kModifyValue: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.AssignmentType_.modifyvalue_);
      break;
    }
    case ASSIGNMENTTYPE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TransformPropertyAssignment::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TransformPropertyAssignment::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TransformPropertyAssignment::GetClassData() const { return &_class_data_; }


void TransformPropertyAssignment::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TransformPropertyAssignment*>(&to_msg);
  auto& from = static_cast<const TransformPropertyAssignment&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.TransformPropertyAssignment)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_assignmentid().empty()) {
    _this->_internal_set_assignmentid(from._internal_assignmentid());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.setpriority_ = from._impl_.setpriority_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.modifyorder_ = from._impl_.modifyorder_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  switch (from.AssignmentType_case()) {
    case kSetValue: {
      _this->_internal_mutable_setvalue()->::Property::TransformSet::MergeFrom(
          from._internal_setvalue());
      break;
    }
    case kModifyValue: {
      _this->_internal_mutable_modifyvalue()->::Property::TransformUpdate::MergeFrom(
          from._internal_modifyvalue());
      break;
    }
    case ASSIGNMENTTYPE_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TransformPropertyAssignment::CopyFrom(const TransformPropertyAssignment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.TransformPropertyAssignment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransformPropertyAssignment::IsInitialized() const {
  return true;
}

void TransformPropertyAssignment::InternalSwap(TransformPropertyAssignment* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.assignmentid_, lhs_arena,
      &other->_impl_.assignmentid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TransformPropertyAssignment, _impl_.modifyorder_)
      + sizeof(TransformPropertyAssignment::_impl_.modifyorder_)
      - PROTOBUF_FIELD_OFFSET(TransformPropertyAssignment, _impl_.setpriority_)>(
          reinterpret_cast<char*>(&_impl_.setpriority_),
          reinterpret_cast<char*>(&other->_impl_.setpriority_));
  swap(_impl_.AssignmentType_, other->_impl_.AssignmentType_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata TransformPropertyAssignment::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[90]);
}

// ===================================================================

class TransformPropertyDeclaration::_Internal {
 public:
  static const ::Property::TransformSet& default_(const TransformPropertyDeclaration* msg);
  static const ::Property::TransformPropertyMetadata& meta(const TransformPropertyDeclaration* msg);
};

const ::Property::TransformSet&
TransformPropertyDeclaration::_Internal::default_(const TransformPropertyDeclaration* msg) {
  return *msg->_impl_.default__;
}
const ::Property::TransformPropertyMetadata&
TransformPropertyDeclaration::_Internal::meta(const TransformPropertyDeclaration* msg) {
  return *msg->_impl_.meta_;
}
TransformPropertyDeclaration::TransformPropertyDeclaration(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.TransformPropertyDeclaration)
}
TransformPropertyDeclaration::TransformPropertyDeclaration(const TransformPropertyDeclaration& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TransformPropertyDeclaration* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.meta_){nullptr}
    , decltype(_impl_.default__){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_meta()) {
    _this->_impl_.meta_ = new ::Property::TransformPropertyMetadata(*from._impl_.meta_);
  }
  if (from._internal_has_default_()) {
    _this->_impl_.default__ = new ::Property::TransformSet(*from._impl_.default__);
  }
  // @@protoc_insertion_point(copy_constructor:Property.TransformPropertyDeclaration)
}

inline void TransformPropertyDeclaration::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.meta_){nullptr}
    , decltype(_impl_.default__){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

TransformPropertyDeclaration::~TransformPropertyDeclaration() {
  // @@protoc_insertion_point(destructor:Property.TransformPropertyDeclaration)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TransformPropertyDeclaration::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.meta_;
  if (this != internal_default_instance()) delete _impl_.default__;
}

void TransformPropertyDeclaration::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TransformPropertyDeclaration::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.TransformPropertyDeclaration)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.meta_ != nullptr) {
    delete _impl_.meta_;
  }
  _impl_.meta_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.default__ != nullptr) {
    delete _impl_.default__;
  }
  _impl_.default__ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TransformPropertyDeclaration::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Property.TransformPropertyMetadata meta = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_meta(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.TransformSet default = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TransformPropertyDeclaration::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.TransformPropertyDeclaration)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Property.TransformPropertyMetadata meta = 1;
  if (this->_internal_has_meta()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::meta(this),
        _Internal::meta(this).GetCachedSize(), target, stream);
  }

  // .Property.TransformSet default = 2;
  if (this->_internal_has_default_()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::default_(this),
        _Internal::default_(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.TransformPropertyDeclaration)
  return target;
}

size_t TransformPropertyDeclaration::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.TransformPropertyDeclaration)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Property.TransformPropertyMetadata meta = 1;
  if (this->_internal_has_meta()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.meta_);
  }

  // .Property.TransformSet default = 2;
  if (this->_internal_has_default_()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.default__);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TransformPropertyDeclaration::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TransformPropertyDeclaration::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TransformPropertyDeclaration::GetClassData() const { return &_class_data_; }


void TransformPropertyDeclaration::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TransformPropertyDeclaration*>(&to_msg);
  auto& from = static_cast<const TransformPropertyDeclaration&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.TransformPropertyDeclaration)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_meta()) {
    _this->_internal_mutable_meta()->::Property::TransformPropertyMetadata::MergeFrom(
        from._internal_meta());
  }
  if (from._internal_has_default_()) {
    _this->_internal_mutable_default_()->::Property::TransformSet::MergeFrom(
        from._internal_default_());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TransformPropertyDeclaration::CopyFrom(const TransformPropertyDeclaration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.TransformPropertyDeclaration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransformPropertyDeclaration::IsInitialized() const {
  return true;
}

void TransformPropertyDeclaration::InternalSwap(TransformPropertyDeclaration* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TransformPropertyDeclaration, _impl_.default__)
      + sizeof(TransformPropertyDeclaration::_impl_.default__)
      - PROTOBUF_FIELD_OFFSET(TransformPropertyDeclaration, _impl_.meta_)>(
          reinterpret_cast<char*>(&_impl_.meta_),
          reinterpret_cast<char*>(&other->_impl_.meta_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TransformPropertyDeclaration::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[91]);
}

// ===================================================================

class TransformEditingMetadata::_Internal {
 public:
  using HasBits = decltype(std::declval<TransformEditingMetadata>()._impl_._has_bits_);
  static void set_has_allowsetfromusertransform(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_allowunset(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

TransformEditingMetadata::TransformEditingMetadata(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.TransformEditingMetadata)
}
TransformEditingMetadata::TransformEditingMetadata(const TransformEditingMetadata& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TransformEditingMetadata* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.allowsetfromusertransform_){}
    , decltype(_impl_.allowunset_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.allowsetfromusertransform_, &from._impl_.allowsetfromusertransform_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.allowunset_) -
    reinterpret_cast<char*>(&_impl_.allowsetfromusertransform_)) + sizeof(_impl_.allowunset_));
  // @@protoc_insertion_point(copy_constructor:Property.TransformEditingMetadata)
}

inline void TransformEditingMetadata::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.allowsetfromusertransform_){false}
    , decltype(_impl_.allowunset_){false}
  };
}

TransformEditingMetadata::~TransformEditingMetadata() {
  // @@protoc_insertion_point(destructor:Property.TransformEditingMetadata)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TransformEditingMetadata::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void TransformEditingMetadata::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TransformEditingMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.TransformEditingMetadata)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.allowsetfromusertransform_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.allowunset_) -
      reinterpret_cast<char*>(&_impl_.allowsetfromusertransform_)) + sizeof(_impl_.allowunset_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TransformEditingMetadata::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional bool allowSetFromUserTransform = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_allowsetfromusertransform(&has_bits);
          _impl_.allowsetfromusertransform_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool allowUnset = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_allowunset(&has_bits);
          _impl_.allowunset_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TransformEditingMetadata::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.TransformEditingMetadata)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional bool allowSetFromUserTransform = 1;
  if (_internal_has_allowsetfromusertransform()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_allowsetfromusertransform(), target);
  }

  // optional bool allowUnset = 2;
  if (_internal_has_allowunset()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_allowunset(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.TransformEditingMetadata)
  return target;
}

size_t TransformEditingMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.TransformEditingMetadata)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bool allowSetFromUserTransform = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 1;
    }

    // optional bool allowUnset = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 1;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TransformEditingMetadata::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TransformEditingMetadata::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TransformEditingMetadata::GetClassData() const { return &_class_data_; }


void TransformEditingMetadata::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TransformEditingMetadata*>(&to_msg);
  auto& from = static_cast<const TransformEditingMetadata&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.TransformEditingMetadata)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.allowsetfromusertransform_ = from._impl_.allowsetfromusertransform_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.allowunset_ = from._impl_.allowunset_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TransformEditingMetadata::CopyFrom(const TransformEditingMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.TransformEditingMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransformEditingMetadata::IsInitialized() const {
  return true;
}

void TransformEditingMetadata::InternalSwap(TransformEditingMetadata* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TransformEditingMetadata, _impl_.allowunset_)
      + sizeof(TransformEditingMetadata::_impl_.allowunset_)
      - PROTOBUF_FIELD_OFFSET(TransformEditingMetadata, _impl_.allowsetfromusertransform_)>(
          reinterpret_cast<char*>(&_impl_.allowsetfromusertransform_),
          reinterpret_cast<char*>(&other->_impl_.allowsetfromusertransform_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TransformEditingMetadata::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[92]);
}

// ===================================================================

class TransformGeneratorMetadata::_Internal {
 public:
  using HasBits = decltype(std::declval<TransformGeneratorMetadata>()._impl_._has_bits_);
  static const ::Property::GeneratorMetadata& base(const TransformGeneratorMetadata* msg);
  static const ::Property::TransformEditingMetadata& edit(const TransformGeneratorMetadata* msg);
  static void set_has_edit(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::Property::GeneratorMetadata&
TransformGeneratorMetadata::_Internal::base(const TransformGeneratorMetadata* msg) {
  return *msg->_impl_.base_;
}
const ::Property::TransformEditingMetadata&
TransformGeneratorMetadata::_Internal::edit(const TransformGeneratorMetadata* msg) {
  return *msg->_impl_.edit_;
}
TransformGeneratorMetadata::TransformGeneratorMetadata(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.TransformGeneratorMetadata)
}
TransformGeneratorMetadata::TransformGeneratorMetadata(const TransformGeneratorMetadata& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TransformGeneratorMetadata* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.base_){nullptr}
    , decltype(_impl_.edit_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_base()) {
    _this->_impl_.base_ = new ::Property::GeneratorMetadata(*from._impl_.base_);
  }
  if (from._internal_has_edit()) {
    _this->_impl_.edit_ = new ::Property::TransformEditingMetadata(*from._impl_.edit_);
  }
  // @@protoc_insertion_point(copy_constructor:Property.TransformGeneratorMetadata)
}

inline void TransformGeneratorMetadata::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.base_){nullptr}
    , decltype(_impl_.edit_){nullptr}
  };
}

TransformGeneratorMetadata::~TransformGeneratorMetadata() {
  // @@protoc_insertion_point(destructor:Property.TransformGeneratorMetadata)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TransformGeneratorMetadata::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.base_;
  if (this != internal_default_instance()) delete _impl_.edit_;
}

void TransformGeneratorMetadata::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TransformGeneratorMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.TransformGeneratorMetadata)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.base_ != nullptr) {
    delete _impl_.base_;
  }
  _impl_.base_ = nullptr;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.edit_ != nullptr);
    _impl_.edit_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TransformGeneratorMetadata::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Property.GeneratorMetadata base = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_base(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .Property.TransformEditingMetadata edit = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_edit(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TransformGeneratorMetadata::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.TransformGeneratorMetadata)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Property.GeneratorMetadata base = 1;
  if (this->_internal_has_base()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::base(this),
        _Internal::base(this).GetCachedSize(), target, stream);
  }

  // optional .Property.TransformEditingMetadata edit = 2;
  if (_internal_has_edit()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::edit(this),
        _Internal::edit(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.TransformGeneratorMetadata)
  return target;
}

size_t TransformGeneratorMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.TransformGeneratorMetadata)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Property.GeneratorMetadata base = 1;
  if (this->_internal_has_base()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.base_);
  }

  // optional .Property.TransformEditingMetadata edit = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.edit_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TransformGeneratorMetadata::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TransformGeneratorMetadata::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TransformGeneratorMetadata::GetClassData() const { return &_class_data_; }


void TransformGeneratorMetadata::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TransformGeneratorMetadata*>(&to_msg);
  auto& from = static_cast<const TransformGeneratorMetadata&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.TransformGeneratorMetadata)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_base()) {
    _this->_internal_mutable_base()->::Property::GeneratorMetadata::MergeFrom(
        from._internal_base());
  }
  if (from._internal_has_edit()) {
    _this->_internal_mutable_edit()->::Property::TransformEditingMetadata::MergeFrom(
        from._internal_edit());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TransformGeneratorMetadata::CopyFrom(const TransformGeneratorMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.TransformGeneratorMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransformGeneratorMetadata::IsInitialized() const {
  return true;
}

void TransformGeneratorMetadata::InternalSwap(TransformGeneratorMetadata* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TransformGeneratorMetadata, _impl_.edit_)
      + sizeof(TransformGeneratorMetadata::_impl_.edit_)
      - PROTOBUF_FIELD_OFFSET(TransformGeneratorMetadata, _impl_.base_)>(
          reinterpret_cast<char*>(&_impl_.base_),
          reinterpret_cast<char*>(&other->_impl_.base_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TransformGeneratorMetadata::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[93]);
}

// ===================================================================

class TransformPropertyMetadata::_Internal {
 public:
  using HasBits = decltype(std::declval<TransformPropertyMetadata>()._impl_._has_bits_);
  static const ::Property::PropertyMetadata& base(const TransformPropertyMetadata* msg);
  static const ::Property::TransformEditingMetadata& edit(const TransformPropertyMetadata* msg);
  static void set_has_edit(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::Property::PropertyMetadata&
TransformPropertyMetadata::_Internal::base(const TransformPropertyMetadata* msg) {
  return *msg->_impl_.base_;
}
const ::Property::TransformEditingMetadata&
TransformPropertyMetadata::_Internal::edit(const TransformPropertyMetadata* msg) {
  return *msg->_impl_.edit_;
}
TransformPropertyMetadata::TransformPropertyMetadata(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.TransformPropertyMetadata)
}
TransformPropertyMetadata::TransformPropertyMetadata(const TransformPropertyMetadata& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TransformPropertyMetadata* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.base_){nullptr}
    , decltype(_impl_.edit_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_base()) {
    _this->_impl_.base_ = new ::Property::PropertyMetadata(*from._impl_.base_);
  }
  if (from._internal_has_edit()) {
    _this->_impl_.edit_ = new ::Property::TransformEditingMetadata(*from._impl_.edit_);
  }
  // @@protoc_insertion_point(copy_constructor:Property.TransformPropertyMetadata)
}

inline void TransformPropertyMetadata::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.base_){nullptr}
    , decltype(_impl_.edit_){nullptr}
  };
}

TransformPropertyMetadata::~TransformPropertyMetadata() {
  // @@protoc_insertion_point(destructor:Property.TransformPropertyMetadata)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TransformPropertyMetadata::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.base_;
  if (this != internal_default_instance()) delete _impl_.edit_;
}

void TransformPropertyMetadata::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TransformPropertyMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.TransformPropertyMetadata)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.base_ != nullptr) {
    delete _impl_.base_;
  }
  _impl_.base_ = nullptr;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.edit_ != nullptr);
    _impl_.edit_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TransformPropertyMetadata::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Property.PropertyMetadata base = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_base(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .Property.TransformEditingMetadata edit = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_edit(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TransformPropertyMetadata::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.TransformPropertyMetadata)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Property.PropertyMetadata base = 1;
  if (this->_internal_has_base()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::base(this),
        _Internal::base(this).GetCachedSize(), target, stream);
  }

  // optional .Property.TransformEditingMetadata edit = 2;
  if (_internal_has_edit()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::edit(this),
        _Internal::edit(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.TransformPropertyMetadata)
  return target;
}

size_t TransformPropertyMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.TransformPropertyMetadata)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Property.PropertyMetadata base = 1;
  if (this->_internal_has_base()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.base_);
  }

  // optional .Property.TransformEditingMetadata edit = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.edit_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TransformPropertyMetadata::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TransformPropertyMetadata::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TransformPropertyMetadata::GetClassData() const { return &_class_data_; }


void TransformPropertyMetadata::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TransformPropertyMetadata*>(&to_msg);
  auto& from = static_cast<const TransformPropertyMetadata&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.TransformPropertyMetadata)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_base()) {
    _this->_internal_mutable_base()->::Property::PropertyMetadata::MergeFrom(
        from._internal_base());
  }
  if (from._internal_has_edit()) {
    _this->_internal_mutable_edit()->::Property::TransformEditingMetadata::MergeFrom(
        from._internal_edit());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TransformPropertyMetadata::CopyFrom(const TransformPropertyMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.TransformPropertyMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransformPropertyMetadata::IsInitialized() const {
  return true;
}

void TransformPropertyMetadata::InternalSwap(TransformPropertyMetadata* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TransformPropertyMetadata, _impl_.edit_)
      + sizeof(TransformPropertyMetadata::_impl_.edit_)
      - PROTOBUF_FIELD_OFFSET(TransformPropertyMetadata, _impl_.base_)>(
          reinterpret_cast<char*>(&_impl_.base_),
          reinterpret_cast<char*>(&other->_impl_.base_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TransformPropertyMetadata::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[94]);
}

// ===================================================================

class CustomGeneratorSubGenScalar::_Internal {
 public:
  using HasBits = decltype(std::declval<CustomGeneratorSubGenScalar>()._impl_._has_bits_);
  static const ::Property::ScalarPropertyValue& generator(const CustomGeneratorSubGenScalar* msg);
  static void set_has_generator(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::Property::ScalarGeneratorMetadata& meta(const CustomGeneratorSubGenScalar* msg);
  static void set_has_meta(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::Property::ScalarPropertyValue&
CustomGeneratorSubGenScalar::_Internal::generator(const CustomGeneratorSubGenScalar* msg) {
  return *msg->_impl_.generator_;
}
const ::Property::ScalarGeneratorMetadata&
CustomGeneratorSubGenScalar::_Internal::meta(const CustomGeneratorSubGenScalar* msg) {
  return *msg->_impl_.meta_;
}
CustomGeneratorSubGenScalar::CustomGeneratorSubGenScalar(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.CustomGeneratorSubGenScalar)
}
CustomGeneratorSubGenScalar::CustomGeneratorSubGenScalar(const CustomGeneratorSubGenScalar& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CustomGeneratorSubGenScalar* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.generator_){nullptr}
    , decltype(_impl_.meta_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_generator()) {
    _this->_impl_.generator_ = new ::Property::ScalarPropertyValue(*from._impl_.generator_);
  }
  if (from._internal_has_meta()) {
    _this->_impl_.meta_ = new ::Property::ScalarGeneratorMetadata(*from._impl_.meta_);
  }
  // @@protoc_insertion_point(copy_constructor:Property.CustomGeneratorSubGenScalar)
}

inline void CustomGeneratorSubGenScalar::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.generator_){nullptr}
    , decltype(_impl_.meta_){nullptr}
  };
}

CustomGeneratorSubGenScalar::~CustomGeneratorSubGenScalar() {
  // @@protoc_insertion_point(destructor:Property.CustomGeneratorSubGenScalar)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CustomGeneratorSubGenScalar::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.generator_;
  if (this != internal_default_instance()) delete _impl_.meta_;
}

void CustomGeneratorSubGenScalar::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CustomGeneratorSubGenScalar::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.CustomGeneratorSubGenScalar)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.generator_ != nullptr);
      _impl_.generator_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.meta_ != nullptr);
      _impl_.meta_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CustomGeneratorSubGenScalar::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .Property.ScalarPropertyValue generator = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_generator(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .Property.ScalarGeneratorMetadata meta = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_meta(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CustomGeneratorSubGenScalar::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.CustomGeneratorSubGenScalar)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional .Property.ScalarPropertyValue generator = 1;
  if (_internal_has_generator()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::generator(this),
        _Internal::generator(this).GetCachedSize(), target, stream);
  }

  // optional .Property.ScalarGeneratorMetadata meta = 2;
  if (_internal_has_meta()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::meta(this),
        _Internal::meta(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.CustomGeneratorSubGenScalar)
  return target;
}

size_t CustomGeneratorSubGenScalar::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.CustomGeneratorSubGenScalar)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .Property.ScalarPropertyValue generator = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.generator_);
    }

    // optional .Property.ScalarGeneratorMetadata meta = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.meta_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CustomGeneratorSubGenScalar::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CustomGeneratorSubGenScalar::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CustomGeneratorSubGenScalar::GetClassData() const { return &_class_data_; }


void CustomGeneratorSubGenScalar::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CustomGeneratorSubGenScalar*>(&to_msg);
  auto& from = static_cast<const CustomGeneratorSubGenScalar&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.CustomGeneratorSubGenScalar)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_generator()->::Property::ScalarPropertyValue::MergeFrom(
          from._internal_generator());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_meta()->::Property::ScalarGeneratorMetadata::MergeFrom(
          from._internal_meta());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CustomGeneratorSubGenScalar::CopyFrom(const CustomGeneratorSubGenScalar& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.CustomGeneratorSubGenScalar)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CustomGeneratorSubGenScalar::IsInitialized() const {
  return true;
}

void CustomGeneratorSubGenScalar::InternalSwap(CustomGeneratorSubGenScalar* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CustomGeneratorSubGenScalar, _impl_.meta_)
      + sizeof(CustomGeneratorSubGenScalar::_impl_.meta_)
      - PROTOBUF_FIELD_OFFSET(CustomGeneratorSubGenScalar, _impl_.generator_)>(
          reinterpret_cast<char*>(&_impl_.generator_),
          reinterpret_cast<char*>(&other->_impl_.generator_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CustomGeneratorSubGenScalar::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[95]);
}

// ===================================================================

class CustomGeneratorSubGenString::_Internal {
 public:
  using HasBits = decltype(std::declval<CustomGeneratorSubGenString>()._impl_._has_bits_);
  static const ::Property::StringPropertyValue& generator(const CustomGeneratorSubGenString* msg);
  static void set_has_generator(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::Property::StringGeneratorMetadata& meta(const CustomGeneratorSubGenString* msg);
  static void set_has_meta(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::Property::StringPropertyValue&
CustomGeneratorSubGenString::_Internal::generator(const CustomGeneratorSubGenString* msg) {
  return *msg->_impl_.generator_;
}
const ::Property::StringGeneratorMetadata&
CustomGeneratorSubGenString::_Internal::meta(const CustomGeneratorSubGenString* msg) {
  return *msg->_impl_.meta_;
}
CustomGeneratorSubGenString::CustomGeneratorSubGenString(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.CustomGeneratorSubGenString)
}
CustomGeneratorSubGenString::CustomGeneratorSubGenString(const CustomGeneratorSubGenString& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CustomGeneratorSubGenString* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.generator_){nullptr}
    , decltype(_impl_.meta_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_generator()) {
    _this->_impl_.generator_ = new ::Property::StringPropertyValue(*from._impl_.generator_);
  }
  if (from._internal_has_meta()) {
    _this->_impl_.meta_ = new ::Property::StringGeneratorMetadata(*from._impl_.meta_);
  }
  // @@protoc_insertion_point(copy_constructor:Property.CustomGeneratorSubGenString)
}

inline void CustomGeneratorSubGenString::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.generator_){nullptr}
    , decltype(_impl_.meta_){nullptr}
  };
}

CustomGeneratorSubGenString::~CustomGeneratorSubGenString() {
  // @@protoc_insertion_point(destructor:Property.CustomGeneratorSubGenString)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CustomGeneratorSubGenString::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.generator_;
  if (this != internal_default_instance()) delete _impl_.meta_;
}

void CustomGeneratorSubGenString::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CustomGeneratorSubGenString::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.CustomGeneratorSubGenString)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.generator_ != nullptr);
      _impl_.generator_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.meta_ != nullptr);
      _impl_.meta_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CustomGeneratorSubGenString::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .Property.StringPropertyValue generator = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_generator(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .Property.StringGeneratorMetadata meta = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_meta(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CustomGeneratorSubGenString::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.CustomGeneratorSubGenString)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional .Property.StringPropertyValue generator = 1;
  if (_internal_has_generator()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::generator(this),
        _Internal::generator(this).GetCachedSize(), target, stream);
  }

  // optional .Property.StringGeneratorMetadata meta = 2;
  if (_internal_has_meta()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::meta(this),
        _Internal::meta(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.CustomGeneratorSubGenString)
  return target;
}

size_t CustomGeneratorSubGenString::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.CustomGeneratorSubGenString)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .Property.StringPropertyValue generator = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.generator_);
    }

    // optional .Property.StringGeneratorMetadata meta = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.meta_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CustomGeneratorSubGenString::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CustomGeneratorSubGenString::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CustomGeneratorSubGenString::GetClassData() const { return &_class_data_; }


void CustomGeneratorSubGenString::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CustomGeneratorSubGenString*>(&to_msg);
  auto& from = static_cast<const CustomGeneratorSubGenString&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.CustomGeneratorSubGenString)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_generator()->::Property::StringPropertyValue::MergeFrom(
          from._internal_generator());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_meta()->::Property::StringGeneratorMetadata::MergeFrom(
          from._internal_meta());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CustomGeneratorSubGenString::CopyFrom(const CustomGeneratorSubGenString& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.CustomGeneratorSubGenString)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CustomGeneratorSubGenString::IsInitialized() const {
  return true;
}

void CustomGeneratorSubGenString::InternalSwap(CustomGeneratorSubGenString* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CustomGeneratorSubGenString, _impl_.meta_)
      + sizeof(CustomGeneratorSubGenString::_impl_.meta_)
      - PROTOBUF_FIELD_OFFSET(CustomGeneratorSubGenString, _impl_.generator_)>(
          reinterpret_cast<char*>(&_impl_.generator_),
          reinterpret_cast<char*>(&other->_impl_.generator_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CustomGeneratorSubGenString::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[96]);
}

// ===================================================================

class CustomGeneratorSubGenLink::_Internal {
 public:
  using HasBits = decltype(std::declval<CustomGeneratorSubGenLink>()._impl_._has_bits_);
  static const ::Property::LinkPropertyValue& generator(const CustomGeneratorSubGenLink* msg);
  static void set_has_generator(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::Property::LinkGeneratorMetadata& meta(const CustomGeneratorSubGenLink* msg);
  static void set_has_meta(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::Property::LinkPropertyValue&
CustomGeneratorSubGenLink::_Internal::generator(const CustomGeneratorSubGenLink* msg) {
  return *msg->_impl_.generator_;
}
const ::Property::LinkGeneratorMetadata&
CustomGeneratorSubGenLink::_Internal::meta(const CustomGeneratorSubGenLink* msg) {
  return *msg->_impl_.meta_;
}
CustomGeneratorSubGenLink::CustomGeneratorSubGenLink(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.CustomGeneratorSubGenLink)
}
CustomGeneratorSubGenLink::CustomGeneratorSubGenLink(const CustomGeneratorSubGenLink& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CustomGeneratorSubGenLink* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.generator_){nullptr}
    , decltype(_impl_.meta_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_generator()) {
    _this->_impl_.generator_ = new ::Property::LinkPropertyValue(*from._impl_.generator_);
  }
  if (from._internal_has_meta()) {
    _this->_impl_.meta_ = new ::Property::LinkGeneratorMetadata(*from._impl_.meta_);
  }
  // @@protoc_insertion_point(copy_constructor:Property.CustomGeneratorSubGenLink)
}

inline void CustomGeneratorSubGenLink::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.generator_){nullptr}
    , decltype(_impl_.meta_){nullptr}
  };
}

CustomGeneratorSubGenLink::~CustomGeneratorSubGenLink() {
  // @@protoc_insertion_point(destructor:Property.CustomGeneratorSubGenLink)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CustomGeneratorSubGenLink::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.generator_;
  if (this != internal_default_instance()) delete _impl_.meta_;
}

void CustomGeneratorSubGenLink::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CustomGeneratorSubGenLink::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.CustomGeneratorSubGenLink)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.generator_ != nullptr);
      _impl_.generator_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.meta_ != nullptr);
      _impl_.meta_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CustomGeneratorSubGenLink::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .Property.LinkPropertyValue generator = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_generator(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .Property.LinkGeneratorMetadata meta = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_meta(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CustomGeneratorSubGenLink::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.CustomGeneratorSubGenLink)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional .Property.LinkPropertyValue generator = 1;
  if (_internal_has_generator()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::generator(this),
        _Internal::generator(this).GetCachedSize(), target, stream);
  }

  // optional .Property.LinkGeneratorMetadata meta = 2;
  if (_internal_has_meta()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::meta(this),
        _Internal::meta(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.CustomGeneratorSubGenLink)
  return target;
}

size_t CustomGeneratorSubGenLink::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.CustomGeneratorSubGenLink)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .Property.LinkPropertyValue generator = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.generator_);
    }

    // optional .Property.LinkGeneratorMetadata meta = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.meta_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CustomGeneratorSubGenLink::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CustomGeneratorSubGenLink::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CustomGeneratorSubGenLink::GetClassData() const { return &_class_data_; }


void CustomGeneratorSubGenLink::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CustomGeneratorSubGenLink*>(&to_msg);
  auto& from = static_cast<const CustomGeneratorSubGenLink&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.CustomGeneratorSubGenLink)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_generator()->::Property::LinkPropertyValue::MergeFrom(
          from._internal_generator());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_meta()->::Property::LinkGeneratorMetadata::MergeFrom(
          from._internal_meta());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CustomGeneratorSubGenLink::CopyFrom(const CustomGeneratorSubGenLink& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.CustomGeneratorSubGenLink)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CustomGeneratorSubGenLink::IsInitialized() const {
  return true;
}

void CustomGeneratorSubGenLink::InternalSwap(CustomGeneratorSubGenLink* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CustomGeneratorSubGenLink, _impl_.meta_)
      + sizeof(CustomGeneratorSubGenLink::_impl_.meta_)
      - PROTOBUF_FIELD_OFFSET(CustomGeneratorSubGenLink, _impl_.generator_)>(
          reinterpret_cast<char*>(&_impl_.generator_),
          reinterpret_cast<char*>(&other->_impl_.generator_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CustomGeneratorSubGenLink::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[97]);
}

// ===================================================================

class CustomGeneratorSubGenVector::_Internal {
 public:
  using HasBits = decltype(std::declval<CustomGeneratorSubGenVector>()._impl_._has_bits_);
  static const ::Property::VectorPropertyValue& generator(const CustomGeneratorSubGenVector* msg);
  static void set_has_generator(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::Property::VectorGeneratorMetadata& meta(const CustomGeneratorSubGenVector* msg);
  static void set_has_meta(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::Property::VectorPropertyValue&
CustomGeneratorSubGenVector::_Internal::generator(const CustomGeneratorSubGenVector* msg) {
  return *msg->_impl_.generator_;
}
const ::Property::VectorGeneratorMetadata&
CustomGeneratorSubGenVector::_Internal::meta(const CustomGeneratorSubGenVector* msg) {
  return *msg->_impl_.meta_;
}
CustomGeneratorSubGenVector::CustomGeneratorSubGenVector(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.CustomGeneratorSubGenVector)
}
CustomGeneratorSubGenVector::CustomGeneratorSubGenVector(const CustomGeneratorSubGenVector& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CustomGeneratorSubGenVector* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.generator_){nullptr}
    , decltype(_impl_.meta_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_generator()) {
    _this->_impl_.generator_ = new ::Property::VectorPropertyValue(*from._impl_.generator_);
  }
  if (from._internal_has_meta()) {
    _this->_impl_.meta_ = new ::Property::VectorGeneratorMetadata(*from._impl_.meta_);
  }
  // @@protoc_insertion_point(copy_constructor:Property.CustomGeneratorSubGenVector)
}

inline void CustomGeneratorSubGenVector::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.generator_){nullptr}
    , decltype(_impl_.meta_){nullptr}
  };
}

CustomGeneratorSubGenVector::~CustomGeneratorSubGenVector() {
  // @@protoc_insertion_point(destructor:Property.CustomGeneratorSubGenVector)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CustomGeneratorSubGenVector::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.generator_;
  if (this != internal_default_instance()) delete _impl_.meta_;
}

void CustomGeneratorSubGenVector::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CustomGeneratorSubGenVector::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.CustomGeneratorSubGenVector)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.generator_ != nullptr);
      _impl_.generator_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.meta_ != nullptr);
      _impl_.meta_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CustomGeneratorSubGenVector::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .Property.VectorPropertyValue generator = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_generator(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .Property.VectorGeneratorMetadata meta = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_meta(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CustomGeneratorSubGenVector::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.CustomGeneratorSubGenVector)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional .Property.VectorPropertyValue generator = 1;
  if (_internal_has_generator()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::generator(this),
        _Internal::generator(this).GetCachedSize(), target, stream);
  }

  // optional .Property.VectorGeneratorMetadata meta = 2;
  if (_internal_has_meta()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::meta(this),
        _Internal::meta(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.CustomGeneratorSubGenVector)
  return target;
}

size_t CustomGeneratorSubGenVector::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.CustomGeneratorSubGenVector)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .Property.VectorPropertyValue generator = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.generator_);
    }

    // optional .Property.VectorGeneratorMetadata meta = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.meta_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CustomGeneratorSubGenVector::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CustomGeneratorSubGenVector::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CustomGeneratorSubGenVector::GetClassData() const { return &_class_data_; }


void CustomGeneratorSubGenVector::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CustomGeneratorSubGenVector*>(&to_msg);
  auto& from = static_cast<const CustomGeneratorSubGenVector&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.CustomGeneratorSubGenVector)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_generator()->::Property::VectorPropertyValue::MergeFrom(
          from._internal_generator());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_meta()->::Property::VectorGeneratorMetadata::MergeFrom(
          from._internal_meta());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CustomGeneratorSubGenVector::CopyFrom(const CustomGeneratorSubGenVector& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.CustomGeneratorSubGenVector)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CustomGeneratorSubGenVector::IsInitialized() const {
  return true;
}

void CustomGeneratorSubGenVector::InternalSwap(CustomGeneratorSubGenVector* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CustomGeneratorSubGenVector, _impl_.meta_)
      + sizeof(CustomGeneratorSubGenVector::_impl_.meta_)
      - PROTOBUF_FIELD_OFFSET(CustomGeneratorSubGenVector, _impl_.generator_)>(
          reinterpret_cast<char*>(&_impl_.generator_),
          reinterpret_cast<char*>(&other->_impl_.generator_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CustomGeneratorSubGenVector::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[98]);
}

// ===================================================================

class CustomGeneratorSubGenColor::_Internal {
 public:
  using HasBits = decltype(std::declval<CustomGeneratorSubGenColor>()._impl_._has_bits_);
  static const ::Property::ColorPropertyValue& generator(const CustomGeneratorSubGenColor* msg);
  static void set_has_generator(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::Property::ColorGeneratorMetadata& meta(const CustomGeneratorSubGenColor* msg);
  static void set_has_meta(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::Property::ColorPropertyValue&
CustomGeneratorSubGenColor::_Internal::generator(const CustomGeneratorSubGenColor* msg) {
  return *msg->_impl_.generator_;
}
const ::Property::ColorGeneratorMetadata&
CustomGeneratorSubGenColor::_Internal::meta(const CustomGeneratorSubGenColor* msg) {
  return *msg->_impl_.meta_;
}
CustomGeneratorSubGenColor::CustomGeneratorSubGenColor(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.CustomGeneratorSubGenColor)
}
CustomGeneratorSubGenColor::CustomGeneratorSubGenColor(const CustomGeneratorSubGenColor& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CustomGeneratorSubGenColor* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.generator_){nullptr}
    , decltype(_impl_.meta_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_generator()) {
    _this->_impl_.generator_ = new ::Property::ColorPropertyValue(*from._impl_.generator_);
  }
  if (from._internal_has_meta()) {
    _this->_impl_.meta_ = new ::Property::ColorGeneratorMetadata(*from._impl_.meta_);
  }
  // @@protoc_insertion_point(copy_constructor:Property.CustomGeneratorSubGenColor)
}

inline void CustomGeneratorSubGenColor::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.generator_){nullptr}
    , decltype(_impl_.meta_){nullptr}
  };
}

CustomGeneratorSubGenColor::~CustomGeneratorSubGenColor() {
  // @@protoc_insertion_point(destructor:Property.CustomGeneratorSubGenColor)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CustomGeneratorSubGenColor::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.generator_;
  if (this != internal_default_instance()) delete _impl_.meta_;
}

void CustomGeneratorSubGenColor::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CustomGeneratorSubGenColor::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.CustomGeneratorSubGenColor)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.generator_ != nullptr);
      _impl_.generator_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.meta_ != nullptr);
      _impl_.meta_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CustomGeneratorSubGenColor::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .Property.ColorPropertyValue generator = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_generator(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .Property.ColorGeneratorMetadata meta = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_meta(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CustomGeneratorSubGenColor::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.CustomGeneratorSubGenColor)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional .Property.ColorPropertyValue generator = 1;
  if (_internal_has_generator()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::generator(this),
        _Internal::generator(this).GetCachedSize(), target, stream);
  }

  // optional .Property.ColorGeneratorMetadata meta = 2;
  if (_internal_has_meta()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::meta(this),
        _Internal::meta(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.CustomGeneratorSubGenColor)
  return target;
}

size_t CustomGeneratorSubGenColor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.CustomGeneratorSubGenColor)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .Property.ColorPropertyValue generator = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.generator_);
    }

    // optional .Property.ColorGeneratorMetadata meta = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.meta_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CustomGeneratorSubGenColor::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CustomGeneratorSubGenColor::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CustomGeneratorSubGenColor::GetClassData() const { return &_class_data_; }


void CustomGeneratorSubGenColor::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CustomGeneratorSubGenColor*>(&to_msg);
  auto& from = static_cast<const CustomGeneratorSubGenColor&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.CustomGeneratorSubGenColor)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_generator()->::Property::ColorPropertyValue::MergeFrom(
          from._internal_generator());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_meta()->::Property::ColorGeneratorMetadata::MergeFrom(
          from._internal_meta());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CustomGeneratorSubGenColor::CopyFrom(const CustomGeneratorSubGenColor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.CustomGeneratorSubGenColor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CustomGeneratorSubGenColor::IsInitialized() const {
  return true;
}

void CustomGeneratorSubGenColor::InternalSwap(CustomGeneratorSubGenColor* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CustomGeneratorSubGenColor, _impl_.meta_)
      + sizeof(CustomGeneratorSubGenColor::_impl_.meta_)
      - PROTOBUF_FIELD_OFFSET(CustomGeneratorSubGenColor, _impl_.generator_)>(
          reinterpret_cast<char*>(&_impl_.generator_),
          reinterpret_cast<char*>(&other->_impl_.generator_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CustomGeneratorSubGenColor::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[99]);
}

// ===================================================================

class CustomGeneratorSubGenBoolean::_Internal {
 public:
  using HasBits = decltype(std::declval<CustomGeneratorSubGenBoolean>()._impl_._has_bits_);
  static const ::Property::BooleanPropertyValue& generator(const CustomGeneratorSubGenBoolean* msg);
  static void set_has_generator(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::Property::BooleanGeneratorMetadata& meta(const CustomGeneratorSubGenBoolean* msg);
  static void set_has_meta(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::Property::BooleanPropertyValue&
CustomGeneratorSubGenBoolean::_Internal::generator(const CustomGeneratorSubGenBoolean* msg) {
  return *msg->_impl_.generator_;
}
const ::Property::BooleanGeneratorMetadata&
CustomGeneratorSubGenBoolean::_Internal::meta(const CustomGeneratorSubGenBoolean* msg) {
  return *msg->_impl_.meta_;
}
CustomGeneratorSubGenBoolean::CustomGeneratorSubGenBoolean(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.CustomGeneratorSubGenBoolean)
}
CustomGeneratorSubGenBoolean::CustomGeneratorSubGenBoolean(const CustomGeneratorSubGenBoolean& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CustomGeneratorSubGenBoolean* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.generator_){nullptr}
    , decltype(_impl_.meta_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_generator()) {
    _this->_impl_.generator_ = new ::Property::BooleanPropertyValue(*from._impl_.generator_);
  }
  if (from._internal_has_meta()) {
    _this->_impl_.meta_ = new ::Property::BooleanGeneratorMetadata(*from._impl_.meta_);
  }
  // @@protoc_insertion_point(copy_constructor:Property.CustomGeneratorSubGenBoolean)
}

inline void CustomGeneratorSubGenBoolean::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.generator_){nullptr}
    , decltype(_impl_.meta_){nullptr}
  };
}

CustomGeneratorSubGenBoolean::~CustomGeneratorSubGenBoolean() {
  // @@protoc_insertion_point(destructor:Property.CustomGeneratorSubGenBoolean)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CustomGeneratorSubGenBoolean::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.generator_;
  if (this != internal_default_instance()) delete _impl_.meta_;
}

void CustomGeneratorSubGenBoolean::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CustomGeneratorSubGenBoolean::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.CustomGeneratorSubGenBoolean)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.generator_ != nullptr);
      _impl_.generator_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.meta_ != nullptr);
      _impl_.meta_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CustomGeneratorSubGenBoolean::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .Property.BooleanPropertyValue generator = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_generator(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .Property.BooleanGeneratorMetadata meta = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_meta(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CustomGeneratorSubGenBoolean::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.CustomGeneratorSubGenBoolean)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional .Property.BooleanPropertyValue generator = 1;
  if (_internal_has_generator()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::generator(this),
        _Internal::generator(this).GetCachedSize(), target, stream);
  }

  // optional .Property.BooleanGeneratorMetadata meta = 2;
  if (_internal_has_meta()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::meta(this),
        _Internal::meta(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.CustomGeneratorSubGenBoolean)
  return target;
}

size_t CustomGeneratorSubGenBoolean::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.CustomGeneratorSubGenBoolean)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .Property.BooleanPropertyValue generator = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.generator_);
    }

    // optional .Property.BooleanGeneratorMetadata meta = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.meta_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CustomGeneratorSubGenBoolean::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CustomGeneratorSubGenBoolean::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CustomGeneratorSubGenBoolean::GetClassData() const { return &_class_data_; }


void CustomGeneratorSubGenBoolean::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CustomGeneratorSubGenBoolean*>(&to_msg);
  auto& from = static_cast<const CustomGeneratorSubGenBoolean&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.CustomGeneratorSubGenBoolean)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_generator()->::Property::BooleanPropertyValue::MergeFrom(
          from._internal_generator());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_meta()->::Property::BooleanGeneratorMetadata::MergeFrom(
          from._internal_meta());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CustomGeneratorSubGenBoolean::CopyFrom(const CustomGeneratorSubGenBoolean& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.CustomGeneratorSubGenBoolean)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CustomGeneratorSubGenBoolean::IsInitialized() const {
  return true;
}

void CustomGeneratorSubGenBoolean::InternalSwap(CustomGeneratorSubGenBoolean* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CustomGeneratorSubGenBoolean, _impl_.meta_)
      + sizeof(CustomGeneratorSubGenBoolean::_impl_.meta_)
      - PROTOBUF_FIELD_OFFSET(CustomGeneratorSubGenBoolean, _impl_.generator_)>(
          reinterpret_cast<char*>(&_impl_.generator_),
          reinterpret_cast<char*>(&other->_impl_.generator_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CustomGeneratorSubGenBoolean::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[100]);
}

// ===================================================================

class CustomGeneratorSubGenJson::_Internal {
 public:
  using HasBits = decltype(std::declval<CustomGeneratorSubGenJson>()._impl_._has_bits_);
  static const ::Property::JsonPropertyValue& generator(const CustomGeneratorSubGenJson* msg);
  static void set_has_generator(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::Property::JsonGeneratorMetadata& meta(const CustomGeneratorSubGenJson* msg);
  static void set_has_meta(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::Property::JsonPropertyValue&
CustomGeneratorSubGenJson::_Internal::generator(const CustomGeneratorSubGenJson* msg) {
  return *msg->_impl_.generator_;
}
const ::Property::JsonGeneratorMetadata&
CustomGeneratorSubGenJson::_Internal::meta(const CustomGeneratorSubGenJson* msg) {
  return *msg->_impl_.meta_;
}
CustomGeneratorSubGenJson::CustomGeneratorSubGenJson(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.CustomGeneratorSubGenJson)
}
CustomGeneratorSubGenJson::CustomGeneratorSubGenJson(const CustomGeneratorSubGenJson& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CustomGeneratorSubGenJson* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.generator_){nullptr}
    , decltype(_impl_.meta_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_generator()) {
    _this->_impl_.generator_ = new ::Property::JsonPropertyValue(*from._impl_.generator_);
  }
  if (from._internal_has_meta()) {
    _this->_impl_.meta_ = new ::Property::JsonGeneratorMetadata(*from._impl_.meta_);
  }
  // @@protoc_insertion_point(copy_constructor:Property.CustomGeneratorSubGenJson)
}

inline void CustomGeneratorSubGenJson::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.generator_){nullptr}
    , decltype(_impl_.meta_){nullptr}
  };
}

CustomGeneratorSubGenJson::~CustomGeneratorSubGenJson() {
  // @@protoc_insertion_point(destructor:Property.CustomGeneratorSubGenJson)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CustomGeneratorSubGenJson::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.generator_;
  if (this != internal_default_instance()) delete _impl_.meta_;
}

void CustomGeneratorSubGenJson::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CustomGeneratorSubGenJson::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.CustomGeneratorSubGenJson)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.generator_ != nullptr);
      _impl_.generator_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.meta_ != nullptr);
      _impl_.meta_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CustomGeneratorSubGenJson::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .Property.JsonPropertyValue generator = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_generator(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .Property.JsonGeneratorMetadata meta = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_meta(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CustomGeneratorSubGenJson::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.CustomGeneratorSubGenJson)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional .Property.JsonPropertyValue generator = 1;
  if (_internal_has_generator()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::generator(this),
        _Internal::generator(this).GetCachedSize(), target, stream);
  }

  // optional .Property.JsonGeneratorMetadata meta = 2;
  if (_internal_has_meta()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::meta(this),
        _Internal::meta(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.CustomGeneratorSubGenJson)
  return target;
}

size_t CustomGeneratorSubGenJson::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.CustomGeneratorSubGenJson)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .Property.JsonPropertyValue generator = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.generator_);
    }

    // optional .Property.JsonGeneratorMetadata meta = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.meta_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CustomGeneratorSubGenJson::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CustomGeneratorSubGenJson::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CustomGeneratorSubGenJson::GetClassData() const { return &_class_data_; }


void CustomGeneratorSubGenJson::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CustomGeneratorSubGenJson*>(&to_msg);
  auto& from = static_cast<const CustomGeneratorSubGenJson&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.CustomGeneratorSubGenJson)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_generator()->::Property::JsonPropertyValue::MergeFrom(
          from._internal_generator());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_meta()->::Property::JsonGeneratorMetadata::MergeFrom(
          from._internal_meta());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CustomGeneratorSubGenJson::CopyFrom(const CustomGeneratorSubGenJson& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.CustomGeneratorSubGenJson)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CustomGeneratorSubGenJson::IsInitialized() const {
  return true;
}

void CustomGeneratorSubGenJson::InternalSwap(CustomGeneratorSubGenJson* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CustomGeneratorSubGenJson, _impl_.meta_)
      + sizeof(CustomGeneratorSubGenJson::_impl_.meta_)
      - PROTOBUF_FIELD_OFFSET(CustomGeneratorSubGenJson, _impl_.generator_)>(
          reinterpret_cast<char*>(&_impl_.generator_),
          reinterpret_cast<char*>(&other->_impl_.generator_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CustomGeneratorSubGenJson::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[101]);
}

// ===================================================================

class CustomGeneratorSubGenTransform::_Internal {
 public:
  using HasBits = decltype(std::declval<CustomGeneratorSubGenTransform>()._impl_._has_bits_);
  static const ::Property::TransformSet& generator(const CustomGeneratorSubGenTransform* msg);
  static void set_has_generator(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::Property::TransformGeneratorMetadata& meta(const CustomGeneratorSubGenTransform* msg);
  static void set_has_meta(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::Property::TransformSet&
CustomGeneratorSubGenTransform::_Internal::generator(const CustomGeneratorSubGenTransform* msg) {
  return *msg->_impl_.generator_;
}
const ::Property::TransformGeneratorMetadata&
CustomGeneratorSubGenTransform::_Internal::meta(const CustomGeneratorSubGenTransform* msg) {
  return *msg->_impl_.meta_;
}
CustomGeneratorSubGenTransform::CustomGeneratorSubGenTransform(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.CustomGeneratorSubGenTransform)
}
CustomGeneratorSubGenTransform::CustomGeneratorSubGenTransform(const CustomGeneratorSubGenTransform& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CustomGeneratorSubGenTransform* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.generator_){nullptr}
    , decltype(_impl_.meta_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_generator()) {
    _this->_impl_.generator_ = new ::Property::TransformSet(*from._impl_.generator_);
  }
  if (from._internal_has_meta()) {
    _this->_impl_.meta_ = new ::Property::TransformGeneratorMetadata(*from._impl_.meta_);
  }
  // @@protoc_insertion_point(copy_constructor:Property.CustomGeneratorSubGenTransform)
}

inline void CustomGeneratorSubGenTransform::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.generator_){nullptr}
    , decltype(_impl_.meta_){nullptr}
  };
}

CustomGeneratorSubGenTransform::~CustomGeneratorSubGenTransform() {
  // @@protoc_insertion_point(destructor:Property.CustomGeneratorSubGenTransform)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CustomGeneratorSubGenTransform::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.generator_;
  if (this != internal_default_instance()) delete _impl_.meta_;
}

void CustomGeneratorSubGenTransform::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CustomGeneratorSubGenTransform::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.CustomGeneratorSubGenTransform)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.generator_ != nullptr);
      _impl_.generator_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.meta_ != nullptr);
      _impl_.meta_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CustomGeneratorSubGenTransform::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .Property.TransformSet generator = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_generator(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .Property.TransformGeneratorMetadata meta = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_meta(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CustomGeneratorSubGenTransform::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.CustomGeneratorSubGenTransform)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional .Property.TransformSet generator = 1;
  if (_internal_has_generator()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::generator(this),
        _Internal::generator(this).GetCachedSize(), target, stream);
  }

  // optional .Property.TransformGeneratorMetadata meta = 2;
  if (_internal_has_meta()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::meta(this),
        _Internal::meta(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.CustomGeneratorSubGenTransform)
  return target;
}

size_t CustomGeneratorSubGenTransform::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.CustomGeneratorSubGenTransform)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .Property.TransformSet generator = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.generator_);
    }

    // optional .Property.TransformGeneratorMetadata meta = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.meta_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CustomGeneratorSubGenTransform::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CustomGeneratorSubGenTransform::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CustomGeneratorSubGenTransform::GetClassData() const { return &_class_data_; }


void CustomGeneratorSubGenTransform::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CustomGeneratorSubGenTransform*>(&to_msg);
  auto& from = static_cast<const CustomGeneratorSubGenTransform&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.CustomGeneratorSubGenTransform)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_generator()->::Property::TransformSet::MergeFrom(
          from._internal_generator());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_meta()->::Property::TransformGeneratorMetadata::MergeFrom(
          from._internal_meta());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CustomGeneratorSubGenTransform::CopyFrom(const CustomGeneratorSubGenTransform& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.CustomGeneratorSubGenTransform)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CustomGeneratorSubGenTransform::IsInitialized() const {
  return true;
}

void CustomGeneratorSubGenTransform::InternalSwap(CustomGeneratorSubGenTransform* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CustomGeneratorSubGenTransform, _impl_.meta_)
      + sizeof(CustomGeneratorSubGenTransform::_impl_.meta_)
      - PROTOBUF_FIELD_OFFSET(CustomGeneratorSubGenTransform, _impl_.generator_)>(
          reinterpret_cast<char*>(&_impl_.generator_),
          reinterpret_cast<char*>(&other->_impl_.generator_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CustomGeneratorSubGenTransform::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[102]);
}

// ===================================================================

class CustomGeneratorSubGen::_Internal {
 public:
  static const ::Property::CustomGeneratorSubGenScalar& scalar(const CustomGeneratorSubGen* msg);
  static const ::Property::CustomGeneratorSubGenString& string(const CustomGeneratorSubGen* msg);
  static const ::Property::CustomGeneratorSubGenLink& link(const CustomGeneratorSubGen* msg);
  static const ::Property::CustomGeneratorSubGenVector& vector(const CustomGeneratorSubGen* msg);
  static const ::Property::CustomGeneratorSubGenColor& color(const CustomGeneratorSubGen* msg);
  static const ::Property::CustomGeneratorSubGenBoolean& boolean(const CustomGeneratorSubGen* msg);
  static const ::Property::CustomGeneratorSubGenJson& json(const CustomGeneratorSubGen* msg);
  static const ::Property::CustomGeneratorSubGenTransform& transform(const CustomGeneratorSubGen* msg);
};

const ::Property::CustomGeneratorSubGenScalar&
CustomGeneratorSubGen::_Internal::scalar(const CustomGeneratorSubGen* msg) {
  return *msg->_impl_.SubGenType_.scalar_;
}
const ::Property::CustomGeneratorSubGenString&
CustomGeneratorSubGen::_Internal::string(const CustomGeneratorSubGen* msg) {
  return *msg->_impl_.SubGenType_.string_;
}
const ::Property::CustomGeneratorSubGenLink&
CustomGeneratorSubGen::_Internal::link(const CustomGeneratorSubGen* msg) {
  return *msg->_impl_.SubGenType_.link_;
}
const ::Property::CustomGeneratorSubGenVector&
CustomGeneratorSubGen::_Internal::vector(const CustomGeneratorSubGen* msg) {
  return *msg->_impl_.SubGenType_.vector_;
}
const ::Property::CustomGeneratorSubGenColor&
CustomGeneratorSubGen::_Internal::color(const CustomGeneratorSubGen* msg) {
  return *msg->_impl_.SubGenType_.color_;
}
const ::Property::CustomGeneratorSubGenBoolean&
CustomGeneratorSubGen::_Internal::boolean(const CustomGeneratorSubGen* msg) {
  return *msg->_impl_.SubGenType_.boolean_;
}
const ::Property::CustomGeneratorSubGenJson&
CustomGeneratorSubGen::_Internal::json(const CustomGeneratorSubGen* msg) {
  return *msg->_impl_.SubGenType_.json_;
}
const ::Property::CustomGeneratorSubGenTransform&
CustomGeneratorSubGen::_Internal::transform(const CustomGeneratorSubGen* msg) {
  return *msg->_impl_.SubGenType_.transform_;
}
void CustomGeneratorSubGen::set_allocated_scalar(::Property::CustomGeneratorSubGenScalar* scalar) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_SubGenType();
  if (scalar) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(scalar);
    if (message_arena != submessage_arena) {
      scalar = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, scalar, submessage_arena);
    }
    set_has_scalar();
    _impl_.SubGenType_.scalar_ = scalar;
  }
  // @@protoc_insertion_point(field_set_allocated:Property.CustomGeneratorSubGen.scalar)
}
void CustomGeneratorSubGen::set_allocated_string(::Property::CustomGeneratorSubGenString* string) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_SubGenType();
  if (string) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(string);
    if (message_arena != submessage_arena) {
      string = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, string, submessage_arena);
    }
    set_has_string();
    _impl_.SubGenType_.string_ = string;
  }
  // @@protoc_insertion_point(field_set_allocated:Property.CustomGeneratorSubGen.string)
}
void CustomGeneratorSubGen::set_allocated_link(::Property::CustomGeneratorSubGenLink* link) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_SubGenType();
  if (link) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(link);
    if (message_arena != submessage_arena) {
      link = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, link, submessage_arena);
    }
    set_has_link();
    _impl_.SubGenType_.link_ = link;
  }
  // @@protoc_insertion_point(field_set_allocated:Property.CustomGeneratorSubGen.link)
}
void CustomGeneratorSubGen::set_allocated_vector(::Property::CustomGeneratorSubGenVector* vector) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_SubGenType();
  if (vector) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(vector);
    if (message_arena != submessage_arena) {
      vector = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, vector, submessage_arena);
    }
    set_has_vector();
    _impl_.SubGenType_.vector_ = vector;
  }
  // @@protoc_insertion_point(field_set_allocated:Property.CustomGeneratorSubGen.vector)
}
void CustomGeneratorSubGen::set_allocated_color(::Property::CustomGeneratorSubGenColor* color) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_SubGenType();
  if (color) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(color);
    if (message_arena != submessage_arena) {
      color = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, color, submessage_arena);
    }
    set_has_color();
    _impl_.SubGenType_.color_ = color;
  }
  // @@protoc_insertion_point(field_set_allocated:Property.CustomGeneratorSubGen.color)
}
void CustomGeneratorSubGen::set_allocated_boolean(::Property::CustomGeneratorSubGenBoolean* boolean) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_SubGenType();
  if (boolean) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(boolean);
    if (message_arena != submessage_arena) {
      boolean = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, boolean, submessage_arena);
    }
    set_has_boolean();
    _impl_.SubGenType_.boolean_ = boolean;
  }
  // @@protoc_insertion_point(field_set_allocated:Property.CustomGeneratorSubGen.boolean)
}
void CustomGeneratorSubGen::set_allocated_json(::Property::CustomGeneratorSubGenJson* json) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_SubGenType();
  if (json) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(json);
    if (message_arena != submessage_arena) {
      json = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, json, submessage_arena);
    }
    set_has_json();
    _impl_.SubGenType_.json_ = json;
  }
  // @@protoc_insertion_point(field_set_allocated:Property.CustomGeneratorSubGen.json)
}
void CustomGeneratorSubGen::set_allocated_transform(::Property::CustomGeneratorSubGenTransform* transform) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_SubGenType();
  if (transform) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(transform);
    if (message_arena != submessage_arena) {
      transform = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, transform, submessage_arena);
    }
    set_has_transform();
    _impl_.SubGenType_.transform_ = transform;
  }
  // @@protoc_insertion_point(field_set_allocated:Property.CustomGeneratorSubGen.transform)
}
CustomGeneratorSubGen::CustomGeneratorSubGen(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.CustomGeneratorSubGen)
}
CustomGeneratorSubGen::CustomGeneratorSubGen(const CustomGeneratorSubGen& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CustomGeneratorSubGen* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.SubGenType_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_SubGenType();
  switch (from.SubGenType_case()) {
    case kScalar: {
      _this->_internal_mutable_scalar()->::Property::CustomGeneratorSubGenScalar::MergeFrom(
          from._internal_scalar());
      break;
    }
    case kString: {
      _this->_internal_mutable_string()->::Property::CustomGeneratorSubGenString::MergeFrom(
          from._internal_string());
      break;
    }
    case kLink: {
      _this->_internal_mutable_link()->::Property::CustomGeneratorSubGenLink::MergeFrom(
          from._internal_link());
      break;
    }
    case kVector: {
      _this->_internal_mutable_vector()->::Property::CustomGeneratorSubGenVector::MergeFrom(
          from._internal_vector());
      break;
    }
    case kColor: {
      _this->_internal_mutable_color()->::Property::CustomGeneratorSubGenColor::MergeFrom(
          from._internal_color());
      break;
    }
    case kBoolean: {
      _this->_internal_mutable_boolean()->::Property::CustomGeneratorSubGenBoolean::MergeFrom(
          from._internal_boolean());
      break;
    }
    case kJson: {
      _this->_internal_mutable_json()->::Property::CustomGeneratorSubGenJson::MergeFrom(
          from._internal_json());
      break;
    }
    case kTransform: {
      _this->_internal_mutable_transform()->::Property::CustomGeneratorSubGenTransform::MergeFrom(
          from._internal_transform());
      break;
    }
    case SUBGENTYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:Property.CustomGeneratorSubGen)
}

inline void CustomGeneratorSubGen::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.SubGenType_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  clear_has_SubGenType();
}

CustomGeneratorSubGen::~CustomGeneratorSubGen() {
  // @@protoc_insertion_point(destructor:Property.CustomGeneratorSubGen)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CustomGeneratorSubGen::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_SubGenType()) {
    clear_SubGenType();
  }
}

void CustomGeneratorSubGen::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CustomGeneratorSubGen::clear_SubGenType() {
// @@protoc_insertion_point(one_of_clear_start:Property.CustomGeneratorSubGen)
  switch (SubGenType_case()) {
    case kScalar: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.SubGenType_.scalar_;
      }
      break;
    }
    case kString: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.SubGenType_.string_;
      }
      break;
    }
    case kLink: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.SubGenType_.link_;
      }
      break;
    }
    case kVector: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.SubGenType_.vector_;
      }
      break;
    }
    case kColor: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.SubGenType_.color_;
      }
      break;
    }
    case kBoolean: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.SubGenType_.boolean_;
      }
      break;
    }
    case kJson: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.SubGenType_.json_;
      }
      break;
    }
    case kTransform: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.SubGenType_.transform_;
      }
      break;
    }
    case SUBGENTYPE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = SUBGENTYPE_NOT_SET;
}


void CustomGeneratorSubGen::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.CustomGeneratorSubGen)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_SubGenType();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CustomGeneratorSubGen::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Property.CustomGeneratorSubGenScalar scalar = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_scalar(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.CustomGeneratorSubGenString string = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_string(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.CustomGeneratorSubGenVector vector = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_vector(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.CustomGeneratorSubGenColor color = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_color(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.CustomGeneratorSubGenBoolean boolean = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_boolean(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.CustomGeneratorSubGenJson json = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_json(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.CustomGeneratorSubGenTransform transform = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_transform(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Property.CustomGeneratorSubGenLink link = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_link(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CustomGeneratorSubGen::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.CustomGeneratorSubGen)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Property.CustomGeneratorSubGenScalar scalar = 2;
  if (_internal_has_scalar()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::scalar(this),
        _Internal::scalar(this).GetCachedSize(), target, stream);
  }

  // .Property.CustomGeneratorSubGenString string = 3;
  if (_internal_has_string()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::string(this),
        _Internal::string(this).GetCachedSize(), target, stream);
  }

  // .Property.CustomGeneratorSubGenVector vector = 4;
  if (_internal_has_vector()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::vector(this),
        _Internal::vector(this).GetCachedSize(), target, stream);
  }

  // .Property.CustomGeneratorSubGenColor color = 5;
  if (_internal_has_color()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::color(this),
        _Internal::color(this).GetCachedSize(), target, stream);
  }

  // .Property.CustomGeneratorSubGenBoolean boolean = 6;
  if (_internal_has_boolean()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::boolean(this),
        _Internal::boolean(this).GetCachedSize(), target, stream);
  }

  // .Property.CustomGeneratorSubGenJson json = 7;
  if (_internal_has_json()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::json(this),
        _Internal::json(this).GetCachedSize(), target, stream);
  }

  // .Property.CustomGeneratorSubGenTransform transform = 8;
  if (_internal_has_transform()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(8, _Internal::transform(this),
        _Internal::transform(this).GetCachedSize(), target, stream);
  }

  // .Property.CustomGeneratorSubGenLink link = 9;
  if (_internal_has_link()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(9, _Internal::link(this),
        _Internal::link(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.CustomGeneratorSubGen)
  return target;
}

size_t CustomGeneratorSubGen::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.CustomGeneratorSubGen)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (SubGenType_case()) {
    // .Property.CustomGeneratorSubGenScalar scalar = 2;
    case kScalar: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.SubGenType_.scalar_);
      break;
    }
    // .Property.CustomGeneratorSubGenString string = 3;
    case kString: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.SubGenType_.string_);
      break;
    }
    // .Property.CustomGeneratorSubGenLink link = 9;
    case kLink: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.SubGenType_.link_);
      break;
    }
    // .Property.CustomGeneratorSubGenVector vector = 4;
    case kVector: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.SubGenType_.vector_);
      break;
    }
    // .Property.CustomGeneratorSubGenColor color = 5;
    case kColor: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.SubGenType_.color_);
      break;
    }
    // .Property.CustomGeneratorSubGenBoolean boolean = 6;
    case kBoolean: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.SubGenType_.boolean_);
      break;
    }
    // .Property.CustomGeneratorSubGenJson json = 7;
    case kJson: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.SubGenType_.json_);
      break;
    }
    // .Property.CustomGeneratorSubGenTransform transform = 8;
    case kTransform: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.SubGenType_.transform_);
      break;
    }
    case SUBGENTYPE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CustomGeneratorSubGen::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CustomGeneratorSubGen::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CustomGeneratorSubGen::GetClassData() const { return &_class_data_; }


void CustomGeneratorSubGen::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CustomGeneratorSubGen*>(&to_msg);
  auto& from = static_cast<const CustomGeneratorSubGen&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.CustomGeneratorSubGen)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.SubGenType_case()) {
    case kScalar: {
      _this->_internal_mutable_scalar()->::Property::CustomGeneratorSubGenScalar::MergeFrom(
          from._internal_scalar());
      break;
    }
    case kString: {
      _this->_internal_mutable_string()->::Property::CustomGeneratorSubGenString::MergeFrom(
          from._internal_string());
      break;
    }
    case kLink: {
      _this->_internal_mutable_link()->::Property::CustomGeneratorSubGenLink::MergeFrom(
          from._internal_link());
      break;
    }
    case kVector: {
      _this->_internal_mutable_vector()->::Property::CustomGeneratorSubGenVector::MergeFrom(
          from._internal_vector());
      break;
    }
    case kColor: {
      _this->_internal_mutable_color()->::Property::CustomGeneratorSubGenColor::MergeFrom(
          from._internal_color());
      break;
    }
    case kBoolean: {
      _this->_internal_mutable_boolean()->::Property::CustomGeneratorSubGenBoolean::MergeFrom(
          from._internal_boolean());
      break;
    }
    case kJson: {
      _this->_internal_mutable_json()->::Property::CustomGeneratorSubGenJson::MergeFrom(
          from._internal_json());
      break;
    }
    case kTransform: {
      _this->_internal_mutable_transform()->::Property::CustomGeneratorSubGenTransform::MergeFrom(
          from._internal_transform());
      break;
    }
    case SUBGENTYPE_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CustomGeneratorSubGen::CopyFrom(const CustomGeneratorSubGen& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.CustomGeneratorSubGen)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CustomGeneratorSubGen::IsInitialized() const {
  return true;
}

void CustomGeneratorSubGen::InternalSwap(CustomGeneratorSubGen* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.SubGenType_, other->_impl_.SubGenType_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata CustomGeneratorSubGen::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[103]);
}

// ===================================================================

class CustomGeneratorValue::_Internal {
 public:
};

CustomGeneratorValue::CustomGeneratorValue(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Property.CustomGeneratorValue)
}
CustomGeneratorValue::CustomGeneratorValue(const CustomGeneratorValue& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CustomGeneratorValue* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.subgens_){from._impl_.subgens_}
    , decltype(_impl_.customid_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.customid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.customid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_customid().empty()) {
    _this->_impl_.customid_.Set(from._internal_customid(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:Property.CustomGeneratorValue)
}

inline void CustomGeneratorValue::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.subgens_){arena}
    , decltype(_impl_.customid_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.customid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.customid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CustomGeneratorValue::~CustomGeneratorValue() {
  // @@protoc_insertion_point(destructor:Property.CustomGeneratorValue)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CustomGeneratorValue::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.subgens_.~RepeatedPtrField();
  _impl_.customid_.Destroy();
}

void CustomGeneratorValue::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CustomGeneratorValue::Clear() {
// @@protoc_insertion_point(message_clear_start:Property.CustomGeneratorValue)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.subgens_.Clear();
  _impl_.customid_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CustomGeneratorValue::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string customId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_customid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "Property.CustomGeneratorValue.customId"));
        } else
          goto handle_unusual;
        continue;
      // repeated .Property.CustomGeneratorSubGen subGens = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_subgens(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CustomGeneratorValue::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Property.CustomGeneratorValue)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string customId = 1;
  if (!this->_internal_customid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_customid().data(), static_cast<int>(this->_internal_customid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Property.CustomGeneratorValue.customId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_customid(), target);
  }

  // repeated .Property.CustomGeneratorSubGen subGens = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_subgens_size()); i < n; i++) {
    const auto& repfield = this->_internal_subgens(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Property.CustomGeneratorValue)
  return target;
}

size_t CustomGeneratorValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Property.CustomGeneratorValue)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Property.CustomGeneratorSubGen subGens = 2;
  total_size += 1UL * this->_internal_subgens_size();
  for (const auto& msg : this->_impl_.subgens_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string customId = 1;
  if (!this->_internal_customid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_customid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CustomGeneratorValue::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CustomGeneratorValue::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CustomGeneratorValue::GetClassData() const { return &_class_data_; }


void CustomGeneratorValue::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CustomGeneratorValue*>(&to_msg);
  auto& from = static_cast<const CustomGeneratorValue&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Property.CustomGeneratorValue)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.subgens_.MergeFrom(from._impl_.subgens_);
  if (!from._internal_customid().empty()) {
    _this->_internal_set_customid(from._internal_customid());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CustomGeneratorValue::CopyFrom(const CustomGeneratorValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Property.CustomGeneratorValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CustomGeneratorValue::IsInitialized() const {
  return true;
}

void CustomGeneratorValue::InternalSwap(CustomGeneratorValue* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.subgens_.InternalSwap(&other->_impl_.subgens_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.customid_, lhs_arena,
      &other->_impl_.customid_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata CustomGeneratorValue::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_properties_2eproto_getter, &descriptor_table_properties_2eproto_once,
      file_level_metadata_properties_2eproto[104]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace Property
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::Property::PropertyIdentifier*
Arena::CreateMaybeMessage< ::Property::PropertyIdentifier >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::PropertyIdentifier >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::AnyPropertyValue*
Arena::CreateMaybeMessage< ::Property::AnyPropertyValue >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::AnyPropertyValue >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::GeneratorMetadata*
Arena::CreateMaybeMessage< ::Property::GeneratorMetadata >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::GeneratorMetadata >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::PropertyMetadata*
Arena::CreateMaybeMessage< ::Property::PropertyMetadata >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::PropertyMetadata >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::AnyPropertyDeclaration*
Arena::CreateMaybeMessage< ::Property::AnyPropertyDeclaration >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::AnyPropertyDeclaration >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::Interpolation*
Arena::CreateMaybeMessage< ::Property::Interpolation >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::Interpolation >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::ScalarPropertyAssignment*
Arena::CreateMaybeMessage< ::Property::ScalarPropertyAssignment >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::ScalarPropertyAssignment >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::ScalarPropertyValue*
Arena::CreateMaybeMessage< ::Property::ScalarPropertyValue >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::ScalarPropertyValue >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::ScalarPropertyInterpolator*
Arena::CreateMaybeMessage< ::Property::ScalarPropertyInterpolator >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::ScalarPropertyInterpolator >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::ScalarPropertyPulse*
Arena::CreateMaybeMessage< ::Property::ScalarPropertyPulse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::ScalarPropertyPulse >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::ScalarPropertyPlaybackBasic*
Arena::CreateMaybeMessage< ::Property::ScalarPropertyPlaybackBasic >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::ScalarPropertyPlaybackBasic >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::ScalarPropertyPlayback*
Arena::CreateMaybeMessage< ::Property::ScalarPropertyPlayback >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::ScalarPropertyPlayback >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::ScalarPropertyKeyframed_ScalarKeyframe*
Arena::CreateMaybeMessage< ::Property::ScalarPropertyKeyframed_ScalarKeyframe >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::ScalarPropertyKeyframed_ScalarKeyframe >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::ScalarPropertyKeyframed*
Arena::CreateMaybeMessage< ::Property::ScalarPropertyKeyframed >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::ScalarPropertyKeyframed >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::ScalarPropertyApproach*
Arena::CreateMaybeMessage< ::Property::ScalarPropertyApproach >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::ScalarPropertyApproach >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::ScalarPropertyDeclaration*
Arena::CreateMaybeMessage< ::Property::ScalarPropertyDeclaration >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::ScalarPropertyDeclaration >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::ScalarEditingMetadata*
Arena::CreateMaybeMessage< ::Property::ScalarEditingMetadata >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::ScalarEditingMetadata >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::ScalarGeneratorMetadata*
Arena::CreateMaybeMessage< ::Property::ScalarGeneratorMetadata >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::ScalarGeneratorMetadata >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::ScalarPropertyMetadata*
Arena::CreateMaybeMessage< ::Property::ScalarPropertyMetadata >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::ScalarPropertyMetadata >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::StringPropertyAssignment*
Arena::CreateMaybeMessage< ::Property::StringPropertyAssignment >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::StringPropertyAssignment >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::StringPropertyValue*
Arena::CreateMaybeMessage< ::Property::StringPropertyValue >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::StringPropertyValue >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::StringPropertyFormatted*
Arena::CreateMaybeMessage< ::Property::StringPropertyFormatted >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::StringPropertyFormatted >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::StringPropertyDeclaration*
Arena::CreateMaybeMessage< ::Property::StringPropertyDeclaration >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::StringPropertyDeclaration >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::StringValueEnumerationOption*
Arena::CreateMaybeMessage< ::Property::StringValueEnumerationOption >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::StringValueEnumerationOption >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::StringEditingMetadata*
Arena::CreateMaybeMessage< ::Property::StringEditingMetadata >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::StringEditingMetadata >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::StringGeneratorMetadata*
Arena::CreateMaybeMessage< ::Property::StringGeneratorMetadata >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::StringGeneratorMetadata >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::StringPropertyMetadata*
Arena::CreateMaybeMessage< ::Property::StringPropertyMetadata >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::StringPropertyMetadata >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::LinkPropertyAssignment*
Arena::CreateMaybeMessage< ::Property::LinkPropertyAssignment >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::LinkPropertyAssignment >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::LinkPropertyValue*
Arena::CreateMaybeMessage< ::Property::LinkPropertyValue >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::LinkPropertyValue >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::LinkPropertyDeclaration*
Arena::CreateMaybeMessage< ::Property::LinkPropertyDeclaration >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::LinkPropertyDeclaration >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::LinkPropertyMetadata*
Arena::CreateMaybeMessage< ::Property::LinkPropertyMetadata >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::LinkPropertyMetadata >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::LinkGeneratorMetadata*
Arena::CreateMaybeMessage< ::Property::LinkGeneratorMetadata >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::LinkGeneratorMetadata >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::LinkEditingMetadata*
Arena::CreateMaybeMessage< ::Property::LinkEditingMetadata >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::LinkEditingMetadata >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::LinkContentTypeSpecifier*
Arena::CreateMaybeMessage< ::Property::LinkContentTypeSpecifier >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::LinkContentTypeSpecifier >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::VectorPropertyAssignment*
Arena::CreateMaybeMessage< ::Property::VectorPropertyAssignment >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::VectorPropertyAssignment >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::VectorPropertyValue*
Arena::CreateMaybeMessage< ::Property::VectorPropertyValue >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::VectorPropertyValue >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::VectorPropertyInterpolator*
Arena::CreateMaybeMessage< ::Property::VectorPropertyInterpolator >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::VectorPropertyInterpolator >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::VectorPerChannel*
Arena::CreateMaybeMessage< ::Property::VectorPerChannel >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::VectorPerChannel >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::VectorPropertyQuadratic*
Arena::CreateMaybeMessage< ::Property::VectorPropertyQuadratic >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::VectorPropertyQuadratic >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::VectorPropertyApproach*
Arena::CreateMaybeMessage< ::Property::VectorPropertyApproach >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::VectorPropertyApproach >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::VectorPropertyKeyframed_VectorKeyframe*
Arena::CreateMaybeMessage< ::Property::VectorPropertyKeyframed_VectorKeyframe >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::VectorPropertyKeyframed_VectorKeyframe >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::VectorPropertyKeyframed*
Arena::CreateMaybeMessage< ::Property::VectorPropertyKeyframed >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::VectorPropertyKeyframed >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::VectorPropertyDeclaration*
Arena::CreateMaybeMessage< ::Property::VectorPropertyDeclaration >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::VectorPropertyDeclaration >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::VectorEditingMetadata*
Arena::CreateMaybeMessage< ::Property::VectorEditingMetadata >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::VectorEditingMetadata >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::VectorGeneratorMetadata*
Arena::CreateMaybeMessage< ::Property::VectorGeneratorMetadata >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::VectorGeneratorMetadata >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::VectorPropertyMetadata*
Arena::CreateMaybeMessage< ::Property::VectorPropertyMetadata >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::VectorPropertyMetadata >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::ColorPropertyAssignment*
Arena::CreateMaybeMessage< ::Property::ColorPropertyAssignment >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::ColorPropertyAssignment >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::ColorPropertyValue*
Arena::CreateMaybeMessage< ::Property::ColorPropertyValue >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::ColorPropertyValue >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::ColorPropertyInterpolator*
Arena::CreateMaybeMessage< ::Property::ColorPropertyInterpolator >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::ColorPropertyInterpolator >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::ColorPerChannel*
Arena::CreateMaybeMessage< ::Property::ColorPerChannel >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::ColorPerChannel >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::ColorPropertyKeyframed_ColorKeyframe*
Arena::CreateMaybeMessage< ::Property::ColorPropertyKeyframed_ColorKeyframe >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::ColorPropertyKeyframed_ColorKeyframe >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::ColorPropertyKeyframed*
Arena::CreateMaybeMessage< ::Property::ColorPropertyKeyframed >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::ColorPropertyKeyframed >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::ColorPropertyApproach*
Arena::CreateMaybeMessage< ::Property::ColorPropertyApproach >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::ColorPropertyApproach >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::ColorPropertyDeclaration*
Arena::CreateMaybeMessage< ::Property::ColorPropertyDeclaration >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::ColorPropertyDeclaration >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::ColorEditingMetadata*
Arena::CreateMaybeMessage< ::Property::ColorEditingMetadata >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::ColorEditingMetadata >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::ColorGeneratorMetadata*
Arena::CreateMaybeMessage< ::Property::ColorGeneratorMetadata >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::ColorGeneratorMetadata >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::ColorPropertyMetadata*
Arena::CreateMaybeMessage< ::Property::ColorPropertyMetadata >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::ColorPropertyMetadata >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::BooleanPropertyAssignment*
Arena::CreateMaybeMessage< ::Property::BooleanPropertyAssignment >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::BooleanPropertyAssignment >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::BooleanPropertyValue*
Arena::CreateMaybeMessage< ::Property::BooleanPropertyValue >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::BooleanPropertyValue >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::BooleanPropertyKeyframed_BooleanKeyframe*
Arena::CreateMaybeMessage< ::Property::BooleanPropertyKeyframed_BooleanKeyframe >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::BooleanPropertyKeyframed_BooleanKeyframe >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::BooleanPropertyKeyframed*
Arena::CreateMaybeMessage< ::Property::BooleanPropertyKeyframed >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::BooleanPropertyKeyframed >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::BooleanPropertyScalarComparison*
Arena::CreateMaybeMessage< ::Property::BooleanPropertyScalarComparison >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::BooleanPropertyScalarComparison >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::BooleanPropertyDeclaration*
Arena::CreateMaybeMessage< ::Property::BooleanPropertyDeclaration >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::BooleanPropertyDeclaration >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::BooleanEditingMetadata*
Arena::CreateMaybeMessage< ::Property::BooleanEditingMetadata >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::BooleanEditingMetadata >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::BooleanGeneratorMetadata*
Arena::CreateMaybeMessage< ::Property::BooleanGeneratorMetadata >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::BooleanGeneratorMetadata >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::BooleanPropertyMetadata*
Arena::CreateMaybeMessage< ::Property::BooleanPropertyMetadata >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::BooleanPropertyMetadata >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::JsonPropertyAssignment*
Arena::CreateMaybeMessage< ::Property::JsonPropertyAssignment >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::JsonPropertyAssignment >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::JsonPropertyValue*
Arena::CreateMaybeMessage< ::Property::JsonPropertyValue >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::JsonPropertyValue >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::JsonPropertyDeclaration*
Arena::CreateMaybeMessage< ::Property::JsonPropertyDeclaration >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::JsonPropertyDeclaration >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::JsonEditingMetadata*
Arena::CreateMaybeMessage< ::Property::JsonEditingMetadata >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::JsonEditingMetadata >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::JsonGeneratorMetadata*
Arena::CreateMaybeMessage< ::Property::JsonGeneratorMetadata >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::JsonGeneratorMetadata >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::JsonPropertyMetadata*
Arena::CreateMaybeMessage< ::Property::JsonPropertyMetadata >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::JsonPropertyMetadata >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::TransformSet*
Arena::CreateMaybeMessage< ::Property::TransformSet >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::TransformSet >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::TransformSetSRT*
Arena::CreateMaybeMessage< ::Property::TransformSetSRT >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::TransformSetSRT >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::TransformSetSQT*
Arena::CreateMaybeMessage< ::Property::TransformSetSQT >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::TransformSetSQT >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::TransformSetLookAt*
Arena::CreateMaybeMessage< ::Property::TransformSetLookAt >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::TransformSetLookAt >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::TransformSetInterpolatorSRT*
Arena::CreateMaybeMessage< ::Property::TransformSetInterpolatorSRT >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::TransformSetInterpolatorSRT >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::TransformSetInterpolatorSQT*
Arena::CreateMaybeMessage< ::Property::TransformSetInterpolatorSQT >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::TransformSetInterpolatorSQT >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::TransformSetInterpolatorLookAt*
Arena::CreateMaybeMessage< ::Property::TransformSetInterpolatorLookAt >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::TransformSetInterpolatorLookAt >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::TransformSetApproach*
Arena::CreateMaybeMessage< ::Property::TransformSetApproach >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::TransformSetApproach >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::TransformSetConditional*
Arena::CreateMaybeMessage< ::Property::TransformSetConditional >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::TransformSetConditional >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::TransformUpdate*
Arena::CreateMaybeMessage< ::Property::TransformUpdate >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::TransformUpdate >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::TransformUpdateAddT*
Arena::CreateMaybeMessage< ::Property::TransformUpdateAddT >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::TransformUpdateAddT >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::TransformUpdateAddR*
Arena::CreateMaybeMessage< ::Property::TransformUpdateAddR >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::TransformUpdateAddR >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::TransformUpdateAddQ*
Arena::CreateMaybeMessage< ::Property::TransformUpdateAddQ >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::TransformUpdateAddQ >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::TransformUpdateScaleUniform*
Arena::CreateMaybeMessage< ::Property::TransformUpdateScaleUniform >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::TransformUpdateScaleUniform >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::TransformUpdateScaleNonuniform*
Arena::CreateMaybeMessage< ::Property::TransformUpdateScaleNonuniform >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::TransformUpdateScaleNonuniform >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::TransformUpdateLookAt*
Arena::CreateMaybeMessage< ::Property::TransformUpdateLookAt >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::TransformUpdateLookAt >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::TransformUpdateRotateToEuler*
Arena::CreateMaybeMessage< ::Property::TransformUpdateRotateToEuler >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::TransformUpdateRotateToEuler >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::TransformUpdateRotateToQuat*
Arena::CreateMaybeMessage< ::Property::TransformUpdateRotateToQuat >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::TransformUpdateRotateToQuat >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::TransformPropertyAssignment*
Arena::CreateMaybeMessage< ::Property::TransformPropertyAssignment >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::TransformPropertyAssignment >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::TransformPropertyDeclaration*
Arena::CreateMaybeMessage< ::Property::TransformPropertyDeclaration >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::TransformPropertyDeclaration >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::TransformEditingMetadata*
Arena::CreateMaybeMessage< ::Property::TransformEditingMetadata >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::TransformEditingMetadata >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::TransformGeneratorMetadata*
Arena::CreateMaybeMessage< ::Property::TransformGeneratorMetadata >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::TransformGeneratorMetadata >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::TransformPropertyMetadata*
Arena::CreateMaybeMessage< ::Property::TransformPropertyMetadata >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::TransformPropertyMetadata >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::CustomGeneratorSubGenScalar*
Arena::CreateMaybeMessage< ::Property::CustomGeneratorSubGenScalar >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::CustomGeneratorSubGenScalar >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::CustomGeneratorSubGenString*
Arena::CreateMaybeMessage< ::Property::CustomGeneratorSubGenString >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::CustomGeneratorSubGenString >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::CustomGeneratorSubGenLink*
Arena::CreateMaybeMessage< ::Property::CustomGeneratorSubGenLink >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::CustomGeneratorSubGenLink >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::CustomGeneratorSubGenVector*
Arena::CreateMaybeMessage< ::Property::CustomGeneratorSubGenVector >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::CustomGeneratorSubGenVector >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::CustomGeneratorSubGenColor*
Arena::CreateMaybeMessage< ::Property::CustomGeneratorSubGenColor >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::CustomGeneratorSubGenColor >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::CustomGeneratorSubGenBoolean*
Arena::CreateMaybeMessage< ::Property::CustomGeneratorSubGenBoolean >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::CustomGeneratorSubGenBoolean >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::CustomGeneratorSubGenJson*
Arena::CreateMaybeMessage< ::Property::CustomGeneratorSubGenJson >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::CustomGeneratorSubGenJson >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::CustomGeneratorSubGenTransform*
Arena::CreateMaybeMessage< ::Property::CustomGeneratorSubGenTransform >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::CustomGeneratorSubGenTransform >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::CustomGeneratorSubGen*
Arena::CreateMaybeMessage< ::Property::CustomGeneratorSubGen >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::CustomGeneratorSubGen >(arena);
}
template<> PROTOBUF_NOINLINE ::Property::CustomGeneratorValue*
Arena::CreateMaybeMessage< ::Property::CustomGeneratorValue >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Property::CustomGeneratorValue >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
